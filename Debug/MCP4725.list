
MCP4725.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001114c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001548  080112f0  080112f0  000212f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000100  08012838  08012838  00022838  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM          00000198  08012938  08012938  00022938  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08012ad0  08012ad0  000309c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   0000000c  08012ad0  08012ad0  00022ad0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08012adc  08012adc  00022adc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000009c0  20000000  08012ae0  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000cc  200009c0  080134a0  000309c0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000a8c  080134a0  00030a8c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000309c0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00019b0f  00000000  00000000  000309f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00002c7d  00000000  00000000  0004a4ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000d60  00000000  00000000  0004d180  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000c98  00000000  00000000  0004dee0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0001a624  00000000  00000000  0004eb78  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000a331  00000000  00000000  0006919c  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000986ec  00000000  00000000  000734cd  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0010bbb9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00006158  00000000  00000000  0010bc34  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200009c0 	.word	0x200009c0
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080112d4 	.word	0x080112d4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200009c4 	.word	0x200009c4
 80001dc:	080112d4 	.word	0x080112d4

080001e0 <d_make_comp>:
 80001e0:	b4f0      	push	{r4, r5, r6, r7}
 80001e2:	1e4c      	subs	r4, r1, #1
 80001e4:	4605      	mov	r5, r0
 80001e6:	2c4e      	cmp	r4, #78	; 0x4e
 80001e8:	d83f      	bhi.n	800026a <d_make_comp+0x8a>
 80001ea:	e8df f004 	tbb	[pc, r4]
 80001ee:	3b3b      	.short	0x3b3b
 80001f0:	3e3e3b3b 	.word	0x3e3e3b3b
 80001f4:	28283e3e 	.word	0x28283e3e
 80001f8:	2828283b 	.word	0x2828283b
 80001fc:	28282828 	.word	0x28282828
 8000200:	28282828 	.word	0x28282828
 8000204:	29293e28 	.word	0x29293e28
 8000208:	29292929 	.word	0x29292929
 800020c:	283b2929 	.word	0x283b2929
 8000210:	28282828 	.word	0x28282828
 8000214:	3c29283e 	.word	0x3c29283e
 8000218:	293b3e3b 	.word	0x293b3e3b
 800021c:	3e3e3c29 	.word	0x3e3e3c29
 8000220:	3b282828 	.word	0x3b282828
 8000224:	3b3b3b3b 	.word	0x3b3b3b3b
 8000228:	283b3b28 	.word	0x283b3b28
 800022c:	283e3e3b 	.word	0x283e3e3b
 8000230:	3e3e2828 	.word	0x3e3e2828
 8000234:	2828283e 	.word	0x2828283e
 8000238:	293b293b 	.word	0x293b293b
 800023c:	29          	.byte	0x29
 800023d:	00          	.byte	0x00
 800023e:	b1a2      	cbz	r2, 800026a <d_make_comp+0x8a>
 8000240:	e9d5 4005 	ldrd	r4, r0, [r5, #20]
 8000244:	4284      	cmp	r4, r0
 8000246:	da10      	bge.n	800026a <d_make_comp+0x8a>
 8000248:	692f      	ldr	r7, [r5, #16]
 800024a:	0126      	lsls	r6, r4, #4
 800024c:	19b8      	adds	r0, r7, r6
 800024e:	3401      	adds	r4, #1
 8000250:	f04f 0c00 	mov.w	ip, #0
 8000254:	f8c0 c004 	str.w	ip, [r0, #4]
 8000258:	616c      	str	r4, [r5, #20]
 800025a:	55b9      	strb	r1, [r7, r6]
 800025c:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8000260:	bcf0      	pop	{r4, r5, r6, r7}
 8000262:	4770      	bx	lr
 8000264:	b10a      	cbz	r2, 800026a <d_make_comp+0x8a>
 8000266:	2b00      	cmp	r3, #0
 8000268:	d1ea      	bne.n	8000240 <d_make_comp+0x60>
 800026a:	2000      	movs	r0, #0
 800026c:	bcf0      	pop	{r4, r5, r6, r7}
 800026e:	4770      	bx	lr

08000270 <d_ref_qualifier>:
 8000270:	b410      	push	{r4}
 8000272:	68c3      	ldr	r3, [r0, #12]
 8000274:	781c      	ldrb	r4, [r3, #0]
 8000276:	2c52      	cmp	r4, #82	; 0x52
 8000278:	460a      	mov	r2, r1
 800027a:	d00f      	beq.n	800029c <d_ref_qualifier+0x2c>
 800027c:	2c4f      	cmp	r4, #79	; 0x4f
 800027e:	d003      	beq.n	8000288 <d_ref_qualifier+0x18>
 8000280:	4608      	mov	r0, r1
 8000282:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000286:	4770      	bx	lr
 8000288:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800028a:	3103      	adds	r1, #3
 800028c:	6301      	str	r1, [r0, #48]	; 0x30
 800028e:	2120      	movs	r1, #32
 8000290:	3301      	adds	r3, #1
 8000292:	60c3      	str	r3, [r0, #12]
 8000294:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000298:	2300      	movs	r3, #0
 800029a:	e7a1      	b.n	80001e0 <d_make_comp>
 800029c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800029e:	3102      	adds	r1, #2
 80002a0:	6301      	str	r1, [r0, #48]	; 0x30
 80002a2:	211f      	movs	r1, #31
 80002a4:	e7f4      	b.n	8000290 <d_ref_qualifier+0x20>
 80002a6:	bf00      	nop

080002a8 <d_count_templates_scopes>:
 80002a8:	2a00      	cmp	r2, #0
 80002aa:	d04e      	beq.n	800034a <d_count_templates_scopes+0xa2>
 80002ac:	b570      	push	{r4, r5, r6, lr}
 80002ae:	4605      	mov	r5, r0
 80002b0:	460e      	mov	r6, r1
 80002b2:	4614      	mov	r4, r2
 80002b4:	7823      	ldrb	r3, [r4, #0]
 80002b6:	3b01      	subs	r3, #1
 80002b8:	2b4e      	cmp	r3, #78	; 0x4e
 80002ba:	d82c      	bhi.n	8000316 <d_count_templates_scopes+0x6e>
 80002bc:	e8df f003 	tbb	[pc, r3]
 80002c0:	40373737 	.word	0x40373737
 80002c4:	28282b2b 	.word	0x28282b2b
 80002c8:	37373737 	.word	0x37373737
 80002cc:	37373737 	.word	0x37373737
 80002d0:	37373737 	.word	0x37373737
 80002d4:	2b373737 	.word	0x2b373737
 80002d8:	37373737 	.word	0x37373737
 80002dc:	37373737 	.word	0x37373737
 80002e0:	30303737 	.word	0x30303737
 80002e4:	372b3737 	.word	0x372b3737
 80002e8:	2c373737 	.word	0x2c373737
 80002ec:	37373737 	.word	0x37373737
 80002f0:	3737282b 	.word	0x3737282b
 80002f4:	37373737 	.word	0x37373737
 80002f8:	37373737 	.word	0x37373737
 80002fc:	2b373737 	.word	0x2b373737
 8000300:	2c2c372b 	.word	0x2c2c372b
 8000304:	372b2c2c 	.word	0x372b2c2c
 8000308:	37373737 	.word	0x37373737
 800030c:	3737      	.short	0x3737
 800030e:	37          	.byte	0x37
 800030f:	00          	.byte	0x00
 8000310:	68e4      	ldr	r4, [r4, #12]
 8000312:	2c00      	cmp	r4, #0
 8000314:	d1ce      	bne.n	80002b4 <d_count_templates_scopes+0xc>
 8000316:	bd70      	pop	{r4, r5, r6, pc}
 8000318:	68a4      	ldr	r4, [r4, #8]
 800031a:	2c00      	cmp	r4, #0
 800031c:	d1ca      	bne.n	80002b4 <d_count_templates_scopes+0xc>
 800031e:	e7fa      	b.n	8000316 <d_count_templates_scopes+0x6e>
 8000320:	68a2      	ldr	r2, [r4, #8]
 8000322:	7813      	ldrb	r3, [r2, #0]
 8000324:	2b05      	cmp	r3, #5
 8000326:	d103      	bne.n	8000330 <d_count_templates_scopes+0x88>
 8000328:	6833      	ldr	r3, [r6, #0]
 800032a:	3301      	adds	r3, #1
 800032c:	6033      	str	r3, [r6, #0]
 800032e:	68a2      	ldr	r2, [r4, #8]
 8000330:	4631      	mov	r1, r6
 8000332:	4628      	mov	r0, r5
 8000334:	f7ff ffb8 	bl	80002a8 <d_count_templates_scopes>
 8000338:	68e4      	ldr	r4, [r4, #12]
 800033a:	2c00      	cmp	r4, #0
 800033c:	d1ba      	bne.n	80002b4 <d_count_templates_scopes+0xc>
 800033e:	e7ea      	b.n	8000316 <d_count_templates_scopes+0x6e>
 8000340:	682b      	ldr	r3, [r5, #0]
 8000342:	3301      	adds	r3, #1
 8000344:	602b      	str	r3, [r5, #0]
 8000346:	68a2      	ldr	r2, [r4, #8]
 8000348:	e7f2      	b.n	8000330 <d_count_templates_scopes+0x88>
 800034a:	4770      	bx	lr

0800034c <d_append_buffer>:
 800034c:	b39a      	cbz	r2, 80003b6 <d_append_buffer+0x6a>
 800034e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000352:	188e      	adds	r6, r1, r2
 8000354:	4604      	mov	r4, r0
 8000356:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 800035a:	3e01      	subs	r6, #1
 800035c:	1e4d      	subs	r5, r1, #1
 800035e:	2700      	movs	r7, #0
 8000360:	e016      	b.n	8000390 <d_append_buffer+0x44>
 8000362:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000366:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800036a:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 800036e:	4798      	blx	r3
 8000370:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8000374:	2200      	movs	r2, #0
 8000376:	3301      	adds	r3, #1
 8000378:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800037c:	42b5      	cmp	r5, r6
 800037e:	f04f 0301 	mov.w	r3, #1
 8000382:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8000386:	f804 8002 	strb.w	r8, [r4, r2]
 800038a:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 800038e:	d010      	beq.n	80003b2 <d_append_buffer+0x66>
 8000390:	2bff      	cmp	r3, #255	; 0xff
 8000392:	4619      	mov	r1, r3
 8000394:	4620      	mov	r0, r4
 8000396:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 800039a:	d0e2      	beq.n	8000362 <d_append_buffer+0x16>
 800039c:	461a      	mov	r2, r3
 800039e:	42b5      	cmp	r5, r6
 80003a0:	f103 0301 	add.w	r3, r3, #1
 80003a4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80003a8:	f804 8002 	strb.w	r8, [r4, r2]
 80003ac:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80003b0:	d1ee      	bne.n	8000390 <d_append_buffer+0x44>
 80003b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80003b6:	4770      	bx	lr

080003b8 <is_fnqual_component_type>:
 80003b8:	f1a0 031c 	sub.w	r3, r0, #28
 80003bc:	2b04      	cmp	r3, #4
 80003be:	d907      	bls.n	80003d0 <is_fnqual_component_type+0x18>
 80003c0:	284c      	cmp	r0, #76	; 0x4c
 80003c2:	d005      	beq.n	80003d0 <is_fnqual_component_type+0x18>
 80003c4:	384e      	subs	r0, #78	; 0x4e
 80003c6:	2801      	cmp	r0, #1
 80003c8:	bf8c      	ite	hi
 80003ca:	2000      	movhi	r0, #0
 80003cc:	2001      	movls	r0, #1
 80003ce:	4770      	bx	lr
 80003d0:	2001      	movs	r0, #1
 80003d2:	4770      	bx	lr

080003d4 <d_number.isra.1>:
 80003d4:	b470      	push	{r4, r5, r6}
 80003d6:	6802      	ldr	r2, [r0, #0]
 80003d8:	7811      	ldrb	r1, [r2, #0]
 80003da:	296e      	cmp	r1, #110	; 0x6e
 80003dc:	d018      	beq.n	8000410 <d_number.isra.1+0x3c>
 80003de:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 80003e2:	2b09      	cmp	r3, #9
 80003e4:	d81e      	bhi.n	8000424 <d_number.isra.1+0x50>
 80003e6:	2600      	movs	r6, #0
 80003e8:	2300      	movs	r3, #0
 80003ea:	3201      	adds	r2, #1
 80003ec:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 80003f0:	6002      	str	r2, [r0, #0]
 80003f2:	eb01 0443 	add.w	r4, r1, r3, lsl #1
 80003f6:	7811      	ldrb	r1, [r2, #0]
 80003f8:	f1a1 0530 	sub.w	r5, r1, #48	; 0x30
 80003fc:	2d09      	cmp	r5, #9
 80003fe:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8000402:	d9f2      	bls.n	80003ea <d_number.isra.1+0x16>
 8000404:	b10e      	cbz	r6, 800040a <d_number.isra.1+0x36>
 8000406:	f1c4 0330 	rsb	r3, r4, #48	; 0x30
 800040a:	4618      	mov	r0, r3
 800040c:	bc70      	pop	{r4, r5, r6}
 800040e:	4770      	bx	lr
 8000410:	1c53      	adds	r3, r2, #1
 8000412:	6003      	str	r3, [r0, #0]
 8000414:	7851      	ldrb	r1, [r2, #1]
 8000416:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 800041a:	2a09      	cmp	r2, #9
 800041c:	d802      	bhi.n	8000424 <d_number.isra.1+0x50>
 800041e:	461a      	mov	r2, r3
 8000420:	2601      	movs	r6, #1
 8000422:	e7e1      	b.n	80003e8 <d_number.isra.1+0x14>
 8000424:	2300      	movs	r3, #0
 8000426:	4618      	mov	r0, r3
 8000428:	bc70      	pop	{r4, r5, r6}
 800042a:	4770      	bx	lr

0800042c <d_number_component>:
 800042c:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8000430:	4293      	cmp	r3, r2
 8000432:	b570      	push	{r4, r5, r6, lr}
 8000434:	da0e      	bge.n	8000454 <d_number_component+0x28>
 8000436:	6901      	ldr	r1, [r0, #16]
 8000438:	011a      	lsls	r2, r3, #4
 800043a:	188c      	adds	r4, r1, r2
 800043c:	3301      	adds	r3, #1
 800043e:	2600      	movs	r6, #0
 8000440:	2541      	movs	r5, #65	; 0x41
 8000442:	6066      	str	r6, [r4, #4]
 8000444:	300c      	adds	r0, #12
 8000446:	6083      	str	r3, [r0, #8]
 8000448:	548d      	strb	r5, [r1, r2]
 800044a:	f7ff ffc3 	bl	80003d4 <d_number.isra.1>
 800044e:	60a0      	str	r0, [r4, #8]
 8000450:	4620      	mov	r0, r4
 8000452:	bd70      	pop	{r4, r5, r6, pc}
 8000454:	2400      	movs	r4, #0
 8000456:	4620      	mov	r0, r4
 8000458:	bd70      	pop	{r4, r5, r6, pc}
 800045a:	bf00      	nop

0800045c <d_compact_number>:
 800045c:	b510      	push	{r4, lr}
 800045e:	68c3      	ldr	r3, [r0, #12]
 8000460:	781a      	ldrb	r2, [r3, #0]
 8000462:	2a5f      	cmp	r2, #95	; 0x5f
 8000464:	4604      	mov	r4, r0
 8000466:	d00d      	beq.n	8000484 <d_compact_number+0x28>
 8000468:	2a6e      	cmp	r2, #110	; 0x6e
 800046a:	d00d      	beq.n	8000488 <d_compact_number+0x2c>
 800046c:	300c      	adds	r0, #12
 800046e:	f7ff ffb1 	bl	80003d4 <d_number.isra.1>
 8000472:	3001      	adds	r0, #1
 8000474:	d408      	bmi.n	8000488 <d_compact_number+0x2c>
 8000476:	68e3      	ldr	r3, [r4, #12]
 8000478:	781a      	ldrb	r2, [r3, #0]
 800047a:	2a5f      	cmp	r2, #95	; 0x5f
 800047c:	d104      	bne.n	8000488 <d_compact_number+0x2c>
 800047e:	3301      	adds	r3, #1
 8000480:	60e3      	str	r3, [r4, #12]
 8000482:	bd10      	pop	{r4, pc}
 8000484:	2000      	movs	r0, #0
 8000486:	e7fa      	b.n	800047e <d_compact_number+0x22>
 8000488:	f04f 30ff 	mov.w	r0, #4294967295
 800048c:	bd10      	pop	{r4, pc}
 800048e:	bf00      	nop

08000490 <d_template_param>:
 8000490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000492:	68c3      	ldr	r3, [r0, #12]
 8000494:	781a      	ldrb	r2, [r3, #0]
 8000496:	2a54      	cmp	r2, #84	; 0x54
 8000498:	d119      	bne.n	80004ce <d_template_param+0x3e>
 800049a:	3301      	adds	r3, #1
 800049c:	60c3      	str	r3, [r0, #12]
 800049e:	4604      	mov	r4, r0
 80004a0:	f7ff ffdc 	bl	800045c <d_compact_number>
 80004a4:	1e05      	subs	r5, r0, #0
 80004a6:	db12      	blt.n	80004ce <d_template_param+0x3e>
 80004a8:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 80004ac:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80004ae:	428b      	cmp	r3, r1
 80004b0:	f102 0201 	add.w	r2, r2, #1
 80004b4:	62a2      	str	r2, [r4, #40]	; 0x28
 80004b6:	da0a      	bge.n	80004ce <d_template_param+0x3e>
 80004b8:	6921      	ldr	r1, [r4, #16]
 80004ba:	011a      	lsls	r2, r3, #4
 80004bc:	1888      	adds	r0, r1, r2
 80004be:	3301      	adds	r3, #1
 80004c0:	2700      	movs	r7, #0
 80004c2:	2605      	movs	r6, #5
 80004c4:	6047      	str	r7, [r0, #4]
 80004c6:	6163      	str	r3, [r4, #20]
 80004c8:	548e      	strb	r6, [r1, r2]
 80004ca:	6085      	str	r5, [r0, #8]
 80004cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80004ce:	2000      	movs	r0, #0
 80004d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80004d2:	bf00      	nop

080004d4 <d_source_name>:
 80004d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80004d8:	4604      	mov	r4, r0
 80004da:	300c      	adds	r0, #12
 80004dc:	f7ff ff7a 	bl	80003d4 <d_number.isra.1>
 80004e0:	1e07      	subs	r7, r0, #0
 80004e2:	dd49      	ble.n	8000578 <d_source_name+0xa4>
 80004e4:	68e5      	ldr	r5, [r4, #12]
 80004e6:	6863      	ldr	r3, [r4, #4]
 80004e8:	1b5b      	subs	r3, r3, r5
 80004ea:	429f      	cmp	r7, r3
 80004ec:	dc42      	bgt.n	8000574 <d_source_name+0xa0>
 80004ee:	68a2      	ldr	r2, [r4, #8]
 80004f0:	19eb      	adds	r3, r5, r7
 80004f2:	0752      	lsls	r2, r2, #29
 80004f4:	60e3      	str	r3, [r4, #12]
 80004f6:	d504      	bpl.n	8000502 <d_source_name+0x2e>
 80004f8:	5dea      	ldrb	r2, [r5, r7]
 80004fa:	2a24      	cmp	r2, #36	; 0x24
 80004fc:	bf04      	itt	eq
 80004fe:	3301      	addeq	r3, #1
 8000500:	60e3      	streq	r3, [r4, #12]
 8000502:	2f09      	cmp	r7, #9
 8000504:	e9d4 6805 	ldrd	r6, r8, [r4, #20]
 8000508:	dc10      	bgt.n	800052c <d_source_name+0x58>
 800050a:	45b0      	cmp	r8, r6
 800050c:	dd32      	ble.n	8000574 <d_source_name+0xa0>
 800050e:	6921      	ldr	r1, [r4, #16]
 8000510:	0132      	lsls	r2, r6, #4
 8000512:	1888      	adds	r0, r1, r2
 8000514:	3601      	adds	r6, #1
 8000516:	2300      	movs	r3, #0
 8000518:	6043      	str	r3, [r0, #4]
 800051a:	6166      	str	r6, [r4, #20]
 800051c:	b355      	cbz	r5, 8000574 <d_source_name+0xa0>
 800051e:	6043      	str	r3, [r0, #4]
 8000520:	548b      	strb	r3, [r1, r2]
 8000522:	e9c0 5702 	strd	r5, r7, [r0, #8]
 8000526:	62e0      	str	r0, [r4, #44]	; 0x2c
 8000528:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800052c:	2208      	movs	r2, #8
 800052e:	4914      	ldr	r1, [pc, #80]	; (8000580 <d_source_name+0xac>)
 8000530:	4628      	mov	r0, r5
 8000532:	f00d fb0f 	bl	800db54 <memcmp>
 8000536:	2800      	cmp	r0, #0
 8000538:	d1e7      	bne.n	800050a <d_source_name+0x36>
 800053a:	7a2b      	ldrb	r3, [r5, #8]
 800053c:	2b2e      	cmp	r3, #46	; 0x2e
 800053e:	d003      	beq.n	8000548 <d_source_name+0x74>
 8000540:	2b5f      	cmp	r3, #95	; 0x5f
 8000542:	d001      	beq.n	8000548 <d_source_name+0x74>
 8000544:	2b24      	cmp	r3, #36	; 0x24
 8000546:	d1e0      	bne.n	800050a <d_source_name+0x36>
 8000548:	7a6b      	ldrb	r3, [r5, #9]
 800054a:	2b4e      	cmp	r3, #78	; 0x4e
 800054c:	d1dd      	bne.n	800050a <d_source_name+0x36>
 800054e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8000550:	3316      	adds	r3, #22
 8000552:	1bdf      	subs	r7, r3, r7
 8000554:	45b0      	cmp	r8, r6
 8000556:	6327      	str	r7, [r4, #48]	; 0x30
 8000558:	dd0c      	ble.n	8000574 <d_source_name+0xa0>
 800055a:	6922      	ldr	r2, [r4, #16]
 800055c:	4d09      	ldr	r5, [pc, #36]	; (8000584 <d_source_name+0xb0>)
 800055e:	0133      	lsls	r3, r6, #4
 8000560:	18d0      	adds	r0, r2, r3
 8000562:	2100      	movs	r1, #0
 8000564:	3601      	adds	r6, #1
 8000566:	6166      	str	r6, [r4, #20]
 8000568:	6041      	str	r1, [r0, #4]
 800056a:	54d1      	strb	r1, [r2, r3]
 800056c:	2315      	movs	r3, #21
 800056e:	e9c0 5302 	strd	r5, r3, [r0, #8]
 8000572:	e7d8      	b.n	8000526 <d_source_name+0x52>
 8000574:	2000      	movs	r0, #0
 8000576:	e7d6      	b.n	8000526 <d_source_name+0x52>
 8000578:	2000      	movs	r0, #0
 800057a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800057e:	bf00      	nop
 8000580:	08011d64 	.word	0x08011d64
 8000584:	08011d70 	.word	0x08011d70

08000588 <d_abi_tags>:
 8000588:	b570      	push	{r4, r5, r6, lr}
 800058a:	68c3      	ldr	r3, [r0, #12]
 800058c:	6ac6      	ldr	r6, [r0, #44]	; 0x2c
 800058e:	781a      	ldrb	r2, [r3, #0]
 8000590:	2a42      	cmp	r2, #66	; 0x42
 8000592:	4604      	mov	r4, r0
 8000594:	460d      	mov	r5, r1
 8000596:	d10f      	bne.n	80005b8 <d_abi_tags+0x30>
 8000598:	3301      	adds	r3, #1
 800059a:	60e3      	str	r3, [r4, #12]
 800059c:	4620      	mov	r0, r4
 800059e:	f7ff ff99 	bl	80004d4 <d_source_name>
 80005a2:	462a      	mov	r2, r5
 80005a4:	4603      	mov	r3, r0
 80005a6:	214b      	movs	r1, #75	; 0x4b
 80005a8:	4620      	mov	r0, r4
 80005aa:	f7ff fe19 	bl	80001e0 <d_make_comp>
 80005ae:	68e3      	ldr	r3, [r4, #12]
 80005b0:	781a      	ldrb	r2, [r3, #0]
 80005b2:	2a42      	cmp	r2, #66	; 0x42
 80005b4:	4605      	mov	r5, r0
 80005b6:	d0ef      	beq.n	8000598 <d_abi_tags+0x10>
 80005b8:	62e6      	str	r6, [r4, #44]	; 0x2c
 80005ba:	4628      	mov	r0, r5
 80005bc:	bd70      	pop	{r4, r5, r6, pc}
 80005be:	bf00      	nop

080005c0 <d_substitution>:
 80005c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005c4:	4605      	mov	r5, r0
 80005c6:	68c0      	ldr	r0, [r0, #12]
 80005c8:	7803      	ldrb	r3, [r0, #0]
 80005ca:	2b53      	cmp	r3, #83	; 0x53
 80005cc:	d131      	bne.n	8000632 <d_substitution+0x72>
 80005ce:	1c43      	adds	r3, r0, #1
 80005d0:	60eb      	str	r3, [r5, #12]
 80005d2:	7842      	ldrb	r2, [r0, #1]
 80005d4:	b3a2      	cbz	r2, 8000640 <d_substitution+0x80>
 80005d6:	1c83      	adds	r3, r0, #2
 80005d8:	60eb      	str	r3, [r5, #12]
 80005da:	7842      	ldrb	r2, [r0, #1]
 80005dc:	2a5f      	cmp	r2, #95	; 0x5f
 80005de:	f000 8089 	beq.w	80006f4 <d_substitution+0x134>
 80005e2:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 80005e6:	b2e3      	uxtb	r3, r4
 80005e8:	2b09      	cmp	r3, #9
 80005ea:	d825      	bhi.n	8000638 <d_substitution+0x78>
 80005ec:	2100      	movs	r1, #0
 80005ee:	e00e      	b.n	800060e <d_substitution+0x4e>
 80005f0:	3b30      	subs	r3, #48	; 0x30
 80005f2:	4299      	cmp	r1, r3
 80005f4:	d81d      	bhi.n	8000632 <d_substitution+0x72>
 80005f6:	68e9      	ldr	r1, [r5, #12]
 80005f8:	780a      	ldrb	r2, [r1, #0]
 80005fa:	1c48      	adds	r0, r1, #1
 80005fc:	b122      	cbz	r2, 8000608 <d_substitution+0x48>
 80005fe:	60e8      	str	r0, [r5, #12]
 8000600:	780a      	ldrb	r2, [r1, #0]
 8000602:	2a5f      	cmp	r2, #95	; 0x5f
 8000604:	f000 8082 	beq.w	800070c <d_substitution+0x14c>
 8000608:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 800060c:	4619      	mov	r1, r3
 800060e:	b2e4      	uxtb	r4, r4
 8000610:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 8000614:	2c09      	cmp	r4, #9
 8000616:	f1a2 0041 	sub.w	r0, r2, #65	; 0x41
 800061a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800061e:	d9e7      	bls.n	80005f0 <d_substitution+0x30>
 8000620:	2819      	cmp	r0, #25
 8000622:	d806      	bhi.n	8000632 <d_substitution+0x72>
 8000624:	eb01 03c1 	add.w	r3, r1, r1, lsl #3
 8000628:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800062c:	3b37      	subs	r3, #55	; 0x37
 800062e:	4299      	cmp	r1, r3
 8000630:	d9e1      	bls.n	80005f6 <d_substitution+0x36>
 8000632:	2000      	movs	r0, #0
 8000634:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000638:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
 800063c:	2b19      	cmp	r3, #25
 800063e:	d9d5      	bls.n	80005ec <d_substitution+0x2c>
 8000640:	68ab      	ldr	r3, [r5, #8]
 8000642:	f003 0308 	and.w	r3, r3, #8
 8000646:	2b00      	cmp	r3, #0
 8000648:	bf14      	ite	ne
 800064a:	2401      	movne	r4, #1
 800064c:	2400      	moveq	r4, #0
 800064e:	d101      	bne.n	8000654 <d_substitution+0x94>
 8000650:	2900      	cmp	r1, #0
 8000652:	d15d      	bne.n	8000710 <d_substitution+0x150>
 8000654:	4b35      	ldr	r3, [pc, #212]	; (800072c <d_substitution+0x16c>)
 8000656:	2174      	movs	r1, #116	; 0x74
 8000658:	4291      	cmp	r1, r2
 800065a:	f103 00c4 	add.w	r0, r3, #196	; 0xc4
 800065e:	d005      	beq.n	800066c <d_substitution+0xac>
 8000660:	331c      	adds	r3, #28
 8000662:	4283      	cmp	r3, r0
 8000664:	d2e5      	bcs.n	8000632 <d_substitution+0x72>
 8000666:	7819      	ldrb	r1, [r3, #0]
 8000668:	4291      	cmp	r1, r2
 800066a:	d1f9      	bne.n	8000660 <d_substitution+0xa0>
 800066c:	6958      	ldr	r0, [r3, #20]
 800066e:	e9d5 2105 	ldrd	r2, r1, [r5, #20]
 8000672:	b1a8      	cbz	r0, 80006a0 <d_substitution+0xe0>
 8000674:	428a      	cmp	r2, r1
 8000676:	da57      	bge.n	8000728 <d_substitution+0x168>
 8000678:	f8d5 c010 	ldr.w	ip, [r5, #16]
 800067c:	f8d3 e018 	ldr.w	lr, [r3, #24]
 8000680:	0117      	lsls	r7, r2, #4
 8000682:	eb0c 0607 	add.w	r6, ip, r7
 8000686:	3201      	adds	r2, #1
 8000688:	f04f 0900 	mov.w	r9, #0
 800068c:	f04f 0818 	mov.w	r8, #24
 8000690:	f8c6 9004 	str.w	r9, [r6, #4]
 8000694:	616a      	str	r2, [r5, #20]
 8000696:	f80c 8007 	strb.w	r8, [ip, r7]
 800069a:	e9c6 0e02 	strd	r0, lr, [r6, #8]
 800069e:	62ee      	str	r6, [r5, #44]	; 0x2c
 80006a0:	2c00      	cmp	r4, #0
 80006a2:	d13c      	bne.n	800071e <d_substitution+0x15e>
 80006a4:	e9d3 6401 	ldrd	r6, r4, [r3, #4]
 80006a8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80006aa:	4291      	cmp	r1, r2
 80006ac:	4423      	add	r3, r4
 80006ae:	632b      	str	r3, [r5, #48]	; 0x30
 80006b0:	dd38      	ble.n	8000724 <d_substitution+0x164>
 80006b2:	6929      	ldr	r1, [r5, #16]
 80006b4:	0113      	lsls	r3, r2, #4
 80006b6:	18c8      	adds	r0, r1, r3
 80006b8:	3201      	adds	r2, #1
 80006ba:	f04f 0c00 	mov.w	ip, #0
 80006be:	2718      	movs	r7, #24
 80006c0:	f8c0 c004 	str.w	ip, [r0, #4]
 80006c4:	616a      	str	r2, [r5, #20]
 80006c6:	54cf      	strb	r7, [r1, r3]
 80006c8:	e9c0 6402 	strd	r6, r4, [r0, #8]
 80006cc:	68eb      	ldr	r3, [r5, #12]
 80006ce:	781b      	ldrb	r3, [r3, #0]
 80006d0:	2b42      	cmp	r3, #66	; 0x42
 80006d2:	d1af      	bne.n	8000634 <d_substitution+0x74>
 80006d4:	4601      	mov	r1, r0
 80006d6:	4628      	mov	r0, r5
 80006d8:	f7ff ff56 	bl	8000588 <d_abi_tags>
 80006dc:	2800      	cmp	r0, #0
 80006de:	d0a8      	beq.n	8000632 <d_substitution+0x72>
 80006e0:	e9d5 3208 	ldrd	r3, r2, [r5, #32]
 80006e4:	4293      	cmp	r3, r2
 80006e6:	daa5      	bge.n	8000634 <d_substitution+0x74>
 80006e8:	69e9      	ldr	r1, [r5, #28]
 80006ea:	1c5a      	adds	r2, r3, #1
 80006ec:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 80006f0:	622a      	str	r2, [r5, #32]
 80006f2:	e79f      	b.n	8000634 <d_substitution+0x74>
 80006f4:	2300      	movs	r3, #0
 80006f6:	6a2a      	ldr	r2, [r5, #32]
 80006f8:	429a      	cmp	r2, r3
 80006fa:	d99a      	bls.n	8000632 <d_substitution+0x72>
 80006fc:	6aaa      	ldr	r2, [r5, #40]	; 0x28
 80006fe:	69e9      	ldr	r1, [r5, #28]
 8000700:	3201      	adds	r2, #1
 8000702:	62aa      	str	r2, [r5, #40]	; 0x28
 8000704:	f851 0023 	ldr.w	r0, [r1, r3, lsl #2]
 8000708:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800070c:	3301      	adds	r3, #1
 800070e:	e7f2      	b.n	80006f6 <d_substitution+0x136>
 8000710:	68eb      	ldr	r3, [r5, #12]
 8000712:	781b      	ldrb	r3, [r3, #0]
 8000714:	3b43      	subs	r3, #67	; 0x43
 8000716:	2b01      	cmp	r3, #1
 8000718:	bf98      	it	ls
 800071a:	460c      	movls	r4, r1
 800071c:	e79a      	b.n	8000654 <d_substitution+0x94>
 800071e:	e9d3 6403 	ldrd	r6, r4, [r3, #12]
 8000722:	e7c1      	b.n	80006a8 <d_substitution+0xe8>
 8000724:	2000      	movs	r0, #0
 8000726:	e7d1      	b.n	80006cc <d_substitution+0x10c>
 8000728:	2600      	movs	r6, #0
 800072a:	e7b8      	b.n	800069e <d_substitution+0xde>
 800072c:	080112f0 	.word	0x080112f0

08000730 <d_discriminator>:
 8000730:	68c3      	ldr	r3, [r0, #12]
 8000732:	781a      	ldrb	r2, [r3, #0]
 8000734:	2a5f      	cmp	r2, #95	; 0x5f
 8000736:	d001      	beq.n	800073c <d_discriminator+0xc>
 8000738:	2001      	movs	r0, #1
 800073a:	4770      	bx	lr
 800073c:	b510      	push	{r4, lr}
 800073e:	1c5a      	adds	r2, r3, #1
 8000740:	4604      	mov	r4, r0
 8000742:	f840 2f0c 	str.w	r2, [r0, #12]!
 8000746:	785a      	ldrb	r2, [r3, #1]
 8000748:	2a5f      	cmp	r2, #95	; 0x5f
 800074a:	d004      	beq.n	8000756 <d_discriminator+0x26>
 800074c:	f7ff fe42 	bl	80003d4 <d_number.isra.1>
 8000750:	43c0      	mvns	r0, r0
 8000752:	0fc0      	lsrs	r0, r0, #31
 8000754:	bd10      	pop	{r4, pc}
 8000756:	3302      	adds	r3, #2
 8000758:	60e3      	str	r3, [r4, #12]
 800075a:	f7ff fe3b 	bl	80003d4 <d_number.isra.1>
 800075e:	2800      	cmp	r0, #0
 8000760:	db05      	blt.n	800076e <d_discriminator+0x3e>
 8000762:	2809      	cmp	r0, #9
 8000764:	dd07      	ble.n	8000776 <d_discriminator+0x46>
 8000766:	68e3      	ldr	r3, [r4, #12]
 8000768:	781a      	ldrb	r2, [r3, #0]
 800076a:	2a5f      	cmp	r2, #95	; 0x5f
 800076c:	d001      	beq.n	8000772 <d_discriminator+0x42>
 800076e:	2000      	movs	r0, #0
 8000770:	bd10      	pop	{r4, pc}
 8000772:	3301      	adds	r3, #1
 8000774:	60e3      	str	r3, [r4, #12]
 8000776:	2001      	movs	r0, #1
 8000778:	bd10      	pop	{r4, pc}
 800077a:	bf00      	nop

0800077c <d_index_template_argument.part.9>:
 800077c:	b170      	cbz	r0, 800079c <d_index_template_argument.part.9+0x20>
 800077e:	7803      	ldrb	r3, [r0, #0]
 8000780:	2b2f      	cmp	r3, #47	; 0x2f
 8000782:	d10f      	bne.n	80007a4 <d_index_template_argument.part.9+0x28>
 8000784:	2900      	cmp	r1, #0
 8000786:	dc04      	bgt.n	8000792 <d_index_template_argument.part.9+0x16>
 8000788:	e009      	b.n	800079e <d_index_template_argument.part.9+0x22>
 800078a:	7803      	ldrb	r3, [r0, #0]
 800078c:	2b2f      	cmp	r3, #47	; 0x2f
 800078e:	d109      	bne.n	80007a4 <d_index_template_argument.part.9+0x28>
 8000790:	b131      	cbz	r1, 80007a0 <d_index_template_argument.part.9+0x24>
 8000792:	68c0      	ldr	r0, [r0, #12]
 8000794:	3901      	subs	r1, #1
 8000796:	2800      	cmp	r0, #0
 8000798:	d1f7      	bne.n	800078a <d_index_template_argument.part.9+0xe>
 800079a:	4770      	bx	lr
 800079c:	4770      	bx	lr
 800079e:	d101      	bne.n	80007a4 <d_index_template_argument.part.9+0x28>
 80007a0:	6880      	ldr	r0, [r0, #8]
 80007a2:	4770      	bx	lr
 80007a4:	2000      	movs	r0, #0
 80007a6:	4770      	bx	lr

080007a8 <d_lookup_template_argument.isra.10>:
 80007a8:	f8d0 3110 	ldr.w	r3, [r0, #272]	; 0x110
 80007ac:	b133      	cbz	r3, 80007bc <d_lookup_template_argument.isra.10+0x14>
 80007ae:	6809      	ldr	r1, [r1, #0]
 80007b0:	685b      	ldr	r3, [r3, #4]
 80007b2:	2900      	cmp	r1, #0
 80007b4:	68db      	ldr	r3, [r3, #12]
 80007b6:	db04      	blt.n	80007c2 <d_lookup_template_argument.isra.10+0x1a>
 80007b8:	4618      	mov	r0, r3
 80007ba:	e7df      	b.n	800077c <d_index_template_argument.part.9>
 80007bc:	2201      	movs	r2, #1
 80007be:	f8c0 2118 	str.w	r2, [r0, #280]	; 0x118
 80007c2:	4618      	mov	r0, r3
 80007c4:	4770      	bx	lr
 80007c6:	bf00      	nop

080007c8 <d_find_pack>:
 80007c8:	2900      	cmp	r1, #0
 80007ca:	d042      	beq.n	8000852 <d_find_pack+0x8a>
 80007cc:	b538      	push	{r3, r4, r5, lr}
 80007ce:	4605      	mov	r5, r0
 80007d0:	460c      	mov	r4, r1
 80007d2:	7823      	ldrb	r3, [r4, #0]
 80007d4:	2b4b      	cmp	r3, #75	; 0x4b
 80007d6:	d827      	bhi.n	8000828 <d_find_pack+0x60>
 80007d8:	e8df f003 	tbb	[pc, r3]
 80007dc:	2626262e 	.word	0x2626262e
 80007e0:	2b2e3026 	.word	0x2b2e3026
 80007e4:	2626262b 	.word	0x2626262b
 80007e8:	26262626 	.word	0x26262626
 80007ec:	26262626 	.word	0x26262626
 80007f0:	26262626 	.word	0x26262626
 80007f4:	2626262e 	.word	0x2626262e
 80007f8:	26262626 	.word	0x26262626
 80007fc:	26262626 	.word	0x26262626
 8000800:	2e262626 	.word	0x2e262626
 8000804:	26262626 	.word	0x26262626
 8000808:	2626262e 	.word	0x2626262e
 800080c:	262b2e26 	.word	0x262b2e26
 8000810:	26262626 	.word	0x26262626
 8000814:	26262626 	.word	0x26262626
 8000818:	26262626 	.word	0x26262626
 800081c:	26262e2e 	.word	0x26262e2e
 8000820:	2e2e2e26 	.word	0x2e2e2e26
 8000824:	2e2e2626 	.word	0x2e2e2626
 8000828:	68a1      	ldr	r1, [r4, #8]
 800082a:	4628      	mov	r0, r5
 800082c:	f7ff ffcc 	bl	80007c8 <d_find_pack>
 8000830:	b918      	cbnz	r0, 800083a <d_find_pack+0x72>
 8000832:	68e4      	ldr	r4, [r4, #12]
 8000834:	2c00      	cmp	r4, #0
 8000836:	d1cc      	bne.n	80007d2 <d_find_pack+0xa>
 8000838:	2000      	movs	r0, #0
 800083a:	bd38      	pop	{r3, r4, r5, pc}
 800083c:	f104 0108 	add.w	r1, r4, #8
 8000840:	4628      	mov	r0, r5
 8000842:	f7ff ffb1 	bl	80007a8 <d_lookup_template_argument.isra.10>
 8000846:	2800      	cmp	r0, #0
 8000848:	d0f6      	beq.n	8000838 <d_find_pack+0x70>
 800084a:	7803      	ldrb	r3, [r0, #0]
 800084c:	2b2f      	cmp	r3, #47	; 0x2f
 800084e:	d1f3      	bne.n	8000838 <d_find_pack+0x70>
 8000850:	bd38      	pop	{r3, r4, r5, pc}
 8000852:	2000      	movs	r0, #0
 8000854:	4770      	bx	lr
 8000856:	bf00      	nop

08000858 <d_growable_string_callback_adapter>:
 8000858:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800085c:	4614      	mov	r4, r2
 800085e:	e9d4 5702 	ldrd	r5, r7, [r4, #8]
 8000862:	6852      	ldr	r2, [r2, #4]
 8000864:	1c4b      	adds	r3, r1, #1
 8000866:	4413      	add	r3, r2
 8000868:	42ab      	cmp	r3, r5
 800086a:	b082      	sub	sp, #8
 800086c:	460e      	mov	r6, r1
 800086e:	4680      	mov	r8, r0
 8000870:	d814      	bhi.n	800089c <d_growable_string_callback_adapter+0x44>
 8000872:	b117      	cbz	r7, 800087a <d_growable_string_callback_adapter+0x22>
 8000874:	b002      	add	sp, #8
 8000876:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800087a:	e9d4 0300 	ldrd	r0, r3, [r4]
 800087e:	4632      	mov	r2, r6
 8000880:	4641      	mov	r1, r8
 8000882:	4418      	add	r0, r3
 8000884:	f00d f975 	bl	800db72 <memcpy>
 8000888:	e9d4 3200 	ldrd	r3, r2, [r4]
 800088c:	4433      	add	r3, r6
 800088e:	549f      	strb	r7, [r3, r2]
 8000890:	6863      	ldr	r3, [r4, #4]
 8000892:	441e      	add	r6, r3
 8000894:	6066      	str	r6, [r4, #4]
 8000896:	b002      	add	sp, #8
 8000898:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800089c:	2f00      	cmp	r7, #0
 800089e:	d1e9      	bne.n	8000874 <d_growable_string_callback_adapter+0x1c>
 80008a0:	b91d      	cbnz	r5, 80008aa <d_growable_string_callback_adapter+0x52>
 80008a2:	2b02      	cmp	r3, #2
 80008a4:	f04f 0502 	mov.w	r5, #2
 80008a8:	d902      	bls.n	80008b0 <d_growable_string_callback_adapter+0x58>
 80008aa:	006d      	lsls	r5, r5, #1
 80008ac:	42ab      	cmp	r3, r5
 80008ae:	d8fc      	bhi.n	80008aa <d_growable_string_callback_adapter+0x52>
 80008b0:	4629      	mov	r1, r5
 80008b2:	6820      	ldr	r0, [r4, #0]
 80008b4:	f00d f9ca 	bl	800dc4c <realloc>
 80008b8:	b128      	cbz	r0, 80008c6 <d_growable_string_callback_adapter+0x6e>
 80008ba:	68e7      	ldr	r7, [r4, #12]
 80008bc:	6020      	str	r0, [r4, #0]
 80008be:	60a5      	str	r5, [r4, #8]
 80008c0:	2f00      	cmp	r7, #0
 80008c2:	d1d7      	bne.n	8000874 <d_growable_string_callback_adapter+0x1c>
 80008c4:	e7d9      	b.n	800087a <d_growable_string_callback_adapter+0x22>
 80008c6:	9001      	str	r0, [sp, #4]
 80008c8:	6820      	ldr	r0, [r4, #0]
 80008ca:	f00c ff05 	bl	800d6d8 <free>
 80008ce:	9b01      	ldr	r3, [sp, #4]
 80008d0:	2201      	movs	r2, #1
 80008d2:	e9c4 3300 	strd	r3, r3, [r4]
 80008d6:	e9c4 3202 	strd	r3, r2, [r4, #8]
 80008da:	e7cb      	b.n	8000874 <d_growable_string_callback_adapter+0x1c>

080008dc <d_call_offset>:
 80008dc:	b538      	push	{r3, r4, r5, lr}
 80008de:	4604      	mov	r4, r0
 80008e0:	b929      	cbnz	r1, 80008ee <d_call_offset+0x12>
 80008e2:	68c3      	ldr	r3, [r0, #12]
 80008e4:	781a      	ldrb	r2, [r3, #0]
 80008e6:	b132      	cbz	r2, 80008f6 <d_call_offset+0x1a>
 80008e8:	1c5a      	adds	r2, r3, #1
 80008ea:	60c2      	str	r2, [r0, #12]
 80008ec:	7819      	ldrb	r1, [r3, #0]
 80008ee:	2968      	cmp	r1, #104	; 0x68
 80008f0:	d012      	beq.n	8000918 <d_call_offset+0x3c>
 80008f2:	2976      	cmp	r1, #118	; 0x76
 80008f4:	d001      	beq.n	80008fa <d_call_offset+0x1e>
 80008f6:	2000      	movs	r0, #0
 80008f8:	bd38      	pop	{r3, r4, r5, pc}
 80008fa:	f104 050c 	add.w	r5, r4, #12
 80008fe:	4628      	mov	r0, r5
 8000900:	f7ff fd68 	bl	80003d4 <d_number.isra.1>
 8000904:	68e3      	ldr	r3, [r4, #12]
 8000906:	781a      	ldrb	r2, [r3, #0]
 8000908:	2a5f      	cmp	r2, #95	; 0x5f
 800090a:	d1f4      	bne.n	80008f6 <d_call_offset+0x1a>
 800090c:	3301      	adds	r3, #1
 800090e:	60e3      	str	r3, [r4, #12]
 8000910:	4628      	mov	r0, r5
 8000912:	f7ff fd5f 	bl	80003d4 <d_number.isra.1>
 8000916:	e003      	b.n	8000920 <d_call_offset+0x44>
 8000918:	f104 000c 	add.w	r0, r4, #12
 800091c:	f7ff fd5a 	bl	80003d4 <d_number.isra.1>
 8000920:	68e3      	ldr	r3, [r4, #12]
 8000922:	781a      	ldrb	r2, [r3, #0]
 8000924:	2a5f      	cmp	r2, #95	; 0x5f
 8000926:	d1e6      	bne.n	80008f6 <d_call_offset+0x1a>
 8000928:	3301      	adds	r3, #1
 800092a:	60e3      	str	r3, [r4, #12]
 800092c:	2001      	movs	r0, #1
 800092e:	bd38      	pop	{r3, r4, r5, pc}

08000930 <d_append_num>:
 8000930:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000934:	b088      	sub	sp, #32
 8000936:	460a      	mov	r2, r1
 8000938:	4604      	mov	r4, r0
 800093a:	491c      	ldr	r1, [pc, #112]	; (80009ac <d_append_num+0x7c>)
 800093c:	a801      	add	r0, sp, #4
 800093e:	f00d fb8b 	bl	800e058 <sprintf>
 8000942:	a801      	add	r0, sp, #4
 8000944:	f006 fa16 	bl	8006d74 <strlen>
 8000948:	b368      	cbz	r0, 80009a6 <d_append_num+0x76>
 800094a:	ad01      	add	r5, sp, #4
 800094c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8000950:	182e      	adds	r6, r5, r0
 8000952:	2700      	movs	r7, #0
 8000954:	e016      	b.n	8000984 <d_append_num+0x54>
 8000956:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800095a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800095e:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8000962:	4798      	blx	r3
 8000964:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8000968:	2200      	movs	r2, #0
 800096a:	3301      	adds	r3, #1
 800096c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8000970:	42ae      	cmp	r6, r5
 8000972:	f04f 0301 	mov.w	r3, #1
 8000976:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800097a:	f804 8002 	strb.w	r8, [r4, r2]
 800097e:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8000982:	d010      	beq.n	80009a6 <d_append_num+0x76>
 8000984:	2bff      	cmp	r3, #255	; 0xff
 8000986:	4619      	mov	r1, r3
 8000988:	4620      	mov	r0, r4
 800098a:	f815 8b01 	ldrb.w	r8, [r5], #1
 800098e:	d0e2      	beq.n	8000956 <d_append_num+0x26>
 8000990:	461a      	mov	r2, r3
 8000992:	42ae      	cmp	r6, r5
 8000994:	f103 0301 	add.w	r3, r3, #1
 8000998:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800099c:	f804 8002 	strb.w	r8, [r4, r2]
 80009a0:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80009a4:	d1ee      	bne.n	8000984 <d_append_num+0x54>
 80009a6:	b008      	add	sp, #32
 80009a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80009ac:	08011d88 	.word	0x08011d88

080009b0 <d_exprlist>:
 80009b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009b4:	68c3      	ldr	r3, [r0, #12]
 80009b6:	781d      	ldrb	r5, [r3, #0]
 80009b8:	b083      	sub	sp, #12
 80009ba:	2200      	movs	r2, #0
 80009bc:	428d      	cmp	r5, r1
 80009be:	4604      	mov	r4, r0
 80009c0:	9201      	str	r2, [sp, #4]
 80009c2:	f000 8199 	beq.w	8000cf8 <d_exprlist+0x348>
 80009c6:	f8df 94c0 	ldr.w	r9, [pc, #1216]	; 8000e88 <d_exprlist+0x4d8>
 80009ca:	4688      	mov	r8, r1
 80009cc:	af01      	add	r7, sp, #4
 80009ce:	2501      	movs	r5, #1
 80009d0:	6b66      	ldr	r6, [r4, #52]	; 0x34
 80009d2:	6365      	str	r5, [r4, #52]	; 0x34
 80009d4:	781a      	ldrb	r2, [r3, #0]
 80009d6:	2a4c      	cmp	r2, #76	; 0x4c
 80009d8:	d05c      	beq.n	8000a94 <d_exprlist+0xe4>
 80009da:	2a54      	cmp	r2, #84	; 0x54
 80009dc:	d066      	beq.n	8000aac <d_exprlist+0xfc>
 80009de:	2a73      	cmp	r2, #115	; 0x73
 80009e0:	d045      	beq.n	8000a6e <d_exprlist+0xbe>
 80009e2:	2a66      	cmp	r2, #102	; 0x66
 80009e4:	d11c      	bne.n	8000a20 <d_exprlist+0x70>
 80009e6:	785a      	ldrb	r2, [r3, #1]
 80009e8:	2a70      	cmp	r2, #112	; 0x70
 80009ea:	f000 8087 	beq.w	8000afc <d_exprlist+0x14c>
 80009ee:	4620      	mov	r0, r4
 80009f0:	f001 fa70 	bl	8001ed4 <d_operator_name>
 80009f4:	4605      	mov	r5, r0
 80009f6:	2800      	cmp	r0, #0
 80009f8:	f000 818c 	beq.w	8000d14 <d_exprlist+0x364>
 80009fc:	7803      	ldrb	r3, [r0, #0]
 80009fe:	2b31      	cmp	r3, #49	; 0x31
 8000a00:	f000 8098 	beq.w	8000b34 <d_exprlist+0x184>
 8000a04:	2b32      	cmp	r3, #50	; 0x32
 8000a06:	d056      	beq.n	8000ab6 <d_exprlist+0x106>
 8000a08:	2b33      	cmp	r3, #51	; 0x33
 8000a0a:	d171      	bne.n	8000af0 <d_exprlist+0x140>
 8000a0c:	68e3      	ldr	r3, [r4, #12]
 8000a0e:	781a      	ldrb	r2, [r3, #0]
 8000a10:	2a5f      	cmp	r2, #95	; 0x5f
 8000a12:	f000 81da 	beq.w	8000dca <d_exprlist+0x41a>
 8000a16:	4620      	mov	r0, r4
 8000a18:	f000 fa38 	bl	8000e8c <d_expression_1>
 8000a1c:	4603      	mov	r3, r0
 8000a1e:	e0c1      	b.n	8000ba4 <d_exprlist+0x1f4>
 8000a20:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8000a24:	2909      	cmp	r1, #9
 8000a26:	f200 80e7 	bhi.w	8000bf8 <d_exprlist+0x248>
 8000a2a:	4620      	mov	r0, r4
 8000a2c:	f001 fbfe 	bl	800222c <d_unqualified_name>
 8000a30:	4605      	mov	r5, r0
 8000a32:	2800      	cmp	r0, #0
 8000a34:	f000 816e 	beq.w	8000d14 <d_exprlist+0x364>
 8000a38:	68e3      	ldr	r3, [r4, #12]
 8000a3a:	781a      	ldrb	r2, [r3, #0]
 8000a3c:	2a49      	cmp	r2, #73	; 0x49
 8000a3e:	f000 80b8 	beq.w	8000bb2 <d_exprlist+0x202>
 8000a42:	6366      	str	r6, [r4, #52]	; 0x34
 8000a44:	462a      	mov	r2, r5
 8000a46:	2300      	movs	r3, #0
 8000a48:	212e      	movs	r1, #46	; 0x2e
 8000a4a:	4620      	mov	r0, r4
 8000a4c:	f7ff fbc8 	bl	80001e0 <d_make_comp>
 8000a50:	6038      	str	r0, [r7, #0]
 8000a52:	b330      	cbz	r0, 8000aa2 <d_exprlist+0xf2>
 8000a54:	68e3      	ldr	r3, [r4, #12]
 8000a56:	781a      	ldrb	r2, [r3, #0]
 8000a58:	4542      	cmp	r2, r8
 8000a5a:	f100 070c 	add.w	r7, r0, #12
 8000a5e:	d1b6      	bne.n	80009ce <d_exprlist+0x1e>
 8000a60:	3301      	adds	r3, #1
 8000a62:	9d01      	ldr	r5, [sp, #4]
 8000a64:	60e3      	str	r3, [r4, #12]
 8000a66:	4628      	mov	r0, r5
 8000a68:	b003      	add	sp, #12
 8000a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a6e:	785a      	ldrb	r2, [r3, #1]
 8000a70:	2a72      	cmp	r2, #114	; 0x72
 8000a72:	f000 80ab 	beq.w	8000bcc <d_exprlist+0x21c>
 8000a76:	2a70      	cmp	r2, #112	; 0x70
 8000a78:	d1b9      	bne.n	80009ee <d_exprlist+0x3e>
 8000a7a:	3302      	adds	r3, #2
 8000a7c:	60e3      	str	r3, [r4, #12]
 8000a7e:	4620      	mov	r0, r4
 8000a80:	f000 fa04 	bl	8000e8c <d_expression_1>
 8000a84:	2300      	movs	r3, #0
 8000a86:	4602      	mov	r2, r0
 8000a88:	214a      	movs	r1, #74	; 0x4a
 8000a8a:	4620      	mov	r0, r4
 8000a8c:	f7ff fba8 	bl	80001e0 <d_make_comp>
 8000a90:	4605      	mov	r5, r0
 8000a92:	e003      	b.n	8000a9c <d_exprlist+0xec>
 8000a94:	4620      	mov	r0, r4
 8000a96:	f002 f813 	bl	8002ac0 <d_expr_primary>
 8000a9a:	4605      	mov	r5, r0
 8000a9c:	6366      	str	r6, [r4, #52]	; 0x34
 8000a9e:	2d00      	cmp	r5, #0
 8000aa0:	d1d0      	bne.n	8000a44 <d_exprlist+0x94>
 8000aa2:	2500      	movs	r5, #0
 8000aa4:	4628      	mov	r0, r5
 8000aa6:	b003      	add	sp, #12
 8000aa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000aac:	4620      	mov	r0, r4
 8000aae:	f7ff fcef 	bl	8000490 <d_template_param>
 8000ab2:	4605      	mov	r5, r0
 8000ab4:	e7f2      	b.n	8000a9c <d_exprlist+0xec>
 8000ab6:	6883      	ldr	r3, [r0, #8]
 8000ab8:	2b03      	cmp	r3, #3
 8000aba:	d819      	bhi.n	8000af0 <d_exprlist+0x140>
 8000abc:	a201      	add	r2, pc, #4	; (adr r2, 8000ac4 <d_exprlist+0x114>)
 8000abe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000ac2:	bf00      	nop
 8000ac4:	08000c57 	.word	0x08000c57
 8000ac8:	08000a17 	.word	0x08000a17
 8000acc:	08000af1 	.word	0x08000af1
 8000ad0:	08000af1 	.word	0x08000af1
 8000ad4:	2a74      	cmp	r2, #116	; 0x74
 8000ad6:	d18a      	bne.n	80009ee <d_exprlist+0x3e>
 8000ad8:	785b      	ldrb	r3, [r3, #1]
 8000ada:	2b6c      	cmp	r3, #108	; 0x6c
 8000adc:	d187      	bne.n	80009ee <d_exprlist+0x3e>
 8000ade:	4620      	mov	r0, r4
 8000ae0:	f000 fdfe 	bl	80016e0 <d_type>
 8000ae4:	68e3      	ldr	r3, [r4, #12]
 8000ae6:	785a      	ldrb	r2, [r3, #1]
 8000ae8:	4605      	mov	r5, r0
 8000aea:	2a00      	cmp	r2, #0
 8000aec:	f040 8123 	bne.w	8000d36 <d_exprlist+0x386>
 8000af0:	2500      	movs	r5, #0
 8000af2:	4628      	mov	r0, r5
 8000af4:	6366      	str	r6, [r4, #52]	; 0x34
 8000af6:	b003      	add	sp, #12
 8000af8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000afc:	1c9a      	adds	r2, r3, #2
 8000afe:	60e2      	str	r2, [r4, #12]
 8000b00:	789a      	ldrb	r2, [r3, #2]
 8000b02:	2a54      	cmp	r2, #84	; 0x54
 8000b04:	f040 8082 	bne.w	8000c0c <d_exprlist+0x25c>
 8000b08:	3303      	adds	r3, #3
 8000b0a:	60e3      	str	r3, [r4, #12]
 8000b0c:	2000      	movs	r0, #0
 8000b0e:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8000b12:	4293      	cmp	r3, r2
 8000b14:	daec      	bge.n	8000af0 <d_exprlist+0x140>
 8000b16:	6921      	ldr	r1, [r4, #16]
 8000b18:	011a      	lsls	r2, r3, #4
 8000b1a:	188d      	adds	r5, r1, r2
 8000b1c:	3301      	adds	r3, #1
 8000b1e:	f04f 0e00 	mov.w	lr, #0
 8000b22:	f04f 0c06 	mov.w	ip, #6
 8000b26:	f8c5 e004 	str.w	lr, [r5, #4]
 8000b2a:	6163      	str	r3, [r4, #20]
 8000b2c:	f801 c002 	strb.w	ip, [r1, r2]
 8000b30:	60a8      	str	r0, [r5, #8]
 8000b32:	e786      	b.n	8000a42 <d_exprlist+0x92>
 8000b34:	f8d0 b008 	ldr.w	fp, [r0, #8]
 8000b38:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8000b3a:	f8db 2008 	ldr.w	r2, [fp, #8]
 8000b3e:	f8db a000 	ldr.w	sl, [fp]
 8000b42:	3a02      	subs	r2, #2
 8000b44:	4413      	add	r3, r2
 8000b46:	6323      	str	r3, [r4, #48]	; 0x30
 8000b48:	4650      	mov	r0, sl
 8000b4a:	4649      	mov	r1, r9
 8000b4c:	f006 f908 	bl	8006d60 <strcmp>
 8000b50:	2800      	cmp	r0, #0
 8000b52:	f000 80e4 	beq.w	8000d1e <d_exprlist+0x36e>
 8000b56:	f8db b00c 	ldr.w	fp, [fp, #12]
 8000b5a:	f1bb 0f03 	cmp.w	fp, #3
 8000b5e:	d8c7      	bhi.n	8000af0 <d_exprlist+0x140>
 8000b60:	e8df f01b 	tbh	[pc, fp, lsl #1]
 8000b64:	00040079 	.word	0x00040079
 8000b68:	008100f7 	.word	0x008100f7
 8000b6c:	f89a 3000 	ldrb.w	r3, [sl]
 8000b70:	2b70      	cmp	r3, #112	; 0x70
 8000b72:	d065      	beq.n	8000c40 <d_exprlist+0x290>
 8000b74:	2b6d      	cmp	r3, #109	; 0x6d
 8000b76:	d063      	beq.n	8000c40 <d_exprlist+0x290>
 8000b78:	f04f 0b00 	mov.w	fp, #0
 8000b7c:	4650      	mov	r0, sl
 8000b7e:	49bd      	ldr	r1, [pc, #756]	; (8000e74 <d_exprlist+0x4c4>)
 8000b80:	f006 f8ee 	bl	8006d60 <strcmp>
 8000b84:	2800      	cmp	r0, #0
 8000b86:	f040 80c0 	bne.w	8000d0a <d_exprlist+0x35a>
 8000b8a:	4620      	mov	r0, r4
 8000b8c:	f000 fb90 	bl	80012b0 <d_template_args_1>
 8000b90:	4603      	mov	r3, r0
 8000b92:	f1bb 0f00 	cmp.w	fp, #0
 8000b96:	d005      	beq.n	8000ba4 <d_exprlist+0x1f4>
 8000b98:	461a      	mov	r2, r3
 8000b9a:	2138      	movs	r1, #56	; 0x38
 8000b9c:	4620      	mov	r0, r4
 8000b9e:	f7ff fb1f 	bl	80001e0 <d_make_comp>
 8000ba2:	4603      	mov	r3, r0
 8000ba4:	462a      	mov	r2, r5
 8000ba6:	2136      	movs	r1, #54	; 0x36
 8000ba8:	4620      	mov	r0, r4
 8000baa:	f7ff fb19 	bl	80001e0 <d_make_comp>
 8000bae:	4605      	mov	r5, r0
 8000bb0:	e774      	b.n	8000a9c <d_exprlist+0xec>
 8000bb2:	3301      	adds	r3, #1
 8000bb4:	60e3      	str	r3, [r4, #12]
 8000bb6:	4620      	mov	r0, r4
 8000bb8:	f000 fb7a 	bl	80012b0 <d_template_args_1>
 8000bbc:	462a      	mov	r2, r5
 8000bbe:	4603      	mov	r3, r0
 8000bc0:	2104      	movs	r1, #4
 8000bc2:	4620      	mov	r0, r4
 8000bc4:	f7ff fb0c 	bl	80001e0 <d_make_comp>
 8000bc8:	4605      	mov	r5, r0
 8000bca:	e767      	b.n	8000a9c <d_exprlist+0xec>
 8000bcc:	3302      	adds	r3, #2
 8000bce:	60e3      	str	r3, [r4, #12]
 8000bd0:	4620      	mov	r0, r4
 8000bd2:	f000 fd85 	bl	80016e0 <d_type>
 8000bd6:	4682      	mov	sl, r0
 8000bd8:	4620      	mov	r0, r4
 8000bda:	f001 fb27 	bl	800222c <d_unqualified_name>
 8000bde:	68e3      	ldr	r3, [r4, #12]
 8000be0:	781a      	ldrb	r2, [r3, #0]
 8000be2:	2a49      	cmp	r2, #73	; 0x49
 8000be4:	4683      	mov	fp, r0
 8000be6:	d01e      	beq.n	8000c26 <d_exprlist+0x276>
 8000be8:	4603      	mov	r3, r0
 8000bea:	4629      	mov	r1, r5
 8000bec:	4652      	mov	r2, sl
 8000bee:	4620      	mov	r0, r4
 8000bf0:	f7ff faf6 	bl	80001e0 <d_make_comp>
 8000bf4:	4605      	mov	r5, r0
 8000bf6:	e751      	b.n	8000a9c <d_exprlist+0xec>
 8000bf8:	2a6f      	cmp	r2, #111	; 0x6f
 8000bfa:	f040 8094 	bne.w	8000d26 <d_exprlist+0x376>
 8000bfe:	785a      	ldrb	r2, [r3, #1]
 8000c00:	2a6e      	cmp	r2, #110	; 0x6e
 8000c02:	f47f aef4 	bne.w	80009ee <d_exprlist+0x3e>
 8000c06:	3302      	adds	r3, #2
 8000c08:	60e3      	str	r3, [r4, #12]
 8000c0a:	e70e      	b.n	8000a2a <d_exprlist+0x7a>
 8000c0c:	4620      	mov	r0, r4
 8000c0e:	f7ff fc25 	bl	800045c <d_compact_number>
 8000c12:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8000c16:	4298      	cmp	r0, r3
 8000c18:	f43f af6a 	beq.w	8000af0 <d_exprlist+0x140>
 8000c1c:	1c43      	adds	r3, r0, #1
 8000c1e:	f43f af67 	beq.w	8000af0 <d_exprlist+0x140>
 8000c22:	3001      	adds	r0, #1
 8000c24:	e773      	b.n	8000b0e <d_exprlist+0x15e>
 8000c26:	3301      	adds	r3, #1
 8000c28:	60e3      	str	r3, [r4, #12]
 8000c2a:	4620      	mov	r0, r4
 8000c2c:	f000 fb40 	bl	80012b0 <d_template_args_1>
 8000c30:	465a      	mov	r2, fp
 8000c32:	4603      	mov	r3, r0
 8000c34:	2104      	movs	r1, #4
 8000c36:	4620      	mov	r0, r4
 8000c38:	f7ff fad2 	bl	80001e0 <d_make_comp>
 8000c3c:	4603      	mov	r3, r0
 8000c3e:	e7d4      	b.n	8000bea <d_exprlist+0x23a>
 8000c40:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8000c44:	429a      	cmp	r2, r3
 8000c46:	d197      	bne.n	8000b78 <d_exprlist+0x1c8>
 8000c48:	68e3      	ldr	r3, [r4, #12]
 8000c4a:	781a      	ldrb	r2, [r3, #0]
 8000c4c:	2a5f      	cmp	r2, #95	; 0x5f
 8000c4e:	d195      	bne.n	8000b7c <d_exprlist+0x1cc>
 8000c50:	3301      	adds	r3, #1
 8000c52:	60e3      	str	r3, [r4, #12]
 8000c54:	e790      	b.n	8000b78 <d_exprlist+0x1c8>
 8000c56:	462a      	mov	r2, r5
 8000c58:	2300      	movs	r3, #0
 8000c5a:	2135      	movs	r1, #53	; 0x35
 8000c5c:	4620      	mov	r0, r4
 8000c5e:	f7ff fabf 	bl	80001e0 <d_make_comp>
 8000c62:	4605      	mov	r5, r0
 8000c64:	e71a      	b.n	8000a9c <d_exprlist+0xec>
 8000c66:	f1ba 0f00 	cmp.w	sl, #0
 8000c6a:	f43f af41 	beq.w	8000af0 <d_exprlist+0x140>
 8000c6e:	4982      	ldr	r1, [pc, #520]	; (8000e78 <d_exprlist+0x4c8>)
 8000c70:	4650      	mov	r0, sl
 8000c72:	f006 f875 	bl	8006d60 <strcmp>
 8000c76:	2800      	cmp	r0, #0
 8000c78:	f000 80c7 	beq.w	8000e0a <d_exprlist+0x45a>
 8000c7c:	f89a 3000 	ldrb.w	r3, [sl]
 8000c80:	2b66      	cmp	r3, #102	; 0x66
 8000c82:	f000 80ed 	beq.w	8000e60 <d_exprlist+0x4b0>
 8000c86:	2b6e      	cmp	r3, #110	; 0x6e
 8000c88:	f47f af32 	bne.w	8000af0 <d_exprlist+0x140>
 8000c8c:	f89a 3001 	ldrb.w	r3, [sl, #1]
 8000c90:	2b77      	cmp	r3, #119	; 0x77
 8000c92:	d002      	beq.n	8000c9a <d_exprlist+0x2ea>
 8000c94:	2b61      	cmp	r3, #97	; 0x61
 8000c96:	f47f af2b 	bne.w	8000af0 <d_exprlist+0x140>
 8000c9a:	215f      	movs	r1, #95	; 0x5f
 8000c9c:	4620      	mov	r0, r4
 8000c9e:	f7ff fe87 	bl	80009b0 <d_exprlist>
 8000ca2:	4682      	mov	sl, r0
 8000ca4:	4620      	mov	r0, r4
 8000ca6:	f000 fd1b 	bl	80016e0 <d_type>
 8000caa:	68e3      	ldr	r3, [r4, #12]
 8000cac:	781a      	ldrb	r2, [r3, #0]
 8000cae:	2a45      	cmp	r2, #69	; 0x45
 8000cb0:	4683      	mov	fp, r0
 8000cb2:	f000 8086 	beq.w	8000dc2 <d_exprlist+0x412>
 8000cb6:	2a70      	cmp	r2, #112	; 0x70
 8000cb8:	f000 80c6 	beq.w	8000e48 <d_exprlist+0x498>
 8000cbc:	2a69      	cmp	r2, #105	; 0x69
 8000cbe:	f47f af17 	bne.w	8000af0 <d_exprlist+0x140>
 8000cc2:	785b      	ldrb	r3, [r3, #1]
 8000cc4:	2b6c      	cmp	r3, #108	; 0x6c
 8000cc6:	f47f af13 	bne.w	8000af0 <d_exprlist+0x140>
 8000cca:	4620      	mov	r0, r4
 8000ccc:	f000 f8de 	bl	8000e8c <d_expression_1>
 8000cd0:	4603      	mov	r3, r0
 8000cd2:	465a      	mov	r2, fp
 8000cd4:	213b      	movs	r1, #59	; 0x3b
 8000cd6:	4620      	mov	r0, r4
 8000cd8:	f7ff fa82 	bl	80001e0 <d_make_comp>
 8000cdc:	4652      	mov	r2, sl
 8000cde:	4603      	mov	r3, r0
 8000ce0:	213a      	movs	r1, #58	; 0x3a
 8000ce2:	4620      	mov	r0, r4
 8000ce4:	f7ff fa7c 	bl	80001e0 <d_make_comp>
 8000ce8:	462a      	mov	r2, r5
 8000cea:	4603      	mov	r3, r0
 8000cec:	2139      	movs	r1, #57	; 0x39
 8000cee:	4620      	mov	r0, r4
 8000cf0:	f7ff fa76 	bl	80001e0 <d_make_comp>
 8000cf4:	4605      	mov	r5, r0
 8000cf6:	e6d1      	b.n	8000a9c <d_exprlist+0xec>
 8000cf8:	3301      	adds	r3, #1
 8000cfa:	60c3      	str	r3, [r0, #12]
 8000cfc:	212e      	movs	r1, #46	; 0x2e
 8000cfe:	4613      	mov	r3, r2
 8000d00:	b003      	add	sp, #12
 8000d02:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d06:	f7ff ba6b 	b.w	80001e0 <d_make_comp>
 8000d0a:	4620      	mov	r0, r4
 8000d0c:	f000 f8be 	bl	8000e8c <d_expression_1>
 8000d10:	4603      	mov	r3, r0
 8000d12:	e73e      	b.n	8000b92 <d_exprlist+0x1e2>
 8000d14:	4628      	mov	r0, r5
 8000d16:	6366      	str	r6, [r4, #52]	; 0x34
 8000d18:	b003      	add	sp, #12
 8000d1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000d1e:	4620      	mov	r0, r4
 8000d20:	f000 fcde 	bl	80016e0 <d_type>
 8000d24:	e73d      	b.n	8000ba2 <d_exprlist+0x1f2>
 8000d26:	2a69      	cmp	r2, #105	; 0x69
 8000d28:	f47f aed4 	bne.w	8000ad4 <d_exprlist+0x124>
 8000d2c:	785a      	ldrb	r2, [r3, #1]
 8000d2e:	2a6c      	cmp	r2, #108	; 0x6c
 8000d30:	f47f ae5d 	bne.w	80009ee <d_exprlist+0x3e>
 8000d34:	2500      	movs	r5, #0
 8000d36:	3302      	adds	r3, #2
 8000d38:	60e3      	str	r3, [r4, #12]
 8000d3a:	2145      	movs	r1, #69	; 0x45
 8000d3c:	4620      	mov	r0, r4
 8000d3e:	f7ff fe37 	bl	80009b0 <d_exprlist>
 8000d42:	462a      	mov	r2, r5
 8000d44:	4603      	mov	r3, r0
 8000d46:	2130      	movs	r1, #48	; 0x30
 8000d48:	4620      	mov	r0, r4
 8000d4a:	f7ff fa49 	bl	80001e0 <d_make_comp>
 8000d4e:	4605      	mov	r5, r0
 8000d50:	e6a4      	b.n	8000a9c <d_exprlist+0xec>
 8000d52:	f1ba 0f00 	cmp.w	sl, #0
 8000d56:	f43f aecb 	beq.w	8000af0 <d_exprlist+0x140>
 8000d5a:	68ab      	ldr	r3, [r5, #8]
 8000d5c:	681b      	ldr	r3, [r3, #0]
 8000d5e:	785a      	ldrb	r2, [r3, #1]
 8000d60:	2a63      	cmp	r2, #99	; 0x63
 8000d62:	d03a      	beq.n	8000dda <d_exprlist+0x42a>
 8000d64:	f89a 3000 	ldrb.w	r3, [sl]
 8000d68:	2b66      	cmp	r3, #102	; 0x66
 8000d6a:	d149      	bne.n	8000e00 <d_exprlist+0x450>
 8000d6c:	4620      	mov	r0, r4
 8000d6e:	f001 f8b1 	bl	8001ed4 <d_operator_name>
 8000d72:	4683      	mov	fp, r0
 8000d74:	4941      	ldr	r1, [pc, #260]	; (8000e7c <d_exprlist+0x4cc>)
 8000d76:	4650      	mov	r0, sl
 8000d78:	f005 fff2 	bl	8006d60 <strcmp>
 8000d7c:	2800      	cmp	r0, #0
 8000d7e:	d039      	beq.n	8000df4 <d_exprlist+0x444>
 8000d80:	493f      	ldr	r1, [pc, #252]	; (8000e80 <d_exprlist+0x4d0>)
 8000d82:	4650      	mov	r0, sl
 8000d84:	f005 ffec 	bl	8006d60 <strcmp>
 8000d88:	b128      	cbz	r0, 8000d96 <d_exprlist+0x3e6>
 8000d8a:	4650      	mov	r0, sl
 8000d8c:	493d      	ldr	r1, [pc, #244]	; (8000e84 <d_exprlist+0x4d4>)
 8000d8e:	f005 ffe7 	bl	8006d60 <strcmp>
 8000d92:	2800      	cmp	r0, #0
 8000d94:	d168      	bne.n	8000e68 <d_exprlist+0x4b8>
 8000d96:	4620      	mov	r0, r4
 8000d98:	f001 fa48 	bl	800222c <d_unqualified_name>
 8000d9c:	68e3      	ldr	r3, [r4, #12]
 8000d9e:	781a      	ldrb	r2, [r3, #0]
 8000da0:	2a49      	cmp	r2, #73	; 0x49
 8000da2:	4682      	mov	sl, r0
 8000da4:	d043      	beq.n	8000e2e <d_exprlist+0x47e>
 8000da6:	4653      	mov	r3, sl
 8000da8:	465a      	mov	r2, fp
 8000daa:	2138      	movs	r1, #56	; 0x38
 8000dac:	4620      	mov	r0, r4
 8000dae:	f7ff fa17 	bl	80001e0 <d_make_comp>
 8000db2:	462a      	mov	r2, r5
 8000db4:	4603      	mov	r3, r0
 8000db6:	2137      	movs	r1, #55	; 0x37
 8000db8:	4620      	mov	r0, r4
 8000dba:	f7ff fa11 	bl	80001e0 <d_make_comp>
 8000dbe:	4605      	mov	r5, r0
 8000dc0:	e66c      	b.n	8000a9c <d_exprlist+0xec>
 8000dc2:	3301      	adds	r3, #1
 8000dc4:	60e3      	str	r3, [r4, #12]
 8000dc6:	2300      	movs	r3, #0
 8000dc8:	e783      	b.n	8000cd2 <d_exprlist+0x322>
 8000dca:	3301      	adds	r3, #1
 8000dcc:	60e3      	str	r3, [r4, #12]
 8000dce:	2145      	movs	r1, #69	; 0x45
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f7ff fded 	bl	80009b0 <d_exprlist>
 8000dd6:	4603      	mov	r3, r0
 8000dd8:	e6e4      	b.n	8000ba4 <d_exprlist+0x1f4>
 8000dda:	781b      	ldrb	r3, [r3, #0]
 8000ddc:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 8000de0:	2a01      	cmp	r2, #1
 8000de2:	d902      	bls.n	8000dea <d_exprlist+0x43a>
 8000de4:	3b72      	subs	r3, #114	; 0x72
 8000de6:	2b01      	cmp	r3, #1
 8000de8:	d8bc      	bhi.n	8000d64 <d_exprlist+0x3b4>
 8000dea:	4620      	mov	r0, r4
 8000dec:	f000 fc78 	bl	80016e0 <d_type>
 8000df0:	4683      	mov	fp, r0
 8000df2:	e7bf      	b.n	8000d74 <d_exprlist+0x3c4>
 8000df4:	2145      	movs	r1, #69	; 0x45
 8000df6:	4620      	mov	r0, r4
 8000df8:	f7ff fdda 	bl	80009b0 <d_exprlist>
 8000dfc:	4682      	mov	sl, r0
 8000dfe:	e7d2      	b.n	8000da6 <d_exprlist+0x3f6>
 8000e00:	4620      	mov	r0, r4
 8000e02:	f000 f843 	bl	8000e8c <d_expression_1>
 8000e06:	4683      	mov	fp, r0
 8000e08:	e7b4      	b.n	8000d74 <d_exprlist+0x3c4>
 8000e0a:	4620      	mov	r0, r4
 8000e0c:	f000 f83e 	bl	8000e8c <d_expression_1>
 8000e10:	4682      	mov	sl, r0
 8000e12:	4620      	mov	r0, r4
 8000e14:	f000 f83a 	bl	8000e8c <d_expression_1>
 8000e18:	4683      	mov	fp, r0
 8000e1a:	4620      	mov	r0, r4
 8000e1c:	f000 f836 	bl	8000e8c <d_expression_1>
 8000e20:	4603      	mov	r3, r0
 8000e22:	2800      	cmp	r0, #0
 8000e24:	f47f af55 	bne.w	8000cd2 <d_exprlist+0x322>
 8000e28:	6366      	str	r6, [r4, #52]	; 0x34
 8000e2a:	4605      	mov	r5, r0
 8000e2c:	e61b      	b.n	8000a66 <d_exprlist+0xb6>
 8000e2e:	3301      	adds	r3, #1
 8000e30:	60e3      	str	r3, [r4, #12]
 8000e32:	4620      	mov	r0, r4
 8000e34:	f000 fa3c 	bl	80012b0 <d_template_args_1>
 8000e38:	4652      	mov	r2, sl
 8000e3a:	4603      	mov	r3, r0
 8000e3c:	2104      	movs	r1, #4
 8000e3e:	4620      	mov	r0, r4
 8000e40:	f7ff f9ce 	bl	80001e0 <d_make_comp>
 8000e44:	4682      	mov	sl, r0
 8000e46:	e7ae      	b.n	8000da6 <d_exprlist+0x3f6>
 8000e48:	785a      	ldrb	r2, [r3, #1]
 8000e4a:	2a69      	cmp	r2, #105	; 0x69
 8000e4c:	f47f ae50 	bne.w	8000af0 <d_exprlist+0x140>
 8000e50:	3302      	adds	r3, #2
 8000e52:	60e3      	str	r3, [r4, #12]
 8000e54:	2145      	movs	r1, #69	; 0x45
 8000e56:	4620      	mov	r0, r4
 8000e58:	f7ff fdaa 	bl	80009b0 <d_exprlist>
 8000e5c:	4603      	mov	r3, r0
 8000e5e:	e738      	b.n	8000cd2 <d_exprlist+0x322>
 8000e60:	4620      	mov	r0, r4
 8000e62:	f001 f837 	bl	8001ed4 <d_operator_name>
 8000e66:	e7d3      	b.n	8000e10 <d_exprlist+0x460>
 8000e68:	4620      	mov	r0, r4
 8000e6a:	f000 f80f 	bl	8000e8c <d_expression_1>
 8000e6e:	4682      	mov	sl, r0
 8000e70:	e799      	b.n	8000da6 <d_exprlist+0x3f6>
 8000e72:	bf00      	nop
 8000e74:	08011d8c 	.word	0x08011d8c
 8000e78:	08011d9c 	.word	0x08011d9c
 8000e7c:	08011d90 	.word	0x08011d90
 8000e80:	08011d94 	.word	0x08011d94
 8000e84:	08011d98 	.word	0x08011d98
 8000e88:	080122a8 	.word	0x080122a8

08000e8c <d_expression_1>:
 8000e8c:	68c1      	ldr	r1, [r0, #12]
 8000e8e:	780b      	ldrb	r3, [r1, #0]
 8000e90:	2b4c      	cmp	r3, #76	; 0x4c
 8000e92:	d067      	beq.n	8000f64 <d_expression_1+0xd8>
 8000e94:	2b54      	cmp	r3, #84	; 0x54
 8000e96:	d067      	beq.n	8000f68 <d_expression_1+0xdc>
 8000e98:	2b73      	cmp	r3, #115	; 0x73
 8000e9a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000e9e:	4604      	mov	r4, r0
 8000ea0:	d01c      	beq.n	8000edc <d_expression_1+0x50>
 8000ea2:	2b66      	cmp	r3, #102	; 0x66
 8000ea4:	d13d      	bne.n	8000f22 <d_expression_1+0x96>
 8000ea6:	784b      	ldrb	r3, [r1, #1]
 8000ea8:	2b70      	cmp	r3, #112	; 0x70
 8000eaa:	d11d      	bne.n	8000ee8 <d_expression_1+0x5c>
 8000eac:	1c8b      	adds	r3, r1, #2
 8000eae:	60c3      	str	r3, [r0, #12]
 8000eb0:	788b      	ldrb	r3, [r1, #2]
 8000eb2:	2b54      	cmp	r3, #84	; 0x54
 8000eb4:	f040 809a 	bne.w	8000fec <d_expression_1+0x160>
 8000eb8:	3103      	adds	r1, #3
 8000eba:	60c1      	str	r1, [r0, #12]
 8000ebc:	2000      	movs	r0, #0
 8000ebe:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8000ec2:	4293      	cmp	r3, r2
 8000ec4:	da4a      	bge.n	8000f5c <d_expression_1+0xd0>
 8000ec6:	6921      	ldr	r1, [r4, #16]
 8000ec8:	011a      	lsls	r2, r3, #4
 8000eca:	188d      	adds	r5, r1, r2
 8000ecc:	3301      	adds	r3, #1
 8000ece:	2700      	movs	r7, #0
 8000ed0:	2606      	movs	r6, #6
 8000ed2:	606f      	str	r7, [r5, #4]
 8000ed4:	6163      	str	r3, [r4, #20]
 8000ed6:	548e      	strb	r6, [r1, r2]
 8000ed8:	60a8      	str	r0, [r5, #8]
 8000eda:	e02f      	b.n	8000f3c <d_expression_1+0xb0>
 8000edc:	784b      	ldrb	r3, [r1, #1]
 8000ede:	2b72      	cmp	r3, #114	; 0x72
 8000ee0:	d06e      	beq.n	8000fc0 <d_expression_1+0x134>
 8000ee2:	2b70      	cmp	r3, #112	; 0x70
 8000ee4:	f000 8160 	beq.w	80011a8 <d_expression_1+0x31c>
 8000ee8:	4620      	mov	r0, r4
 8000eea:	f000 fff3 	bl	8001ed4 <d_operator_name>
 8000eee:	4605      	mov	r5, r0
 8000ef0:	b3a0      	cbz	r0, 8000f5c <d_expression_1+0xd0>
 8000ef2:	7803      	ldrb	r3, [r0, #0]
 8000ef4:	2b31      	cmp	r3, #49	; 0x31
 8000ef6:	d039      	beq.n	8000f6c <d_expression_1+0xe0>
 8000ef8:	2b32      	cmp	r3, #50	; 0x32
 8000efa:	f000 8127 	beq.w	800114c <d_expression_1+0x2c0>
 8000efe:	2b33      	cmp	r3, #51	; 0x33
 8000f00:	d12c      	bne.n	8000f5c <d_expression_1+0xd0>
 8000f02:	68e3      	ldr	r3, [r4, #12]
 8000f04:	781a      	ldrb	r2, [r3, #0]
 8000f06:	2a5f      	cmp	r2, #95	; 0x5f
 8000f08:	f000 8176 	beq.w	80011f8 <d_expression_1+0x36c>
 8000f0c:	4620      	mov	r0, r4
 8000f0e:	f7ff ffbd 	bl	8000e8c <d_expression_1>
 8000f12:	4603      	mov	r3, r0
 8000f14:	462a      	mov	r2, r5
 8000f16:	4620      	mov	r0, r4
 8000f18:	2136      	movs	r1, #54	; 0x36
 8000f1a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000f1e:	f7ff b95f 	b.w	80001e0 <d_make_comp>
 8000f22:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8000f26:	2a09      	cmp	r2, #9
 8000f28:	d841      	bhi.n	8000fae <d_expression_1+0x122>
 8000f2a:	4620      	mov	r0, r4
 8000f2c:	f001 f97e 	bl	800222c <d_unqualified_name>
 8000f30:	4605      	mov	r5, r0
 8000f32:	b198      	cbz	r0, 8000f5c <d_expression_1+0xd0>
 8000f34:	68e3      	ldr	r3, [r4, #12]
 8000f36:	781a      	ldrb	r2, [r3, #0]
 8000f38:	2a49      	cmp	r2, #73	; 0x49
 8000f3a:	d02b      	beq.n	8000f94 <d_expression_1+0x108>
 8000f3c:	4628      	mov	r0, r5
 8000f3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f42:	2b74      	cmp	r3, #116	; 0x74
 8000f44:	d1d0      	bne.n	8000ee8 <d_expression_1+0x5c>
 8000f46:	784b      	ldrb	r3, [r1, #1]
 8000f48:	2b6c      	cmp	r3, #108	; 0x6c
 8000f4a:	d1cd      	bne.n	8000ee8 <d_expression_1+0x5c>
 8000f4c:	f000 fbc8 	bl	80016e0 <d_type>
 8000f50:	68e1      	ldr	r1, [r4, #12]
 8000f52:	784b      	ldrb	r3, [r1, #1]
 8000f54:	4605      	mov	r5, r0
 8000f56:	2b00      	cmp	r3, #0
 8000f58:	f040 8190 	bne.w	800127c <d_expression_1+0x3f0>
 8000f5c:	2500      	movs	r5, #0
 8000f5e:	4628      	mov	r0, r5
 8000f60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f64:	f001 bdac 	b.w	8002ac0 <d_expr_primary>
 8000f68:	f7ff ba92 	b.w	8000490 <d_template_param>
 8000f6c:	6887      	ldr	r7, [r0, #8]
 8000f6e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8000f70:	68ba      	ldr	r2, [r7, #8]
 8000f72:	683e      	ldr	r6, [r7, #0]
 8000f74:	49c8      	ldr	r1, [pc, #800]	; (8001298 <d_expression_1+0x40c>)
 8000f76:	3a02      	subs	r2, #2
 8000f78:	4413      	add	r3, r2
 8000f7a:	6323      	str	r3, [r4, #48]	; 0x30
 8000f7c:	4630      	mov	r0, r6
 8000f7e:	f005 feef 	bl	8006d60 <strcmp>
 8000f82:	2800      	cmp	r0, #0
 8000f84:	d05b      	beq.n	800103e <d_expression_1+0x1b2>
 8000f86:	68ff      	ldr	r7, [r7, #12]
 8000f88:	2f03      	cmp	r7, #3
 8000f8a:	d8e7      	bhi.n	8000f5c <d_expression_1+0xd0>
 8000f8c:	e8df f007 	tbb	[pc, r7]
 8000f90:	64a7385c 	.word	0x64a7385c
 8000f94:	3301      	adds	r3, #1
 8000f96:	60e3      	str	r3, [r4, #12]
 8000f98:	4620      	mov	r0, r4
 8000f9a:	f000 f989 	bl	80012b0 <d_template_args_1>
 8000f9e:	462a      	mov	r2, r5
 8000fa0:	4603      	mov	r3, r0
 8000fa2:	2104      	movs	r1, #4
 8000fa4:	4620      	mov	r0, r4
 8000fa6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000faa:	f7ff b919 	b.w	80001e0 <d_make_comp>
 8000fae:	2b6f      	cmp	r3, #111	; 0x6f
 8000fb0:	f040 815c 	bne.w	800126c <d_expression_1+0x3e0>
 8000fb4:	784b      	ldrb	r3, [r1, #1]
 8000fb6:	2b6e      	cmp	r3, #110	; 0x6e
 8000fb8:	d196      	bne.n	8000ee8 <d_expression_1+0x5c>
 8000fba:	3102      	adds	r1, #2
 8000fbc:	60c1      	str	r1, [r0, #12]
 8000fbe:	e7b4      	b.n	8000f2a <d_expression_1+0x9e>
 8000fc0:	3102      	adds	r1, #2
 8000fc2:	60c1      	str	r1, [r0, #12]
 8000fc4:	f000 fb8c 	bl	80016e0 <d_type>
 8000fc8:	4605      	mov	r5, r0
 8000fca:	4620      	mov	r0, r4
 8000fcc:	f001 f92e 	bl	800222c <d_unqualified_name>
 8000fd0:	68e3      	ldr	r3, [r4, #12]
 8000fd2:	7819      	ldrb	r1, [r3, #0]
 8000fd4:	2949      	cmp	r1, #73	; 0x49
 8000fd6:	4606      	mov	r6, r0
 8000fd8:	f000 80d9 	beq.w	800118e <d_expression_1+0x302>
 8000fdc:	4603      	mov	r3, r0
 8000fde:	462a      	mov	r2, r5
 8000fe0:	4620      	mov	r0, r4
 8000fe2:	2101      	movs	r1, #1
 8000fe4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000fe8:	f7ff b8fa 	b.w	80001e0 <d_make_comp>
 8000fec:	f7ff fa36 	bl	800045c <d_compact_number>
 8000ff0:	43c3      	mvns	r3, r0
 8000ff2:	f033 4300 	bics.w	r3, r3, #2147483648	; 0x80000000
 8000ff6:	bf18      	it	ne
 8000ff8:	3001      	addne	r0, #1
 8000ffa:	f47f af60 	bne.w	8000ebe <d_expression_1+0x32>
 8000ffe:	e7ad      	b.n	8000f5c <d_expression_1+0xd0>
 8001000:	2e00      	cmp	r6, #0
 8001002:	d083      	beq.n	8000f0c <d_expression_1+0x80>
 8001004:	7833      	ldrb	r3, [r6, #0]
 8001006:	2b70      	cmp	r3, #112	; 0x70
 8001008:	f000 80b0 	beq.w	800116c <d_expression_1+0x2e0>
 800100c:	2b6d      	cmp	r3, #109	; 0x6d
 800100e:	f000 80ad 	beq.w	800116c <d_expression_1+0x2e0>
 8001012:	2700      	movs	r7, #0
 8001014:	4630      	mov	r0, r6
 8001016:	49a1      	ldr	r1, [pc, #644]	; (800129c <d_expression_1+0x410>)
 8001018:	f005 fea2 	bl	8006d60 <strcmp>
 800101c:	2800      	cmp	r0, #0
 800101e:	f040 80b1 	bne.w	8001184 <d_expression_1+0x2f8>
 8001022:	4620      	mov	r0, r4
 8001024:	f000 f944 	bl	80012b0 <d_template_args_1>
 8001028:	4603      	mov	r3, r0
 800102a:	2f00      	cmp	r7, #0
 800102c:	f43f af72 	beq.w	8000f14 <d_expression_1+0x88>
 8001030:	461a      	mov	r2, r3
 8001032:	2138      	movs	r1, #56	; 0x38
 8001034:	4620      	mov	r0, r4
 8001036:	f7ff f8d3 	bl	80001e0 <d_make_comp>
 800103a:	4603      	mov	r3, r0
 800103c:	e76a      	b.n	8000f14 <d_expression_1+0x88>
 800103e:	4620      	mov	r0, r4
 8001040:	f000 fb4e 	bl	80016e0 <d_type>
 8001044:	4603      	mov	r3, r0
 8001046:	e765      	b.n	8000f14 <d_expression_1+0x88>
 8001048:	462a      	mov	r2, r5
 800104a:	4620      	mov	r0, r4
 800104c:	2300      	movs	r3, #0
 800104e:	2135      	movs	r1, #53	; 0x35
 8001050:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001054:	f7ff b8c4 	b.w	80001e0 <d_make_comp>
 8001058:	4991      	ldr	r1, [pc, #580]	; (80012a0 <d_expression_1+0x414>)
 800105a:	4630      	mov	r0, r6
 800105c:	f005 fe80 	bl	8006d60 <strcmp>
 8001060:	2800      	cmp	r0, #0
 8001062:	f000 80d1 	beq.w	8001208 <d_expression_1+0x37c>
 8001066:	7833      	ldrb	r3, [r6, #0]
 8001068:	2b66      	cmp	r3, #102	; 0x66
 800106a:	f000 80f6 	beq.w	800125a <d_expression_1+0x3ce>
 800106e:	2b6e      	cmp	r3, #110	; 0x6e
 8001070:	f47f af74 	bne.w	8000f5c <d_expression_1+0xd0>
 8001074:	7873      	ldrb	r3, [r6, #1]
 8001076:	2b77      	cmp	r3, #119	; 0x77
 8001078:	d002      	beq.n	8001080 <d_expression_1+0x1f4>
 800107a:	2b61      	cmp	r3, #97	; 0x61
 800107c:	f47f af6e 	bne.w	8000f5c <d_expression_1+0xd0>
 8001080:	215f      	movs	r1, #95	; 0x5f
 8001082:	4620      	mov	r0, r4
 8001084:	f7ff fc94 	bl	80009b0 <d_exprlist>
 8001088:	4606      	mov	r6, r0
 800108a:	4620      	mov	r0, r4
 800108c:	f000 fb28 	bl	80016e0 <d_type>
 8001090:	68e3      	ldr	r3, [r4, #12]
 8001092:	7819      	ldrb	r1, [r3, #0]
 8001094:	2945      	cmp	r1, #69	; 0x45
 8001096:	4607      	mov	r7, r0
 8001098:	f000 80aa 	beq.w	80011f0 <d_expression_1+0x364>
 800109c:	2970      	cmp	r1, #112	; 0x70
 800109e:	f000 80d0 	beq.w	8001242 <d_expression_1+0x3b6>
 80010a2:	2969      	cmp	r1, #105	; 0x69
 80010a4:	f47f af5a 	bne.w	8000f5c <d_expression_1+0xd0>
 80010a8:	785b      	ldrb	r3, [r3, #1]
 80010aa:	2b6c      	cmp	r3, #108	; 0x6c
 80010ac:	f47f af56 	bne.w	8000f5c <d_expression_1+0xd0>
 80010b0:	4620      	mov	r0, r4
 80010b2:	f7ff feeb 	bl	8000e8c <d_expression_1>
 80010b6:	4603      	mov	r3, r0
 80010b8:	463a      	mov	r2, r7
 80010ba:	213b      	movs	r1, #59	; 0x3b
 80010bc:	4620      	mov	r0, r4
 80010be:	f7ff f88f 	bl	80001e0 <d_make_comp>
 80010c2:	4632      	mov	r2, r6
 80010c4:	4603      	mov	r3, r0
 80010c6:	213a      	movs	r1, #58	; 0x3a
 80010c8:	4620      	mov	r0, r4
 80010ca:	f7ff f889 	bl	80001e0 <d_make_comp>
 80010ce:	462a      	mov	r2, r5
 80010d0:	4603      	mov	r3, r0
 80010d2:	2139      	movs	r1, #57	; 0x39
 80010d4:	4620      	mov	r0, r4
 80010d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80010da:	f7ff b881 	b.w	80001e0 <d_make_comp>
 80010de:	2e00      	cmp	r6, #0
 80010e0:	f43f af3c 	beq.w	8000f5c <d_expression_1+0xd0>
 80010e4:	68ab      	ldr	r3, [r5, #8]
 80010e6:	681b      	ldr	r3, [r3, #0]
 80010e8:	785a      	ldrb	r2, [r3, #1]
 80010ea:	2a63      	cmp	r2, #99	; 0x63
 80010ec:	d068      	beq.n	80011c0 <d_expression_1+0x334>
 80010ee:	7833      	ldrb	r3, [r6, #0]
 80010f0:	2b66      	cmp	r3, #102	; 0x66
 80010f2:	d178      	bne.n	80011e6 <d_expression_1+0x35a>
 80010f4:	4620      	mov	r0, r4
 80010f6:	f000 feed 	bl	8001ed4 <d_operator_name>
 80010fa:	4607      	mov	r7, r0
 80010fc:	4969      	ldr	r1, [pc, #420]	; (80012a4 <d_expression_1+0x418>)
 80010fe:	4630      	mov	r0, r6
 8001100:	f005 fe2e 	bl	8006d60 <strcmp>
 8001104:	2800      	cmp	r0, #0
 8001106:	d068      	beq.n	80011da <d_expression_1+0x34e>
 8001108:	4967      	ldr	r1, [pc, #412]	; (80012a8 <d_expression_1+0x41c>)
 800110a:	4630      	mov	r0, r6
 800110c:	f005 fe28 	bl	8006d60 <strcmp>
 8001110:	b130      	cbz	r0, 8001120 <d_expression_1+0x294>
 8001112:	4630      	mov	r0, r6
 8001114:	4965      	ldr	r1, [pc, #404]	; (80012ac <d_expression_1+0x420>)
 8001116:	f005 fe23 	bl	8006d60 <strcmp>
 800111a:	2800      	cmp	r0, #0
 800111c:	f040 80a1 	bne.w	8001262 <d_expression_1+0x3d6>
 8001120:	4620      	mov	r0, r4
 8001122:	f001 f883 	bl	800222c <d_unqualified_name>
 8001126:	68e3      	ldr	r3, [r4, #12]
 8001128:	781a      	ldrb	r2, [r3, #0]
 800112a:	2a49      	cmp	r2, #73	; 0x49
 800112c:	4606      	mov	r6, r0
 800112e:	d07b      	beq.n	8001228 <d_expression_1+0x39c>
 8001130:	4633      	mov	r3, r6
 8001132:	463a      	mov	r2, r7
 8001134:	2138      	movs	r1, #56	; 0x38
 8001136:	4620      	mov	r0, r4
 8001138:	f7ff f852 	bl	80001e0 <d_make_comp>
 800113c:	462a      	mov	r2, r5
 800113e:	4603      	mov	r3, r0
 8001140:	2137      	movs	r1, #55	; 0x37
 8001142:	4620      	mov	r0, r4
 8001144:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001148:	f7ff b84a 	b.w	80001e0 <d_make_comp>
 800114c:	6883      	ldr	r3, [r0, #8]
 800114e:	2b03      	cmp	r3, #3
 8001150:	f63f af04 	bhi.w	8000f5c <d_expression_1+0xd0>
 8001154:	a201      	add	r2, pc, #4	; (adr r2, 800115c <d_expression_1+0x2d0>)
 8001156:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800115a:	bf00      	nop
 800115c:	08001049 	.word	0x08001049
 8001160:	08000f0d 	.word	0x08000f0d
 8001164:	08000f5d 	.word	0x08000f5d
 8001168:	08000f5d 	.word	0x08000f5d
 800116c:	7872      	ldrb	r2, [r6, #1]
 800116e:	429a      	cmp	r2, r3
 8001170:	f47f af4f 	bne.w	8001012 <d_expression_1+0x186>
 8001174:	68e3      	ldr	r3, [r4, #12]
 8001176:	781a      	ldrb	r2, [r3, #0]
 8001178:	2a5f      	cmp	r2, #95	; 0x5f
 800117a:	f47f af4b 	bne.w	8001014 <d_expression_1+0x188>
 800117e:	3301      	adds	r3, #1
 8001180:	60e3      	str	r3, [r4, #12]
 8001182:	e746      	b.n	8001012 <d_expression_1+0x186>
 8001184:	4620      	mov	r0, r4
 8001186:	f7ff fe81 	bl	8000e8c <d_expression_1>
 800118a:	4603      	mov	r3, r0
 800118c:	e74d      	b.n	800102a <d_expression_1+0x19e>
 800118e:	3301      	adds	r3, #1
 8001190:	60e3      	str	r3, [r4, #12]
 8001192:	4620      	mov	r0, r4
 8001194:	f000 f88c 	bl	80012b0 <d_template_args_1>
 8001198:	4632      	mov	r2, r6
 800119a:	4603      	mov	r3, r0
 800119c:	2104      	movs	r1, #4
 800119e:	4620      	mov	r0, r4
 80011a0:	f7ff f81e 	bl	80001e0 <d_make_comp>
 80011a4:	4603      	mov	r3, r0
 80011a6:	e71a      	b.n	8000fde <d_expression_1+0x152>
 80011a8:	3102      	adds	r1, #2
 80011aa:	60e1      	str	r1, [r4, #12]
 80011ac:	f7ff fe6e 	bl	8000e8c <d_expression_1>
 80011b0:	2300      	movs	r3, #0
 80011b2:	4602      	mov	r2, r0
 80011b4:	214a      	movs	r1, #74	; 0x4a
 80011b6:	4620      	mov	r0, r4
 80011b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80011bc:	f7ff b810 	b.w	80001e0 <d_make_comp>
 80011c0:	781b      	ldrb	r3, [r3, #0]
 80011c2:	f1a3 0263 	sub.w	r2, r3, #99	; 0x63
 80011c6:	2a01      	cmp	r2, #1
 80011c8:	d902      	bls.n	80011d0 <d_expression_1+0x344>
 80011ca:	3b72      	subs	r3, #114	; 0x72
 80011cc:	2b01      	cmp	r3, #1
 80011ce:	d88e      	bhi.n	80010ee <d_expression_1+0x262>
 80011d0:	4620      	mov	r0, r4
 80011d2:	f000 fa85 	bl	80016e0 <d_type>
 80011d6:	4607      	mov	r7, r0
 80011d8:	e790      	b.n	80010fc <d_expression_1+0x270>
 80011da:	2145      	movs	r1, #69	; 0x45
 80011dc:	4620      	mov	r0, r4
 80011de:	f7ff fbe7 	bl	80009b0 <d_exprlist>
 80011e2:	4606      	mov	r6, r0
 80011e4:	e7a4      	b.n	8001130 <d_expression_1+0x2a4>
 80011e6:	4620      	mov	r0, r4
 80011e8:	f7ff fe50 	bl	8000e8c <d_expression_1>
 80011ec:	4607      	mov	r7, r0
 80011ee:	e785      	b.n	80010fc <d_expression_1+0x270>
 80011f0:	3301      	adds	r3, #1
 80011f2:	60e3      	str	r3, [r4, #12]
 80011f4:	2300      	movs	r3, #0
 80011f6:	e75f      	b.n	80010b8 <d_expression_1+0x22c>
 80011f8:	3301      	adds	r3, #1
 80011fa:	60e3      	str	r3, [r4, #12]
 80011fc:	2145      	movs	r1, #69	; 0x45
 80011fe:	4620      	mov	r0, r4
 8001200:	f7ff fbd6 	bl	80009b0 <d_exprlist>
 8001204:	4603      	mov	r3, r0
 8001206:	e685      	b.n	8000f14 <d_expression_1+0x88>
 8001208:	4620      	mov	r0, r4
 800120a:	f7ff fe3f 	bl	8000e8c <d_expression_1>
 800120e:	4606      	mov	r6, r0
 8001210:	4620      	mov	r0, r4
 8001212:	f7ff fe3b 	bl	8000e8c <d_expression_1>
 8001216:	4607      	mov	r7, r0
 8001218:	4620      	mov	r0, r4
 800121a:	f7ff fe37 	bl	8000e8c <d_expression_1>
 800121e:	4603      	mov	r3, r0
 8001220:	2800      	cmp	r0, #0
 8001222:	f47f af49 	bne.w	80010b8 <d_expression_1+0x22c>
 8001226:	e699      	b.n	8000f5c <d_expression_1+0xd0>
 8001228:	3301      	adds	r3, #1
 800122a:	60e3      	str	r3, [r4, #12]
 800122c:	4620      	mov	r0, r4
 800122e:	f000 f83f 	bl	80012b0 <d_template_args_1>
 8001232:	4632      	mov	r2, r6
 8001234:	4603      	mov	r3, r0
 8001236:	2104      	movs	r1, #4
 8001238:	4620      	mov	r0, r4
 800123a:	f7fe ffd1 	bl	80001e0 <d_make_comp>
 800123e:	4606      	mov	r6, r0
 8001240:	e776      	b.n	8001130 <d_expression_1+0x2a4>
 8001242:	785a      	ldrb	r2, [r3, #1]
 8001244:	2a69      	cmp	r2, #105	; 0x69
 8001246:	f47f ae89 	bne.w	8000f5c <d_expression_1+0xd0>
 800124a:	3302      	adds	r3, #2
 800124c:	60e3      	str	r3, [r4, #12]
 800124e:	2145      	movs	r1, #69	; 0x45
 8001250:	4620      	mov	r0, r4
 8001252:	f7ff fbad 	bl	80009b0 <d_exprlist>
 8001256:	4603      	mov	r3, r0
 8001258:	e72e      	b.n	80010b8 <d_expression_1+0x22c>
 800125a:	4620      	mov	r0, r4
 800125c:	f000 fe3a 	bl	8001ed4 <d_operator_name>
 8001260:	e7d5      	b.n	800120e <d_expression_1+0x382>
 8001262:	4620      	mov	r0, r4
 8001264:	f7ff fe12 	bl	8000e8c <d_expression_1>
 8001268:	4606      	mov	r6, r0
 800126a:	e761      	b.n	8001130 <d_expression_1+0x2a4>
 800126c:	2b69      	cmp	r3, #105	; 0x69
 800126e:	f47f ae68 	bne.w	8000f42 <d_expression_1+0xb6>
 8001272:	784b      	ldrb	r3, [r1, #1]
 8001274:	2b6c      	cmp	r3, #108	; 0x6c
 8001276:	f47f ae37 	bne.w	8000ee8 <d_expression_1+0x5c>
 800127a:	2500      	movs	r5, #0
 800127c:	3102      	adds	r1, #2
 800127e:	60e1      	str	r1, [r4, #12]
 8001280:	4620      	mov	r0, r4
 8001282:	2145      	movs	r1, #69	; 0x45
 8001284:	f7ff fb94 	bl	80009b0 <d_exprlist>
 8001288:	462a      	mov	r2, r5
 800128a:	4603      	mov	r3, r0
 800128c:	2130      	movs	r1, #48	; 0x30
 800128e:	4620      	mov	r0, r4
 8001290:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001294:	f7fe bfa4 	b.w	80001e0 <d_make_comp>
 8001298:	080122a8 	.word	0x080122a8
 800129c:	08011d8c 	.word	0x08011d8c
 80012a0:	08011d9c 	.word	0x08011d9c
 80012a4:	08011d90 	.word	0x08011d90
 80012a8:	08011d94 	.word	0x08011d94
 80012ac:	08011d98 	.word	0x08011d98

080012b0 <d_template_args_1>:
 80012b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012b4:	68c2      	ldr	r2, [r0, #12]
 80012b6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80012b8:	7813      	ldrb	r3, [r2, #0]
 80012ba:	2b45      	cmp	r3, #69	; 0x45
 80012bc:	b082      	sub	sp, #8
 80012be:	4604      	mov	r4, r0
 80012c0:	d04e      	beq.n	8001360 <d_template_args_1+0xb0>
 80012c2:	ad02      	add	r5, sp, #8
 80012c4:	2100      	movs	r1, #0
 80012c6:	f845 1d04 	str.w	r1, [r5, #-4]!
 80012ca:	2601      	movs	r6, #1
 80012cc:	3b49      	subs	r3, #73	; 0x49
 80012ce:	2b0f      	cmp	r3, #15
 80012d0:	d83d      	bhi.n	800134e <d_template_args_1+0x9e>
 80012d2:	e8df f003 	tbb	[pc, r3]
 80012d6:	3737      	.short	0x3737
 80012d8:	3c3c323c 	.word	0x3c3c323c
 80012dc:	3c3c3c3c 	.word	0x3c3c3c3c
 80012e0:	3c3c3c3c 	.word	0x3c3c3c3c
 80012e4:	083c      	.short	0x083c
 80012e6:	3201      	adds	r2, #1
 80012e8:	f8d4 8034 	ldr.w	r8, [r4, #52]	; 0x34
 80012ec:	60e2      	str	r2, [r4, #12]
 80012ee:	6366      	str	r6, [r4, #52]	; 0x34
 80012f0:	4620      	mov	r0, r4
 80012f2:	f7ff fdcb 	bl	8000e8c <d_expression_1>
 80012f6:	68e3      	ldr	r3, [r4, #12]
 80012f8:	f8c4 8034 	str.w	r8, [r4, #52]	; 0x34
 80012fc:	781a      	ldrb	r2, [r3, #0]
 80012fe:	2a45      	cmp	r2, #69	; 0x45
 8001300:	4684      	mov	ip, r0
 8001302:	f103 0301 	add.w	r3, r3, #1
 8001306:	d127      	bne.n	8001358 <d_template_args_1+0xa8>
 8001308:	60e3      	str	r3, [r4, #12]
 800130a:	2300      	movs	r3, #0
 800130c:	212f      	movs	r1, #47	; 0x2f
 800130e:	4662      	mov	r2, ip
 8001310:	4620      	mov	r0, r4
 8001312:	f1bc 0f00 	cmp.w	ip, #0
 8001316:	d01f      	beq.n	8001358 <d_template_args_1+0xa8>
 8001318:	f7fe ff62 	bl	80001e0 <d_make_comp>
 800131c:	6028      	str	r0, [r5, #0]
 800131e:	f100 050c 	add.w	r5, r0, #12
 8001322:	b1c8      	cbz	r0, 8001358 <d_template_args_1+0xa8>
 8001324:	68e2      	ldr	r2, [r4, #12]
 8001326:	7813      	ldrb	r3, [r2, #0]
 8001328:	2b45      	cmp	r3, #69	; 0x45
 800132a:	d1cf      	bne.n	80012cc <d_template_args_1+0x1c>
 800132c:	9801      	ldr	r0, [sp, #4]
 800132e:	62e7      	str	r7, [r4, #44]	; 0x2c
 8001330:	3201      	adds	r2, #1
 8001332:	60e2      	str	r2, [r4, #12]
 8001334:	b002      	add	sp, #8
 8001336:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800133a:	4620      	mov	r0, r4
 800133c:	f001 fbc0 	bl	8002ac0 <d_expr_primary>
 8001340:	4684      	mov	ip, r0
 8001342:	e7e2      	b.n	800130a <d_template_args_1+0x5a>
 8001344:	4620      	mov	r0, r4
 8001346:	f000 f815 	bl	8001374 <d_template_args>
 800134a:	4684      	mov	ip, r0
 800134c:	e7dd      	b.n	800130a <d_template_args_1+0x5a>
 800134e:	4620      	mov	r0, r4
 8001350:	f000 f9c6 	bl	80016e0 <d_type>
 8001354:	4684      	mov	ip, r0
 8001356:	e7d8      	b.n	800130a <d_template_args_1+0x5a>
 8001358:	2000      	movs	r0, #0
 800135a:	b002      	add	sp, #8
 800135c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001360:	3201      	adds	r2, #1
 8001362:	2300      	movs	r3, #0
 8001364:	60c2      	str	r2, [r0, #12]
 8001366:	212f      	movs	r1, #47	; 0x2f
 8001368:	461a      	mov	r2, r3
 800136a:	b002      	add	sp, #8
 800136c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001370:	f7fe bf36 	b.w	80001e0 <d_make_comp>

08001374 <d_template_args>:
 8001374:	68c3      	ldr	r3, [r0, #12]
 8001376:	781a      	ldrb	r2, [r3, #0]
 8001378:	3a49      	subs	r2, #73	; 0x49
 800137a:	2a01      	cmp	r2, #1
 800137c:	d802      	bhi.n	8001384 <d_template_args+0x10>
 800137e:	3301      	adds	r3, #1
 8001380:	60c3      	str	r3, [r0, #12]
 8001382:	e795      	b.n	80012b0 <d_template_args_1>
 8001384:	2000      	movs	r0, #0
 8001386:	4770      	bx	lr

08001388 <d_name>:
 8001388:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800138c:	68c2      	ldr	r2, [r0, #12]
 800138e:	7813      	ldrb	r3, [r2, #0]
 8001390:	3b4e      	subs	r3, #78	; 0x4e
 8001392:	b083      	sub	sp, #12
 8001394:	4604      	mov	r4, r0
 8001396:	2b0c      	cmp	r3, #12
 8001398:	d846      	bhi.n	8001428 <d_name+0xa0>
 800139a:	e8df f003 	tbb	[pc, r3]
 800139e:	4567      	.short	0x4567
 80013a0:	0e454545 	.word	0x0e454545
 80013a4:	45450745 	.word	0x45450745
 80013a8:	4545      	.short	0x4545
 80013aa:	a4          	.byte	0xa4
 80013ab:	00          	.byte	0x00
 80013ac:	f000 ff3e 	bl	800222c <d_unqualified_name>
 80013b0:	4605      	mov	r5, r0
 80013b2:	4628      	mov	r0, r5
 80013b4:	b003      	add	sp, #12
 80013b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80013ba:	7853      	ldrb	r3, [r2, #1]
 80013bc:	2b74      	cmp	r3, #116	; 0x74
 80013be:	f040 80d7 	bne.w	8001570 <d_name+0x1e8>
 80013c2:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
 80013c6:	3202      	adds	r2, #2
 80013c8:	428b      	cmp	r3, r1
 80013ca:	60c2      	str	r2, [r0, #12]
 80013cc:	f280 8127 	bge.w	800161e <d_name+0x296>
 80013d0:	6901      	ldr	r1, [r0, #16]
 80013d2:	48c0      	ldr	r0, [pc, #768]	; (80016d4 <d_name+0x34c>)
 80013d4:	011a      	lsls	r2, r3, #4
 80013d6:	188d      	adds	r5, r1, r2
 80013d8:	3301      	adds	r3, #1
 80013da:	6163      	str	r3, [r4, #20]
 80013dc:	2300      	movs	r3, #0
 80013de:	606b      	str	r3, [r5, #4]
 80013e0:	548b      	strb	r3, [r1, r2]
 80013e2:	2303      	movs	r3, #3
 80013e4:	e9c5 0302 	strd	r0, r3, [r5, #8]
 80013e8:	4620      	mov	r0, r4
 80013ea:	f000 ff1f 	bl	800222c <d_unqualified_name>
 80013ee:	462a      	mov	r2, r5
 80013f0:	4603      	mov	r3, r0
 80013f2:	2101      	movs	r1, #1
 80013f4:	4620      	mov	r0, r4
 80013f6:	f7fe fef3 	bl	80001e0 <d_make_comp>
 80013fa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80013fc:	68e2      	ldr	r2, [r4, #12]
 80013fe:	3303      	adds	r3, #3
 8001400:	6323      	str	r3, [r4, #48]	; 0x30
 8001402:	7813      	ldrb	r3, [r2, #0]
 8001404:	2b49      	cmp	r3, #73	; 0x49
 8001406:	4605      	mov	r5, r0
 8001408:	d1d3      	bne.n	80013b2 <d_name+0x2a>
 800140a:	2800      	cmp	r0, #0
 800140c:	f000 80ba 	beq.w	8001584 <d_name+0x1fc>
 8001410:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 8001414:	4293      	cmp	r3, r2
 8001416:	f280 80b5 	bge.w	8001584 <d_name+0x1fc>
 800141a:	69e1      	ldr	r1, [r4, #28]
 800141c:	1c5a      	adds	r2, r3, #1
 800141e:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8001422:	6222      	str	r2, [r4, #32]
 8001424:	4620      	mov	r0, r4
 8001426:	e014      	b.n	8001452 <d_name+0xca>
 8001428:	f000 ff00 	bl	800222c <d_unqualified_name>
 800142c:	68e3      	ldr	r3, [r4, #12]
 800142e:	781b      	ldrb	r3, [r3, #0]
 8001430:	2b49      	cmp	r3, #73	; 0x49
 8001432:	4605      	mov	r5, r0
 8001434:	d1bd      	bne.n	80013b2 <d_name+0x2a>
 8001436:	2800      	cmp	r0, #0
 8001438:	f000 80a4 	beq.w	8001584 <d_name+0x1fc>
 800143c:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 8001440:	4293      	cmp	r3, r2
 8001442:	f280 809f 	bge.w	8001584 <d_name+0x1fc>
 8001446:	69e1      	ldr	r1, [r4, #28]
 8001448:	1c5a      	adds	r2, r3, #1
 800144a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800144e:	4620      	mov	r0, r4
 8001450:	6222      	str	r2, [r4, #32]
 8001452:	f7ff ff8f 	bl	8001374 <d_template_args>
 8001456:	462a      	mov	r2, r5
 8001458:	4603      	mov	r3, r0
 800145a:	2104      	movs	r1, #4
 800145c:	4620      	mov	r0, r4
 800145e:	f7fe febf 	bl	80001e0 <d_make_comp>
 8001462:	4605      	mov	r5, r0
 8001464:	4628      	mov	r0, r5
 8001466:	b003      	add	sp, #12
 8001468:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800146c:	3201      	adds	r2, #1
 800146e:	60c2      	str	r2, [r0, #12]
 8001470:	a901      	add	r1, sp, #4
 8001472:	2201      	movs	r2, #1
 8001474:	f000 fde6 	bl	8002044 <d_cv_qualifiers>
 8001478:	4680      	mov	r8, r0
 800147a:	2800      	cmp	r0, #0
 800147c:	f000 8082 	beq.w	8001584 <d_name+0x1fc>
 8001480:	2100      	movs	r1, #0
 8001482:	4620      	mov	r0, r4
 8001484:	f7fe fef4 	bl	8000270 <d_ref_qualifier>
 8001488:	68e2      	ldr	r2, [r4, #12]
 800148a:	4e93      	ldr	r6, [pc, #588]	; (80016d8 <d_name+0x350>)
 800148c:	7815      	ldrb	r5, [r2, #0]
 800148e:	4681      	mov	r9, r0
 8001490:	2700      	movs	r7, #0
 8001492:	2d00      	cmp	r5, #0
 8001494:	f000 80b3 	beq.w	80015fe <d_name+0x276>
 8001498:	2d44      	cmp	r5, #68	; 0x44
 800149a:	f000 8096 	beq.w	80015ca <d_name+0x242>
 800149e:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 80014a2:	b2db      	uxtb	r3, r3
 80014a4:	2b1c      	cmp	r3, #28
 80014a6:	d96f      	bls.n	8001588 <d_name+0x200>
 80014a8:	f1a5 0361 	sub.w	r3, r5, #97	; 0x61
 80014ac:	b2db      	uxtb	r3, r3
 80014ae:	2b19      	cmp	r3, #25
 80014b0:	d96e      	bls.n	8001590 <d_name+0x208>
 80014b2:	2d55      	cmp	r5, #85	; 0x55
 80014b4:	f000 80a1 	beq.w	80015fa <d_name+0x272>
 80014b8:	2d53      	cmp	r5, #83	; 0x53
 80014ba:	f000 80b2 	beq.w	8001622 <d_name+0x29a>
 80014be:	2d49      	cmp	r5, #73	; 0x49
 80014c0:	f000 80a4 	beq.w	800160c <d_name+0x284>
 80014c4:	2d54      	cmp	r5, #84	; 0x54
 80014c6:	f000 80e6 	beq.w	8001696 <d_name+0x30e>
 80014ca:	2d45      	cmp	r5, #69	; 0x45
 80014cc:	f000 80e9 	beq.w	80016a2 <d_name+0x31a>
 80014d0:	2d4d      	cmp	r5, #77	; 0x4d
 80014d2:	f040 8094 	bne.w	80015fe <d_name+0x276>
 80014d6:	2f00      	cmp	r7, #0
 80014d8:	f000 8091 	beq.w	80015fe <d_name+0x276>
 80014dc:	1c53      	adds	r3, r2, #1
 80014de:	60e3      	str	r3, [r4, #12]
 80014e0:	7855      	ldrb	r5, [r2, #1]
 80014e2:	461a      	mov	r2, r3
 80014e4:	e7d5      	b.n	8001492 <d_name+0x10a>
 80014e6:	3201      	adds	r2, #1
 80014e8:	60c2      	str	r2, [r0, #12]
 80014ea:	2100      	movs	r1, #0
 80014ec:	f001 f83a 	bl	8002564 <d_encoding>
 80014f0:	68e3      	ldr	r3, [r4, #12]
 80014f2:	781a      	ldrb	r2, [r3, #0]
 80014f4:	2a45      	cmp	r2, #69	; 0x45
 80014f6:	4606      	mov	r6, r0
 80014f8:	d144      	bne.n	8001584 <d_name+0x1fc>
 80014fa:	1c5a      	adds	r2, r3, #1
 80014fc:	60e2      	str	r2, [r4, #12]
 80014fe:	785a      	ldrb	r2, [r3, #1]
 8001500:	2a73      	cmp	r2, #115	; 0x73
 8001502:	f000 80b0 	beq.w	8001666 <d_name+0x2de>
 8001506:	2a64      	cmp	r2, #100	; 0x64
 8001508:	f000 8095 	beq.w	8001636 <d_name+0x2ae>
 800150c:	4620      	mov	r0, r4
 800150e:	f7ff ff3b 	bl	8001388 <d_name>
 8001512:	4605      	mov	r5, r0
 8001514:	b308      	cbz	r0, 800155a <d_name+0x1d2>
 8001516:	7803      	ldrb	r3, [r0, #0]
 8001518:	2b45      	cmp	r3, #69	; 0x45
 800151a:	d01e      	beq.n	800155a <d_name+0x1d2>
 800151c:	2b47      	cmp	r3, #71	; 0x47
 800151e:	d01c      	beq.n	800155a <d_name+0x1d2>
 8001520:	f04f 37ff 	mov.w	r7, #4294967295
 8001524:	4620      	mov	r0, r4
 8001526:	f7ff f903 	bl	8000730 <d_discriminator>
 800152a:	b358      	cbz	r0, 8001584 <d_name+0x1fc>
 800152c:	1c7b      	adds	r3, r7, #1
 800152e:	d014      	beq.n	800155a <d_name+0x1d2>
 8001530:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8001534:	4293      	cmp	r3, r2
 8001536:	f280 8094 	bge.w	8001662 <d_name+0x2da>
 800153a:	6920      	ldr	r0, [r4, #16]
 800153c:	0119      	lsls	r1, r3, #4
 800153e:	1842      	adds	r2, r0, r1
 8001540:	3301      	adds	r3, #1
 8001542:	f04f 0e00 	mov.w	lr, #0
 8001546:	f04f 0c46 	mov.w	ip, #70	; 0x46
 800154a:	f8c2 e004 	str.w	lr, [r2, #4]
 800154e:	6163      	str	r3, [r4, #20]
 8001550:	f800 c001 	strb.w	ip, [r0, r1]
 8001554:	e9c2 5702 	strd	r5, r7, [r2, #8]
 8001558:	4615      	mov	r5, r2
 800155a:	462b      	mov	r3, r5
 800155c:	4632      	mov	r2, r6
 800155e:	4620      	mov	r0, r4
 8001560:	2102      	movs	r1, #2
 8001562:	f7fe fe3d 	bl	80001e0 <d_make_comp>
 8001566:	4605      	mov	r5, r0
 8001568:	4628      	mov	r0, r5
 800156a:	b003      	add	sp, #12
 800156c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001570:	2100      	movs	r1, #0
 8001572:	f7ff f825 	bl	80005c0 <d_substitution>
 8001576:	68e3      	ldr	r3, [r4, #12]
 8001578:	781b      	ldrb	r3, [r3, #0]
 800157a:	2b49      	cmp	r3, #73	; 0x49
 800157c:	4605      	mov	r5, r0
 800157e:	f47f af18 	bne.w	80013b2 <d_name+0x2a>
 8001582:	e74f      	b.n	8001424 <d_name+0x9c>
 8001584:	2500      	movs	r5, #0
 8001586:	e714      	b.n	80013b2 <d_name+0x2a>
 8001588:	fa26 f303 	lsr.w	r3, r6, r3
 800158c:	07d9      	lsls	r1, r3, #31
 800158e:	d58b      	bpl.n	80014a8 <d_name+0x120>
 8001590:	4620      	mov	r0, r4
 8001592:	f000 fe4b 	bl	800222c <d_unqualified_name>
 8001596:	b35f      	cbz	r7, 80015f0 <d_name+0x268>
 8001598:	2101      	movs	r1, #1
 800159a:	4603      	mov	r3, r0
 800159c:	463a      	mov	r2, r7
 800159e:	4620      	mov	r0, r4
 80015a0:	f7fe fe1e 	bl	80001e0 <d_make_comp>
 80015a4:	4607      	mov	r7, r0
 80015a6:	68e2      	ldr	r2, [r4, #12]
 80015a8:	2d53      	cmp	r5, #83	; 0x53
 80015aa:	7813      	ldrb	r3, [r2, #0]
 80015ac:	d01e      	beq.n	80015ec <d_name+0x264>
 80015ae:	2b45      	cmp	r3, #69	; 0x45
 80015b0:	d01a      	beq.n	80015e8 <d_name+0x260>
 80015b2:	b327      	cbz	r7, 80015fe <d_name+0x276>
 80015b4:	e9d4 3108 	ldrd	r3, r1, [r4, #32]
 80015b8:	428b      	cmp	r3, r1
 80015ba:	da20      	bge.n	80015fe <d_name+0x276>
 80015bc:	69e1      	ldr	r1, [r4, #28]
 80015be:	f841 7023 	str.w	r7, [r1, r3, lsl #2]
 80015c2:	3301      	adds	r3, #1
 80015c4:	6223      	str	r3, [r4, #32]
 80015c6:	7815      	ldrb	r5, [r2, #0]
 80015c8:	e763      	b.n	8001492 <d_name+0x10a>
 80015ca:	7853      	ldrb	r3, [r2, #1]
 80015cc:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80015d0:	2b54      	cmp	r3, #84	; 0x54
 80015d2:	4620      	mov	r0, r4
 80015d4:	d00e      	beq.n	80015f4 <d_name+0x26c>
 80015d6:	f000 fe29 	bl	800222c <d_unqualified_name>
 80015da:	2f00      	cmp	r7, #0
 80015dc:	d1dc      	bne.n	8001598 <d_name+0x210>
 80015de:	68e2      	ldr	r2, [r4, #12]
 80015e0:	7813      	ldrb	r3, [r2, #0]
 80015e2:	2b45      	cmp	r3, #69	; 0x45
 80015e4:	4607      	mov	r7, r0
 80015e6:	d1e4      	bne.n	80015b2 <d_name+0x22a>
 80015e8:	461d      	mov	r5, r3
 80015ea:	e758      	b.n	800149e <d_name+0x116>
 80015ec:	461d      	mov	r5, r3
 80015ee:	e750      	b.n	8001492 <d_name+0x10a>
 80015f0:	4607      	mov	r7, r0
 80015f2:	e7d8      	b.n	80015a6 <d_name+0x21e>
 80015f4:	f000 f874 	bl	80016e0 <d_type>
 80015f8:	e7ef      	b.n	80015da <d_name+0x252>
 80015fa:	4620      	mov	r0, r4
 80015fc:	e7eb      	b.n	80015d6 <d_name+0x24e>
 80015fe:	2500      	movs	r5, #0
 8001600:	4628      	mov	r0, r5
 8001602:	f8c8 5000 	str.w	r5, [r8]
 8001606:	b003      	add	sp, #12
 8001608:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800160c:	2f00      	cmp	r7, #0
 800160e:	d0f6      	beq.n	80015fe <d_name+0x276>
 8001610:	3201      	adds	r2, #1
 8001612:	60e2      	str	r2, [r4, #12]
 8001614:	4620      	mov	r0, r4
 8001616:	f7ff fe4b 	bl	80012b0 <d_template_args_1>
 800161a:	2104      	movs	r1, #4
 800161c:	e7bd      	b.n	800159a <d_name+0x212>
 800161e:	2500      	movs	r5, #0
 8001620:	e6e2      	b.n	80013e8 <d_name+0x60>
 8001622:	2101      	movs	r1, #1
 8001624:	4620      	mov	r0, r4
 8001626:	f7fe ffcb 	bl	80005c0 <d_substitution>
 800162a:	2f00      	cmp	r7, #0
 800162c:	d1b4      	bne.n	8001598 <d_name+0x210>
 800162e:	68e2      	ldr	r2, [r4, #12]
 8001630:	4607      	mov	r7, r0
 8001632:	7815      	ldrb	r5, [r2, #0]
 8001634:	e72d      	b.n	8001492 <d_name+0x10a>
 8001636:	3302      	adds	r3, #2
 8001638:	60e3      	str	r3, [r4, #12]
 800163a:	4620      	mov	r0, r4
 800163c:	f7fe ff0e 	bl	800045c <d_compact_number>
 8001640:	1e07      	subs	r7, r0, #0
 8001642:	db9f      	blt.n	8001584 <d_name+0x1fc>
 8001644:	4620      	mov	r0, r4
 8001646:	f7ff fe9f 	bl	8001388 <d_name>
 800164a:	4605      	mov	r5, r0
 800164c:	2800      	cmp	r0, #0
 800164e:	f43f af6f 	beq.w	8001530 <d_name+0x1a8>
 8001652:	7803      	ldrb	r3, [r0, #0]
 8001654:	2b45      	cmp	r3, #69	; 0x45
 8001656:	f43f af69 	beq.w	800152c <d_name+0x1a4>
 800165a:	2b47      	cmp	r3, #71	; 0x47
 800165c:	f43f af66 	beq.w	800152c <d_name+0x1a4>
 8001660:	e760      	b.n	8001524 <d_name+0x19c>
 8001662:	2500      	movs	r5, #0
 8001664:	e779      	b.n	800155a <d_name+0x1d2>
 8001666:	3302      	adds	r3, #2
 8001668:	60e3      	str	r3, [r4, #12]
 800166a:	4620      	mov	r0, r4
 800166c:	f7ff f860 	bl	8000730 <d_discriminator>
 8001670:	2800      	cmp	r0, #0
 8001672:	d087      	beq.n	8001584 <d_name+0x1fc>
 8001674:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 8001678:	429a      	cmp	r2, r3
 800167a:	da10      	bge.n	800169e <d_name+0x316>
 800167c:	6920      	ldr	r0, [r4, #16]
 800167e:	4d17      	ldr	r5, [pc, #92]	; (80016dc <d_name+0x354>)
 8001680:	0111      	lsls	r1, r2, #4
 8001682:	1843      	adds	r3, r0, r1
 8001684:	3201      	adds	r2, #1
 8001686:	6162      	str	r2, [r4, #20]
 8001688:	2200      	movs	r2, #0
 800168a:	605a      	str	r2, [r3, #4]
 800168c:	5442      	strb	r2, [r0, r1]
 800168e:	220e      	movs	r2, #14
 8001690:	e9c3 5202 	strd	r5, r2, [r3, #8]
 8001694:	e762      	b.n	800155c <d_name+0x1d4>
 8001696:	4620      	mov	r0, r4
 8001698:	f7fe fefa 	bl	8000490 <d_template_param>
 800169c:	e79d      	b.n	80015da <d_name+0x252>
 800169e:	2300      	movs	r3, #0
 80016a0:	e75c      	b.n	800155c <d_name+0x1d4>
 80016a2:	f8c8 7000 	str.w	r7, [r8]
 80016a6:	2f00      	cmp	r7, #0
 80016a8:	f43f af6c 	beq.w	8001584 <d_name+0x1fc>
 80016ac:	f1b9 0f00 	cmp.w	r9, #0
 80016b0:	d004      	beq.n	80016bc <d_name+0x334>
 80016b2:	9b01      	ldr	r3, [sp, #4]
 80016b4:	f8c9 3008 	str.w	r3, [r9, #8]
 80016b8:	f8cd 9004 	str.w	r9, [sp, #4]
 80016bc:	7813      	ldrb	r3, [r2, #0]
 80016be:	2b45      	cmp	r3, #69	; 0x45
 80016c0:	f47f af60 	bne.w	8001584 <d_name+0x1fc>
 80016c4:	9d01      	ldr	r5, [sp, #4]
 80016c6:	3201      	adds	r2, #1
 80016c8:	4628      	mov	r0, r5
 80016ca:	60e2      	str	r2, [r4, #12]
 80016cc:	b003      	add	sp, #12
 80016ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80016d2:	bf00      	nop
 80016d4:	08011db0 	.word	0x08011db0
 80016d8:	100803ff 	.word	0x100803ff
 80016dc:	08011da0 	.word	0x08011da0

080016e0 <d_type>:
 80016e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80016e4:	68c2      	ldr	r2, [r0, #12]
 80016e6:	7813      	ldrb	r3, [r2, #0]
 80016e8:	2b72      	cmp	r3, #114	; 0x72
 80016ea:	b083      	sub	sp, #12
 80016ec:	4604      	mov	r4, r0
 80016ee:	d05f      	beq.n	80017b0 <d_type+0xd0>
 80016f0:	2b56      	cmp	r3, #86	; 0x56
 80016f2:	d05d      	beq.n	80017b0 <d_type+0xd0>
 80016f4:	2b4b      	cmp	r3, #75	; 0x4b
 80016f6:	d05b      	beq.n	80017b0 <d_type+0xd0>
 80016f8:	2b44      	cmp	r3, #68	; 0x44
 80016fa:	d051      	beq.n	80017a0 <d_type+0xc0>
 80016fc:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8001700:	294a      	cmp	r1, #74	; 0x4a
 8001702:	f200 809e 	bhi.w	8001842 <d_type+0x162>
 8001706:	e8df f011 	tbh	[pc, r1, lsl #1]
 800170a:	0111      	.short	0x0111
 800170c:	01110111 	.word	0x01110111
 8001710:	01110111 	.word	0x01110111
 8001714:	01110111 	.word	0x01110111
 8001718:	01110111 	.word	0x01110111
 800171c:	009c0111 	.word	0x009c0111
 8001720:	009c009c 	.word	0x009c009c
 8001724:	009c009c 	.word	0x009c009c
 8001728:	009c009c 	.word	0x009c009c
 800172c:	009c021e 	.word	0x009c021e
 8001730:	009c013b 	.word	0x009c013b
 8001734:	0135009c 	.word	0x0135009c
 8001738:	009c0149 	.word	0x009c0149
 800173c:	009c009c 	.word	0x009c009c
 8001740:	009c009c 	.word	0x009c009c
 8001744:	01110206 	.word	0x01110206
 8001748:	01650157 	.word	0x01650157
 800174c:	0173009c 	.word	0x0173009c
 8001750:	01a50181 	.word	0x01a50181
 8001754:	009c01cc 	.word	0x009c01cc
 8001758:	009c009c 	.word	0x009c009c
 800175c:	0111009c 	.word	0x0111009c
 8001760:	009c009c 	.word	0x009c009c
 8001764:	009c009c 	.word	0x009c009c
 8001768:	009c009c 	.word	0x009c009c
 800176c:	01e401e4 	.word	0x01e401e4
 8001770:	01e401e4 	.word	0x01e401e4
 8001774:	01e401e4 	.word	0x01e401e4
 8001778:	01e401e4 	.word	0x01e401e4
 800177c:	01e401e4 	.word	0x01e401e4
 8001780:	01e4009c 	.word	0x01e4009c
 8001784:	01e401e4 	.word	0x01e401e4
 8001788:	009c01e4 	.word	0x009c01e4
 800178c:	009c009c 	.word	0x009c009c
 8001790:	01e401e4 	.word	0x01e401e4
 8001794:	01e40127 	.word	0x01e40127
 8001798:	01e401e4 	.word	0x01e401e4
 800179c:	01e401e4 	.word	0x01e401e4
 80017a0:	7853      	ldrb	r3, [r2, #1]
 80017a2:	f003 01df 	and.w	r1, r3, #223	; 0xdf
 80017a6:	294f      	cmp	r1, #79	; 0x4f
 80017a8:	d002      	beq.n	80017b0 <d_type+0xd0>
 80017aa:	3b77      	subs	r3, #119	; 0x77
 80017ac:	2b01      	cmp	r3, #1
 80017ae:	d84d      	bhi.n	800184c <d_type+0x16c>
 80017b0:	2200      	movs	r2, #0
 80017b2:	a901      	add	r1, sp, #4
 80017b4:	4620      	mov	r0, r4
 80017b6:	f000 fc45 	bl	8002044 <d_cv_qualifiers>
 80017ba:	4605      	mov	r5, r0
 80017bc:	2800      	cmp	r0, #0
 80017be:	d040      	beq.n	8001842 <d_type+0x162>
 80017c0:	68e3      	ldr	r3, [r4, #12]
 80017c2:	781b      	ldrb	r3, [r3, #0]
 80017c4:	2b46      	cmp	r3, #70	; 0x46
 80017c6:	4620      	mov	r0, r4
 80017c8:	d119      	bne.n	80017fe <d_type+0x11e>
 80017ca:	f000 fd0f 	bl	80021ec <d_function_type>
 80017ce:	6028      	str	r0, [r5, #0]
 80017d0:	2800      	cmp	r0, #0
 80017d2:	d036      	beq.n	8001842 <d_type+0x162>
 80017d4:	7803      	ldrb	r3, [r0, #0]
 80017d6:	9a01      	ldr	r2, [sp, #4]
 80017d8:	3b1f      	subs	r3, #31
 80017da:	2b01      	cmp	r3, #1
 80017dc:	d913      	bls.n	8001806 <d_type+0x126>
 80017de:	2a00      	cmp	r2, #0
 80017e0:	d02f      	beq.n	8001842 <d_type+0x162>
 80017e2:	e9d4 3108 	ldrd	r3, r1, [r4, #32]
 80017e6:	428b      	cmp	r3, r1
 80017e8:	da2b      	bge.n	8001842 <d_type+0x162>
 80017ea:	69e0      	ldr	r0, [r4, #28]
 80017ec:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 80017f0:	1c59      	adds	r1, r3, #1
 80017f2:	9d01      	ldr	r5, [sp, #4]
 80017f4:	6221      	str	r1, [r4, #32]
 80017f6:	4628      	mov	r0, r5
 80017f8:	b003      	add	sp, #12
 80017fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80017fe:	f7ff ff6f 	bl	80016e0 <d_type>
 8001802:	6028      	str	r0, [r5, #0]
 8001804:	e7e4      	b.n	80017d0 <d_type+0xf0>
 8001806:	6883      	ldr	r3, [r0, #8]
 8001808:	6082      	str	r2, [r0, #8]
 800180a:	682a      	ldr	r2, [r5, #0]
 800180c:	9201      	str	r2, [sp, #4]
 800180e:	602b      	str	r3, [r5, #0]
 8001810:	9a01      	ldr	r2, [sp, #4]
 8001812:	e7e4      	b.n	80017de <d_type+0xfe>
 8001814:	2301      	movs	r3, #1
 8001816:	6b45      	ldr	r5, [r0, #52]	; 0x34
 8001818:	6343      	str	r3, [r0, #52]	; 0x34
 800181a:	f7ff fb37 	bl	8000e8c <d_expression_1>
 800181e:	6365      	str	r5, [r4, #52]	; 0x34
 8001820:	4602      	mov	r2, r0
 8001822:	2300      	movs	r3, #0
 8001824:	2142      	movs	r1, #66	; 0x42
 8001826:	4620      	mov	r0, r4
 8001828:	f7fe fcda 	bl	80001e0 <d_make_comp>
 800182c:	4605      	mov	r5, r0
 800182e:	9001      	str	r0, [sp, #4]
 8001830:	b138      	cbz	r0, 8001842 <d_type+0x162>
 8001832:	68e3      	ldr	r3, [r4, #12]
 8001834:	781a      	ldrb	r2, [r3, #0]
 8001836:	b122      	cbz	r2, 8001842 <d_type+0x162>
 8001838:	1c5a      	adds	r2, r3, #1
 800183a:	60e2      	str	r2, [r4, #12]
 800183c:	781b      	ldrb	r3, [r3, #0]
 800183e:	2b45      	cmp	r3, #69	; 0x45
 8001840:	d07b      	beq.n	800193a <d_type+0x25a>
 8001842:	2500      	movs	r5, #0
 8001844:	4628      	mov	r0, r5
 8001846:	b003      	add	sp, #12
 8001848:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800184c:	1c53      	adds	r3, r2, #1
 800184e:	60c3      	str	r3, [r0, #12]
 8001850:	7853      	ldrb	r3, [r2, #1]
 8001852:	2b00      	cmp	r3, #0
 8001854:	d0f5      	beq.n	8001842 <d_type+0x162>
 8001856:	1c93      	adds	r3, r2, #2
 8001858:	60c3      	str	r3, [r0, #12]
 800185a:	7853      	ldrb	r3, [r2, #1]
 800185c:	3b46      	subs	r3, #70	; 0x46
 800185e:	2b30      	cmp	r3, #48	; 0x30
 8001860:	d8ef      	bhi.n	8001842 <d_type+0x162>
 8001862:	a101      	add	r1, pc, #4	; (adr r1, 8001868 <d_type+0x188>)
 8001864:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001868:	08001d25 	.word	0x08001d25
 800186c:	08001843 	.word	0x08001843
 8001870:	08001843 	.word	0x08001843
 8001874:	08001843 	.word	0x08001843
 8001878:	08001843 	.word	0x08001843
 800187c:	08001843 	.word	0x08001843
 8001880:	08001843 	.word	0x08001843
 8001884:	08001843 	.word	0x08001843
 8001888:	08001843 	.word	0x08001843
 800188c:	08001843 	.word	0x08001843
 8001890:	08001843 	.word	0x08001843
 8001894:	08001843 	.word	0x08001843
 8001898:	08001843 	.word	0x08001843
 800189c:	08001843 	.word	0x08001843
 80018a0:	08001815 	.word	0x08001815
 80018a4:	08001843 	.word	0x08001843
 80018a8:	08001843 	.word	0x08001843
 80018ac:	08001843 	.word	0x08001843
 80018b0:	08001843 	.word	0x08001843
 80018b4:	08001843 	.word	0x08001843
 80018b8:	08001843 	.word	0x08001843
 80018bc:	08001843 	.word	0x08001843
 80018c0:	08001843 	.word	0x08001843
 80018c4:	08001843 	.word	0x08001843
 80018c8:	08001843 	.word	0x08001843
 80018cc:	08001843 	.word	0x08001843
 80018d0:	08001843 	.word	0x08001843
 80018d4:	08001d01 	.word	0x08001d01
 80018d8:	08001843 	.word	0x08001843
 80018dc:	08001cdd 	.word	0x08001cdd
 80018e0:	08001cb5 	.word	0x08001cb5
 80018e4:	08001c8d 	.word	0x08001c8d
 80018e8:	08001c65 	.word	0x08001c65
 80018ec:	08001843 	.word	0x08001843
 80018f0:	08001c3d 	.word	0x08001c3d
 80018f4:	08001dd9 	.word	0x08001dd9
 80018f8:	08001843 	.word	0x08001843
 80018fc:	08001843 	.word	0x08001843
 8001900:	08001843 	.word	0x08001843
 8001904:	08001843 	.word	0x08001843
 8001908:	08001d8d 	.word	0x08001d8d
 800190c:	08001843 	.word	0x08001843
 8001910:	08001c27 	.word	0x08001c27
 8001914:	08001843 	.word	0x08001843
 8001918:	08001843 	.word	0x08001843
 800191c:	08001bff 	.word	0x08001bff
 8001920:	08001815 	.word	0x08001815
 8001924:	08001843 	.word	0x08001843
 8001928:	08001bc5 	.word	0x08001bc5
 800192c:	4620      	mov	r0, r4
 800192e:	f7ff fd2b 	bl	8001388 <d_name>
 8001932:	4605      	mov	r5, r0
 8001934:	9001      	str	r0, [sp, #4]
 8001936:	2d00      	cmp	r5, #0
 8001938:	d083      	beq.n	8001842 <d_type+0x162>
 800193a:	e9d4 3208 	ldrd	r3, r2, [r4, #32]
 800193e:	4293      	cmp	r3, r2
 8001940:	f6bf af7f 	bge.w	8001842 <d_type+0x162>
 8001944:	69e1      	ldr	r1, [r4, #28]
 8001946:	f841 5023 	str.w	r5, [r1, r3, lsl #2]
 800194a:	9d01      	ldr	r5, [sp, #4]
 800194c:	1c5a      	adds	r2, r3, #1
 800194e:	4628      	mov	r0, r5
 8001950:	6222      	str	r2, [r4, #32]
 8001952:	b003      	add	sp, #12
 8001954:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001958:	3201      	adds	r2, #1
 800195a:	60e2      	str	r2, [r4, #12]
 800195c:	4620      	mov	r0, r4
 800195e:	f7fe fdb9 	bl	80004d4 <d_source_name>
 8001962:	2300      	movs	r3, #0
 8001964:	4602      	mov	r2, r0
 8001966:	2128      	movs	r1, #40	; 0x28
 8001968:	4620      	mov	r0, r4
 800196a:	f7fe fc39 	bl	80001e0 <d_make_comp>
 800196e:	4605      	mov	r5, r0
 8001970:	9001      	str	r0, [sp, #4]
 8001972:	e7e0      	b.n	8001936 <d_type+0x256>
 8001974:	4620      	mov	r0, r4
 8001976:	f000 fc39 	bl	80021ec <d_function_type>
 800197a:	4605      	mov	r5, r0
 800197c:	9001      	str	r0, [sp, #4]
 800197e:	e7da      	b.n	8001936 <d_type+0x256>
 8001980:	3201      	adds	r2, #1
 8001982:	60e2      	str	r2, [r4, #12]
 8001984:	4620      	mov	r0, r4
 8001986:	f7ff feab 	bl	80016e0 <d_type>
 800198a:	2300      	movs	r3, #0
 800198c:	4602      	mov	r2, r0
 800198e:	2125      	movs	r1, #37	; 0x25
 8001990:	4620      	mov	r0, r4
 8001992:	f7fe fc25 	bl	80001e0 <d_make_comp>
 8001996:	4605      	mov	r5, r0
 8001998:	9001      	str	r0, [sp, #4]
 800199a:	e7cc      	b.n	8001936 <d_type+0x256>
 800199c:	3201      	adds	r2, #1
 800199e:	60e2      	str	r2, [r4, #12]
 80019a0:	4620      	mov	r0, r4
 80019a2:	f7ff fe9d 	bl	80016e0 <d_type>
 80019a6:	2300      	movs	r3, #0
 80019a8:	4602      	mov	r2, r0
 80019aa:	2126      	movs	r1, #38	; 0x26
 80019ac:	4620      	mov	r0, r4
 80019ae:	f7fe fc17 	bl	80001e0 <d_make_comp>
 80019b2:	4605      	mov	r5, r0
 80019b4:	9001      	str	r0, [sp, #4]
 80019b6:	e7be      	b.n	8001936 <d_type+0x256>
 80019b8:	3201      	adds	r2, #1
 80019ba:	60e2      	str	r2, [r4, #12]
 80019bc:	4620      	mov	r0, r4
 80019be:	f7ff fe8f 	bl	80016e0 <d_type>
 80019c2:	2300      	movs	r3, #0
 80019c4:	4602      	mov	r2, r0
 80019c6:	2124      	movs	r1, #36	; 0x24
 80019c8:	4620      	mov	r0, r4
 80019ca:	f7fe fc09 	bl	80001e0 <d_make_comp>
 80019ce:	4605      	mov	r5, r0
 80019d0:	9001      	str	r0, [sp, #4]
 80019d2:	e7b0      	b.n	8001936 <d_type+0x256>
 80019d4:	3201      	adds	r2, #1
 80019d6:	60e2      	str	r2, [r4, #12]
 80019d8:	4620      	mov	r0, r4
 80019da:	f7ff fe81 	bl	80016e0 <d_type>
 80019de:	2300      	movs	r3, #0
 80019e0:	4602      	mov	r2, r0
 80019e2:	2122      	movs	r1, #34	; 0x22
 80019e4:	4620      	mov	r0, r4
 80019e6:	f7fe fbfb 	bl	80001e0 <d_make_comp>
 80019ea:	4605      	mov	r5, r0
 80019ec:	9001      	str	r0, [sp, #4]
 80019ee:	e7a2      	b.n	8001936 <d_type+0x256>
 80019f0:	3201      	adds	r2, #1
 80019f2:	60e2      	str	r2, [r4, #12]
 80019f4:	4620      	mov	r0, r4
 80019f6:	f7ff fe73 	bl	80016e0 <d_type>
 80019fa:	2300      	movs	r3, #0
 80019fc:	4602      	mov	r2, r0
 80019fe:	2123      	movs	r1, #35	; 0x23
 8001a00:	4620      	mov	r0, r4
 8001a02:	f7fe fbed 	bl	80001e0 <d_make_comp>
 8001a06:	4605      	mov	r5, r0
 8001a08:	9001      	str	r0, [sp, #4]
 8001a0a:	e794      	b.n	8001936 <d_type+0x256>
 8001a0c:	7853      	ldrb	r3, [r2, #1]
 8001a0e:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8001a12:	2a09      	cmp	r2, #9
 8001a14:	d905      	bls.n	8001a22 <d_type+0x342>
 8001a16:	2b5f      	cmp	r3, #95	; 0x5f
 8001a18:	d003      	beq.n	8001a22 <d_type+0x342>
 8001a1a:	3b41      	subs	r3, #65	; 0x41
 8001a1c:	2b19      	cmp	r3, #25
 8001a1e:	f200 820f 	bhi.w	8001e40 <d_type+0x760>
 8001a22:	2100      	movs	r1, #0
 8001a24:	4620      	mov	r0, r4
 8001a26:	f7fe fdcb 	bl	80005c0 <d_substitution>
 8001a2a:	68e3      	ldr	r3, [r4, #12]
 8001a2c:	9001      	str	r0, [sp, #4]
 8001a2e:	781a      	ldrb	r2, [r3, #0]
 8001a30:	2a49      	cmp	r2, #73	; 0x49
 8001a32:	4605      	mov	r5, r0
 8001a34:	f47f aedf 	bne.w	80017f6 <d_type+0x116>
 8001a38:	3301      	adds	r3, #1
 8001a3a:	60e3      	str	r3, [r4, #12]
 8001a3c:	4620      	mov	r0, r4
 8001a3e:	f7ff fc37 	bl	80012b0 <d_template_args_1>
 8001a42:	4603      	mov	r3, r0
 8001a44:	462a      	mov	r2, r5
 8001a46:	2104      	movs	r1, #4
 8001a48:	4620      	mov	r0, r4
 8001a4a:	f7fe fbc9 	bl	80001e0 <d_make_comp>
 8001a4e:	4605      	mov	r5, r0
 8001a50:	9001      	str	r0, [sp, #4]
 8001a52:	e770      	b.n	8001936 <d_type+0x256>
 8001a54:	4620      	mov	r0, r4
 8001a56:	f7fe fd1b 	bl	8000490 <d_template_param>
 8001a5a:	68e6      	ldr	r6, [r4, #12]
 8001a5c:	9001      	str	r0, [sp, #4]
 8001a5e:	7833      	ldrb	r3, [r6, #0]
 8001a60:	2b49      	cmp	r3, #73	; 0x49
 8001a62:	4605      	mov	r5, r0
 8001a64:	f47f af67 	bne.w	8001936 <d_type+0x256>
 8001a68:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001a6a:	2b00      	cmp	r3, #0
 8001a6c:	f040 81f5 	bne.w	8001e5a <d_type+0x77a>
 8001a70:	2800      	cmp	r0, #0
 8001a72:	f43f aee6 	beq.w	8001842 <d_type+0x162>
 8001a76:	e9d4 2108 	ldrd	r2, r1, [r4, #32]
 8001a7a:	428a      	cmp	r2, r1
 8001a7c:	f6bf aee1 	bge.w	8001842 <d_type+0x162>
 8001a80:	69e1      	ldr	r1, [r4, #28]
 8001a82:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
 8001a86:	3201      	adds	r2, #1
 8001a88:	6222      	str	r2, [r4, #32]
 8001a8a:	7831      	ldrb	r1, [r6, #0]
 8001a8c:	9d01      	ldr	r5, [sp, #4]
 8001a8e:	3949      	subs	r1, #73	; 0x49
 8001a90:	2901      	cmp	r1, #1
 8001a92:	d8d7      	bhi.n	8001a44 <d_type+0x364>
 8001a94:	3601      	adds	r6, #1
 8001a96:	60e6      	str	r6, [r4, #12]
 8001a98:	4620      	mov	r0, r4
 8001a9a:	f7ff fc09 	bl	80012b0 <d_template_args_1>
 8001a9e:	4603      	mov	r3, r0
 8001aa0:	e7d0      	b.n	8001a44 <d_type+0x364>
 8001aa2:	3201      	adds	r2, #1
 8001aa4:	60e2      	str	r2, [r4, #12]
 8001aa6:	4620      	mov	r0, r4
 8001aa8:	f7fe fd14 	bl	80004d4 <d_source_name>
 8001aac:	68e3      	ldr	r3, [r4, #12]
 8001aae:	9001      	str	r0, [sp, #4]
 8001ab0:	781a      	ldrb	r2, [r3, #0]
 8001ab2:	2a49      	cmp	r2, #73	; 0x49
 8001ab4:	4605      	mov	r5, r0
 8001ab6:	f000 81a8 	beq.w	8001e0a <d_type+0x72a>
 8001aba:	4620      	mov	r0, r4
 8001abc:	f7ff fe10 	bl	80016e0 <d_type>
 8001ac0:	9b01      	ldr	r3, [sp, #4]
 8001ac2:	4602      	mov	r2, r0
 8001ac4:	2121      	movs	r1, #33	; 0x21
 8001ac6:	4620      	mov	r0, r4
 8001ac8:	f7fe fb8a 	bl	80001e0 <d_make_comp>
 8001acc:	4605      	mov	r5, r0
 8001ace:	9001      	str	r0, [sp, #4]
 8001ad0:	e731      	b.n	8001936 <d_type+0x256>
 8001ad2:	e9d4 1005 	ldrd	r1, r0, [r4, #20]
 8001ad6:	3b61      	subs	r3, #97	; 0x61
 8001ad8:	4db6      	ldr	r5, [pc, #728]	; (8001db4 <d_type+0x6d4>)
 8001ada:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001ade:	4281      	cmp	r1, r0
 8001ae0:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8001ae4:	f280 818b 	bge.w	8001dfe <d_type+0x71e>
 8001ae8:	6858      	ldr	r0, [r3, #4]
 8001aea:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8001aec:	f8d4 c010 	ldr.w	ip, [r4, #16]
 8001af0:	010f      	lsls	r7, r1, #4
 8001af2:	eb0c 0507 	add.w	r5, ip, r7
 8001af6:	4406      	add	r6, r0
 8001af8:	4630      	mov	r0, r6
 8001afa:	3201      	adds	r2, #1
 8001afc:	3101      	adds	r1, #1
 8001afe:	f04f 0e00 	mov.w	lr, #0
 8001b02:	2627      	movs	r6, #39	; 0x27
 8001b04:	f8c5 e004 	str.w	lr, [r5, #4]
 8001b08:	6161      	str	r1, [r4, #20]
 8001b0a:	f80c 6007 	strb.w	r6, [ip, r7]
 8001b0e:	60ab      	str	r3, [r5, #8]
 8001b10:	60e2      	str	r2, [r4, #12]
 8001b12:	6320      	str	r0, [r4, #48]	; 0x30
 8001b14:	e66f      	b.n	80017f6 <d_type+0x116>
 8001b16:	3201      	adds	r2, #1
 8001b18:	60e2      	str	r2, [r4, #12]
 8001b1a:	4620      	mov	r0, r4
 8001b1c:	f7ff fde0 	bl	80016e0 <d_type>
 8001b20:	4605      	mov	r5, r0
 8001b22:	2800      	cmp	r0, #0
 8001b24:	f43f ae8d 	beq.w	8001842 <d_type+0x162>
 8001b28:	4620      	mov	r0, r4
 8001b2a:	f7ff fdd9 	bl	80016e0 <d_type>
 8001b2e:	4603      	mov	r3, r0
 8001b30:	2800      	cmp	r0, #0
 8001b32:	f43f ae86 	beq.w	8001842 <d_type+0x162>
 8001b36:	462a      	mov	r2, r5
 8001b38:	212b      	movs	r1, #43	; 0x2b
 8001b3a:	4620      	mov	r0, r4
 8001b3c:	f7fe fb50 	bl	80001e0 <d_make_comp>
 8001b40:	4605      	mov	r5, r0
 8001b42:	9001      	str	r0, [sp, #4]
 8001b44:	e6f7      	b.n	8001936 <d_type+0x256>
 8001b46:	1c55      	adds	r5, r2, #1
 8001b48:	60e5      	str	r5, [r4, #12]
 8001b4a:	7853      	ldrb	r3, [r2, #1]
 8001b4c:	2b5f      	cmp	r3, #95	; 0x5f
 8001b4e:	f000 815a 	beq.w	8001e06 <d_type+0x726>
 8001b52:	3b30      	subs	r3, #48	; 0x30
 8001b54:	2b09      	cmp	r3, #9
 8001b56:	f200 8165 	bhi.w	8001e24 <d_type+0x744>
 8001b5a:	4628      	mov	r0, r5
 8001b5c:	e000      	b.n	8001b60 <d_type+0x480>
 8001b5e:	4608      	mov	r0, r1
 8001b60:	1c41      	adds	r1, r0, #1
 8001b62:	60e1      	str	r1, [r4, #12]
 8001b64:	7843      	ldrb	r3, [r0, #1]
 8001b66:	3b30      	subs	r3, #48	; 0x30
 8001b68:	2b09      	cmp	r3, #9
 8001b6a:	d9f8      	bls.n	8001b5e <d_type+0x47e>
 8001b6c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8001b70:	4293      	cmp	r3, r2
 8001b72:	eba1 0705 	sub.w	r7, r1, r5
 8001b76:	f6bf ae64 	bge.w	8001842 <d_type+0x162>
 8001b7a:	f8d4 e010 	ldr.w	lr, [r4, #16]
 8001b7e:	ea4f 1c03 	mov.w	ip, r3, lsl #4
 8001b82:	eb0e 060c 	add.w	r6, lr, ip
 8001b86:	3301      	adds	r3, #1
 8001b88:	2200      	movs	r2, #0
 8001b8a:	6072      	str	r2, [r6, #4]
 8001b8c:	6163      	str	r3, [r4, #20]
 8001b8e:	2f00      	cmp	r7, #0
 8001b90:	f43f ae57 	beq.w	8001842 <d_type+0x162>
 8001b94:	6072      	str	r2, [r6, #4]
 8001b96:	f80e 200c 	strb.w	r2, [lr, ip]
 8001b9a:	e9c6 5702 	strd	r5, r7, [r6, #8]
 8001b9e:	7843      	ldrb	r3, [r0, #1]
 8001ba0:	460d      	mov	r5, r1
 8001ba2:	2b5f      	cmp	r3, #95	; 0x5f
 8001ba4:	f47f ae4d 	bne.w	8001842 <d_type+0x162>
 8001ba8:	3501      	adds	r5, #1
 8001baa:	60e5      	str	r5, [r4, #12]
 8001bac:	4620      	mov	r0, r4
 8001bae:	f7ff fd97 	bl	80016e0 <d_type>
 8001bb2:	4632      	mov	r2, r6
 8001bb4:	4603      	mov	r3, r0
 8001bb6:	212a      	movs	r1, #42	; 0x2a
 8001bb8:	4620      	mov	r0, r4
 8001bba:	f7fe fb11 	bl	80001e0 <d_make_comp>
 8001bbe:	4605      	mov	r5, r0
 8001bc0:	9001      	str	r0, [sp, #4]
 8001bc2:	e6b8      	b.n	8001936 <d_type+0x256>
 8001bc4:	7893      	ldrb	r3, [r2, #2]
 8001bc6:	2b5f      	cmp	r3, #95	; 0x5f
 8001bc8:	f000 8178 	beq.w	8001ebc <d_type+0x7dc>
 8001bcc:	f7fe fc2e 	bl	800042c <d_number_component>
 8001bd0:	4605      	mov	r5, r0
 8001bd2:	2d00      	cmp	r5, #0
 8001bd4:	f43f ae35 	beq.w	8001842 <d_type+0x162>
 8001bd8:	68e3      	ldr	r3, [r4, #12]
 8001bda:	781a      	ldrb	r2, [r3, #0]
 8001bdc:	2a5f      	cmp	r2, #95	; 0x5f
 8001bde:	f47f ae30 	bne.w	8001842 <d_type+0x162>
 8001be2:	3301      	adds	r3, #1
 8001be4:	60e3      	str	r3, [r4, #12]
 8001be6:	4620      	mov	r0, r4
 8001be8:	f7ff fd7a 	bl	80016e0 <d_type>
 8001bec:	462a      	mov	r2, r5
 8001bee:	4603      	mov	r3, r0
 8001bf0:	212d      	movs	r1, #45	; 0x2d
 8001bf2:	4620      	mov	r0, r4
 8001bf4:	f7fe faf4 	bl	80001e0 <d_make_comp>
 8001bf8:	4605      	mov	r5, r0
 8001bfa:	9001      	str	r0, [sp, #4]
 8001bfc:	e69b      	b.n	8001936 <d_type+0x256>
 8001bfe:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001c02:	4293      	cmp	r3, r2
 8001c04:	f280 80fb 	bge.w	8001dfe <d_type+0x71e>
 8001c08:	6900      	ldr	r0, [r0, #16]
 8001c0a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001c0c:	0119      	lsls	r1, r3, #4
 8001c0e:	1845      	adds	r5, r0, r1
 8001c10:	3301      	adds	r3, #1
 8001c12:	2600      	movs	r6, #0
 8001c14:	606e      	str	r6, [r5, #4]
 8001c16:	3208      	adds	r2, #8
 8001c18:	6163      	str	r3, [r4, #20]
 8001c1a:	2627      	movs	r6, #39	; 0x27
 8001c1c:	4b66      	ldr	r3, [pc, #408]	; (8001db8 <d_type+0x6d8>)
 8001c1e:	5446      	strb	r6, [r0, r1]
 8001c20:	60ab      	str	r3, [r5, #8]
 8001c22:	6322      	str	r2, [r4, #48]	; 0x30
 8001c24:	e5e7      	b.n	80017f6 <d_type+0x116>
 8001c26:	f7ff fd5b 	bl	80016e0 <d_type>
 8001c2a:	2300      	movs	r3, #0
 8001c2c:	4602      	mov	r2, r0
 8001c2e:	214a      	movs	r1, #74	; 0x4a
 8001c30:	4620      	mov	r0, r4
 8001c32:	f7fe fad5 	bl	80001e0 <d_make_comp>
 8001c36:	4605      	mov	r5, r0
 8001c38:	9001      	str	r0, [sp, #4]
 8001c3a:	e67c      	b.n	8001936 <d_type+0x256>
 8001c3c:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001c40:	4293      	cmp	r3, r2
 8001c42:	f280 80dc 	bge.w	8001dfe <d_type+0x71e>
 8001c46:	6900      	ldr	r0, [r0, #16]
 8001c48:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001c4a:	0119      	lsls	r1, r3, #4
 8001c4c:	1845      	adds	r5, r0, r1
 8001c4e:	3301      	adds	r3, #1
 8001c50:	2600      	movs	r6, #0
 8001c52:	606e      	str	r6, [r5, #4]
 8001c54:	3204      	adds	r2, #4
 8001c56:	6163      	str	r3, [r4, #20]
 8001c58:	2627      	movs	r6, #39	; 0x27
 8001c5a:	4b58      	ldr	r3, [pc, #352]	; (8001dbc <d_type+0x6dc>)
 8001c5c:	5446      	strb	r6, [r0, r1]
 8001c5e:	60ab      	str	r3, [r5, #8]
 8001c60:	6322      	str	r2, [r4, #48]	; 0x30
 8001c62:	e5c8      	b.n	80017f6 <d_type+0x116>
 8001c64:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001c68:	4293      	cmp	r3, r2
 8001c6a:	f280 80c8 	bge.w	8001dfe <d_type+0x71e>
 8001c6e:	6900      	ldr	r0, [r0, #16]
 8001c70:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001c72:	0119      	lsls	r1, r3, #4
 8001c74:	1845      	adds	r5, r0, r1
 8001c76:	3301      	adds	r3, #1
 8001c78:	2600      	movs	r6, #0
 8001c7a:	606e      	str	r6, [r5, #4]
 8001c7c:	3209      	adds	r2, #9
 8001c7e:	6163      	str	r3, [r4, #20]
 8001c80:	2627      	movs	r6, #39	; 0x27
 8001c82:	4b4f      	ldr	r3, [pc, #316]	; (8001dc0 <d_type+0x6e0>)
 8001c84:	5446      	strb	r6, [r0, r1]
 8001c86:	60ab      	str	r3, [r5, #8]
 8001c88:	6322      	str	r2, [r4, #48]	; 0x30
 8001c8a:	e5b4      	b.n	80017f6 <d_type+0x116>
 8001c8c:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001c90:	4293      	cmp	r3, r2
 8001c92:	f280 80b4 	bge.w	8001dfe <d_type+0x71e>
 8001c96:	6900      	ldr	r0, [r0, #16]
 8001c98:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001c9a:	0119      	lsls	r1, r3, #4
 8001c9c:	1845      	adds	r5, r0, r1
 8001c9e:	3301      	adds	r3, #1
 8001ca0:	2600      	movs	r6, #0
 8001ca2:	606e      	str	r6, [r5, #4]
 8001ca4:	320a      	adds	r2, #10
 8001ca6:	6163      	str	r3, [r4, #20]
 8001ca8:	2627      	movs	r6, #39	; 0x27
 8001caa:	4b46      	ldr	r3, [pc, #280]	; (8001dc4 <d_type+0x6e4>)
 8001cac:	5446      	strb	r6, [r0, r1]
 8001cae:	60ab      	str	r3, [r5, #8]
 8001cb0:	6322      	str	r2, [r4, #48]	; 0x30
 8001cb2:	e5a0      	b.n	80017f6 <d_type+0x116>
 8001cb4:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001cb8:	4293      	cmp	r3, r2
 8001cba:	f280 80a0 	bge.w	8001dfe <d_type+0x71e>
 8001cbe:	6900      	ldr	r0, [r0, #16]
 8001cc0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001cc2:	0119      	lsls	r1, r3, #4
 8001cc4:	1845      	adds	r5, r0, r1
 8001cc6:	3301      	adds	r3, #1
 8001cc8:	2600      	movs	r6, #0
 8001cca:	606e      	str	r6, [r5, #4]
 8001ccc:	3209      	adds	r2, #9
 8001cce:	6163      	str	r3, [r4, #20]
 8001cd0:	2627      	movs	r6, #39	; 0x27
 8001cd2:	4b3d      	ldr	r3, [pc, #244]	; (8001dc8 <d_type+0x6e8>)
 8001cd4:	5446      	strb	r6, [r0, r1]
 8001cd6:	60ab      	str	r3, [r5, #8]
 8001cd8:	6322      	str	r2, [r4, #48]	; 0x30
 8001cda:	e58c      	b.n	80017f6 <d_type+0x116>
 8001cdc:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001ce0:	4293      	cmp	r3, r2
 8001ce2:	f6bf adae 	bge.w	8001842 <d_type+0x162>
 8001ce6:	6901      	ldr	r1, [r0, #16]
 8001ce8:	4e38      	ldr	r6, [pc, #224]	; (8001dcc <d_type+0x6ec>)
 8001cea:	011a      	lsls	r2, r3, #4
 8001cec:	188d      	adds	r5, r1, r2
 8001cee:	3301      	adds	r3, #1
 8001cf0:	6143      	str	r3, [r0, #20]
 8001cf2:	2300      	movs	r3, #0
 8001cf4:	200e      	movs	r0, #14
 8001cf6:	606b      	str	r3, [r5, #4]
 8001cf8:	548b      	strb	r3, [r1, r2]
 8001cfa:	e9c5 6002 	strd	r6, r0, [r5, #8]
 8001cfe:	e57a      	b.n	80017f6 <d_type+0x116>
 8001d00:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001d04:	4293      	cmp	r3, r2
 8001d06:	f6bf ad9c 	bge.w	8001842 <d_type+0x162>
 8001d0a:	6901      	ldr	r1, [r0, #16]
 8001d0c:	4e30      	ldr	r6, [pc, #192]	; (8001dd0 <d_type+0x6f0>)
 8001d0e:	011a      	lsls	r2, r3, #4
 8001d10:	188d      	adds	r5, r1, r2
 8001d12:	3301      	adds	r3, #1
 8001d14:	6143      	str	r3, [r0, #20]
 8001d16:	2300      	movs	r3, #0
 8001d18:	2004      	movs	r0, #4
 8001d1a:	606b      	str	r3, [r5, #4]
 8001d1c:	548b      	strb	r3, [r1, r2]
 8001d1e:	e9c5 6002 	strd	r6, r0, [r5, #8]
 8001d22:	e568      	b.n	80017f6 <d_type+0x116>
 8001d24:	e9d0 3105 	ldrd	r3, r1, [r0, #20]
 8001d28:	428b      	cmp	r3, r1
 8001d2a:	f280 80af 	bge.w	8001e8c <d_type+0x7ac>
 8001d2e:	6905      	ldr	r5, [r0, #16]
 8001d30:	0118      	lsls	r0, r3, #4
 8001d32:	1829      	adds	r1, r5, r0
 8001d34:	3301      	adds	r3, #1
 8001d36:	2700      	movs	r7, #0
 8001d38:	262c      	movs	r6, #44	; 0x2c
 8001d3a:	604f      	str	r7, [r1, #4]
 8001d3c:	9101      	str	r1, [sp, #4]
 8001d3e:	6163      	str	r3, [r4, #20]
 8001d40:	542e      	strb	r6, [r5, r0]
 8001d42:	7893      	ldrb	r3, [r2, #2]
 8001d44:	3b30      	subs	r3, #48	; 0x30
 8001d46:	b2db      	uxtb	r3, r3
 8001d48:	2b09      	cmp	r3, #9
 8001d4a:	bf94      	ite	ls
 8001d4c:	2301      	movls	r3, #1
 8001d4e:	463b      	movhi	r3, r7
 8001d50:	818b      	strh	r3, [r1, #12]
 8001d52:	f240 80ae 	bls.w	8001eb2 <d_type+0x7d2>
 8001d56:	4620      	mov	r0, r4
 8001d58:	9d01      	ldr	r5, [sp, #4]
 8001d5a:	f7ff fcc1 	bl	80016e0 <d_type>
 8001d5e:	9b01      	ldr	r3, [sp, #4]
 8001d60:	60a8      	str	r0, [r5, #8]
 8001d62:	689b      	ldr	r3, [r3, #8]
 8001d64:	2b00      	cmp	r3, #0
 8001d66:	f43f ad6c 	beq.w	8001842 <d_type+0x162>
 8001d6a:	f104 000c 	add.w	r0, r4, #12
 8001d6e:	f7fe fb31 	bl	80003d4 <d_number.isra.1>
 8001d72:	68e2      	ldr	r2, [r4, #12]
 8001d74:	7813      	ldrb	r3, [r2, #0]
 8001d76:	b113      	cbz	r3, 8001d7e <d_type+0x69e>
 8001d78:	1c53      	adds	r3, r2, #1
 8001d7a:	60e3      	str	r3, [r4, #12]
 8001d7c:	7813      	ldrb	r3, [r2, #0]
 8001d7e:	9d01      	ldr	r5, [sp, #4]
 8001d80:	f1a3 0273 	sub.w	r2, r3, #115	; 0x73
 8001d84:	4253      	negs	r3, r2
 8001d86:	4153      	adcs	r3, r2
 8001d88:	81eb      	strh	r3, [r5, #14]
 8001d8a:	e534      	b.n	80017f6 <d_type+0x116>
 8001d8c:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001d90:	4293      	cmp	r3, r2
 8001d92:	da34      	bge.n	8001dfe <d_type+0x71e>
 8001d94:	6900      	ldr	r0, [r0, #16]
 8001d96:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001d98:	0119      	lsls	r1, r3, #4
 8001d9a:	1845      	adds	r5, r0, r1
 8001d9c:	3301      	adds	r3, #1
 8001d9e:	2600      	movs	r6, #0
 8001da0:	606e      	str	r6, [r5, #4]
 8001da2:	3211      	adds	r2, #17
 8001da4:	6163      	str	r3, [r4, #20]
 8001da6:	2627      	movs	r6, #39	; 0x27
 8001da8:	4b0a      	ldr	r3, [pc, #40]	; (8001dd4 <d_type+0x6f4>)
 8001daa:	5446      	strb	r6, [r0, r1]
 8001dac:	60ab      	str	r3, [r5, #8]
 8001dae:	6322      	str	r2, [r4, #48]	; 0x30
 8001db0:	e521      	b.n	80017f6 <d_type+0x116>
 8001db2:	bf00      	nop
 8001db4:	080113b4 	.word	0x080113b4
 8001db8:	0801160c 	.word	0x0801160c
 8001dbc:	080115f8 	.word	0x080115f8
 8001dc0:	080115bc 	.word	0x080115bc
 8001dc4:	080115e4 	.word	0x080115e4
 8001dc8:	080115d0 	.word	0x080115d0
 8001dcc:	08011dbc 	.word	0x08011dbc
 8001dd0:	08011db4 	.word	0x08011db4
 8001dd4:	08011634 	.word	0x08011634
 8001dd8:	e9d0 3205 	ldrd	r3, r2, [r0, #20]
 8001ddc:	4293      	cmp	r3, r2
 8001dde:	da0e      	bge.n	8001dfe <d_type+0x71e>
 8001de0:	6900      	ldr	r0, [r0, #16]
 8001de2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8001de4:	0119      	lsls	r1, r3, #4
 8001de6:	1845      	adds	r5, r0, r1
 8001de8:	3301      	adds	r3, #1
 8001dea:	2600      	movs	r6, #0
 8001dec:	606e      	str	r6, [r5, #4]
 8001dee:	3208      	adds	r2, #8
 8001df0:	6163      	str	r3, [r4, #20]
 8001df2:	2627      	movs	r6, #39	; 0x27
 8001df4:	4b36      	ldr	r3, [pc, #216]	; (8001ed0 <d_type+0x7f0>)
 8001df6:	5446      	strb	r6, [r0, r1]
 8001df8:	60ab      	str	r3, [r5, #8]
 8001dfa:	6322      	str	r2, [r4, #48]	; 0x30
 8001dfc:	e4fb      	b.n	80017f6 <d_type+0x116>
 8001dfe:	2300      	movs	r3, #0
 8001e00:	9301      	str	r3, [sp, #4]
 8001e02:	689b      	ldr	r3, [r3, #8]
 8001e04:	deff      	udf	#255	; 0xff
 8001e06:	2600      	movs	r6, #0
 8001e08:	e6ce      	b.n	8001ba8 <d_type+0x4c8>
 8001e0a:	3301      	adds	r3, #1
 8001e0c:	60e3      	str	r3, [r4, #12]
 8001e0e:	4620      	mov	r0, r4
 8001e10:	f7ff fa4e 	bl	80012b0 <d_template_args_1>
 8001e14:	462a      	mov	r2, r5
 8001e16:	4603      	mov	r3, r0
 8001e18:	2104      	movs	r1, #4
 8001e1a:	4620      	mov	r0, r4
 8001e1c:	f7fe f9e0 	bl	80001e0 <d_make_comp>
 8001e20:	9001      	str	r0, [sp, #4]
 8001e22:	e64a      	b.n	8001aba <d_type+0x3da>
 8001e24:	2301      	movs	r3, #1
 8001e26:	6b65      	ldr	r5, [r4, #52]	; 0x34
 8001e28:	6363      	str	r3, [r4, #52]	; 0x34
 8001e2a:	4620      	mov	r0, r4
 8001e2c:	f7ff f82e 	bl	8000e8c <d_expression_1>
 8001e30:	6365      	str	r5, [r4, #52]	; 0x34
 8001e32:	4606      	mov	r6, r0
 8001e34:	2800      	cmp	r0, #0
 8001e36:	f43f ad04 	beq.w	8001842 <d_type+0x162>
 8001e3a:	68e5      	ldr	r5, [r4, #12]
 8001e3c:	782b      	ldrb	r3, [r5, #0]
 8001e3e:	e6b0      	b.n	8001ba2 <d_type+0x4c2>
 8001e40:	4620      	mov	r0, r4
 8001e42:	f7ff faa1 	bl	8001388 <d_name>
 8001e46:	4605      	mov	r5, r0
 8001e48:	9001      	str	r0, [sp, #4]
 8001e4a:	2800      	cmp	r0, #0
 8001e4c:	f43f acf9 	beq.w	8001842 <d_type+0x162>
 8001e50:	7803      	ldrb	r3, [r0, #0]
 8001e52:	2b18      	cmp	r3, #24
 8001e54:	f47f ad71 	bne.w	800193a <d_type+0x25a>
 8001e58:	e4cd      	b.n	80017f6 <d_type+0x116>
 8001e5a:	1c73      	adds	r3, r6, #1
 8001e5c:	60e3      	str	r3, [r4, #12]
 8001e5e:	4620      	mov	r0, r4
 8001e60:	f8d4 9014 	ldr.w	r9, [r4, #20]
 8001e64:	f8d4 8020 	ldr.w	r8, [r4, #32]
 8001e68:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 8001e6a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8001e6c:	f7ff fa20 	bl	80012b0 <d_template_args_1>
 8001e70:	68e2      	ldr	r2, [r4, #12]
 8001e72:	7812      	ldrb	r2, [r2, #0]
 8001e74:	2a49      	cmp	r2, #73	; 0x49
 8001e76:	4603      	mov	r3, r0
 8001e78:	d00b      	beq.n	8001e92 <d_type+0x7b2>
 8001e7a:	6325      	str	r5, [r4, #48]	; 0x30
 8001e7c:	60e6      	str	r6, [r4, #12]
 8001e7e:	f8c4 9014 	str.w	r9, [r4, #20]
 8001e82:	f8c4 8020 	str.w	r8, [r4, #32]
 8001e86:	62a7      	str	r7, [r4, #40]	; 0x28
 8001e88:	9d01      	ldr	r5, [sp, #4]
 8001e8a:	e554      	b.n	8001936 <d_type+0x256>
 8001e8c:	2300      	movs	r3, #0
 8001e8e:	701b      	strb	r3, [r3, #0]
 8001e90:	deff      	udf	#255	; 0xff
 8001e92:	9901      	ldr	r1, [sp, #4]
 8001e94:	2900      	cmp	r1, #0
 8001e96:	f43f acd4 	beq.w	8001842 <d_type+0x162>
 8001e9a:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
 8001e9e:	4282      	cmp	r2, r0
 8001ea0:	f6bf accf 	bge.w	8001842 <d_type+0x162>
 8001ea4:	69e0      	ldr	r0, [r4, #28]
 8001ea6:	f840 1022 	str.w	r1, [r0, r2, lsl #2]
 8001eaa:	3201      	adds	r2, #1
 8001eac:	6222      	str	r2, [r4, #32]
 8001eae:	9a01      	ldr	r2, [sp, #4]
 8001eb0:	e5c9      	b.n	8001a46 <d_type+0x366>
 8001eb2:	f104 000c 	add.w	r0, r4, #12
 8001eb6:	f7fe fa8d 	bl	80003d4 <d_number.isra.1>
 8001eba:	e74c      	b.n	8001d56 <d_type+0x676>
 8001ebc:	3203      	adds	r2, #3
 8001ebe:	2301      	movs	r3, #1
 8001ec0:	6b46      	ldr	r6, [r0, #52]	; 0x34
 8001ec2:	60c2      	str	r2, [r0, #12]
 8001ec4:	6343      	str	r3, [r0, #52]	; 0x34
 8001ec6:	f7fe ffe1 	bl	8000e8c <d_expression_1>
 8001eca:	6366      	str	r6, [r4, #52]	; 0x34
 8001ecc:	4605      	mov	r5, r0
 8001ece:	e680      	b.n	8001bd2 <d_type+0x4f2>
 8001ed0:	08011620 	.word	0x08011620

08001ed4 <d_operator_name>:
 8001ed4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ed6:	68c3      	ldr	r3, [r0, #12]
 8001ed8:	781e      	ldrb	r6, [r3, #0]
 8001eda:	4686      	mov	lr, r0
 8001edc:	b336      	cbz	r6, 8001f2c <d_operator_name+0x58>
 8001ede:	1c5a      	adds	r2, r3, #1
 8001ee0:	60c2      	str	r2, [r0, #12]
 8001ee2:	785a      	ldrb	r2, [r3, #1]
 8001ee4:	781e      	ldrb	r6, [r3, #0]
 8001ee6:	2a00      	cmp	r2, #0
 8001ee8:	d04a      	beq.n	8001f80 <d_operator_name+0xac>
 8001eea:	1c9a      	adds	r2, r3, #2
 8001eec:	60c2      	str	r2, [r0, #12]
 8001eee:	2e76      	cmp	r6, #118	; 0x76
 8001ef0:	4604      	mov	r4, r0
 8001ef2:	f893 c001 	ldrb.w	ip, [r3, #1]
 8001ef6:	d145      	bne.n	8001f84 <d_operator_name+0xb0>
 8001ef8:	f1ac 0530 	sub.w	r5, ip, #48	; 0x30
 8001efc:	b2eb      	uxtb	r3, r5
 8001efe:	2b09      	cmp	r3, #9
 8001f00:	d815      	bhi.n	8001f2e <d_operator_name+0x5a>
 8001f02:	f7fe fae7 	bl	80004d4 <d_source_name>
 8001f06:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8001f0a:	428b      	cmp	r3, r1
 8001f0c:	4602      	mov	r2, r0
 8001f0e:	da21      	bge.n	8001f54 <d_operator_name+0x80>
 8001f10:	6926      	ldr	r6, [r4, #16]
 8001f12:	0119      	lsls	r1, r3, #4
 8001f14:	1870      	adds	r0, r6, r1
 8001f16:	3301      	adds	r3, #1
 8001f18:	2700      	movs	r7, #0
 8001f1a:	6047      	str	r7, [r0, #4]
 8001f1c:	6163      	str	r3, [r4, #20]
 8001f1e:	b1ca      	cbz	r2, 8001f54 <d_operator_name+0x80>
 8001f20:	2332      	movs	r3, #50	; 0x32
 8001f22:	6047      	str	r7, [r0, #4]
 8001f24:	5473      	strb	r3, [r6, r1]
 8001f26:	e9c0 5202 	strd	r5, r2, [r0, #8]
 8001f2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001f2c:	46b4      	mov	ip, r6
 8001f2e:	4c23      	ldr	r4, [pc, #140]	; (8001fbc <d_operator_name+0xe8>)
 8001f30:	2043      	movs	r0, #67	; 0x43
 8001f32:	2200      	movs	r2, #0
 8001f34:	1a83      	subs	r3, r0, r2
 8001f36:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8001f3a:	eb02 0363 	add.w	r3, r2, r3, asr #1
 8001f3e:	0119      	lsls	r1, r3, #4
 8001f40:	1867      	adds	r7, r4, r1
 8001f42:	5861      	ldr	r1, [r4, r1]
 8001f44:	780d      	ldrb	r5, [r1, #0]
 8001f46:	42b5      	cmp	r5, r6
 8001f48:	d006      	beq.n	8001f58 <d_operator_name+0x84>
 8001f4a:	bf94      	ite	ls
 8001f4c:	1c5a      	addls	r2, r3, #1
 8001f4e:	4618      	movhi	r0, r3
 8001f50:	4282      	cmp	r2, r0
 8001f52:	d1ef      	bne.n	8001f34 <d_operator_name+0x60>
 8001f54:	2000      	movs	r0, #0
 8001f56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001f58:	7849      	ldrb	r1, [r1, #1]
 8001f5a:	4561      	cmp	r1, ip
 8001f5c:	d1f5      	bne.n	8001f4a <d_operator_name+0x76>
 8001f5e:	e9de 3205 	ldrd	r3, r2, [lr, #20]
 8001f62:	4293      	cmp	r3, r2
 8001f64:	daf6      	bge.n	8001f54 <d_operator_name+0x80>
 8001f66:	f8de 1010 	ldr.w	r1, [lr, #16]
 8001f6a:	011a      	lsls	r2, r3, #4
 8001f6c:	1888      	adds	r0, r1, r2
 8001f6e:	3301      	adds	r3, #1
 8001f70:	2500      	movs	r5, #0
 8001f72:	2431      	movs	r4, #49	; 0x31
 8001f74:	6045      	str	r5, [r0, #4]
 8001f76:	f8ce 3014 	str.w	r3, [lr, #20]
 8001f7a:	548c      	strb	r4, [r1, r2]
 8001f7c:	6087      	str	r7, [r0, #8]
 8001f7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001f80:	4694      	mov	ip, r2
 8001f82:	e7d4      	b.n	8001f2e <d_operator_name+0x5a>
 8001f84:	2e63      	cmp	r6, #99	; 0x63
 8001f86:	d1d2      	bne.n	8001f2e <d_operator_name+0x5a>
 8001f88:	f1bc 0f76 	cmp.w	ip, #118	; 0x76
 8001f8c:	d1cf      	bne.n	8001f2e <d_operator_name+0x5a>
 8001f8e:	e9d0 350d 	ldrd	r3, r5, [r0, #52]	; 0x34
 8001f92:	fab3 f383 	clz	r3, r3
 8001f96:	095b      	lsrs	r3, r3, #5
 8001f98:	6383      	str	r3, [r0, #56]	; 0x38
 8001f9a:	f7ff fba1 	bl	80016e0 <d_type>
 8001f9e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001fa0:	4602      	mov	r2, r0
 8001fa2:	b92b      	cbnz	r3, 8001fb0 <d_operator_name+0xdc>
 8001fa4:	2133      	movs	r1, #51	; 0x33
 8001fa6:	4620      	mov	r0, r4
 8001fa8:	f7fe f91a 	bl	80001e0 <d_make_comp>
 8001fac:	63a5      	str	r5, [r4, #56]	; 0x38
 8001fae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001fb0:	2300      	movs	r3, #0
 8001fb2:	2134      	movs	r1, #52	; 0x34
 8001fb4:	4620      	mov	r0, r4
 8001fb6:	f7fe f913 	bl	80001e0 <d_make_comp>
 8001fba:	e7f7      	b.n	8001fac <d_operator_name+0xd8>
 8001fbc:	08011648 	.word	0x08011648

08001fc0 <d_parmlist>:
 8001fc0:	b530      	push	{r4, r5, lr}
 8001fc2:	68c2      	ldr	r2, [r0, #12]
 8001fc4:	b083      	sub	sp, #12
 8001fc6:	2300      	movs	r3, #0
 8001fc8:	9301      	str	r3, [sp, #4]
 8001fca:	7813      	ldrb	r3, [r2, #0]
 8001fcc:	2b00      	cmp	r3, #0
 8001fce:	d036      	beq.n	800203e <d_parmlist+0x7e>
 8001fd0:	2b45      	cmp	r3, #69	; 0x45
 8001fd2:	d034      	beq.n	800203e <d_parmlist+0x7e>
 8001fd4:	2b2e      	cmp	r3, #46	; 0x2e
 8001fd6:	d032      	beq.n	800203e <d_parmlist+0x7e>
 8001fd8:	4604      	mov	r4, r0
 8001fda:	ad01      	add	r5, sp, #4
 8001fdc:	e015      	b.n	800200a <d_parmlist+0x4a>
 8001fde:	2b4f      	cmp	r3, #79	; 0x4f
 8001fe0:	d016      	beq.n	8002010 <d_parmlist+0x50>
 8001fe2:	f7ff fb7d 	bl	80016e0 <d_type>
 8001fe6:	2300      	movs	r3, #0
 8001fe8:	4602      	mov	r2, r0
 8001fea:	212e      	movs	r1, #46	; 0x2e
 8001fec:	b338      	cbz	r0, 800203e <d_parmlist+0x7e>
 8001fee:	4620      	mov	r0, r4
 8001ff0:	f7fe f8f6 	bl	80001e0 <d_make_comp>
 8001ff4:	6028      	str	r0, [r5, #0]
 8001ff6:	b310      	cbz	r0, 800203e <d_parmlist+0x7e>
 8001ff8:	68e2      	ldr	r2, [r4, #12]
 8001ffa:	7813      	ldrb	r3, [r2, #0]
 8001ffc:	f100 050c 	add.w	r5, r0, #12
 8002000:	b14b      	cbz	r3, 8002016 <d_parmlist+0x56>
 8002002:	2b45      	cmp	r3, #69	; 0x45
 8002004:	d007      	beq.n	8002016 <d_parmlist+0x56>
 8002006:	2b2e      	cmp	r3, #46	; 0x2e
 8002008:	d005      	beq.n	8002016 <d_parmlist+0x56>
 800200a:	2b52      	cmp	r3, #82	; 0x52
 800200c:	4620      	mov	r0, r4
 800200e:	d1e6      	bne.n	8001fde <d_parmlist+0x1e>
 8002010:	7853      	ldrb	r3, [r2, #1]
 8002012:	2b45      	cmp	r3, #69	; 0x45
 8002014:	d1e5      	bne.n	8001fe2 <d_parmlist+0x22>
 8002016:	9801      	ldr	r0, [sp, #4]
 8002018:	b188      	cbz	r0, 800203e <d_parmlist+0x7e>
 800201a:	68c3      	ldr	r3, [r0, #12]
 800201c:	b10b      	cbz	r3, 8002022 <d_parmlist+0x62>
 800201e:	b003      	add	sp, #12
 8002020:	bd30      	pop	{r4, r5, pc}
 8002022:	6882      	ldr	r2, [r0, #8]
 8002024:	7811      	ldrb	r1, [r2, #0]
 8002026:	2927      	cmp	r1, #39	; 0x27
 8002028:	d1f9      	bne.n	800201e <d_parmlist+0x5e>
 800202a:	6892      	ldr	r2, [r2, #8]
 800202c:	7c11      	ldrb	r1, [r2, #16]
 800202e:	2909      	cmp	r1, #9
 8002030:	d1f5      	bne.n	800201e <d_parmlist+0x5e>
 8002032:	6851      	ldr	r1, [r2, #4]
 8002034:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8002036:	1a52      	subs	r2, r2, r1
 8002038:	6322      	str	r2, [r4, #48]	; 0x30
 800203a:	6083      	str	r3, [r0, #8]
 800203c:	e7ef      	b.n	800201e <d_parmlist+0x5e>
 800203e:	2000      	movs	r0, #0
 8002040:	b003      	add	sp, #12
 8002042:	bd30      	pop	{r4, r5, pc}

08002044 <d_cv_qualifiers>:
 8002044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002048:	4689      	mov	r9, r1
 800204a:	b083      	sub	sp, #12
 800204c:	68c1      	ldr	r1, [r0, #12]
 800204e:	1e13      	subs	r3, r2, #0
 8002050:	9301      	str	r3, [sp, #4]
 8002052:	4604      	mov	r4, r0
 8002054:	780b      	ldrb	r3, [r1, #0]
 8002056:	bf15      	itete	ne
 8002058:	f04f 081e 	movne.w	r8, #30
 800205c:	f04f 081b 	moveq.w	r8, #27
 8002060:	271d      	movne	r7, #29
 8002062:	271a      	moveq	r7, #26
 8002064:	bf14      	ite	ne
 8002066:	261c      	movne	r6, #28
 8002068:	2619      	moveq	r6, #25
 800206a:	464d      	mov	r5, r9
 800206c:	f04f 0a01 	mov.w	sl, #1
 8002070:	e01c      	b.n	80020ac <d_cv_qualifiers+0x68>
 8002072:	2b56      	cmp	r3, #86	; 0x56
 8002074:	d03f      	beq.n	80020f6 <d_cv_qualifiers+0xb2>
 8002076:	2b4b      	cmp	r3, #75	; 0x4b
 8002078:	d043      	beq.n	8002102 <d_cv_qualifiers+0xbe>
 800207a:	784b      	ldrb	r3, [r1, #1]
 800207c:	2b00      	cmp	r3, #0
 800207e:	d035      	beq.n	80020ec <d_cv_qualifiers+0xa8>
 8002080:	1c8b      	adds	r3, r1, #2
 8002082:	60e3      	str	r3, [r4, #12]
 8002084:	784b      	ldrb	r3, [r1, #1]
 8002086:	2b78      	cmp	r3, #120	; 0x78
 8002088:	d041      	beq.n	800210e <d_cv_qualifiers+0xca>
 800208a:	2b6f      	cmp	r3, #111	; 0x6f
 800208c:	d145      	bne.n	800211a <d_cv_qualifiers+0xd6>
 800208e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002090:	3309      	adds	r3, #9
 8002092:	6323      	str	r3, [r4, #48]	; 0x30
 8002094:	214e      	movs	r1, #78	; 0x4e
 8002096:	2300      	movs	r3, #0
 8002098:	2200      	movs	r2, #0
 800209a:	4620      	mov	r0, r4
 800209c:	f7fe f8a0 	bl	80001e0 <d_make_comp>
 80020a0:	6028      	str	r0, [r5, #0]
 80020a2:	b318      	cbz	r0, 80020ec <d_cv_qualifiers+0xa8>
 80020a4:	68e1      	ldr	r1, [r4, #12]
 80020a6:	780b      	ldrb	r3, [r1, #0]
 80020a8:	f100 0508 	add.w	r5, r0, #8
 80020ac:	2b72      	cmp	r3, #114	; 0x72
 80020ae:	d00d      	beq.n	80020cc <d_cv_qualifiers+0x88>
 80020b0:	2b56      	cmp	r3, #86	; 0x56
 80020b2:	d00b      	beq.n	80020cc <d_cv_qualifiers+0x88>
 80020b4:	2b4b      	cmp	r3, #75	; 0x4b
 80020b6:	d009      	beq.n	80020cc <d_cv_qualifiers+0x88>
 80020b8:	2b44      	cmp	r3, #68	; 0x44
 80020ba:	d146      	bne.n	800214a <d_cv_qualifiers+0x106>
 80020bc:	784a      	ldrb	r2, [r1, #1]
 80020be:	f002 00df 	and.w	r0, r2, #223	; 0xdf
 80020c2:	284f      	cmp	r0, #79	; 0x4f
 80020c4:	d002      	beq.n	80020cc <d_cv_qualifiers+0x88>
 80020c6:	3a77      	subs	r2, #119	; 0x77
 80020c8:	2a01      	cmp	r2, #1
 80020ca:	d83e      	bhi.n	800214a <d_cv_qualifiers+0x106>
 80020cc:	1c4a      	adds	r2, r1, #1
 80020ce:	2b72      	cmp	r3, #114	; 0x72
 80020d0:	60e2      	str	r2, [r4, #12]
 80020d2:	d1ce      	bne.n	8002072 <d_cv_qualifiers+0x2e>
 80020d4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80020d6:	3309      	adds	r3, #9
 80020d8:	6323      	str	r3, [r4, #48]	; 0x30
 80020da:	4631      	mov	r1, r6
 80020dc:	2300      	movs	r3, #0
 80020de:	2200      	movs	r2, #0
 80020e0:	4620      	mov	r0, r4
 80020e2:	f7fe f87d 	bl	80001e0 <d_make_comp>
 80020e6:	6028      	str	r0, [r5, #0]
 80020e8:	2800      	cmp	r0, #0
 80020ea:	d1db      	bne.n	80020a4 <d_cv_qualifiers+0x60>
 80020ec:	2500      	movs	r5, #0
 80020ee:	4628      	mov	r0, r5
 80020f0:	b003      	add	sp, #12
 80020f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80020f6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80020f8:	3309      	adds	r3, #9
 80020fa:	6323      	str	r3, [r4, #48]	; 0x30
 80020fc:	4639      	mov	r1, r7
 80020fe:	2300      	movs	r3, #0
 8002100:	e7ca      	b.n	8002098 <d_cv_qualifiers+0x54>
 8002102:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002104:	3306      	adds	r3, #6
 8002106:	6323      	str	r3, [r4, #48]	; 0x30
 8002108:	4641      	mov	r1, r8
 800210a:	2300      	movs	r3, #0
 800210c:	e7c4      	b.n	8002098 <d_cv_qualifiers+0x54>
 800210e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002110:	3311      	adds	r3, #17
 8002112:	6323      	str	r3, [r4, #48]	; 0x30
 8002114:	214c      	movs	r1, #76	; 0x4c
 8002116:	2300      	movs	r3, #0
 8002118:	e7be      	b.n	8002098 <d_cv_qualifiers+0x54>
 800211a:	2b4f      	cmp	r3, #79	; 0x4f
 800211c:	d132      	bne.n	8002184 <d_cv_qualifiers+0x140>
 800211e:	e9d4 3b0c 	ldrd	r3, fp, [r4, #48]	; 0x30
 8002122:	3309      	adds	r3, #9
 8002124:	6323      	str	r3, [r4, #48]	; 0x30
 8002126:	f8c4 a034 	str.w	sl, [r4, #52]	; 0x34
 800212a:	4620      	mov	r0, r4
 800212c:	f7fe feae 	bl	8000e8c <d_expression_1>
 8002130:	f8c4 b034 	str.w	fp, [r4, #52]	; 0x34
 8002134:	4603      	mov	r3, r0
 8002136:	2800      	cmp	r0, #0
 8002138:	d0d8      	beq.n	80020ec <d_cv_qualifiers+0xa8>
 800213a:	68e2      	ldr	r2, [r4, #12]
 800213c:	7811      	ldrb	r1, [r2, #0]
 800213e:	2945      	cmp	r1, #69	; 0x45
 8002140:	d1d4      	bne.n	80020ec <d_cv_qualifiers+0xa8>
 8002142:	3201      	adds	r2, #1
 8002144:	60e2      	str	r2, [r4, #12]
 8002146:	214e      	movs	r1, #78	; 0x4e
 8002148:	e7a6      	b.n	8002098 <d_cv_qualifiers+0x54>
 800214a:	9a01      	ldr	r2, [sp, #4]
 800214c:	2a00      	cmp	r2, #0
 800214e:	d1ce      	bne.n	80020ee <d_cv_qualifiers+0xaa>
 8002150:	2b46      	cmp	r3, #70	; 0x46
 8002152:	d1cc      	bne.n	80020ee <d_cv_qualifiers+0xaa>
 8002154:	454d      	cmp	r5, r9
 8002156:	d0ca      	beq.n	80020ee <d_cv_qualifiers+0xaa>
 8002158:	241d      	movs	r4, #29
 800215a:	201e      	movs	r0, #30
 800215c:	211c      	movs	r1, #28
 800215e:	e008      	b.n	8002172 <d_cv_qualifiers+0x12e>
 8002160:	2a1b      	cmp	r2, #27
 8002162:	d00d      	beq.n	8002180 <d_cv_qualifiers+0x13c>
 8002164:	2a19      	cmp	r2, #25
 8002166:	d100      	bne.n	800216a <d_cv_qualifiers+0x126>
 8002168:	7019      	strb	r1, [r3, #0]
 800216a:	f103 0908 	add.w	r9, r3, #8
 800216e:	454d      	cmp	r5, r9
 8002170:	d0bd      	beq.n	80020ee <d_cv_qualifiers+0xaa>
 8002172:	f8d9 3000 	ldr.w	r3, [r9]
 8002176:	781a      	ldrb	r2, [r3, #0]
 8002178:	2a1a      	cmp	r2, #26
 800217a:	d1f1      	bne.n	8002160 <d_cv_qualifiers+0x11c>
 800217c:	701c      	strb	r4, [r3, #0]
 800217e:	e7f4      	b.n	800216a <d_cv_qualifiers+0x126>
 8002180:	7018      	strb	r0, [r3, #0]
 8002182:	e7f2      	b.n	800216a <d_cv_qualifiers+0x126>
 8002184:	2b77      	cmp	r3, #119	; 0x77
 8002186:	d1b1      	bne.n	80020ec <d_cv_qualifiers+0xa8>
 8002188:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800218a:	3306      	adds	r3, #6
 800218c:	6323      	str	r3, [r4, #48]	; 0x30
 800218e:	4620      	mov	r0, r4
 8002190:	f7ff ff16 	bl	8001fc0 <d_parmlist>
 8002194:	4603      	mov	r3, r0
 8002196:	2800      	cmp	r0, #0
 8002198:	d0a8      	beq.n	80020ec <d_cv_qualifiers+0xa8>
 800219a:	68e2      	ldr	r2, [r4, #12]
 800219c:	7811      	ldrb	r1, [r2, #0]
 800219e:	2945      	cmp	r1, #69	; 0x45
 80021a0:	d1a4      	bne.n	80020ec <d_cv_qualifiers+0xa8>
 80021a2:	3201      	adds	r2, #1
 80021a4:	60e2      	str	r2, [r4, #12]
 80021a6:	214f      	movs	r1, #79	; 0x4f
 80021a8:	e776      	b.n	8002098 <d_cv_qualifiers+0x54>
 80021aa:	bf00      	nop

080021ac <d_bare_function_type>:
 80021ac:	b570      	push	{r4, r5, r6, lr}
 80021ae:	68c3      	ldr	r3, [r0, #12]
 80021b0:	781a      	ldrb	r2, [r3, #0]
 80021b2:	2a4a      	cmp	r2, #74	; 0x4a
 80021b4:	4604      	mov	r4, r0
 80021b6:	d013      	beq.n	80021e0 <d_bare_function_type+0x34>
 80021b8:	b181      	cbz	r1, 80021dc <d_bare_function_type+0x30>
 80021ba:	4620      	mov	r0, r4
 80021bc:	f7ff fa90 	bl	80016e0 <d_type>
 80021c0:	4605      	mov	r5, r0
 80021c2:	b180      	cbz	r0, 80021e6 <d_bare_function_type+0x3a>
 80021c4:	4620      	mov	r0, r4
 80021c6:	f7ff fefb 	bl	8001fc0 <d_parmlist>
 80021ca:	b160      	cbz	r0, 80021e6 <d_bare_function_type+0x3a>
 80021cc:	4603      	mov	r3, r0
 80021ce:	462a      	mov	r2, r5
 80021d0:	4620      	mov	r0, r4
 80021d2:	2129      	movs	r1, #41	; 0x29
 80021d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80021d8:	f7fe b802 	b.w	80001e0 <d_make_comp>
 80021dc:	460d      	mov	r5, r1
 80021de:	e7f1      	b.n	80021c4 <d_bare_function_type+0x18>
 80021e0:	3301      	adds	r3, #1
 80021e2:	60c3      	str	r3, [r0, #12]
 80021e4:	e7e9      	b.n	80021ba <d_bare_function_type+0xe>
 80021e6:	2000      	movs	r0, #0
 80021e8:	bd70      	pop	{r4, r5, r6, pc}
 80021ea:	bf00      	nop

080021ec <d_function_type>:
 80021ec:	68c3      	ldr	r3, [r0, #12]
 80021ee:	781a      	ldrb	r2, [r3, #0]
 80021f0:	2a46      	cmp	r2, #70	; 0x46
 80021f2:	d118      	bne.n	8002226 <d_function_type+0x3a>
 80021f4:	b510      	push	{r4, lr}
 80021f6:	1c5a      	adds	r2, r3, #1
 80021f8:	60c2      	str	r2, [r0, #12]
 80021fa:	785a      	ldrb	r2, [r3, #1]
 80021fc:	2a59      	cmp	r2, #89	; 0x59
 80021fe:	bf04      	itt	eq
 8002200:	3302      	addeq	r3, #2
 8002202:	60c3      	streq	r3, [r0, #12]
 8002204:	2101      	movs	r1, #1
 8002206:	4604      	mov	r4, r0
 8002208:	f7ff ffd0 	bl	80021ac <d_bare_function_type>
 800220c:	4601      	mov	r1, r0
 800220e:	4620      	mov	r0, r4
 8002210:	f7fe f82e 	bl	8000270 <d_ref_qualifier>
 8002214:	68e3      	ldr	r3, [r4, #12]
 8002216:	781a      	ldrb	r2, [r3, #0]
 8002218:	2a45      	cmp	r2, #69	; 0x45
 800221a:	d102      	bne.n	8002222 <d_function_type+0x36>
 800221c:	3301      	adds	r3, #1
 800221e:	60e3      	str	r3, [r4, #12]
 8002220:	bd10      	pop	{r4, pc}
 8002222:	2000      	movs	r0, #0
 8002224:	bd10      	pop	{r4, pc}
 8002226:	2000      	movs	r0, #0
 8002228:	4770      	bx	lr
 800222a:	bf00      	nop

0800222c <d_unqualified_name>:
 800222c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002230:	68c1      	ldr	r1, [r0, #12]
 8002232:	780b      	ldrb	r3, [r1, #0]
 8002234:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 8002238:	2a09      	cmp	r2, #9
 800223a:	4604      	mov	r4, r0
 800223c:	d93c      	bls.n	80022b8 <d_unqualified_name+0x8c>
 800223e:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8002242:	2a19      	cmp	r2, #25
 8002244:	d922      	bls.n	800228c <d_unqualified_name+0x60>
 8002246:	f1a3 0243 	sub.w	r2, r3, #67	; 0x43
 800224a:	2a01      	cmp	r2, #1
 800224c:	d969      	bls.n	8002322 <d_unqualified_name+0xf6>
 800224e:	2b4c      	cmp	r3, #76	; 0x4c
 8002250:	d056      	beq.n	8002300 <d_unqualified_name+0xd4>
 8002252:	2b55      	cmp	r3, #85	; 0x55
 8002254:	d15f      	bne.n	8002316 <d_unqualified_name+0xea>
 8002256:	784b      	ldrb	r3, [r1, #1]
 8002258:	2b6c      	cmp	r3, #108	; 0x6c
 800225a:	f000 80e5 	beq.w	8002428 <d_unqualified_name+0x1fc>
 800225e:	2b74      	cmp	r3, #116	; 0x74
 8002260:	d159      	bne.n	8002316 <d_unqualified_name+0xea>
 8002262:	1c4b      	adds	r3, r1, #1
 8002264:	60c3      	str	r3, [r0, #12]
 8002266:	784b      	ldrb	r3, [r1, #1]
 8002268:	2b74      	cmp	r3, #116	; 0x74
 800226a:	d158      	bne.n	800231e <d_unqualified_name+0xf2>
 800226c:	3102      	adds	r1, #2
 800226e:	60c1      	str	r1, [r0, #12]
 8002270:	f7fe f8f4 	bl	800045c <d_compact_number>
 8002274:	2800      	cmp	r0, #0
 8002276:	f2c0 8155 	blt.w	8002524 <d_unqualified_name+0x2f8>
 800227a:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 800227e:	4293      	cmp	r3, r2
 8002280:	68e7      	ldr	r7, [r4, #12]
 8002282:	f2c0 80f3 	blt.w	800246c <d_unqualified_name+0x240>
 8002286:	783b      	ldrb	r3, [r7, #0]
 8002288:	2500      	movs	r5, #0
 800228a:	e010      	b.n	80022ae <d_unqualified_name+0x82>
 800228c:	2b6f      	cmp	r3, #111	; 0x6f
 800228e:	d104      	bne.n	800229a <d_unqualified_name+0x6e>
 8002290:	784b      	ldrb	r3, [r1, #1]
 8002292:	2b6e      	cmp	r3, #110	; 0x6e
 8002294:	bf04      	itt	eq
 8002296:	3102      	addeq	r1, #2
 8002298:	60c1      	streq	r1, [r0, #12]
 800229a:	4620      	mov	r0, r4
 800229c:	f7ff fe1a 	bl	8001ed4 <d_operator_name>
 80022a0:	4605      	mov	r5, r0
 80022a2:	b110      	cbz	r0, 80022aa <d_unqualified_name+0x7e>
 80022a4:	7803      	ldrb	r3, [r0, #0]
 80022a6:	2b31      	cmp	r3, #49	; 0x31
 80022a8:	d013      	beq.n	80022d2 <d_unqualified_name+0xa6>
 80022aa:	68e3      	ldr	r3, [r4, #12]
 80022ac:	781b      	ldrb	r3, [r3, #0]
 80022ae:	2b42      	cmp	r3, #66	; 0x42
 80022b0:	d009      	beq.n	80022c6 <d_unqualified_name+0x9a>
 80022b2:	4628      	mov	r0, r5
 80022b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80022b8:	f7fe f90c 	bl	80004d4 <d_source_name>
 80022bc:	68e3      	ldr	r3, [r4, #12]
 80022be:	781b      	ldrb	r3, [r3, #0]
 80022c0:	2b42      	cmp	r3, #66	; 0x42
 80022c2:	4605      	mov	r5, r0
 80022c4:	d1f5      	bne.n	80022b2 <d_unqualified_name+0x86>
 80022c6:	4629      	mov	r1, r5
 80022c8:	4620      	mov	r0, r4
 80022ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80022ce:	f7fe b95b 	b.w	8000588 <d_abi_tags>
 80022d2:	6882      	ldr	r2, [r0, #8]
 80022d4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80022d6:	6896      	ldr	r6, [r2, #8]
 80022d8:	6810      	ldr	r0, [r2, #0]
 80022da:	49a1      	ldr	r1, [pc, #644]	; (8002560 <d_unqualified_name+0x334>)
 80022dc:	3307      	adds	r3, #7
 80022de:	4433      	add	r3, r6
 80022e0:	6323      	str	r3, [r4, #48]	; 0x30
 80022e2:	f004 fd3d 	bl	8006d60 <strcmp>
 80022e6:	2800      	cmp	r0, #0
 80022e8:	d1df      	bne.n	80022aa <d_unqualified_name+0x7e>
 80022ea:	4620      	mov	r0, r4
 80022ec:	f7fe f8f2 	bl	80004d4 <d_source_name>
 80022f0:	462a      	mov	r2, r5
 80022f2:	4603      	mov	r3, r0
 80022f4:	2136      	movs	r1, #54	; 0x36
 80022f6:	4620      	mov	r0, r4
 80022f8:	f7fd ff72 	bl	80001e0 <d_make_comp>
 80022fc:	4605      	mov	r5, r0
 80022fe:	e7d4      	b.n	80022aa <d_unqualified_name+0x7e>
 8002300:	3101      	adds	r1, #1
 8002302:	60c1      	str	r1, [r0, #12]
 8002304:	f7fe f8e6 	bl	80004d4 <d_source_name>
 8002308:	4605      	mov	r5, r0
 800230a:	b120      	cbz	r0, 8002316 <d_unqualified_name+0xea>
 800230c:	4620      	mov	r0, r4
 800230e:	f7fe fa0f 	bl	8000730 <d_discriminator>
 8002312:	2800      	cmp	r0, #0
 8002314:	d1c9      	bne.n	80022aa <d_unqualified_name+0x7e>
 8002316:	2500      	movs	r5, #0
 8002318:	4628      	mov	r0, r5
 800231a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800231e:	2500      	movs	r5, #0
 8002320:	e7c5      	b.n	80022ae <d_unqualified_name+0x82>
 8002322:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8002324:	b132      	cbz	r2, 8002334 <d_unqualified_name+0x108>
 8002326:	7810      	ldrb	r0, [r2, #0]
 8002328:	b9e0      	cbnz	r0, 8002364 <d_unqualified_name+0x138>
 800232a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800232c:	68d0      	ldr	r0, [r2, #12]
 800232e:	4403      	add	r3, r0
 8002330:	6323      	str	r3, [r4, #48]	; 0x30
 8002332:	780b      	ldrb	r3, [r1, #0]
 8002334:	2b43      	cmp	r3, #67	; 0x43
 8002336:	d018      	beq.n	800236a <d_unqualified_name+0x13e>
 8002338:	2b44      	cmp	r3, #68	; 0x44
 800233a:	d1f0      	bne.n	800231e <d_unqualified_name+0xf2>
 800233c:	784b      	ldrb	r3, [r1, #1]
 800233e:	3b30      	subs	r3, #48	; 0x30
 8002340:	2b05      	cmp	r3, #5
 8002342:	d8e8      	bhi.n	8002316 <d_unqualified_name+0xea>
 8002344:	a001      	add	r0, pc, #4	; (adr r0, 800234c <d_unqualified_name+0x120>)
 8002346:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 800234a:	bf00      	nop
 800234c:	080023bd 	.word	0x080023bd
 8002350:	08002387 	.word	0x08002387
 8002354:	080023cf 	.word	0x080023cf
 8002358:	08002317 	.word	0x08002317
 800235c:	080023c9 	.word	0x080023c9
 8002360:	080023c3 	.word	0x080023c3
 8002364:	2818      	cmp	r0, #24
 8002366:	d1e5      	bne.n	8002334 <d_unqualified_name+0x108>
 8002368:	e7df      	b.n	800232a <d_unqualified_name+0xfe>
 800236a:	784b      	ldrb	r3, [r1, #1]
 800236c:	2b49      	cmp	r3, #73	; 0x49
 800236e:	f000 80b0 	beq.w	80024d2 <d_unqualified_name+0x2a6>
 8002372:	3b31      	subs	r3, #49	; 0x31
 8002374:	2b04      	cmp	r3, #4
 8002376:	d8ce      	bhi.n	8002316 <d_unqualified_name+0xea>
 8002378:	e8df f013 	tbh	[pc, r3, lsl #1]
 800237c:	005100ed 	.word	0x005100ed
 8002380:	0047004c 	.word	0x0047004c
 8002384:	002c      	.short	0x002c
 8002386:	f04f 0c02 	mov.w	ip, #2
 800238a:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800238e:	1c8d      	adds	r5, r1, #2
 8002390:	4283      	cmp	r3, r0
 8002392:	60e5      	str	r5, [r4, #12]
 8002394:	f280 80d0 	bge.w	8002538 <d_unqualified_name+0x30c>
 8002398:	6926      	ldr	r6, [r4, #16]
 800239a:	0118      	lsls	r0, r3, #4
 800239c:	1835      	adds	r5, r6, r0
 800239e:	3301      	adds	r3, #1
 80023a0:	2700      	movs	r7, #0
 80023a2:	606f      	str	r7, [r5, #4]
 80023a4:	6163      	str	r3, [r4, #20]
 80023a6:	2a00      	cmp	r2, #0
 80023a8:	f000 80cf 	beq.w	800254a <d_unqualified_name+0x31e>
 80023ac:	2308      	movs	r3, #8
 80023ae:	606f      	str	r7, [r5, #4]
 80023b0:	5433      	strb	r3, [r6, r0]
 80023b2:	f885 c008 	strb.w	ip, [r5, #8]
 80023b6:	60ea      	str	r2, [r5, #12]
 80023b8:	788b      	ldrb	r3, [r1, #2]
 80023ba:	e778      	b.n	80022ae <d_unqualified_name+0x82>
 80023bc:	f04f 0c01 	mov.w	ip, #1
 80023c0:	e7e3      	b.n	800238a <d_unqualified_name+0x15e>
 80023c2:	f04f 0c05 	mov.w	ip, #5
 80023c6:	e7e0      	b.n	800238a <d_unqualified_name+0x15e>
 80023c8:	f04f 0c04 	mov.w	ip, #4
 80023cc:	e7dd      	b.n	800238a <d_unqualified_name+0x15e>
 80023ce:	f04f 0c03 	mov.w	ip, #3
 80023d2:	e7da      	b.n	800238a <d_unqualified_name+0x15e>
 80023d4:	3102      	adds	r1, #2
 80023d6:	60e1      	str	r1, [r4, #12]
 80023d8:	f04f 0805 	mov.w	r8, #5
 80023dc:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80023e0:	4283      	cmp	r3, r0
 80023e2:	f280 80ac 	bge.w	800253e <d_unqualified_name+0x312>
 80023e6:	6926      	ldr	r6, [r4, #16]
 80023e8:	0118      	lsls	r0, r3, #4
 80023ea:	1835      	adds	r5, r6, r0
 80023ec:	3301      	adds	r3, #1
 80023ee:	2700      	movs	r7, #0
 80023f0:	606f      	str	r7, [r5, #4]
 80023f2:	6163      	str	r3, [r4, #20]
 80023f4:	2a00      	cmp	r2, #0
 80023f6:	f000 80ab 	beq.w	8002550 <d_unqualified_name+0x324>
 80023fa:	2307      	movs	r3, #7
 80023fc:	606f      	str	r7, [r5, #4]
 80023fe:	5433      	strb	r3, [r6, r0]
 8002400:	f885 8008 	strb.w	r8, [r5, #8]
 8002404:	60ea      	str	r2, [r5, #12]
 8002406:	780b      	ldrb	r3, [r1, #0]
 8002408:	e751      	b.n	80022ae <d_unqualified_name+0x82>
 800240a:	3102      	adds	r1, #2
 800240c:	60e1      	str	r1, [r4, #12]
 800240e:	f04f 0804 	mov.w	r8, #4
 8002412:	e7e3      	b.n	80023dc <d_unqualified_name+0x1b0>
 8002414:	3102      	adds	r1, #2
 8002416:	60e1      	str	r1, [r4, #12]
 8002418:	f04f 0803 	mov.w	r8, #3
 800241c:	e7de      	b.n	80023dc <d_unqualified_name+0x1b0>
 800241e:	3102      	adds	r1, #2
 8002420:	60e1      	str	r1, [r4, #12]
 8002422:	f04f 0802 	mov.w	r8, #2
 8002426:	e7d9      	b.n	80023dc <d_unqualified_name+0x1b0>
 8002428:	1c4b      	adds	r3, r1, #1
 800242a:	60c3      	str	r3, [r0, #12]
 800242c:	784b      	ldrb	r3, [r1, #1]
 800242e:	2b6c      	cmp	r3, #108	; 0x6c
 8002430:	f47f af75 	bne.w	800231e <d_unqualified_name+0xf2>
 8002434:	3102      	adds	r1, #2
 8002436:	60c1      	str	r1, [r0, #12]
 8002438:	f7ff fdc2 	bl	8001fc0 <d_parmlist>
 800243c:	4606      	mov	r6, r0
 800243e:	2800      	cmp	r0, #0
 8002440:	d070      	beq.n	8002524 <d_unqualified_name+0x2f8>
 8002442:	68e2      	ldr	r2, [r4, #12]
 8002444:	7813      	ldrb	r3, [r2, #0]
 8002446:	2b45      	cmp	r3, #69	; 0x45
 8002448:	f47f af69 	bne.w	800231e <d_unqualified_name+0xf2>
 800244c:	3201      	adds	r2, #1
 800244e:	60e2      	str	r2, [r4, #12]
 8002450:	4620      	mov	r0, r4
 8002452:	f7fe f803 	bl	800045c <d_compact_number>
 8002456:	f1b0 0e00 	subs.w	lr, r0, #0
 800245a:	db63      	blt.n	8002524 <d_unqualified_name+0x2f8>
 800245c:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
 8002460:	4293      	cmp	r3, r2
 8002462:	68e0      	ldr	r0, [r4, #12]
 8002464:	db1b      	blt.n	800249e <d_unqualified_name+0x272>
 8002466:	7803      	ldrb	r3, [r0, #0]
 8002468:	2500      	movs	r5, #0
 800246a:	e720      	b.n	80022ae <d_unqualified_name+0x82>
 800246c:	6926      	ldr	r6, [r4, #16]
 800246e:	6a22      	ldr	r2, [r4, #32]
 8002470:	f8d4 e024 	ldr.w	lr, [r4, #36]	; 0x24
 8002474:	0119      	lsls	r1, r3, #4
 8002476:	1875      	adds	r5, r6, r1
 8002478:	3301      	adds	r3, #1
 800247a:	f04f 0c00 	mov.w	ip, #0
 800247e:	f8c5 c004 	str.w	ip, [r5, #4]
 8002482:	4572      	cmp	r2, lr
 8002484:	6163      	str	r3, [r4, #20]
 8002486:	f04f 0347 	mov.w	r3, #71	; 0x47
 800248a:	5473      	strb	r3, [r6, r1]
 800248c:	60a8      	str	r0, [r5, #8]
 800248e:	da4d      	bge.n	800252c <d_unqualified_name+0x300>
 8002490:	69e3      	ldr	r3, [r4, #28]
 8002492:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8002496:	3201      	adds	r2, #1
 8002498:	6222      	str	r2, [r4, #32]
 800249a:	783b      	ldrb	r3, [r7, #0]
 800249c:	e707      	b.n	80022ae <d_unqualified_name+0x82>
 800249e:	6927      	ldr	r7, [r4, #16]
 80024a0:	6a22      	ldr	r2, [r4, #32]
 80024a2:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
 80024a6:	0119      	lsls	r1, r3, #4
 80024a8:	187d      	adds	r5, r7, r1
 80024aa:	3301      	adds	r3, #1
 80024ac:	f04f 0c00 	mov.w	ip, #0
 80024b0:	f8c5 c004 	str.w	ip, [r5, #4]
 80024b4:	4542      	cmp	r2, r8
 80024b6:	6163      	str	r3, [r4, #20]
 80024b8:	f04f 0345 	mov.w	r3, #69	; 0x45
 80024bc:	547b      	strb	r3, [r7, r1]
 80024be:	e9c5 6e02 	strd	r6, lr, [r5, #8]
 80024c2:	da36      	bge.n	8002532 <d_unqualified_name+0x306>
 80024c4:	69e3      	ldr	r3, [r4, #28]
 80024c6:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 80024ca:	3201      	adds	r2, #1
 80024cc:	6222      	str	r2, [r4, #32]
 80024ce:	7803      	ldrb	r3, [r0, #0]
 80024d0:	e6ed      	b.n	80022ae <d_unqualified_name+0x82>
 80024d2:	1c4b      	adds	r3, r1, #1
 80024d4:	60e3      	str	r3, [r4, #12]
 80024d6:	788b      	ldrb	r3, [r1, #2]
 80024d8:	3b31      	subs	r3, #49	; 0x31
 80024da:	2b04      	cmp	r3, #4
 80024dc:	d832      	bhi.n	8002544 <d_unqualified_name+0x318>
 80024de:	e8df f003 	tbb	[pc, r3]
 80024e2:	1c03      	.short	0x1c03
 80024e4:	1217      	.short	0x1217
 80024e6:	0d          	.byte	0x0d
 80024e7:	00          	.byte	0x00
 80024e8:	3103      	adds	r1, #3
 80024ea:	60e1      	str	r1, [r4, #12]
 80024ec:	f04f 0801 	mov.w	r8, #1
 80024f0:	4620      	mov	r0, r4
 80024f2:	f7ff f8f5 	bl	80016e0 <d_type>
 80024f6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80024f8:	68e1      	ldr	r1, [r4, #12]
 80024fa:	e76f      	b.n	80023dc <d_unqualified_name+0x1b0>
 80024fc:	3103      	adds	r1, #3
 80024fe:	60e1      	str	r1, [r4, #12]
 8002500:	f04f 0805 	mov.w	r8, #5
 8002504:	e7f4      	b.n	80024f0 <d_unqualified_name+0x2c4>
 8002506:	3103      	adds	r1, #3
 8002508:	60e1      	str	r1, [r4, #12]
 800250a:	f04f 0804 	mov.w	r8, #4
 800250e:	e7ef      	b.n	80024f0 <d_unqualified_name+0x2c4>
 8002510:	3103      	adds	r1, #3
 8002512:	60e1      	str	r1, [r4, #12]
 8002514:	f04f 0803 	mov.w	r8, #3
 8002518:	e7ea      	b.n	80024f0 <d_unqualified_name+0x2c4>
 800251a:	3103      	adds	r1, #3
 800251c:	60e1      	str	r1, [r4, #12]
 800251e:	f04f 0802 	mov.w	r8, #2
 8002522:	e7e5      	b.n	80024f0 <d_unqualified_name+0x2c4>
 8002524:	68e3      	ldr	r3, [r4, #12]
 8002526:	2500      	movs	r5, #0
 8002528:	781b      	ldrb	r3, [r3, #0]
 800252a:	e6c0      	b.n	80022ae <d_unqualified_name+0x82>
 800252c:	783b      	ldrb	r3, [r7, #0]
 800252e:	4665      	mov	r5, ip
 8002530:	e6bd      	b.n	80022ae <d_unqualified_name+0x82>
 8002532:	7803      	ldrb	r3, [r0, #0]
 8002534:	4665      	mov	r5, ip
 8002536:	e6ba      	b.n	80022ae <d_unqualified_name+0x82>
 8002538:	788b      	ldrb	r3, [r1, #2]
 800253a:	2500      	movs	r5, #0
 800253c:	e6b7      	b.n	80022ae <d_unqualified_name+0x82>
 800253e:	780b      	ldrb	r3, [r1, #0]
 8002540:	2500      	movs	r5, #0
 8002542:	e6b4      	b.n	80022ae <d_unqualified_name+0x82>
 8002544:	784b      	ldrb	r3, [r1, #1]
 8002546:	2500      	movs	r5, #0
 8002548:	e6b1      	b.n	80022ae <d_unqualified_name+0x82>
 800254a:	788b      	ldrb	r3, [r1, #2]
 800254c:	4615      	mov	r5, r2
 800254e:	e6ae      	b.n	80022ae <d_unqualified_name+0x82>
 8002550:	780b      	ldrb	r3, [r1, #0]
 8002552:	4615      	mov	r5, r2
 8002554:	e6ab      	b.n	80022ae <d_unqualified_name+0x82>
 8002556:	3102      	adds	r1, #2
 8002558:	60e1      	str	r1, [r4, #12]
 800255a:	f04f 0801 	mov.w	r8, #1
 800255e:	e73d      	b.n	80023dc <d_unqualified_name+0x1b0>
 8002560:	08011dcc 	.word	0x08011dcc

08002564 <d_encoding>:
 8002564:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002568:	68c3      	ldr	r3, [r0, #12]
 800256a:	781a      	ldrb	r2, [r3, #0]
 800256c:	2a47      	cmp	r2, #71	; 0x47
 800256e:	4604      	mov	r4, r0
 8002570:	d019      	beq.n	80025a6 <d_encoding+0x42>
 8002572:	2a54      	cmp	r2, #84	; 0x54
 8002574:	d017      	beq.n	80025a6 <d_encoding+0x42>
 8002576:	460e      	mov	r6, r1
 8002578:	f7fe ff06 	bl	8001388 <d_name>
 800257c:	4605      	mov	r5, r0
 800257e:	2800      	cmp	r0, #0
 8002580:	d07d      	beq.n	800267e <d_encoding+0x11a>
 8002582:	2e00      	cmp	r6, #0
 8002584:	d057      	beq.n	8002636 <d_encoding+0xd2>
 8002586:	68a3      	ldr	r3, [r4, #8]
 8002588:	07db      	lsls	r3, r3, #31
 800258a:	d454      	bmi.n	8002636 <d_encoding+0xd2>
 800258c:	e000      	b.n	8002590 <d_encoding+0x2c>
 800258e:	68ad      	ldr	r5, [r5, #8]
 8002590:	782b      	ldrb	r3, [r5, #0]
 8002592:	f1a3 021c 	sub.w	r2, r3, #28
 8002596:	2a04      	cmp	r2, #4
 8002598:	d9f9      	bls.n	800258e <d_encoding+0x2a>
 800259a:	2b02      	cmp	r3, #2
 800259c:	f000 8186 	beq.w	80028ac <d_encoding+0x348>
 80025a0:	4628      	mov	r0, r5
 80025a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80025a6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80025a8:	f101 0214 	add.w	r2, r1, #20
 80025ac:	6322      	str	r2, [r4, #48]	; 0x30
 80025ae:	781a      	ldrb	r2, [r3, #0]
 80025b0:	2a54      	cmp	r2, #84	; 0x54
 80025b2:	d068      	beq.n	8002686 <d_encoding+0x122>
 80025b4:	2a47      	cmp	r2, #71	; 0x47
 80025b6:	d162      	bne.n	800267e <d_encoding+0x11a>
 80025b8:	1c5a      	adds	r2, r3, #1
 80025ba:	60e2      	str	r2, [r4, #12]
 80025bc:	785a      	ldrb	r2, [r3, #1]
 80025be:	2a00      	cmp	r2, #0
 80025c0:	d05d      	beq.n	800267e <d_encoding+0x11a>
 80025c2:	1c9a      	adds	r2, r3, #2
 80025c4:	60e2      	str	r2, [r4, #12]
 80025c6:	785a      	ldrb	r2, [r3, #1]
 80025c8:	3a41      	subs	r2, #65	; 0x41
 80025ca:	2a31      	cmp	r2, #49	; 0x31
 80025cc:	d857      	bhi.n	800267e <d_encoding+0x11a>
 80025ce:	e8df f012 	tbh	[pc, r2, lsl #1]
 80025d2:	013e      	.short	0x013e
 80025d4:	00560056 	.word	0x00560056
 80025d8:	00560056 	.word	0x00560056
 80025dc:	00560056 	.word	0x00560056
 80025e0:	00560056 	.word	0x00560056
 80025e4:	00560056 	.word	0x00560056
 80025e8:	00560056 	.word	0x00560056
 80025ec:	00560056 	.word	0x00560056
 80025f0:	00560056 	.word	0x00560056
 80025f4:	0056014a 	.word	0x0056014a
 80025f8:	00560159 	.word	0x00560159
 80025fc:	005600e0 	.word	0x005600e0
 8002600:	00560056 	.word	0x00560056
 8002604:	00560056 	.word	0x00560056
 8002608:	00560056 	.word	0x00560056
 800260c:	00560056 	.word	0x00560056
 8002610:	00560056 	.word	0x00560056
 8002614:	00560056 	.word	0x00560056
 8002618:	00560056 	.word	0x00560056
 800261c:	00560056 	.word	0x00560056
 8002620:	00560056 	.word	0x00560056
 8002624:	00560056 	.word	0x00560056
 8002628:	00560056 	.word	0x00560056
 800262c:	00560056 	.word	0x00560056
 8002630:	00560056 	.word	0x00560056
 8002634:	00eb      	.short	0x00eb
 8002636:	68e3      	ldr	r3, [r4, #12]
 8002638:	781b      	ldrb	r3, [r3, #0]
 800263a:	2b00      	cmp	r3, #0
 800263c:	d0b0      	beq.n	80025a0 <d_encoding+0x3c>
 800263e:	2b45      	cmp	r3, #69	; 0x45
 8002640:	d0ae      	beq.n	80025a0 <d_encoding+0x3c>
 8002642:	4629      	mov	r1, r5
 8002644:	780b      	ldrb	r3, [r1, #0]
 8002646:	2b20      	cmp	r3, #32
 8002648:	f200 8218 	bhi.w	8002a7c <d_encoding+0x518>
 800264c:	2b1c      	cmp	r3, #28
 800264e:	f080 821e 	bcs.w	8002a8e <d_encoding+0x52a>
 8002652:	2b04      	cmp	r3, #4
 8002654:	f040 8091 	bne.w	800277a <d_encoding+0x216>
 8002658:	688a      	ldr	r2, [r1, #8]
 800265a:	b16a      	cbz	r2, 8002678 <d_encoding+0x114>
 800265c:	7813      	ldrb	r3, [r2, #0]
 800265e:	2b08      	cmp	r3, #8
 8002660:	f103 31ff 	add.w	r1, r3, #4294967295
 8002664:	f200 8086 	bhi.w	8002774 <d_encoding+0x210>
 8002668:	2b07      	cmp	r3, #7
 800266a:	f080 8086 	bcs.w	800277a <d_encoding+0x216>
 800266e:	2901      	cmp	r1, #1
 8002670:	d802      	bhi.n	8002678 <d_encoding+0x114>
 8002672:	68d2      	ldr	r2, [r2, #12]
 8002674:	2a00      	cmp	r2, #0
 8002676:	d1f1      	bne.n	800265c <d_encoding+0xf8>
 8002678:	2101      	movs	r1, #1
 800267a:	e07f      	b.n	800277c <d_encoding+0x218>
 800267c:	60e7      	str	r7, [r4, #12]
 800267e:	2500      	movs	r5, #0
 8002680:	4628      	mov	r0, r5
 8002682:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002686:	1c5a      	adds	r2, r3, #1
 8002688:	60e2      	str	r2, [r4, #12]
 800268a:	785a      	ldrb	r2, [r3, #1]
 800268c:	2a00      	cmp	r2, #0
 800268e:	d0f6      	beq.n	800267e <d_encoding+0x11a>
 8002690:	1c9a      	adds	r2, r3, #2
 8002692:	60e2      	str	r2, [r4, #12]
 8002694:	785b      	ldrb	r3, [r3, #1]
 8002696:	3b43      	subs	r3, #67	; 0x43
 8002698:	2b33      	cmp	r3, #51	; 0x33
 800269a:	d8f0      	bhi.n	800267e <d_encoding+0x11a>
 800269c:	a201      	add	r2, pc, #4	; (adr r2, 80026a4 <d_encoding+0x140>)
 800269e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80026a2:	bf00      	nop
 80026a4:	080029f9 	.word	0x080029f9
 80026a8:	0800267f 	.word	0x0800267f
 80026ac:	0800267f 	.word	0x0800267f
 80026b0:	080029e3 	.word	0x080029e3
 80026b4:	0800267f 	.word	0x0800267f
 80026b8:	080029cd 	.word	0x080029cd
 80026bc:	080029b7 	.word	0x080029b7
 80026c0:	080029a1 	.word	0x080029a1
 80026c4:	0800267f 	.word	0x0800267f
 80026c8:	0800267f 	.word	0x0800267f
 80026cc:	0800267f 	.word	0x0800267f
 80026d0:	0800267f 	.word	0x0800267f
 80026d4:	0800267f 	.word	0x0800267f
 80026d8:	0800267f 	.word	0x0800267f
 80026dc:	0800267f 	.word	0x0800267f
 80026e0:	0800267f 	.word	0x0800267f
 80026e4:	0800298b 	.word	0x0800298b
 80026e8:	08002971 	.word	0x08002971
 80026ec:	0800267f 	.word	0x0800267f
 80026f0:	08002957 	.word	0x08002957
 80026f4:	08002941 	.word	0x08002941
 80026f8:	0800267f 	.word	0x0800267f
 80026fc:	0800267f 	.word	0x0800267f
 8002700:	0800267f 	.word	0x0800267f
 8002704:	0800267f 	.word	0x0800267f
 8002708:	0800267f 	.word	0x0800267f
 800270c:	0800267f 	.word	0x0800267f
 8002710:	0800267f 	.word	0x0800267f
 8002714:	0800267f 	.word	0x0800267f
 8002718:	0800267f 	.word	0x0800267f
 800271c:	0800267f 	.word	0x0800267f
 8002720:	0800267f 	.word	0x0800267f
 8002724:	0800290d 	.word	0x0800290d
 8002728:	0800267f 	.word	0x0800267f
 800272c:	0800267f 	.word	0x0800267f
 8002730:	0800267f 	.word	0x0800267f
 8002734:	0800267f 	.word	0x0800267f
 8002738:	080028e7 	.word	0x080028e7
 800273c:	0800267f 	.word	0x0800267f
 8002740:	0800267f 	.word	0x0800267f
 8002744:	0800267f 	.word	0x0800267f
 8002748:	0800267f 	.word	0x0800267f
 800274c:	0800267f 	.word	0x0800267f
 8002750:	0800267f 	.word	0x0800267f
 8002754:	0800267f 	.word	0x0800267f
 8002758:	0800267f 	.word	0x0800267f
 800275c:	0800267f 	.word	0x0800267f
 8002760:	0800267f 	.word	0x0800267f
 8002764:	0800267f 	.word	0x0800267f
 8002768:	0800267f 	.word	0x0800267f
 800276c:	0800267f 	.word	0x0800267f
 8002770:	080028c1 	.word	0x080028c1
 8002774:	2b34      	cmp	r3, #52	; 0x34
 8002776:	f47f af7f 	bne.w	8002678 <d_encoding+0x114>
 800277a:	2100      	movs	r1, #0
 800277c:	4620      	mov	r0, r4
 800277e:	f7ff fd15 	bl	80021ac <d_bare_function_type>
 8002782:	462a      	mov	r2, r5
 8002784:	4603      	mov	r3, r0
 8002786:	2103      	movs	r1, #3
 8002788:	4620      	mov	r0, r4
 800278a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800278e:	f7fd bd27 	b.w	80001e0 <d_make_comp>
 8002792:	4620      	mov	r0, r4
 8002794:	f7fe fdf8 	bl	8001388 <d_name>
 8002798:	2300      	movs	r3, #0
 800279a:	4602      	mov	r2, r0
 800279c:	2113      	movs	r1, #19
 800279e:	4620      	mov	r0, r4
 80027a0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80027a4:	f7fd bd1c 	b.w	80001e0 <d_make_comp>
 80027a8:	f104 000c 	add.w	r0, r4, #12
 80027ac:	f7fd fe12 	bl	80003d4 <d_number.isra.1>
 80027b0:	2801      	cmp	r0, #1
 80027b2:	f77f af64 	ble.w	800267e <d_encoding+0x11a>
 80027b6:	68e3      	ldr	r3, [r4, #12]
 80027b8:	781a      	ldrb	r2, [r3, #0]
 80027ba:	2a00      	cmp	r2, #0
 80027bc:	f43f af5f 	beq.w	800267e <d_encoding+0x11a>
 80027c0:	1c5f      	adds	r7, r3, #1
 80027c2:	60e7      	str	r7, [r4, #12]
 80027c4:	781b      	ldrb	r3, [r3, #0]
 80027c6:	2b5f      	cmp	r3, #95	; 0x5f
 80027c8:	f47f af59 	bne.w	800267e <d_encoding+0x11a>
 80027cc:	2200      	movs	r2, #0
 80027ce:	1e45      	subs	r5, r0, #1
 80027d0:	4690      	mov	r8, r2
 80027d2:	f04f 0940 	mov.w	r9, #64	; 0x40
 80027d6:	783b      	ldrb	r3, [r7, #0]
 80027d8:	2b00      	cmp	r3, #0
 80027da:	f43f af50 	beq.w	800267e <d_encoding+0x11a>
 80027de:	2b24      	cmp	r3, #36	; 0x24
 80027e0:	f040 812a 	bne.w	8002a38 <d_encoding+0x4d4>
 80027e4:	787b      	ldrb	r3, [r7, #1]
 80027e6:	2b53      	cmp	r3, #83	; 0x53
 80027e8:	f000 8156 	beq.w	8002a98 <d_encoding+0x534>
 80027ec:	2b5f      	cmp	r3, #95	; 0x5f
 80027ee:	f000 8155 	beq.w	8002a9c <d_encoding+0x538>
 80027f2:	2b24      	cmp	r3, #36	; 0x24
 80027f4:	f47f af43 	bne.w	800267e <d_encoding+0x11a>
 80027f8:	4619      	mov	r1, r3
 80027fa:	e9d4 0305 	ldrd	r0, r3, [r4, #20]
 80027fe:	68e7      	ldr	r7, [r4, #12]
 8002800:	4298      	cmp	r0, r3
 8002802:	f107 0702 	add.w	r7, r7, #2
 8002806:	f6bf af39 	bge.w	800267c <d_encoding+0x118>
 800280a:	f8d4 c010 	ldr.w	ip, [r4, #16]
 800280e:	0106      	lsls	r6, r0, #4
 8002810:	eb0c 0306 	add.w	r3, ip, r6
 8002814:	3001      	adds	r0, #1
 8002816:	f8c3 8004 	str.w	r8, [r3, #4]
 800281a:	3d02      	subs	r5, #2
 800281c:	6160      	str	r0, [r4, #20]
 800281e:	f80c 9006 	strb.w	r9, [ip, r6]
 8002822:	6099      	str	r1, [r3, #8]
 8002824:	60e7      	str	r7, [r4, #12]
 8002826:	2a00      	cmp	r2, #0
 8002828:	f000 8126 	beq.w	8002a78 <d_encoding+0x514>
 800282c:	213f      	movs	r1, #63	; 0x3f
 800282e:	4620      	mov	r0, r4
 8002830:	f7fd fcd6 	bl	80001e0 <d_make_comp>
 8002834:	4602      	mov	r2, r0
 8002836:	2800      	cmp	r0, #0
 8002838:	f43f af21 	beq.w	800267e <d_encoding+0x11a>
 800283c:	2d00      	cmp	r5, #0
 800283e:	dcca      	bgt.n	80027d6 <d_encoding+0x272>
 8002840:	4620      	mov	r0, r4
 8002842:	2300      	movs	r3, #0
 8002844:	213e      	movs	r1, #62	; 0x3e
 8002846:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800284a:	f7fd bcc9 	b.w	80001e0 <d_make_comp>
 800284e:	2100      	movs	r1, #0
 8002850:	4620      	mov	r0, r4
 8002852:	f7ff fe87 	bl	8002564 <d_encoding>
 8002856:	2300      	movs	r3, #0
 8002858:	4602      	mov	r2, r0
 800285a:	2117      	movs	r1, #23
 800285c:	4620      	mov	r0, r4
 800285e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002862:	f7fd bcbd 	b.w	80001e0 <d_make_comp>
 8002866:	4620      	mov	r0, r4
 8002868:	f7fe fd8e 	bl	8001388 <d_name>
 800286c:	4605      	mov	r5, r0
 800286e:	4620      	mov	r0, r4
 8002870:	f7fd fddc 	bl	800042c <d_number_component>
 8002874:	462a      	mov	r2, r5
 8002876:	4603      	mov	r3, r0
 8002878:	2116      	movs	r1, #22
 800287a:	4620      	mov	r0, r4
 800287c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002880:	f7fd bcae 	b.w	80001e0 <d_make_comp>
 8002884:	789a      	ldrb	r2, [r3, #2]
 8002886:	2100      	movs	r1, #0
 8002888:	4620      	mov	r0, r4
 800288a:	b12a      	cbz	r2, 8002898 <d_encoding+0x334>
 800288c:	1cda      	adds	r2, r3, #3
 800288e:	60e2      	str	r2, [r4, #12]
 8002890:	789b      	ldrb	r3, [r3, #2]
 8002892:	2b6e      	cmp	r3, #110	; 0x6e
 8002894:	f000 8109 	beq.w	8002aaa <d_encoding+0x546>
 8002898:	f7ff fe64 	bl	8002564 <d_encoding>
 800289c:	2300      	movs	r3, #0
 800289e:	4602      	mov	r2, r0
 80028a0:	2148      	movs	r1, #72	; 0x48
 80028a2:	4620      	mov	r0, r4
 80028a4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80028a8:	f7fd bc9a 	b.w	80001e0 <d_make_comp>
 80028ac:	68ea      	ldr	r2, [r5, #12]
 80028ae:	e000      	b.n	80028b2 <d_encoding+0x34e>
 80028b0:	6892      	ldr	r2, [r2, #8]
 80028b2:	7810      	ldrb	r0, [r2, #0]
 80028b4:	f7fd fd80 	bl	80003b8 <is_fnqual_component_type>
 80028b8:	2800      	cmp	r0, #0
 80028ba:	d1f9      	bne.n	80028b0 <d_encoding+0x34c>
 80028bc:	60ea      	str	r2, [r5, #12]
 80028be:	e66f      	b.n	80025a0 <d_encoding+0x3c>
 80028c0:	2176      	movs	r1, #118	; 0x76
 80028c2:	4620      	mov	r0, r4
 80028c4:	f7fe f80a 	bl	80008dc <d_call_offset>
 80028c8:	2800      	cmp	r0, #0
 80028ca:	f43f aed8 	beq.w	800267e <d_encoding+0x11a>
 80028ce:	2100      	movs	r1, #0
 80028d0:	4620      	mov	r0, r4
 80028d2:	f7ff fe47 	bl	8002564 <d_encoding>
 80028d6:	2300      	movs	r3, #0
 80028d8:	4602      	mov	r2, r0
 80028da:	2110      	movs	r1, #16
 80028dc:	4620      	mov	r0, r4
 80028de:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80028e2:	f7fd bc7d 	b.w	80001e0 <d_make_comp>
 80028e6:	2168      	movs	r1, #104	; 0x68
 80028e8:	4620      	mov	r0, r4
 80028ea:	f7fd fff7 	bl	80008dc <d_call_offset>
 80028ee:	2800      	cmp	r0, #0
 80028f0:	f43f aec5 	beq.w	800267e <d_encoding+0x11a>
 80028f4:	2100      	movs	r1, #0
 80028f6:	4620      	mov	r0, r4
 80028f8:	f7ff fe34 	bl	8002564 <d_encoding>
 80028fc:	2300      	movs	r3, #0
 80028fe:	4602      	mov	r2, r0
 8002900:	210f      	movs	r1, #15
 8002902:	4620      	mov	r0, r4
 8002904:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002908:	f7fd bc6a 	b.w	80001e0 <d_make_comp>
 800290c:	2100      	movs	r1, #0
 800290e:	4620      	mov	r0, r4
 8002910:	f7fd ffe4 	bl	80008dc <d_call_offset>
 8002914:	2800      	cmp	r0, #0
 8002916:	f43f aeb2 	beq.w	800267e <d_encoding+0x11a>
 800291a:	2100      	movs	r1, #0
 800291c:	4620      	mov	r0, r4
 800291e:	f7fd ffdd 	bl	80008dc <d_call_offset>
 8002922:	2800      	cmp	r0, #0
 8002924:	f43f aeab 	beq.w	800267e <d_encoding+0x11a>
 8002928:	2100      	movs	r1, #0
 800292a:	4620      	mov	r0, r4
 800292c:	f7ff fe1a 	bl	8002564 <d_encoding>
 8002930:	2300      	movs	r3, #0
 8002932:	4602      	mov	r2, r0
 8002934:	2111      	movs	r1, #17
 8002936:	4620      	mov	r0, r4
 8002938:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800293c:	f7fd bc50 	b.w	80001e0 <d_make_comp>
 8002940:	4620      	mov	r0, r4
 8002942:	f7fe fd21 	bl	8001388 <d_name>
 8002946:	2300      	movs	r3, #0
 8002948:	4602      	mov	r2, r0
 800294a:	2115      	movs	r1, #21
 800294c:	4620      	mov	r0, r4
 800294e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002952:	f7fd bc45 	b.w	80001e0 <d_make_comp>
 8002956:	310f      	adds	r1, #15
 8002958:	6321      	str	r1, [r4, #48]	; 0x30
 800295a:	4620      	mov	r0, r4
 800295c:	f7fe fec0 	bl	80016e0 <d_type>
 8002960:	2300      	movs	r3, #0
 8002962:	4602      	mov	r2, r0
 8002964:	2109      	movs	r1, #9
 8002966:	4620      	mov	r0, r4
 8002968:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800296c:	f7fd bc38 	b.w	80001e0 <d_make_comp>
 8002970:	310a      	adds	r1, #10
 8002972:	6321      	str	r1, [r4, #48]	; 0x30
 8002974:	4620      	mov	r0, r4
 8002976:	f7fe feb3 	bl	80016e0 <d_type>
 800297a:	2300      	movs	r3, #0
 800297c:	4602      	mov	r2, r0
 800297e:	210a      	movs	r1, #10
 8002980:	4620      	mov	r0, r4
 8002982:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002986:	f7fd bc2b 	b.w	80001e0 <d_make_comp>
 800298a:	4620      	mov	r0, r4
 800298c:	f7fe fea8 	bl	80016e0 <d_type>
 8002990:	2300      	movs	r3, #0
 8002992:	4602      	mov	r2, r0
 8002994:	210d      	movs	r1, #13
 8002996:	4620      	mov	r0, r4
 8002998:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800299c:	f7fd bc20 	b.w	80001e0 <d_make_comp>
 80029a0:	4620      	mov	r0, r4
 80029a2:	f7fe fe9d 	bl	80016e0 <d_type>
 80029a6:	2300      	movs	r3, #0
 80029a8:	4602      	mov	r2, r0
 80029aa:	2112      	movs	r1, #18
 80029ac:	4620      	mov	r0, r4
 80029ae:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80029b2:	f7fd bc15 	b.w	80001e0 <d_make_comp>
 80029b6:	4620      	mov	r0, r4
 80029b8:	f7fe fe92 	bl	80016e0 <d_type>
 80029bc:	2300      	movs	r3, #0
 80029be:	4602      	mov	r2, r0
 80029c0:	210c      	movs	r1, #12
 80029c2:	4620      	mov	r0, r4
 80029c4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80029c8:	f7fd bc0a 	b.w	80001e0 <d_make_comp>
 80029cc:	4620      	mov	r0, r4
 80029ce:	f7fe fcdb 	bl	8001388 <d_name>
 80029d2:	2300      	movs	r3, #0
 80029d4:	4602      	mov	r2, r0
 80029d6:	2114      	movs	r1, #20
 80029d8:	4620      	mov	r0, r4
 80029da:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80029de:	f7fd bbff 	b.w	80001e0 <d_make_comp>
 80029e2:	4620      	mov	r0, r4
 80029e4:	f7fe fe7c 	bl	80016e0 <d_type>
 80029e8:	2300      	movs	r3, #0
 80029ea:	4602      	mov	r2, r0
 80029ec:	210e      	movs	r1, #14
 80029ee:	4620      	mov	r0, r4
 80029f0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80029f4:	f7fd bbf4 	b.w	80001e0 <d_make_comp>
 80029f8:	4620      	mov	r0, r4
 80029fa:	f7fe fe71 	bl	80016e0 <d_type>
 80029fe:	4605      	mov	r5, r0
 8002a00:	f104 000c 	add.w	r0, r4, #12
 8002a04:	f7fd fce6 	bl	80003d4 <d_number.isra.1>
 8002a08:	2800      	cmp	r0, #0
 8002a0a:	f6ff ae38 	blt.w	800267e <d_encoding+0x11a>
 8002a0e:	68e3      	ldr	r3, [r4, #12]
 8002a10:	781a      	ldrb	r2, [r3, #0]
 8002a12:	2a5f      	cmp	r2, #95	; 0x5f
 8002a14:	f47f ae33 	bne.w	800267e <d_encoding+0x11a>
 8002a18:	3301      	adds	r3, #1
 8002a1a:	60e3      	str	r3, [r4, #12]
 8002a1c:	4620      	mov	r0, r4
 8002a1e:	f7fe fe5f 	bl	80016e0 <d_type>
 8002a22:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002a24:	1d59      	adds	r1, r3, #5
 8002a26:	6321      	str	r1, [r4, #48]	; 0x30
 8002a28:	4602      	mov	r2, r0
 8002a2a:	462b      	mov	r3, r5
 8002a2c:	4620      	mov	r0, r4
 8002a2e:	210b      	movs	r1, #11
 8002a30:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002a34:	f7fd bbd4 	b.w	80001e0 <d_make_comp>
 8002a38:	463e      	mov	r6, r7
 8002a3a:	2100      	movs	r1, #0
 8002a3c:	e004      	b.n	8002a48 <d_encoding+0x4e4>
 8002a3e:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 8002a42:	b123      	cbz	r3, 8002a4e <d_encoding+0x4ea>
 8002a44:	2b24      	cmp	r3, #36	; 0x24
 8002a46:	d002      	beq.n	8002a4e <d_encoding+0x4ea>
 8002a48:	3101      	adds	r1, #1
 8002a4a:	42a9      	cmp	r1, r5
 8002a4c:	dbf7      	blt.n	8002a3e <d_encoding+0x4da>
 8002a4e:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8002a52:	4283      	cmp	r3, r0
 8002a54:	da24      	bge.n	8002aa0 <d_encoding+0x53c>
 8002a56:	e9d4 c603 	ldrd	ip, r6, [r4, #12]
 8002a5a:	0118      	lsls	r0, r3, #4
 8002a5c:	3301      	adds	r3, #1
 8002a5e:	6163      	str	r3, [r4, #20]
 8002a60:	1833      	adds	r3, r6, r0
 8002a62:	1a6d      	subs	r5, r5, r1
 8002a64:	f8c3 8004 	str.w	r8, [r3, #4]
 8002a68:	f806 8000 	strb.w	r8, [r6, r0]
 8002a6c:	609f      	str	r7, [r3, #8]
 8002a6e:	eb0c 0701 	add.w	r7, ip, r1
 8002a72:	60d9      	str	r1, [r3, #12]
 8002a74:	60e7      	str	r7, [r4, #12]
 8002a76:	e6d6      	b.n	8002826 <d_encoding+0x2c2>
 8002a78:	461a      	mov	r2, r3
 8002a7a:	e6df      	b.n	800283c <d_encoding+0x2d8>
 8002a7c:	2b4c      	cmp	r3, #76	; 0x4c
 8002a7e:	f1a3 024e 	sub.w	r2, r3, #78	; 0x4e
 8002a82:	d004      	beq.n	8002a8e <d_encoding+0x52a>
 8002a84:	f4ff ae79 	bcc.w	800277a <d_encoding+0x216>
 8002a88:	2a01      	cmp	r2, #1
 8002a8a:	f63f ae76 	bhi.w	800277a <d_encoding+0x216>
 8002a8e:	6889      	ldr	r1, [r1, #8]
 8002a90:	2900      	cmp	r1, #0
 8002a92:	f47f add7 	bne.w	8002644 <d_encoding+0xe0>
 8002a96:	e671      	b.n	800277c <d_encoding+0x218>
 8002a98:	212f      	movs	r1, #47	; 0x2f
 8002a9a:	e6ae      	b.n	80027fa <d_encoding+0x296>
 8002a9c:	212e      	movs	r1, #46	; 0x2e
 8002a9e:	e6ac      	b.n	80027fa <d_encoding+0x296>
 8002aa0:	68e3      	ldr	r3, [r4, #12]
 8002aa2:	440b      	add	r3, r1
 8002aa4:	60e3      	str	r3, [r4, #12]
 8002aa6:	2500      	movs	r5, #0
 8002aa8:	e57a      	b.n	80025a0 <d_encoding+0x3c>
 8002aaa:	f7ff fd5b 	bl	8002564 <d_encoding>
 8002aae:	2300      	movs	r3, #0
 8002ab0:	4602      	mov	r2, r0
 8002ab2:	2149      	movs	r1, #73	; 0x49
 8002ab4:	4620      	mov	r0, r4
 8002ab6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002aba:	f7fd bb91 	b.w	80001e0 <d_make_comp>
 8002abe:	bf00      	nop

08002ac0 <d_expr_primary>:
 8002ac0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002ac2:	68c2      	ldr	r2, [r0, #12]
 8002ac4:	7813      	ldrb	r3, [r2, #0]
 8002ac6:	2b4c      	cmp	r3, #76	; 0x4c
 8002ac8:	d144      	bne.n	8002b54 <d_expr_primary+0x94>
 8002aca:	1c53      	adds	r3, r2, #1
 8002acc:	60c3      	str	r3, [r0, #12]
 8002ace:	7851      	ldrb	r1, [r2, #1]
 8002ad0:	295f      	cmp	r1, #95	; 0x5f
 8002ad2:	4604      	mov	r4, r0
 8002ad4:	d040      	beq.n	8002b58 <d_expr_primary+0x98>
 8002ad6:	295a      	cmp	r1, #90	; 0x5a
 8002ad8:	d10c      	bne.n	8002af4 <d_expr_primary+0x34>
 8002ada:	3301      	adds	r3, #1
 8002adc:	60e3      	str	r3, [r4, #12]
 8002ade:	2100      	movs	r1, #0
 8002ae0:	4620      	mov	r0, r4
 8002ae2:	f7ff fd3f 	bl	8002564 <d_encoding>
 8002ae6:	68e3      	ldr	r3, [r4, #12]
 8002ae8:	781a      	ldrb	r2, [r3, #0]
 8002aea:	2a45      	cmp	r2, #69	; 0x45
 8002aec:	d132      	bne.n	8002b54 <d_expr_primary+0x94>
 8002aee:	3301      	adds	r3, #1
 8002af0:	60e3      	str	r3, [r4, #12]
 8002af2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002af4:	f7fe fdf4 	bl	80016e0 <d_type>
 8002af8:	b360      	cbz	r0, 8002b54 <d_expr_primary+0x94>
 8002afa:	7803      	ldrb	r3, [r0, #0]
 8002afc:	2b27      	cmp	r3, #39	; 0x27
 8002afe:	d032      	beq.n	8002b66 <d_expr_primary+0xa6>
 8002b00:	68e6      	ldr	r6, [r4, #12]
 8002b02:	7833      	ldrb	r3, [r6, #0]
 8002b04:	2b6e      	cmp	r3, #110	; 0x6e
 8002b06:	d037      	beq.n	8002b78 <d_expr_primary+0xb8>
 8002b08:	213c      	movs	r1, #60	; 0x3c
 8002b0a:	2b45      	cmp	r3, #69	; 0x45
 8002b0c:	d040      	beq.n	8002b90 <d_expr_primary+0xd0>
 8002b0e:	b30b      	cbz	r3, 8002b54 <d_expr_primary+0x94>
 8002b10:	4633      	mov	r3, r6
 8002b12:	e000      	b.n	8002b16 <d_expr_primary+0x56>
 8002b14:	b1f5      	cbz	r5, 8002b54 <d_expr_primary+0x94>
 8002b16:	3301      	adds	r3, #1
 8002b18:	60e3      	str	r3, [r4, #12]
 8002b1a:	781d      	ldrb	r5, [r3, #0]
 8002b1c:	2d45      	cmp	r5, #69	; 0x45
 8002b1e:	d1f9      	bne.n	8002b14 <d_expr_primary+0x54>
 8002b20:	1b9d      	subs	r5, r3, r6
 8002b22:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 8002b26:	429a      	cmp	r2, r3
 8002b28:	da0b      	bge.n	8002b42 <d_expr_primary+0x82>
 8002b2a:	f8d4 e010 	ldr.w	lr, [r4, #16]
 8002b2e:	ea4f 1c02 	mov.w	ip, r2, lsl #4
 8002b32:	eb0e 030c 	add.w	r3, lr, ip
 8002b36:	3201      	adds	r2, #1
 8002b38:	2700      	movs	r7, #0
 8002b3a:	605f      	str	r7, [r3, #4]
 8002b3c:	6162      	str	r2, [r4, #20]
 8002b3e:	b106      	cbz	r6, 8002b42 <d_expr_primary+0x82>
 8002b40:	bb05      	cbnz	r5, 8002b84 <d_expr_primary+0xc4>
 8002b42:	2300      	movs	r3, #0
 8002b44:	4602      	mov	r2, r0
 8002b46:	4620      	mov	r0, r4
 8002b48:	f7fd fb4a 	bl	80001e0 <d_make_comp>
 8002b4c:	68e3      	ldr	r3, [r4, #12]
 8002b4e:	781a      	ldrb	r2, [r3, #0]
 8002b50:	2a45      	cmp	r2, #69	; 0x45
 8002b52:	d0cc      	beq.n	8002aee <d_expr_primary+0x2e>
 8002b54:	2000      	movs	r0, #0
 8002b56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002b58:	1c93      	adds	r3, r2, #2
 8002b5a:	60c3      	str	r3, [r0, #12]
 8002b5c:	7892      	ldrb	r2, [r2, #2]
 8002b5e:	2a5a      	cmp	r2, #90	; 0x5a
 8002b60:	d0bb      	beq.n	8002ada <d_expr_primary+0x1a>
 8002b62:	2000      	movs	r0, #0
 8002b64:	e7c1      	b.n	8002aea <d_expr_primary+0x2a>
 8002b66:	6883      	ldr	r3, [r0, #8]
 8002b68:	7c1a      	ldrb	r2, [r3, #16]
 8002b6a:	2a00      	cmp	r2, #0
 8002b6c:	d0c8      	beq.n	8002b00 <d_expr_primary+0x40>
 8002b6e:	685a      	ldr	r2, [r3, #4]
 8002b70:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002b72:	1a9b      	subs	r3, r3, r2
 8002b74:	6323      	str	r3, [r4, #48]	; 0x30
 8002b76:	e7c3      	b.n	8002b00 <d_expr_primary+0x40>
 8002b78:	1c72      	adds	r2, r6, #1
 8002b7a:	60e2      	str	r2, [r4, #12]
 8002b7c:	7873      	ldrb	r3, [r6, #1]
 8002b7e:	213d      	movs	r1, #61	; 0x3d
 8002b80:	4616      	mov	r6, r2
 8002b82:	e7c2      	b.n	8002b0a <d_expr_primary+0x4a>
 8002b84:	605f      	str	r7, [r3, #4]
 8002b86:	f80e 700c 	strb.w	r7, [lr, ip]
 8002b8a:	e9c3 6502 	strd	r6, r5, [r3, #8]
 8002b8e:	e7d9      	b.n	8002b44 <d_expr_primary+0x84>
 8002b90:	2500      	movs	r5, #0
 8002b92:	e7c6      	b.n	8002b22 <d_expr_primary+0x62>

08002b94 <d_print_comp>:
 8002b94:	b112      	cbz	r2, 8002b9c <d_print_comp+0x8>
 8002b96:	6853      	ldr	r3, [r2, #4]
 8002b98:	2b01      	cmp	r3, #1
 8002b9a:	dd03      	ble.n	8002ba4 <d_print_comp+0x10>
 8002b9c:	2301      	movs	r3, #1
 8002b9e:	f8c0 3118 	str.w	r3, [r0, #280]	; 0x118
 8002ba2:	4770      	bx	lr
 8002ba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ba8:	4615      	mov	r5, r2
 8002baa:	1c5a      	adds	r2, r3, #1
 8002bac:	606a      	str	r2, [r5, #4]
 8002bae:	b099      	sub	sp, #100	; 0x64
 8002bb0:	f8d0 7118 	ldr.w	r7, [r0, #280]	; 0x118
 8002bb4:	9504      	str	r5, [sp, #16]
 8002bb6:	460e      	mov	r6, r1
 8002bb8:	ab04      	add	r3, sp, #16
 8002bba:	f8d0 1128 	ldr.w	r1, [r0, #296]	; 0x128
 8002bbe:	9105      	str	r1, [sp, #20]
 8002bc0:	4604      	mov	r4, r0
 8002bc2:	f8c0 3128 	str.w	r3, [r0, #296]	; 0x128
 8002bc6:	2f00      	cmp	r7, #0
 8002bc8:	f040 80d7 	bne.w	8002d7a <d_print_comp+0x1e6>
 8002bcc:	7828      	ldrb	r0, [r5, #0]
 8002bce:	284f      	cmp	r0, #79	; 0x4f
 8002bd0:	f201 82ef 	bhi.w	80041b2 <d_print_comp+0x161e>
 8002bd4:	e8df f010 	tbh	[pc, r0, lsl #1]
 8002bd8:	0ab80a87 	.word	0x0ab80a87
 8002bdc:	0a4f0ab8 	.word	0x0a4f0ab8
 8002be0:	079407c6 	.word	0x079407c6
 8002be4:	075e0767 	.word	0x075e0767
 8002be8:	070f0737 	.word	0x070f0737
 8002bec:	06bf06e7 	.word	0x06bf06e7
 8002bf0:	066f0697 	.word	0x066f0697
 8002bf4:	061f0647 	.word	0x061f0647
 8002bf8:	091f0947 	.word	0x091f0947
 8002bfc:	08cf08f7 	.word	0x08cf08f7
 8002c00:	087f08a7 	.word	0x087f08a7
 8002c04:	082f0857 	.word	0x082f0857
 8002c08:	09bf09d6 	.word	0x09bf09d6
 8002c0c:	09bf09bf 	.word	0x09bf09bf
 8002c10:	09990999 	.word	0x09990999
 8002c14:	09990999 	.word	0x09990999
 8002c18:	09990999 	.word	0x09990999
 8002c1c:	096f0999 	.word	0x096f0999
 8002c20:	0999096f 	.word	0x0999096f
 8002c24:	0a1d0999 	.word	0x0a1d0999
 8002c28:	06060a14 	.word	0x06060a14
 8002c2c:	05720592 	.word	0x05720592
 8002c30:	0572051b 	.word	0x0572051b
 8002c34:	04d304d3 	.word	0x04d304d3
 8002c38:	045c0488 	.word	0x045c0488
 8002c3c:	0aed0434 	.word	0x0aed0434
 8002c40:	0404040c 	.word	0x0404040c
 8002c44:	039c03b0 	.word	0x039c03b0
 8002c48:	038d0397 	.word	0x038d0397
 8002c4c:	03880388 	.word	0x03880388
 8002c50:	03330333 	.word	0x03330333
 8002c54:	02fe030b 	.word	0x02fe030b
 8002c58:	02aa02dc 	.word	0x02aa02dc
 8002c5c:	025a0282 	.word	0x025a0282
 8002c60:	01f80232 	.word	0x01f80232
 8002c64:	01d00aed 	.word	0x01d00aed
 8002c68:	015301a8 	.word	0x015301a8
 8002c6c:	017b0105 	.word	0x017b0105
 8002c70:	00d80999 	.word	0x00d80999
 8002c74:	09990999 	.word	0x09990999
 8002c78:	68aa      	ldr	r2, [r5, #8]
 8002c7a:	6893      	ldr	r3, [r2, #8]
 8002c7c:	681b      	ldr	r3, [r3, #0]
 8002c7e:	7859      	ldrb	r1, [r3, #1]
 8002c80:	2963      	cmp	r1, #99	; 0x63
 8002c82:	d109      	bne.n	8002c98 <d_print_comp+0x104>
 8002c84:	781b      	ldrb	r3, [r3, #0]
 8002c86:	f1a3 0163 	sub.w	r1, r3, #99	; 0x63
 8002c8a:	2901      	cmp	r1, #1
 8002c8c:	f242 8319 	bls.w	80052c2 <d_print_comp+0x272e>
 8002c90:	3b72      	subs	r3, #114	; 0x72
 8002c92:	2b01      	cmp	r3, #1
 8002c94:	f242 8315 	bls.w	80052c2 <d_print_comp+0x272e>
 8002c98:	f105 030c 	add.w	r3, r5, #12
 8002c9c:	4631      	mov	r1, r6
 8002c9e:	4620      	mov	r0, r4
 8002ca0:	f003 fcd2 	bl	8006648 <d_maybe_print_fold_expression.isra.20>
 8002ca4:	4680      	mov	r8, r0
 8002ca6:	2800      	cmp	r0, #0
 8002ca8:	f042 8400 	bne.w	80054ac <d_print_comp+0x2918>
 8002cac:	68ab      	ldr	r3, [r5, #8]
 8002cae:	781a      	ldrb	r2, [r3, #0]
 8002cb0:	2a31      	cmp	r2, #49	; 0x31
 8002cb2:	f002 8592 	beq.w	80057da <d_print_comp+0x2c46>
 8002cb6:	689b      	ldr	r3, [r3, #8]
 8002cb8:	49d7      	ldr	r1, [pc, #860]	; (8003018 <d_print_comp+0x484>)
 8002cba:	6818      	ldr	r0, [r3, #0]
 8002cbc:	f004 f850 	bl	8006d60 <strcmp>
 8002cc0:	68eb      	ldr	r3, [r5, #12]
 8002cc2:	689a      	ldr	r2, [r3, #8]
 8002cc4:	b918      	cbnz	r0, 8002cce <d_print_comp+0x13a>
 8002cc6:	7813      	ldrb	r3, [r2, #0]
 8002cc8:	2b03      	cmp	r3, #3
 8002cca:	f002 85d4 	beq.w	8005876 <d_print_comp+0x2ce2>
 8002cce:	4631      	mov	r1, r6
 8002cd0:	4620      	mov	r0, r4
 8002cd2:	f003 fc67 	bl	80065a4 <d_print_subexpr>
 8002cd6:	68af      	ldr	r7, [r5, #8]
 8002cd8:	49d0      	ldr	r1, [pc, #832]	; (800301c <d_print_comp+0x488>)
 8002cda:	68bb      	ldr	r3, [r7, #8]
 8002cdc:	f8d3 8000 	ldr.w	r8, [r3]
 8002ce0:	4640      	mov	r0, r8
 8002ce2:	f004 f83d 	bl	8006d60 <strcmp>
 8002ce6:	4681      	mov	r9, r0
 8002ce8:	2800      	cmp	r0, #0
 8002cea:	f042 83d0 	bne.w	800548e <d_print_comp+0x28fa>
 8002cee:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8002cf2:	2fff      	cmp	r7, #255	; 0xff
 8002cf4:	d110      	bne.n	8002d18 <d_print_comp+0x184>
 8002cf6:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 8002cfa:	4639      	mov	r1, r7
 8002cfc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002d00:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002d04:	4620      	mov	r0, r4
 8002d06:	4798      	blx	r3
 8002d08:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002d0c:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 8002d10:	3301      	adds	r3, #1
 8002d12:	464f      	mov	r7, r9
 8002d14:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002d18:	1c7a      	adds	r2, r7, #1
 8002d1a:	235b      	movs	r3, #91	; 0x5b
 8002d1c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002d20:	55e3      	strb	r3, [r4, r7]
 8002d22:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002d26:	68eb      	ldr	r3, [r5, #12]
 8002d28:	4631      	mov	r1, r6
 8002d2a:	68da      	ldr	r2, [r3, #12]
 8002d2c:	4620      	mov	r0, r4
 8002d2e:	f7ff ff31 	bl	8002b94 <d_print_comp>
 8002d32:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8002d36:	2fff      	cmp	r7, #255	; 0xff
 8002d38:	d111      	bne.n	8002d5e <d_print_comp+0x1ca>
 8002d3a:	2600      	movs	r6, #0
 8002d3c:	4639      	mov	r1, r7
 8002d3e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002d42:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8002d46:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002d4a:	4620      	mov	r0, r4
 8002d4c:	4798      	blx	r3
 8002d4e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002d52:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8002d56:	3301      	adds	r3, #1
 8002d58:	4637      	mov	r7, r6
 8002d5a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002d5e:	235d      	movs	r3, #93	; 0x5d
 8002d60:	1c7a      	adds	r2, r7, #1
 8002d62:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8002d66:	55e3      	strb	r3, [r4, r7]
 8002d68:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8002d6c:	68ab      	ldr	r3, [r5, #8]
 8002d6e:	781a      	ldrb	r2, [r3, #0]
 8002d70:	2a31      	cmp	r2, #49	; 0x31
 8002d72:	f002 83ad 	beq.w	80054d0 <d_print_comp+0x293c>
 8002d76:	9905      	ldr	r1, [sp, #20]
 8002d78:	686a      	ldr	r2, [r5, #4]
 8002d7a:	f8c4 1128 	str.w	r1, [r4, #296]	; 0x128
 8002d7e:	3a01      	subs	r2, #1
 8002d80:	606a      	str	r2, [r5, #4]
 8002d82:	b019      	add	sp, #100	; 0x64
 8002d84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002d88:	4fa5      	ldr	r7, [pc, #660]	; (8003020 <d_print_comp+0x48c>)
 8002d8a:	68aa      	ldr	r2, [r5, #8]
 8002d8c:	4631      	mov	r1, r6
 8002d8e:	4620      	mov	r0, r4
 8002d90:	f7ff ff00 	bl	8002b94 <d_print_comp>
 8002d94:	f107 0808 	add.w	r8, r7, #8
 8002d98:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002d9c:	f04f 0900 	mov.w	r9, #0
 8002da0:	e016      	b.n	8002dd0 <d_print_comp+0x23c>
 8002da2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002da6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002daa:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002dae:	4798      	blx	r3
 8002db0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002db4:	3301      	adds	r3, #1
 8002db6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002dba:	2200      	movs	r2, #0
 8002dbc:	2301      	movs	r3, #1
 8002dbe:	45b8      	cmp	r8, r7
 8002dc0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002dc4:	f804 a002 	strb.w	sl, [r4, r2]
 8002dc8:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8002dcc:	f001 82f9 	beq.w	80043c2 <d_print_comp+0x182e>
 8002dd0:	2bff      	cmp	r3, #255	; 0xff
 8002dd2:	4619      	mov	r1, r3
 8002dd4:	4620      	mov	r0, r4
 8002dd6:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8002dda:	d0e2      	beq.n	8002da2 <d_print_comp+0x20e>
 8002ddc:	461a      	mov	r2, r3
 8002dde:	3301      	adds	r3, #1
 8002de0:	e7ed      	b.n	8002dbe <d_print_comp+0x22a>
 8002de2:	68a9      	ldr	r1, [r5, #8]
 8002de4:	4620      	mov	r0, r4
 8002de6:	f7fd fcef 	bl	80007c8 <d_find_pack>
 8002dea:	2800      	cmp	r0, #0
 8002dec:	f002 81e1 	beq.w	80051b2 <d_print_comp+0x261e>
 8002df0:	2300      	movs	r3, #0
 8002df2:	7802      	ldrb	r2, [r0, #0]
 8002df4:	2a2f      	cmp	r2, #47	; 0x2f
 8002df6:	f041 85df 	bne.w	80049b8 <d_print_comp+0x1e24>
 8002dfa:	6882      	ldr	r2, [r0, #8]
 8002dfc:	2a00      	cmp	r2, #0
 8002dfe:	f001 85db 	beq.w	80049b8 <d_print_comp+0x1e24>
 8002e02:	68c0      	ldr	r0, [r0, #12]
 8002e04:	3301      	adds	r3, #1
 8002e06:	2800      	cmp	r0, #0
 8002e08:	d1f3      	bne.n	8002df2 <d_print_comp+0x25e>
 8002e0a:	4619      	mov	r1, r3
 8002e0c:	68ab      	ldr	r3, [r5, #8]
 8002e0e:	9301      	str	r3, [sp, #4]
 8002e10:	1e4a      	subs	r2, r1, #1
 8002e12:	9202      	str	r2, [sp, #8]
 8002e14:	f04f 0a00 	mov.w	sl, #0
 8002e18:	4689      	mov	r9, r1
 8002e1a:	9503      	str	r5, [sp, #12]
 8002e1c:	f8c4 7120 	str.w	r7, [r4, #288]	; 0x120
 8002e20:	9a01      	ldr	r2, [sp, #4]
 8002e22:	4631      	mov	r1, r6
 8002e24:	4620      	mov	r0, r4
 8002e26:	f7ff feb5 	bl	8002b94 <d_print_comp>
 8002e2a:	9b02      	ldr	r3, [sp, #8]
 8002e2c:	429f      	cmp	r7, r3
 8002e2e:	f281 81c6 	bge.w	80041be <d_print_comp+0x162a>
 8002e32:	4d7c      	ldr	r5, [pc, #496]	; (8003024 <d_print_comp+0x490>)
 8002e34:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002e38:	f105 0802 	add.w	r8, r5, #2
 8002e3c:	e016      	b.n	8002e6c <d_print_comp+0x2d8>
 8002e3e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002e42:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002e46:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8002e4a:	4798      	blx	r3
 8002e4c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002e50:	3301      	adds	r3, #1
 8002e52:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002e56:	2200      	movs	r2, #0
 8002e58:	2301      	movs	r3, #1
 8002e5a:	45a8      	cmp	r8, r5
 8002e5c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002e60:	f804 b002 	strb.w	fp, [r4, r2]
 8002e64:	f884 b104 	strb.w	fp, [r4, #260]	; 0x104
 8002e68:	f001 81a9 	beq.w	80041be <d_print_comp+0x162a>
 8002e6c:	2bff      	cmp	r3, #255	; 0xff
 8002e6e:	4619      	mov	r1, r3
 8002e70:	4620      	mov	r0, r4
 8002e72:	f815 bb01 	ldrb.w	fp, [r5], #1
 8002e76:	d0e2      	beq.n	8002e3e <d_print_comp+0x2aa>
 8002e78:	461a      	mov	r2, r3
 8002e7a:	3301      	adds	r3, #1
 8002e7c:	e7ed      	b.n	8002e5a <d_print_comp+0x2c6>
 8002e7e:	4f6a      	ldr	r7, [pc, #424]	; (8003028 <d_print_comp+0x494>)
 8002e80:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002e84:	f107 081a 	add.w	r8, r7, #26
 8002e88:	f04f 0900 	mov.w	r9, #0
 8002e8c:	e016      	b.n	8002ebc <d_print_comp+0x328>
 8002e8e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002e92:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002e96:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002e9a:	4798      	blx	r3
 8002e9c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002ea0:	3301      	adds	r3, #1
 8002ea2:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002ea6:	2200      	movs	r2, #0
 8002ea8:	2301      	movs	r3, #1
 8002eaa:	45b8      	cmp	r8, r7
 8002eac:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002eb0:	f804 a002 	strb.w	sl, [r4, r2]
 8002eb4:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8002eb8:	f001 82f1 	beq.w	800449e <d_print_comp+0x190a>
 8002ebc:	2bff      	cmp	r3, #255	; 0xff
 8002ebe:	4619      	mov	r1, r3
 8002ec0:	4620      	mov	r0, r4
 8002ec2:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8002ec6:	d0e2      	beq.n	8002e8e <d_print_comp+0x2fa>
 8002ec8:	461a      	mov	r2, r3
 8002eca:	3301      	adds	r3, #1
 8002ecc:	e7ed      	b.n	8002eaa <d_print_comp+0x316>
 8002ece:	4f57      	ldr	r7, [pc, #348]	; (800302c <d_print_comp+0x498>)
 8002ed0:	68aa      	ldr	r2, [r5, #8]
 8002ed2:	4631      	mov	r1, r6
 8002ed4:	4620      	mov	r0, r4
 8002ed6:	f7ff fe5d 	bl	8002b94 <d_print_comp>
 8002eda:	f107 0805 	add.w	r8, r7, #5
 8002ede:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002ee2:	f04f 0900 	mov.w	r9, #0
 8002ee6:	e016      	b.n	8002f16 <d_print_comp+0x382>
 8002ee8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002eec:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002ef0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002ef4:	4798      	blx	r3
 8002ef6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002efa:	3301      	adds	r3, #1
 8002efc:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002f00:	2200      	movs	r2, #0
 8002f02:	2301      	movs	r3, #1
 8002f04:	45b8      	cmp	r8, r7
 8002f06:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002f0a:	f804 a002 	strb.w	sl, [r4, r2]
 8002f0e:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8002f12:	f001 827c 	beq.w	800440e <d_print_comp+0x187a>
 8002f16:	2bff      	cmp	r3, #255	; 0xff
 8002f18:	4619      	mov	r1, r3
 8002f1a:	4620      	mov	r0, r4
 8002f1c:	f817 ab01 	ldrb.w	sl, [r7], #1
 8002f20:	d0e2      	beq.n	8002ee8 <d_print_comp+0x354>
 8002f22:	461a      	mov	r2, r3
 8002f24:	3301      	adds	r3, #1
 8002f26:	e7ed      	b.n	8002f04 <d_print_comp+0x370>
 8002f28:	4f41      	ldr	r7, [pc, #260]	; (8003030 <d_print_comp+0x49c>)
 8002f2a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002f2e:	f107 0816 	add.w	r8, r7, #22
 8002f32:	f04f 0900 	mov.w	r9, #0
 8002f36:	e016      	b.n	8002f66 <d_print_comp+0x3d2>
 8002f38:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002f3c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002f40:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002f44:	4798      	blx	r3
 8002f46:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002f4a:	3301      	adds	r3, #1
 8002f4c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002f50:	2200      	movs	r2, #0
 8002f52:	2301      	movs	r3, #1
 8002f54:	45b8      	cmp	r8, r7
 8002f56:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002f5a:	f804 a002 	strb.w	sl, [r4, r2]
 8002f5e:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8002f62:	f001 81f4 	beq.w	800434e <d_print_comp+0x17ba>
 8002f66:	2bff      	cmp	r3, #255	; 0xff
 8002f68:	4619      	mov	r1, r3
 8002f6a:	4620      	mov	r0, r4
 8002f6c:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8002f70:	d0e2      	beq.n	8002f38 <d_print_comp+0x3a4>
 8002f72:	461a      	mov	r2, r3
 8002f74:	3301      	adds	r3, #1
 8002f76:	e7ed      	b.n	8002f54 <d_print_comp+0x3c0>
 8002f78:	4e2e      	ldr	r6, [pc, #184]	; (8003034 <d_print_comp+0x4a0>)
 8002f7a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002f7e:	f106 070e 	add.w	r7, r6, #14
 8002f82:	f04f 0800 	mov.w	r8, #0
 8002f86:	e016      	b.n	8002fb6 <d_print_comp+0x422>
 8002f88:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002f8c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002f90:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8002f94:	4798      	blx	r3
 8002f96:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002f9a:	3301      	adds	r3, #1
 8002f9c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002fa0:	2200      	movs	r2, #0
 8002fa2:	2301      	movs	r3, #1
 8002fa4:	42b7      	cmp	r7, r6
 8002fa6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002faa:	f804 9002 	strb.w	r9, [r4, r2]
 8002fae:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8002fb2:	f001 81d5 	beq.w	8004360 <d_print_comp+0x17cc>
 8002fb6:	2bff      	cmp	r3, #255	; 0xff
 8002fb8:	4619      	mov	r1, r3
 8002fba:	4620      	mov	r0, r4
 8002fbc:	f816 9f01 	ldrb.w	r9, [r6, #1]!
 8002fc0:	d0e2      	beq.n	8002f88 <d_print_comp+0x3f4>
 8002fc2:	461a      	mov	r2, r3
 8002fc4:	3301      	adds	r3, #1
 8002fc6:	e7ed      	b.n	8002fa4 <d_print_comp+0x410>
 8002fc8:	4f1b      	ldr	r7, [pc, #108]	; (8003038 <d_print_comp+0x4a4>)
 8002fca:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8002fce:	f107 0808 	add.w	r8, r7, #8
 8002fd2:	f04f 0900 	mov.w	r9, #0
 8002fd6:	e016      	b.n	8003006 <d_print_comp+0x472>
 8002fd8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8002fdc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8002fe0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8002fe4:	4798      	blx	r3
 8002fe6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8002fea:	3301      	adds	r3, #1
 8002fec:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8002ff0:	2200      	movs	r2, #0
 8002ff2:	2301      	movs	r3, #1
 8002ff4:	45b8      	cmp	r8, r7
 8002ff6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8002ffa:	f804 a002 	strb.w	sl, [r4, r2]
 8002ffe:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003002:	f001 8114 	beq.w	800422e <d_print_comp+0x169a>
 8003006:	2bff      	cmp	r3, #255	; 0xff
 8003008:	4619      	mov	r1, r3
 800300a:	4620      	mov	r0, r4
 800300c:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003010:	d0e2      	beq.n	8002fd8 <d_print_comp+0x444>
 8003012:	461a      	mov	r2, r3
 8003014:	3301      	adds	r3, #1
 8003016:	e7ed      	b.n	8002ff4 <d_print_comp+0x460>
 8003018:	08011d90 	.word	0x08011d90
 800301c:	08011f90 	.word	0x08011f90
 8003020:	0801204b 	.word	0x0801204b
 8003024:	08011f64 	.word	0x08011f64
 8003028:	08011f2f 	.word	0x08011f2f
 800302c:	08011dd0 	.word	0x08011dd0
 8003030:	08011f33 	.word	0x08011f33
 8003034:	0801203b 	.word	0x0801203b
 8003038:	0801202b 	.word	0x0801202b
 800303c:	4fb9      	ldr	r7, [pc, #740]	; (8003324 <d_print_comp+0x790>)
 800303e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003042:	f107 081c 	add.w	r8, r7, #28
 8003046:	f04f 0900 	mov.w	r9, #0
 800304a:	e016      	b.n	800307a <d_print_comp+0x4e6>
 800304c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003050:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003054:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003058:	4798      	blx	r3
 800305a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800305e:	3301      	adds	r3, #1
 8003060:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003064:	2200      	movs	r2, #0
 8003066:	2301      	movs	r3, #1
 8003068:	45b8      	cmp	r8, r7
 800306a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800306e:	f804 a002 	strb.w	sl, [r4, r2]
 8003072:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003076:	f001 810f 	beq.w	8004298 <d_print_comp+0x1704>
 800307a:	2bff      	cmp	r3, #255	; 0xff
 800307c:	4619      	mov	r1, r3
 800307e:	4620      	mov	r0, r4
 8003080:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003084:	d0e2      	beq.n	800304c <d_print_comp+0x4b8>
 8003086:	461a      	mov	r2, r3
 8003088:	3301      	adds	r3, #1
 800308a:	e7ed      	b.n	8003068 <d_print_comp+0x4d4>
 800308c:	4fa6      	ldr	r7, [pc, #664]	; (8003328 <d_print_comp+0x794>)
 800308e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003092:	f107 081d 	add.w	r8, r7, #29
 8003096:	f04f 0900 	mov.w	r9, #0
 800309a:	e016      	b.n	80030ca <d_print_comp+0x536>
 800309c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80030a0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80030a4:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80030a8:	4798      	blx	r3
 80030aa:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80030ae:	3301      	adds	r3, #1
 80030b0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80030b4:	2200      	movs	r2, #0
 80030b6:	2301      	movs	r3, #1
 80030b8:	4547      	cmp	r7, r8
 80030ba:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80030be:	f804 a002 	strb.w	sl, [r4, r2]
 80030c2:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80030c6:	f001 8083 	beq.w	80041d0 <d_print_comp+0x163c>
 80030ca:	2bff      	cmp	r3, #255	; 0xff
 80030cc:	4619      	mov	r1, r3
 80030ce:	4620      	mov	r0, r4
 80030d0:	f817 af01 	ldrb.w	sl, [r7, #1]!
 80030d4:	d0e2      	beq.n	800309c <d_print_comp+0x508>
 80030d6:	461a      	mov	r2, r3
 80030d8:	3301      	adds	r3, #1
 80030da:	e7ed      	b.n	80030b8 <d_print_comp+0x524>
 80030dc:	4f93      	ldr	r7, [pc, #588]	; (800332c <d_print_comp+0x798>)
 80030de:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80030e2:	f107 080a 	add.w	r8, r7, #10
 80030e6:	f04f 0900 	mov.w	r9, #0
 80030ea:	e016      	b.n	800311a <d_print_comp+0x586>
 80030ec:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80030f0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80030f4:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80030f8:	4798      	blx	r3
 80030fa:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80030fe:	3301      	adds	r3, #1
 8003100:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003104:	2200      	movs	r2, #0
 8003106:	2301      	movs	r3, #1
 8003108:	45b8      	cmp	r8, r7
 800310a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800310e:	f804 a002 	strb.w	sl, [r4, r2]
 8003112:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003116:	f001 8064 	beq.w	80041e2 <d_print_comp+0x164e>
 800311a:	2bff      	cmp	r3, #255	; 0xff
 800311c:	4619      	mov	r1, r3
 800311e:	4620      	mov	r0, r4
 8003120:	f817 ab01 	ldrb.w	sl, [r7], #1
 8003124:	d0e2      	beq.n	80030ec <d_print_comp+0x558>
 8003126:	461a      	mov	r2, r3
 8003128:	3301      	adds	r3, #1
 800312a:	e7ed      	b.n	8003108 <d_print_comp+0x574>
 800312c:	a808      	add	r0, sp, #32
 800312e:	68aa      	ldr	r2, [r5, #8]
 8003130:	497f      	ldr	r1, [pc, #508]	; (8003330 <d_print_comp+0x79c>)
 8003132:	f00a ff91 	bl	800e058 <sprintf>
 8003136:	a808      	add	r0, sp, #32
 8003138:	f003 fe1c 	bl	8006d74 <strlen>
 800313c:	2800      	cmp	r0, #0
 800313e:	f001 81b7 	beq.w	80044b0 <d_print_comp+0x191c>
 8003142:	ae08      	add	r6, sp, #32
 8003144:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003148:	1837      	adds	r7, r6, r0
 800314a:	f04f 0800 	mov.w	r8, #0
 800314e:	e016      	b.n	800317e <d_print_comp+0x5ea>
 8003150:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003154:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003158:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800315c:	4798      	blx	r3
 800315e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003162:	3301      	adds	r3, #1
 8003164:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003168:	2200      	movs	r2, #0
 800316a:	2301      	movs	r3, #1
 800316c:	42be      	cmp	r6, r7
 800316e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003172:	f804 9002 	strb.w	r9, [r4, r2]
 8003176:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 800317a:	f001 8199 	beq.w	80044b0 <d_print_comp+0x191c>
 800317e:	2bff      	cmp	r3, #255	; 0xff
 8003180:	4619      	mov	r1, r3
 8003182:	4620      	mov	r0, r4
 8003184:	f816 9b01 	ldrb.w	r9, [r6], #1
 8003188:	d0e2      	beq.n	8003150 <d_print_comp+0x5bc>
 800318a:	461a      	mov	r2, r3
 800318c:	3301      	adds	r3, #1
 800318e:	e7ed      	b.n	800316c <d_print_comp+0x5d8>
 8003190:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003194:	f895 8008 	ldrb.w	r8, [r5, #8]
 8003198:	2fff      	cmp	r7, #255	; 0xff
 800319a:	d111      	bne.n	80031c0 <d_print_comp+0x62c>
 800319c:	2600      	movs	r6, #0
 800319e:	4639      	mov	r1, r7
 80031a0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80031a4:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80031a8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80031ac:	4620      	mov	r0, r4
 80031ae:	4798      	blx	r3
 80031b0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80031b4:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80031b8:	3301      	adds	r3, #1
 80031ba:	4637      	mov	r7, r6
 80031bc:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80031c0:	1c7b      	adds	r3, r7, #1
 80031c2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80031c6:	f804 8007 	strb.w	r8, [r4, r7]
 80031ca:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 80031ce:	686a      	ldr	r2, [r5, #4]
 80031d0:	9905      	ldr	r1, [sp, #20]
 80031d2:	e5d2      	b.n	8002d7a <d_print_comp+0x1e6>
 80031d4:	68aa      	ldr	r2, [r5, #8]
 80031d6:	4631      	mov	r1, r6
 80031d8:	4620      	mov	r0, r4
 80031da:	f7ff fcdb 	bl	8002b94 <d_print_comp>
 80031de:	4631      	mov	r1, r6
 80031e0:	68ea      	ldr	r2, [r5, #12]
 80031e2:	4620      	mov	r0, r4
 80031e4:	f7ff fcd6 	bl	8002b94 <d_print_comp>
 80031e8:	9905      	ldr	r1, [sp, #20]
 80031ea:	686a      	ldr	r2, [r5, #4]
 80031ec:	e5c5      	b.n	8002d7a <d_print_comp+0x1e6>
 80031ee:	4f51      	ldr	r7, [pc, #324]	; (8003334 <d_print_comp+0x7a0>)
 80031f0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80031f4:	f107 080e 	add.w	r8, r7, #14
 80031f8:	f04f 0900 	mov.w	r9, #0
 80031fc:	e016      	b.n	800322c <d_print_comp+0x698>
 80031fe:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003202:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003206:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800320a:	4798      	blx	r3
 800320c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003210:	3301      	adds	r3, #1
 8003212:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003216:	2200      	movs	r2, #0
 8003218:	2301      	movs	r3, #1
 800321a:	45b8      	cmp	r8, r7
 800321c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003220:	f804 a002 	strb.w	sl, [r4, r2]
 8003224:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003228:	f001 8146 	beq.w	80044b8 <d_print_comp+0x1924>
 800322c:	2bff      	cmp	r3, #255	; 0xff
 800322e:	4619      	mov	r1, r3
 8003230:	4620      	mov	r0, r4
 8003232:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003236:	d0e2      	beq.n	80031fe <d_print_comp+0x66a>
 8003238:	461a      	mov	r2, r3
 800323a:	3301      	adds	r3, #1
 800323c:	e7ed      	b.n	800321a <d_print_comp+0x686>
 800323e:	68ab      	ldr	r3, [r5, #8]
 8003240:	781a      	ldrb	r2, [r3, #0]
 8003242:	2a27      	cmp	r2, #39	; 0x27
 8003244:	f001 8572 	beq.w	8004d2c <d_print_comp+0x2198>
 8003248:	f04f 0800 	mov.w	r8, #0
 800324c:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003250:	2fff      	cmp	r7, #255	; 0xff
 8003252:	d112      	bne.n	800327a <d_print_comp+0x6e6>
 8003254:	f04f 0900 	mov.w	r9, #0
 8003258:	4639      	mov	r1, r7
 800325a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800325e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003262:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003266:	4620      	mov	r0, r4
 8003268:	4798      	blx	r3
 800326a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800326e:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 8003272:	3301      	adds	r3, #1
 8003274:	464f      	mov	r7, r9
 8003276:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800327a:	2328      	movs	r3, #40	; 0x28
 800327c:	1c7a      	adds	r2, r7, #1
 800327e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003282:	55e3      	strb	r3, [r4, r7]
 8003284:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003288:	68aa      	ldr	r2, [r5, #8]
 800328a:	4631      	mov	r1, r6
 800328c:	4620      	mov	r0, r4
 800328e:	f7ff fc81 	bl	8002b94 <d_print_comp>
 8003292:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003296:	2bff      	cmp	r3, #255	; 0xff
 8003298:	f041 85b8 	bne.w	8004e0c <d_print_comp+0x2278>
 800329c:	2200      	movs	r2, #0
 800329e:	4619      	mov	r1, r3
 80032a0:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 80032a4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80032a8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80032ac:	4620      	mov	r0, r4
 80032ae:	4798      	blx	r3
 80032b0:	2329      	movs	r3, #41	; 0x29
 80032b2:	7023      	strb	r3, [r4, #0]
 80032b4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80032b8:	782a      	ldrb	r2, [r5, #0]
 80032ba:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80032be:	2101      	movs	r1, #1
 80032c0:	3301      	adds	r3, #1
 80032c2:	2a3d      	cmp	r2, #61	; 0x3d
 80032c4:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80032c8:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80032cc:	f001 85bb 	beq.w	8004e46 <d_print_comp+0x22b2>
 80032d0:	f1b8 0f08 	cmp.w	r8, #8
 80032d4:	f001 8556 	beq.w	8004d84 <d_print_comp+0x21f0>
 80032d8:	4631      	mov	r1, r6
 80032da:	68ea      	ldr	r2, [r5, #12]
 80032dc:	4620      	mov	r0, r4
 80032de:	f7ff fc59 	bl	8002b94 <d_print_comp>
 80032e2:	9905      	ldr	r1, [sp, #20]
 80032e4:	686a      	ldr	r2, [r5, #4]
 80032e6:	e548      	b.n	8002d7a <d_print_comp+0x1e6>
 80032e8:	2301      	movs	r3, #1
 80032ea:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 80032ee:	686a      	ldr	r2, [r5, #4]
 80032f0:	e543      	b.n	8002d7a <d_print_comp+0x1e6>
 80032f2:	68eb      	ldr	r3, [r5, #12]
 80032f4:	781a      	ldrb	r2, [r3, #0]
 80032f6:	2a3a      	cmp	r2, #58	; 0x3a
 80032f8:	f001 8405 	beq.w	8004b06 <d_print_comp+0x1f72>
 80032fc:	2301      	movs	r3, #1
 80032fe:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8003302:	686a      	ldr	r2, [r5, #4]
 8003304:	e539      	b.n	8002d7a <d_print_comp+0x1e6>
 8003306:	2301      	movs	r3, #1
 8003308:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 800330c:	686a      	ldr	r2, [r5, #4]
 800330e:	e534      	b.n	8002d7a <d_print_comp+0x1e6>
 8003310:	68eb      	ldr	r3, [r5, #12]
 8003312:	781b      	ldrb	r3, [r3, #0]
 8003314:	2b38      	cmp	r3, #56	; 0x38
 8003316:	f43f acaf 	beq.w	8002c78 <d_print_comp+0xe4>
 800331a:	2301      	movs	r3, #1
 800331c:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8003320:	686a      	ldr	r2, [r5, #4]
 8003322:	e52a      	b.n	8002d7a <d_print_comp+0x1e6>
 8003324:	0801200b 	.word	0x0801200b
 8003328:	08011feb 	.word	0x08011feb
 800332c:	08011fcc 	.word	0x08011fcc
 8003330:	08011d88 	.word	0x08011d88
 8003334:	08011fbb 	.word	0x08011fbb
 8003338:	e9d5 9802 	ldrd	r9, r8, [r5, #8]
 800333c:	f899 3000 	ldrb.w	r3, [r9]
 8003340:	2b31      	cmp	r3, #49	; 0x31
 8003342:	f001 843a 	beq.w	8004bba <d_print_comp+0x2026>
 8003346:	2b33      	cmp	r3, #51	; 0x33
 8003348:	f042 8192 	bne.w	8005670 <d_print_comp+0x2adc>
 800334c:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003350:	2fff      	cmp	r7, #255	; 0xff
 8003352:	d112      	bne.n	800337a <d_print_comp+0x7e6>
 8003354:	f04f 0a00 	mov.w	sl, #0
 8003358:	4639      	mov	r1, r7
 800335a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800335e:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8003362:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003366:	4620      	mov	r0, r4
 8003368:	4798      	blx	r3
 800336a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800336e:	f8c4 a100 	str.w	sl, [r4, #256]	; 0x100
 8003372:	3301      	adds	r3, #1
 8003374:	4657      	mov	r7, sl
 8003376:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800337a:	1c7a      	adds	r2, r7, #1
 800337c:	2328      	movs	r3, #40	; 0x28
 800337e:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003382:	55e3      	strb	r3, [r4, r7]
 8003384:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003388:	f8d9 2008 	ldr.w	r2, [r9, #8]
 800338c:	4631      	mov	r1, r6
 800338e:	4620      	mov	r0, r4
 8003390:	f7ff fc00 	bl	8002b94 <d_print_comp>
 8003394:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003398:	2fff      	cmp	r7, #255	; 0xff
 800339a:	d112      	bne.n	80033c2 <d_print_comp+0x82e>
 800339c:	f04f 0900 	mov.w	r9, #0
 80033a0:	4639      	mov	r1, r7
 80033a2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80033a6:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80033aa:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80033ae:	4620      	mov	r0, r4
 80033b0:	4798      	blx	r3
 80033b2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80033b6:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 80033ba:	3301      	adds	r3, #1
 80033bc:	464f      	mov	r7, r9
 80033be:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80033c2:	2329      	movs	r3, #41	; 0x29
 80033c4:	1c7a      	adds	r2, r7, #1
 80033c6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80033ca:	55e3      	strb	r3, [r4, r7]
 80033cc:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80033d0:	4642      	mov	r2, r8
 80033d2:	4631      	mov	r1, r6
 80033d4:	4620      	mov	r0, r4
 80033d6:	f003 f8e5 	bl	80065a4 <d_print_subexpr>
 80033da:	9905      	ldr	r1, [sp, #20]
 80033dc:	686a      	ldr	r2, [r5, #4]
 80033de:	e4cc      	b.n	8002d7a <d_print_comp+0x1e6>
 80033e0:	4631      	mov	r1, r6
 80033e2:	68aa      	ldr	r2, [r5, #8]
 80033e4:	4620      	mov	r0, r4
 80033e6:	f003 f89d 	bl	8006524 <d_print_expr_op>
 80033ea:	9905      	ldr	r1, [sp, #20]
 80033ec:	686a      	ldr	r2, [r5, #4]
 80033ee:	e4c4      	b.n	8002d7a <d_print_comp+0x1e6>
 80033f0:	4fd2      	ldr	r7, [pc, #840]	; (800373c <d_print_comp+0xba8>)
 80033f2:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80033f6:	f107 0809 	add.w	r8, r7, #9
 80033fa:	f04f 0900 	mov.w	r9, #0
 80033fe:	e016      	b.n	800342e <d_print_comp+0x89a>
 8003400:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003404:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003408:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800340c:	4798      	blx	r3
 800340e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003412:	3301      	adds	r3, #1
 8003414:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003418:	2200      	movs	r2, #0
 800341a:	2301      	movs	r3, #1
 800341c:	45b8      	cmp	r8, r7
 800341e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003422:	f804 a002 	strb.w	sl, [r4, r2]
 8003426:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 800342a:	f001 8057 	beq.w	80044dc <d_print_comp+0x1948>
 800342e:	2bff      	cmp	r3, #255	; 0xff
 8003430:	4619      	mov	r1, r3
 8003432:	4620      	mov	r0, r4
 8003434:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003438:	d0e2      	beq.n	8003400 <d_print_comp+0x86c>
 800343a:	461a      	mov	r2, r3
 800343c:	3301      	adds	r3, #1
 800343e:	e7ed      	b.n	800341c <d_print_comp+0x888>
 8003440:	4fbe      	ldr	r7, [pc, #760]	; (800373c <d_print_comp+0xba8>)
 8003442:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003446:	f107 0809 	add.w	r8, r7, #9
 800344a:	f04f 0900 	mov.w	r9, #0
 800344e:	e016      	b.n	800347e <d_print_comp+0x8ea>
 8003450:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003454:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003458:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800345c:	4798      	blx	r3
 800345e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003462:	3301      	adds	r3, #1
 8003464:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003468:	2200      	movs	r2, #0
 800346a:	2301      	movs	r3, #1
 800346c:	45b8      	cmp	r8, r7
 800346e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003472:	f804 a002 	strb.w	sl, [r4, r2]
 8003476:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 800347a:	f001 8026 	beq.w	80044ca <d_print_comp+0x1936>
 800347e:	2bff      	cmp	r3, #255	; 0xff
 8003480:	4619      	mov	r1, r3
 8003482:	4620      	mov	r0, r4
 8003484:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003488:	d0e2      	beq.n	8003450 <d_print_comp+0x8bc>
 800348a:	461a      	mov	r2, r3
 800348c:	3301      	adds	r3, #1
 800348e:	e7ed      	b.n	800346c <d_print_comp+0x8d8>
 8003490:	f8d5 a008 	ldr.w	sl, [r5, #8]
 8003494:	4eaa      	ldr	r6, [pc, #680]	; (8003740 <d_print_comp+0xbac>)
 8003496:	f8da 7008 	ldr.w	r7, [sl, #8]
 800349a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800349e:	f106 0808 	add.w	r8, r6, #8
 80034a2:	f04f 0900 	mov.w	r9, #0
 80034a6:	e016      	b.n	80034d6 <d_print_comp+0x942>
 80034a8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80034ac:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80034b0:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80034b4:	4798      	blx	r3
 80034b6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80034ba:	3301      	adds	r3, #1
 80034bc:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80034c0:	2200      	movs	r2, #0
 80034c2:	2301      	movs	r3, #1
 80034c4:	4546      	cmp	r6, r8
 80034c6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80034ca:	f804 b002 	strb.w	fp, [r4, r2]
 80034ce:	f884 b104 	strb.w	fp, [r4, #260]	; 0x104
 80034d2:	f001 8021 	beq.w	8004518 <d_print_comp+0x1984>
 80034d6:	2bff      	cmp	r3, #255	; 0xff
 80034d8:	4619      	mov	r1, r3
 80034da:	4620      	mov	r0, r4
 80034dc:	f816 bf01 	ldrb.w	fp, [r6, #1]!
 80034e0:	d0e2      	beq.n	80034a8 <d_print_comp+0x914>
 80034e2:	461a      	mov	r2, r3
 80034e4:	3301      	adds	r3, #1
 80034e6:	e7ed      	b.n	80034c4 <d_print_comp+0x930>
 80034e8:	e9d5 2802 	ldrd	r2, r8, [r5, #8]
 80034ec:	b11a      	cbz	r2, 80034f6 <d_print_comp+0x962>
 80034ee:	4631      	mov	r1, r6
 80034f0:	4620      	mov	r0, r4
 80034f2:	f7ff fb4f 	bl	8002b94 <d_print_comp>
 80034f6:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80034fa:	2fff      	cmp	r7, #255	; 0xff
 80034fc:	d112      	bne.n	8003524 <d_print_comp+0x990>
 80034fe:	f04f 0900 	mov.w	r9, #0
 8003502:	4639      	mov	r1, r7
 8003504:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003508:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800350c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003510:	4620      	mov	r0, r4
 8003512:	4798      	blx	r3
 8003514:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003518:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 800351c:	3301      	adds	r3, #1
 800351e:	464f      	mov	r7, r9
 8003520:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003524:	1c78      	adds	r0, r7, #1
 8003526:	237b      	movs	r3, #123	; 0x7b
 8003528:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 800352c:	4642      	mov	r2, r8
 800352e:	55e3      	strb	r3, [r4, r7]
 8003530:	4631      	mov	r1, r6
 8003532:	4620      	mov	r0, r4
 8003534:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003538:	f7ff fb2c 	bl	8002b94 <d_print_comp>
 800353c:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003540:	2fff      	cmp	r7, #255	; 0xff
 8003542:	d111      	bne.n	8003568 <d_print_comp+0x9d4>
 8003544:	2600      	movs	r6, #0
 8003546:	4639      	mov	r1, r7
 8003548:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800354c:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8003550:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003554:	4620      	mov	r0, r4
 8003556:	4798      	blx	r3
 8003558:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800355c:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8003560:	3301      	adds	r3, #1
 8003562:	4637      	mov	r7, r6
 8003564:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003568:	1c7a      	adds	r2, r7, #1
 800356a:	237d      	movs	r3, #125	; 0x7d
 800356c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003570:	55e3      	strb	r3, [r4, r7]
 8003572:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003576:	686a      	ldr	r2, [r5, #4]
 8003578:	9905      	ldr	r1, [sp, #20]
 800357a:	f7ff bbfe 	b.w	8002d7a <d_print_comp+0x1e6>
 800357e:	68aa      	ldr	r2, [r5, #8]
 8003580:	b11a      	cbz	r2, 800358a <d_print_comp+0x9f6>
 8003582:	4631      	mov	r1, r6
 8003584:	4620      	mov	r0, r4
 8003586:	f7ff fb05 	bl	8002b94 <d_print_comp>
 800358a:	68eb      	ldr	r3, [r5, #12]
 800358c:	2b00      	cmp	r3, #0
 800358e:	f001 853d 	beq.w	800500c <d_print_comp+0x2478>
 8003592:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003596:	2ffd      	cmp	r7, #253	; 0xfd
 8003598:	d912      	bls.n	80035c0 <d_print_comp+0xa2c>
 800359a:	f04f 0800 	mov.w	r8, #0
 800359e:	f804 8007 	strb.w	r8, [r4, r7]
 80035a2:	4639      	mov	r1, r7
 80035a4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80035a8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80035ac:	4620      	mov	r0, r4
 80035ae:	4798      	blx	r3
 80035b0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80035b4:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 80035b8:	3301      	adds	r3, #1
 80035ba:	4647      	mov	r7, r8
 80035bc:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80035c0:	f8df 8188 	ldr.w	r8, [pc, #392]	; 800374c <d_print_comp+0xbb8>
 80035c4:	f04f 0a00 	mov.w	sl, #0
 80035c8:	f108 0b02 	add.w	fp, r8, #2
 80035cc:	e016      	b.n	80035fc <d_print_comp+0xa68>
 80035ce:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80035d2:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 80035d6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80035da:	4798      	blx	r3
 80035dc:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80035e0:	3301      	adds	r3, #1
 80035e2:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80035e6:	2701      	movs	r7, #1
 80035e8:	2300      	movs	r3, #0
 80035ea:	45c3      	cmp	fp, r8
 80035ec:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 80035f0:	f804 9003 	strb.w	r9, [r4, r3]
 80035f4:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80035f8:	f001 80cf 	beq.w	800479a <d_print_comp+0x1c06>
 80035fc:	2fff      	cmp	r7, #255	; 0xff
 80035fe:	4639      	mov	r1, r7
 8003600:	4620      	mov	r0, r4
 8003602:	f818 9b01 	ldrb.w	r9, [r8], #1
 8003606:	d0e2      	beq.n	80035ce <d_print_comp+0xa3a>
 8003608:	463b      	mov	r3, r7
 800360a:	3701      	adds	r7, #1
 800360c:	e7ed      	b.n	80035ea <d_print_comp+0xa56>
 800360e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003612:	2b00      	cmp	r3, #0
 8003614:	f041 84a0 	bne.w	8004f58 <d_print_comp+0x23c4>
 8003618:	68aa      	ldr	r2, [r5, #8]
 800361a:	4b4a      	ldr	r3, [pc, #296]	; (8003744 <d_print_comp+0xbb0>)
 800361c:	6891      	ldr	r1, [r2, #8]
 800361e:	4299      	cmp	r1, r3
 8003620:	d020      	beq.n	8003664 <d_print_comp+0xad0>
 8003622:	4631      	mov	r1, r6
 8003624:	4620      	mov	r0, r4
 8003626:	f7ff fab5 	bl	8002b94 <d_print_comp>
 800362a:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 800362e:	2fff      	cmp	r7, #255	; 0xff
 8003630:	d111      	bne.n	8003656 <d_print_comp+0xac2>
 8003632:	2600      	movs	r6, #0
 8003634:	4639      	mov	r1, r7
 8003636:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800363a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800363e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003642:	4620      	mov	r0, r4
 8003644:	4798      	blx	r3
 8003646:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800364a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800364e:	3301      	adds	r3, #1
 8003650:	4637      	mov	r7, r6
 8003652:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003656:	2320      	movs	r3, #32
 8003658:	1c7a      	adds	r2, r7, #1
 800365a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800365e:	55e3      	strb	r3, [r4, r7]
 8003660:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003664:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
 8003668:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800366c:	2a00      	cmp	r2, #0
 800366e:	f001 80a6 	beq.w	80047be <d_print_comp+0x1c2a>
 8003672:	4e35      	ldr	r6, [pc, #212]	; (8003748 <d_print_comp+0xbb4>)
 8003674:	f04f 0800 	mov.w	r8, #0
 8003678:	f106 0906 	add.w	r9, r6, #6
 800367c:	e015      	b.n	80036aa <d_print_comp+0xb16>
 800367e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003682:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003686:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800368a:	4798      	blx	r3
 800368c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003690:	3301      	adds	r3, #1
 8003692:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003696:	2200      	movs	r2, #0
 8003698:	2301      	movs	r3, #1
 800369a:	45b1      	cmp	r9, r6
 800369c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80036a0:	54a7      	strb	r7, [r4, r2]
 80036a2:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80036a6:	f001 8183 	beq.w	80049b0 <d_print_comp+0x1e1c>
 80036aa:	2bff      	cmp	r3, #255	; 0xff
 80036ac:	4619      	mov	r1, r3
 80036ae:	4620      	mov	r0, r4
 80036b0:	f816 7b01 	ldrb.w	r7, [r6], #1
 80036b4:	d0e3      	beq.n	800367e <d_print_comp+0xaea>
 80036b6:	461a      	mov	r2, r3
 80036b8:	3301      	adds	r3, #1
 80036ba:	e7ee      	b.n	800369a <d_print_comp+0xb06>
 80036bc:	ab18      	add	r3, sp, #96	; 0x60
 80036be:	f8d4 2114 	ldr.w	r2, [r4, #276]	; 0x114
 80036c2:	f843 2d40 	str.w	r2, [r3, #-64]!
 80036c6:	2000      	movs	r0, #0
 80036c8:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80036cc:	900a      	str	r0, [sp, #40]	; 0x28
 80036ce:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 80036d2:	68ea      	ldr	r2, [r5, #12]
 80036d4:	930b      	str	r3, [sp, #44]	; 0x2c
 80036d6:	4631      	mov	r1, r6
 80036d8:	4620      	mov	r0, r4
 80036da:	9509      	str	r5, [sp, #36]	; 0x24
 80036dc:	f7ff fa5a 	bl	8002b94 <d_print_comp>
 80036e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80036e2:	b923      	cbnz	r3, 80036ee <d_print_comp+0xb5a>
 80036e4:	4631      	mov	r1, r6
 80036e6:	462a      	mov	r2, r5
 80036e8:	4620      	mov	r0, r4
 80036ea:	f002 f8e9 	bl	80058c0 <d_print_mod>
 80036ee:	9b08      	ldr	r3, [sp, #32]
 80036f0:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80036f4:	9905      	ldr	r1, [sp, #20]
 80036f6:	686a      	ldr	r2, [r5, #4]
 80036f8:	f7ff bb3f 	b.w	8002d7a <d_print_comp+0x1e6>
 80036fc:	f10d 0960 	add.w	r9, sp, #96	; 0x60
 8003700:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
 8003704:	f849 cd40 	str.w	ip, [r9, #-64]!
 8003708:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 800370c:	f8cd c004 	str.w	ip, [sp, #4]
 8003710:	2200      	movs	r2, #0
 8003712:	4667      	mov	r7, ip
 8003714:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8003718:	9509      	str	r5, [sp, #36]	; 0x24
 800371a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800371e:	2f00      	cmp	r7, #0
 8003720:	f001 852f 	beq.w	8005182 <d_print_comp+0x25ee>
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	781b      	ldrb	r3, [r3, #0]
 8003728:	3b19      	subs	r3, #25
 800372a:	2b02      	cmp	r3, #2
 800372c:	f201 8529 	bhi.w	8005182 <d_print_comp+0x25ee>
 8003730:	4623      	mov	r3, r4
 8003732:	f04f 0801 	mov.w	r8, #1
 8003736:	464c      	mov	r4, r9
 8003738:	469c      	mov	ip, r3
 800373a:	e00e      	b.n	800375a <d_print_comp+0xbc6>
 800373c:	08011f73 	.word	0x08011f73
 8003740:	08011f67 	.word	0x08011f67
 8003744:	08011454 	.word	0x08011454
 8003748:	08011f54 	.word	0x08011f54
 800374c:	08011f64 	.word	0x08011f64
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	781b      	ldrb	r3, [r3, #0]
 8003754:	3b19      	subs	r3, #25
 8003756:	2b02      	cmp	r3, #2
 8003758:	d81d      	bhi.n	8003796 <d_print_comp+0xc02>
 800375a:	68bb      	ldr	r3, [r7, #8]
 800375c:	ea4f 1e08 	mov.w	lr, r8, lsl #4
 8003760:	aa18      	add	r2, sp, #96	; 0x60
 8003762:	eb02 0b0e 	add.w	fp, r2, lr
 8003766:	b99b      	cbnz	r3, 8003790 <d_print_comp+0xbfc>
 8003768:	f1b8 0f03 	cmp.w	r8, #3
 800376c:	f201 8517 	bhi.w	800519e <d_print_comp+0x260a>
 8003770:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8003774:	f1ab 0a40 	sub.w	sl, fp, #64	; 0x40
 8003778:	e88a 000f 	stmia.w	sl, {r0, r1, r2, r3}
 800377c:	f84b 4c40 	str.w	r4, [fp, #-64]
 8003780:	2301      	movs	r3, #1
 8003782:	eb09 040e 	add.w	r4, r9, lr
 8003786:	f8cc 4114 	str.w	r4, [ip, #276]	; 0x114
 800378a:	f108 0801 	add.w	r8, r8, #1
 800378e:	60bb      	str	r3, [r7, #8]
 8003790:	683f      	ldr	r7, [r7, #0]
 8003792:	2f00      	cmp	r7, #0
 8003794:	d1dc      	bne.n	8003750 <d_print_comp+0xbbc>
 8003796:	68ea      	ldr	r2, [r5, #12]
 8003798:	4631      	mov	r1, r6
 800379a:	4660      	mov	r0, ip
 800379c:	4664      	mov	r4, ip
 800379e:	f7ff f9f9 	bl	8002b94 <d_print_comp>
 80037a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80037a4:	9a01      	ldr	r2, [sp, #4]
 80037a6:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 80037aa:	b9bb      	cbnz	r3, 80037dc <d_print_comp+0xc48>
 80037ac:	f1b8 0f01 	cmp.w	r8, #1
 80037b0:	d00c      	beq.n	80037cc <d_print_comp+0xc38>
 80037b2:	eb09 1808 	add.w	r8, r9, r8, lsl #4
 80037b6:	af0c      	add	r7, sp, #48	; 0x30
 80037b8:	f858 2c0c 	ldr.w	r2, [r8, #-12]
 80037bc:	4631      	mov	r1, r6
 80037be:	f1a8 0810 	sub.w	r8, r8, #16
 80037c2:	4620      	mov	r0, r4
 80037c4:	f002 f87c 	bl	80058c0 <d_print_mod>
 80037c8:	4547      	cmp	r7, r8
 80037ca:	d1f5      	bne.n	80037b8 <d_print_comp+0xc24>
 80037cc:	4631      	mov	r1, r6
 80037ce:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 80037d2:	f105 0208 	add.w	r2, r5, #8
 80037d6:	4620      	mov	r0, r4
 80037d8:	f002 fdca 	bl	8006370 <d_print_array_type.isra.14>
 80037dc:	9905      	ldr	r1, [sp, #20]
 80037de:	686a      	ldr	r2, [r5, #4]
 80037e0:	f7ff bacb 	b.w	8002d7a <d_print_comp+0x1e6>
 80037e4:	06b2      	lsls	r2, r6, #26
 80037e6:	f026 0860 	bic.w	r8, r6, #96	; 0x60
 80037ea:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 80037ee:	f101 825a 	bmi.w	8004ca6 <d_print_comp+0x2112>
 80037f2:	68aa      	ldr	r2, [r5, #8]
 80037f4:	b11a      	cbz	r2, 80037fe <d_print_comp+0xc6a>
 80037f6:	f016 0640 	ands.w	r6, r6, #64	; 0x40
 80037fa:	f001 85c3 	beq.w	8005384 <d_print_comp+0x27f0>
 80037fe:	4641      	mov	r1, r8
 8003800:	f105 020c 	add.w	r2, r5, #12
 8003804:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8003808:	4620      	mov	r0, r4
 800380a:	f002 fb87 	bl	8005f1c <d_print_function_type.isra.15>
 800380e:	9905      	ldr	r1, [sp, #20]
 8003810:	686a      	ldr	r2, [r5, #4]
 8003812:	f7ff bab2 	b.w	8002d7a <d_print_comp+0x1e6>
 8003816:	4fcb      	ldr	r7, [pc, #812]	; (8003b44 <d_print_comp+0xfb0>)
 8003818:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800381c:	f107 0815 	add.w	r8, r7, #21
 8003820:	f04f 0900 	mov.w	r9, #0
 8003824:	e016      	b.n	8003854 <d_print_comp+0xcc0>
 8003826:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800382a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800382e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003832:	4798      	blx	r3
 8003834:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003838:	3301      	adds	r3, #1
 800383a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800383e:	2200      	movs	r2, #0
 8003840:	2301      	movs	r3, #1
 8003842:	45b8      	cmp	r8, r7
 8003844:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003848:	f804 a002 	strb.w	sl, [r4, r2]
 800384c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003850:	f000 8789 	beq.w	8004766 <d_print_comp+0x1bd2>
 8003854:	2bff      	cmp	r3, #255	; 0xff
 8003856:	4619      	mov	r1, r3
 8003858:	4620      	mov	r0, r4
 800385a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 800385e:	d0e2      	beq.n	8003826 <d_print_comp+0xc92>
 8003860:	461a      	mov	r2, r3
 8003862:	3301      	adds	r3, #1
 8003864:	e7ed      	b.n	8003842 <d_print_comp+0xcae>
 8003866:	4fb8      	ldr	r7, [pc, #736]	; (8003b48 <d_print_comp+0xfb4>)
 8003868:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800386c:	f107 0810 	add.w	r8, r7, #16
 8003870:	f04f 0900 	mov.w	r9, #0
 8003874:	e016      	b.n	80038a4 <d_print_comp+0xd10>
 8003876:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800387a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800387e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003882:	4798      	blx	r3
 8003884:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003888:	3301      	adds	r3, #1
 800388a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800388e:	2200      	movs	r2, #0
 8003890:	2301      	movs	r3, #1
 8003892:	45b8      	cmp	r8, r7
 8003894:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003898:	f804 a002 	strb.w	sl, [r4, r2]
 800389c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80038a0:	f000 876a 	beq.w	8004778 <d_print_comp+0x1be4>
 80038a4:	2bff      	cmp	r3, #255	; 0xff
 80038a6:	4619      	mov	r1, r3
 80038a8:	4620      	mov	r0, r4
 80038aa:	f817 af01 	ldrb.w	sl, [r7, #1]!
 80038ae:	d0e2      	beq.n	8003876 <d_print_comp+0xce2>
 80038b0:	461a      	mov	r2, r3
 80038b2:	3301      	adds	r3, #1
 80038b4:	e7ed      	b.n	8003892 <d_print_comp+0xcfe>
 80038b6:	4fa5      	ldr	r7, [pc, #660]	; (8003b4c <d_print_comp+0xfb8>)
 80038b8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80038bc:	f107 0812 	add.w	r8, r7, #18
 80038c0:	f04f 0900 	mov.w	r9, #0
 80038c4:	e016      	b.n	80038f4 <d_print_comp+0xd60>
 80038c6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80038ca:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80038ce:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80038d2:	4798      	blx	r3
 80038d4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80038d8:	3301      	adds	r3, #1
 80038da:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80038de:	2200      	movs	r2, #0
 80038e0:	2301      	movs	r3, #1
 80038e2:	45b8      	cmp	r8, r7
 80038e4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80038e8:	f804 a002 	strb.w	sl, [r4, r2]
 80038ec:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80038f0:	f000 8727 	beq.w	8004742 <d_print_comp+0x1bae>
 80038f4:	2bff      	cmp	r3, #255	; 0xff
 80038f6:	4619      	mov	r1, r3
 80038f8:	4620      	mov	r0, r4
 80038fa:	f817 af01 	ldrb.w	sl, [r7, #1]!
 80038fe:	d0e2      	beq.n	80038c6 <d_print_comp+0xd32>
 8003900:	461a      	mov	r2, r3
 8003902:	3301      	adds	r3, #1
 8003904:	e7ed      	b.n	80038e2 <d_print_comp+0xd4e>
 8003906:	4f92      	ldr	r7, [pc, #584]	; (8003b50 <d_print_comp+0xfbc>)
 8003908:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800390c:	f107 080d 	add.w	r8, r7, #13
 8003910:	f04f 0900 	mov.w	r9, #0
 8003914:	e016      	b.n	8003944 <d_print_comp+0xdb0>
 8003916:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800391a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800391e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003922:	4798      	blx	r3
 8003924:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003928:	3301      	adds	r3, #1
 800392a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800392e:	2200      	movs	r2, #0
 8003930:	2301      	movs	r3, #1
 8003932:	45b8      	cmp	r8, r7
 8003934:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003938:	f804 a002 	strb.w	sl, [r4, r2]
 800393c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003940:	f000 8708 	beq.w	8004754 <d_print_comp+0x1bc0>
 8003944:	2bff      	cmp	r3, #255	; 0xff
 8003946:	4619      	mov	r1, r3
 8003948:	4620      	mov	r0, r4
 800394a:	f817 ab01 	ldrb.w	sl, [r7], #1
 800394e:	d0e2      	beq.n	8003916 <d_print_comp+0xd82>
 8003950:	461a      	mov	r2, r3
 8003952:	3301      	adds	r3, #1
 8003954:	e7ed      	b.n	8003932 <d_print_comp+0xd9e>
 8003956:	4f7f      	ldr	r7, [pc, #508]	; (8003b54 <d_print_comp+0xfc0>)
 8003958:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800395c:	f107 0818 	add.w	r8, r7, #24
 8003960:	f04f 0900 	mov.w	r9, #0
 8003964:	e016      	b.n	8003994 <d_print_comp+0xe00>
 8003966:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800396a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800396e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003972:	4798      	blx	r3
 8003974:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003978:	3301      	adds	r3, #1
 800397a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800397e:	2200      	movs	r2, #0
 8003980:	2301      	movs	r3, #1
 8003982:	45b8      	cmp	r8, r7
 8003984:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003988:	f804 a002 	strb.w	sl, [r4, r2]
 800398c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003990:	f000 8699 	beq.w	80046c6 <d_print_comp+0x1b32>
 8003994:	2bff      	cmp	r3, #255	; 0xff
 8003996:	4619      	mov	r1, r3
 8003998:	4620      	mov	r0, r4
 800399a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 800399e:	d0e2      	beq.n	8003966 <d_print_comp+0xdd2>
 80039a0:	461a      	mov	r2, r3
 80039a2:	3301      	adds	r3, #1
 80039a4:	e7ed      	b.n	8003982 <d_print_comp+0xdee>
 80039a6:	4f6c      	ldr	r7, [pc, #432]	; (8003b58 <d_print_comp+0xfc4>)
 80039a8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80039ac:	f107 0808 	add.w	r8, r7, #8
 80039b0:	f04f 0900 	mov.w	r9, #0
 80039b4:	e016      	b.n	80039e4 <d_print_comp+0xe50>
 80039b6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80039ba:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80039be:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80039c2:	4798      	blx	r3
 80039c4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80039c8:	3301      	adds	r3, #1
 80039ca:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80039ce:	2200      	movs	r2, #0
 80039d0:	2301      	movs	r3, #1
 80039d2:	45b8      	cmp	r8, r7
 80039d4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80039d8:	f804 a002 	strb.w	sl, [r4, r2]
 80039dc:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80039e0:	f000 86a6 	beq.w	8004730 <d_print_comp+0x1b9c>
 80039e4:	2bff      	cmp	r3, #255	; 0xff
 80039e6:	4619      	mov	r1, r3
 80039e8:	4620      	mov	r0, r4
 80039ea:	f817 af01 	ldrb.w	sl, [r7, #1]!
 80039ee:	d0e2      	beq.n	80039b6 <d_print_comp+0xe22>
 80039f0:	461a      	mov	r2, r3
 80039f2:	3301      	adds	r3, #1
 80039f4:	e7ed      	b.n	80039d2 <d_print_comp+0xe3e>
 80039f6:	4f59      	ldr	r7, [pc, #356]	; (8003b5c <d_print_comp+0xfc8>)
 80039f8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80039fc:	f107 080b 	add.w	r8, r7, #11
 8003a00:	f04f 0900 	mov.w	r9, #0
 8003a04:	e016      	b.n	8003a34 <d_print_comp+0xea0>
 8003a06:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003a0a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003a0e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003a12:	4798      	blx	r3
 8003a14:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003a18:	3301      	adds	r3, #1
 8003a1a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003a1e:	2200      	movs	r2, #0
 8003a20:	2301      	movs	r3, #1
 8003a22:	45b8      	cmp	r8, r7
 8003a24:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003a28:	f804 a002 	strb.w	sl, [r4, r2]
 8003a2c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003a30:	f000 85cc 	beq.w	80045cc <d_print_comp+0x1a38>
 8003a34:	2bff      	cmp	r3, #255	; 0xff
 8003a36:	4619      	mov	r1, r3
 8003a38:	4620      	mov	r0, r4
 8003a3a:	f817 ab01 	ldrb.w	sl, [r7], #1
 8003a3e:	d0e2      	beq.n	8003a06 <d_print_comp+0xe72>
 8003a40:	461a      	mov	r2, r3
 8003a42:	3301      	adds	r3, #1
 8003a44:	e7ed      	b.n	8003a22 <d_print_comp+0xe8e>
 8003a46:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003a4a:	2fff      	cmp	r7, #255	; 0xff
 8003a4c:	d112      	bne.n	8003a74 <d_print_comp+0xee0>
 8003a4e:	f04f 0800 	mov.w	r8, #0
 8003a52:	4639      	mov	r1, r7
 8003a54:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003a58:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003a5c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003a60:	4620      	mov	r0, r4
 8003a62:	4798      	blx	r3
 8003a64:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003a68:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8003a6c:	3301      	adds	r3, #1
 8003a6e:	4647      	mov	r7, r8
 8003a70:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003a74:	237e      	movs	r3, #126	; 0x7e
 8003a76:	1c7a      	adds	r2, r7, #1
 8003a78:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003a7c:	55e3      	strb	r3, [r4, r7]
 8003a7e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003a82:	4631      	mov	r1, r6
 8003a84:	68ea      	ldr	r2, [r5, #12]
 8003a86:	4620      	mov	r0, r4
 8003a88:	f7ff f884 	bl	8002b94 <d_print_comp>
 8003a8c:	9905      	ldr	r1, [sp, #20]
 8003a8e:	686a      	ldr	r2, [r5, #4]
 8003a90:	f7ff b973 	b.w	8002d7a <d_print_comp+0x1e6>
 8003a94:	4631      	mov	r1, r6
 8003a96:	68ea      	ldr	r2, [r5, #12]
 8003a98:	4620      	mov	r0, r4
 8003a9a:	f7ff f87b 	bl	8002b94 <d_print_comp>
 8003a9e:	9905      	ldr	r1, [sp, #20]
 8003aa0:	686a      	ldr	r2, [r5, #4]
 8003aa2:	f7ff b96a 	b.w	8002d7a <d_print_comp+0x1e6>
 8003aa6:	f8d5 8008 	ldr.w	r8, [r5, #8]
 8003aaa:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003aae:	f1b8 0f00 	cmp.w	r8, #0
 8003ab2:	f000 878b 	beq.w	80049cc <d_print_comp+0x1e38>
 8003ab6:	4e2a      	ldr	r6, [pc, #168]	; (8003b60 <d_print_comp+0xfcc>)
 8003ab8:	f04f 0900 	mov.w	r9, #0
 8003abc:	f106 0a06 	add.w	sl, r6, #6
 8003ac0:	e015      	b.n	8003aee <d_print_comp+0xf5a>
 8003ac2:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003ac6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003aca:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003ace:	4798      	blx	r3
 8003ad0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003ad4:	3301      	adds	r3, #1
 8003ad6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003ada:	2200      	movs	r2, #0
 8003adc:	2301      	movs	r3, #1
 8003ade:	45b2      	cmp	sl, r6
 8003ae0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003ae4:	54a7      	strb	r7, [r4, r2]
 8003ae6:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8003aea:	f000 868f 	beq.w	800480c <d_print_comp+0x1c78>
 8003aee:	2bff      	cmp	r3, #255	; 0xff
 8003af0:	4619      	mov	r1, r3
 8003af2:	4620      	mov	r0, r4
 8003af4:	f816 7b01 	ldrb.w	r7, [r6], #1
 8003af8:	d0e3      	beq.n	8003ac2 <d_print_comp+0xf2e>
 8003afa:	461a      	mov	r2, r3
 8003afc:	3301      	adds	r3, #1
 8003afe:	e7ee      	b.n	8003ade <d_print_comp+0xf4a>
 8003b00:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8003b04:	2b00      	cmp	r3, #0
 8003b06:	f040 86d1 	bne.w	80048ac <d_print_comp+0x1d18>
 8003b0a:	f105 0108 	add.w	r1, r5, #8
 8003b0e:	4620      	mov	r0, r4
 8003b10:	f7fc fe4a 	bl	80007a8 <d_lookup_template_argument.isra.10>
 8003b14:	4602      	mov	r2, r0
 8003b16:	2800      	cmp	r0, #0
 8003b18:	f001 8271 	beq.w	8004ffe <d_print_comp+0x246a>
 8003b1c:	7803      	ldrb	r3, [r0, #0]
 8003b1e:	2b2f      	cmp	r3, #47	; 0x2f
 8003b20:	f001 8262 	beq.w	8004fe8 <d_print_comp+0x2454>
 8003b24:	f8d4 7110 	ldr.w	r7, [r4, #272]	; 0x110
 8003b28:	683b      	ldr	r3, [r7, #0]
 8003b2a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8003b2e:	4631      	mov	r1, r6
 8003b30:	4620      	mov	r0, r4
 8003b32:	f7ff f82f 	bl	8002b94 <d_print_comp>
 8003b36:	f8c4 7110 	str.w	r7, [r4, #272]	; 0x110
 8003b3a:	9905      	ldr	r1, [sp, #20]
 8003b3c:	686a      	ldr	r2, [r5, #4]
 8003b3e:	f7ff b91c 	b.w	8002d7a <d_print_comp+0x1e6>
 8003b42:	bf00      	nop
 8003b44:	08011e77 	.word	0x08011e77
 8003b48:	08011e63 	.word	0x08011e63
 8003b4c:	08011e4f 	.word	0x08011e4f
 8003b50:	08011e40 	.word	0x08011e40
 8003b54:	08011e1b 	.word	0x08011e1b
 8003b58:	08011e0f 	.word	0x08011e0f
 8003b5c:	08011e04 	.word	0x08011e04
 8003b60:	08011fe4 	.word	0x08011fe4
 8003b64:	2300      	movs	r3, #0
 8003b66:	0771      	lsls	r1, r6, #29
 8003b68:	f8d4 9114 	ldr.w	r9, [r4, #276]	; 0x114
 8003b6c:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 8003b70:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003b74:	f8c4 5144 	str.w	r5, [r4, #324]	; 0x144
 8003b78:	68af      	ldr	r7, [r5, #8]
 8003b7a:	d505      	bpl.n	8003b88 <d_print_comp+0xff4>
 8003b7c:	783b      	ldrb	r3, [r7, #0]
 8003b7e:	b91b      	cbnz	r3, 8003b88 <d_print_comp+0xff4>
 8003b80:	68fa      	ldr	r2, [r7, #12]
 8003b82:	2a06      	cmp	r2, #6
 8003b84:	f001 8433 	beq.w	80053ee <d_print_comp+0x285a>
 8003b88:	463a      	mov	r2, r7
 8003b8a:	4631      	mov	r1, r6
 8003b8c:	4620      	mov	r0, r4
 8003b8e:	f7ff f801 	bl	8002b94 <d_print_comp>
 8003b92:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003b96:	2b3c      	cmp	r3, #60	; 0x3c
 8003b98:	f001 8206 	beq.w	8004fa8 <d_print_comp+0x2414>
 8003b9c:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003ba0:	2fff      	cmp	r7, #255	; 0xff
 8003ba2:	d112      	bne.n	8003bca <d_print_comp+0x1036>
 8003ba4:	f04f 0a00 	mov.w	sl, #0
 8003ba8:	4639      	mov	r1, r7
 8003baa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003bae:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8003bb2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003bb6:	4620      	mov	r0, r4
 8003bb8:	4798      	blx	r3
 8003bba:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003bbe:	f8c4 a100 	str.w	sl, [r4, #256]	; 0x100
 8003bc2:	3301      	adds	r3, #1
 8003bc4:	4657      	mov	r7, sl
 8003bc6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003bca:	233c      	movs	r3, #60	; 0x3c
 8003bcc:	1c7a      	adds	r2, r7, #1
 8003bce:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003bd2:	55e3      	strb	r3, [r4, r7]
 8003bd4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003bd8:	4631      	mov	r1, r6
 8003bda:	68ea      	ldr	r2, [r5, #12]
 8003bdc:	4620      	mov	r0, r4
 8003bde:	f7fe ffd9 	bl	8002b94 <d_print_comp>
 8003be2:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8003be6:	2b3e      	cmp	r3, #62	; 0x3e
 8003be8:	f001 806f 	beq.w	8004cca <d_print_comp+0x2136>
 8003bec:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8003bf0:	2fff      	cmp	r7, #255	; 0xff
 8003bf2:	d111      	bne.n	8003c18 <d_print_comp+0x1084>
 8003bf4:	2600      	movs	r6, #0
 8003bf6:	4639      	mov	r1, r7
 8003bf8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003bfc:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8003c00:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003c04:	4620      	mov	r0, r4
 8003c06:	4798      	blx	r3
 8003c08:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003c0c:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8003c10:	3301      	adds	r3, #1
 8003c12:	4637      	mov	r7, r6
 8003c14:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003c18:	233e      	movs	r3, #62	; 0x3e
 8003c1a:	1c7a      	adds	r2, r7, #1
 8003c1c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003c20:	55e3      	strb	r3, [r4, r7]
 8003c22:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8003c26:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8003c2a:	f8c4 8144 	str.w	r8, [r4, #324]	; 0x144
 8003c2e:	9905      	ldr	r1, [sp, #20]
 8003c30:	686a      	ldr	r2, [r5, #4]
 8003c32:	f7ff b8a2 	b.w	8002d7a <d_print_comp+0x1e6>
 8003c36:	4fda      	ldr	r7, [pc, #872]	; (8003fa0 <d_print_comp+0x140c>)
 8003c38:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003c3c:	f107 0811 	add.w	r8, r7, #17
 8003c40:	f04f 0900 	mov.w	r9, #0
 8003c44:	e016      	b.n	8003c74 <d_print_comp+0x10e0>
 8003c46:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003c4a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003c4e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003c52:	4798      	blx	r3
 8003c54:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003c58:	3301      	adds	r3, #1
 8003c5a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003c5e:	2200      	movs	r2, #0
 8003c60:	2301      	movs	r3, #1
 8003c62:	45b8      	cmp	r8, r7
 8003c64:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003c68:	f804 a002 	strb.w	sl, [r4, r2]
 8003c6c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003c70:	f000 84eb 	beq.w	800464a <d_print_comp+0x1ab6>
 8003c74:	2bff      	cmp	r3, #255	; 0xff
 8003c76:	4619      	mov	r1, r3
 8003c78:	4620      	mov	r0, r4
 8003c7a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003c7e:	d0e2      	beq.n	8003c46 <d_print_comp+0x10b2>
 8003c80:	461a      	mov	r2, r3
 8003c82:	3301      	adds	r3, #1
 8003c84:	e7ed      	b.n	8003c62 <d_print_comp+0x10ce>
 8003c86:	4fc7      	ldr	r7, [pc, #796]	; (8003fa4 <d_print_comp+0x1410>)
 8003c88:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003c8c:	f107 0815 	add.w	r8, r7, #21
 8003c90:	f04f 0900 	mov.w	r9, #0
 8003c94:	e016      	b.n	8003cc4 <d_print_comp+0x1130>
 8003c96:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003c9a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003c9e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003ca2:	4798      	blx	r3
 8003ca4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003ca8:	3301      	adds	r3, #1
 8003caa:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003cae:	2200      	movs	r2, #0
 8003cb0:	2301      	movs	r3, #1
 8003cb2:	45b8      	cmp	r8, r7
 8003cb4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003cb8:	f804 a002 	strb.w	sl, [r4, r2]
 8003cbc:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003cc0:	f000 84cc 	beq.w	800465c <d_print_comp+0x1ac8>
 8003cc4:	2bff      	cmp	r3, #255	; 0xff
 8003cc6:	4619      	mov	r1, r3
 8003cc8:	4620      	mov	r0, r4
 8003cca:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003cce:	d0e2      	beq.n	8003c96 <d_print_comp+0x1102>
 8003cd0:	461a      	mov	r2, r3
 8003cd2:	3301      	adds	r3, #1
 8003cd4:	e7ed      	b.n	8003cb2 <d_print_comp+0x111e>
 8003cd6:	4fb4      	ldr	r7, [pc, #720]	; (8003fa8 <d_print_comp+0x1414>)
 8003cd8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003cdc:	f107 0819 	add.w	r8, r7, #25
 8003ce0:	f04f 0900 	mov.w	r9, #0
 8003ce4:	e016      	b.n	8003d14 <d_print_comp+0x1180>
 8003ce6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003cea:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003cee:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003cf2:	4798      	blx	r3
 8003cf4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003cf8:	3301      	adds	r3, #1
 8003cfa:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003cfe:	2200      	movs	r2, #0
 8003d00:	2301      	movs	r3, #1
 8003d02:	45b8      	cmp	r8, r7
 8003d04:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003d08:	f804 a002 	strb.w	sl, [r4, r2]
 8003d0c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003d10:	f000 8489 	beq.w	8004626 <d_print_comp+0x1a92>
 8003d14:	2bff      	cmp	r3, #255	; 0xff
 8003d16:	4619      	mov	r1, r3
 8003d18:	4620      	mov	r0, r4
 8003d1a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003d1e:	d0e2      	beq.n	8003ce6 <d_print_comp+0x1152>
 8003d20:	461a      	mov	r2, r3
 8003d22:	3301      	adds	r3, #1
 8003d24:	e7ed      	b.n	8003d02 <d_print_comp+0x116e>
 8003d26:	4fa1      	ldr	r7, [pc, #644]	; (8003fac <d_print_comp+0x1418>)
 8003d28:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003d2c:	f107 0816 	add.w	r8, r7, #22
 8003d30:	f04f 0900 	mov.w	r9, #0
 8003d34:	e016      	b.n	8003d64 <d_print_comp+0x11d0>
 8003d36:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003d3a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003d3e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003d42:	4798      	blx	r3
 8003d44:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003d48:	3301      	adds	r3, #1
 8003d4a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003d4e:	2200      	movs	r2, #0
 8003d50:	2301      	movs	r3, #1
 8003d52:	45b8      	cmp	r8, r7
 8003d54:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003d58:	f804 a002 	strb.w	sl, [r4, r2]
 8003d5c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003d60:	f000 846a 	beq.w	8004638 <d_print_comp+0x1aa4>
 8003d64:	2bff      	cmp	r3, #255	; 0xff
 8003d66:	4619      	mov	r1, r3
 8003d68:	4620      	mov	r0, r4
 8003d6a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003d6e:	d0e2      	beq.n	8003d36 <d_print_comp+0x11a2>
 8003d70:	461a      	mov	r2, r3
 8003d72:	3301      	adds	r3, #1
 8003d74:	e7ed      	b.n	8003d52 <d_print_comp+0x11be>
 8003d76:	4f8e      	ldr	r7, [pc, #568]	; (8003fb0 <d_print_comp+0x141c>)
 8003d78:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003d7c:	f107 0813 	add.w	r8, r7, #19
 8003d80:	f04f 0900 	mov.w	r9, #0
 8003d84:	e016      	b.n	8003db4 <d_print_comp+0x1220>
 8003d86:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003d8a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003d8e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003d92:	4798      	blx	r3
 8003d94:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003d98:	3301      	adds	r3, #1
 8003d9a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003d9e:	2200      	movs	r2, #0
 8003da0:	2301      	movs	r3, #1
 8003da2:	45b8      	cmp	r8, r7
 8003da4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003da8:	f804 a002 	strb.w	sl, [r4, r2]
 8003dac:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003db0:	f000 8427 	beq.w	8004602 <d_print_comp+0x1a6e>
 8003db4:	2bff      	cmp	r3, #255	; 0xff
 8003db6:	4619      	mov	r1, r3
 8003db8:	4620      	mov	r0, r4
 8003dba:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003dbe:	d0e2      	beq.n	8003d86 <d_print_comp+0x11f2>
 8003dc0:	461a      	mov	r2, r3
 8003dc2:	3301      	adds	r3, #1
 8003dc4:	e7ed      	b.n	8003da2 <d_print_comp+0x120e>
 8003dc6:	4f7b      	ldr	r7, [pc, #492]	; (8003fb4 <d_print_comp+0x1420>)
 8003dc8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003dcc:	f107 080f 	add.w	r8, r7, #15
 8003dd0:	f04f 0900 	mov.w	r9, #0
 8003dd4:	e016      	b.n	8003e04 <d_print_comp+0x1270>
 8003dd6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003dda:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003dde:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003de2:	4798      	blx	r3
 8003de4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003de8:	3301      	adds	r3, #1
 8003dea:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003dee:	2200      	movs	r2, #0
 8003df0:	2301      	movs	r3, #1
 8003df2:	45b8      	cmp	r8, r7
 8003df4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003df8:	f804 a002 	strb.w	sl, [r4, r2]
 8003dfc:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003e00:	f000 8408 	beq.w	8004614 <d_print_comp+0x1a80>
 8003e04:	2bff      	cmp	r3, #255	; 0xff
 8003e06:	4619      	mov	r1, r3
 8003e08:	4620      	mov	r0, r4
 8003e0a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003e0e:	d0e2      	beq.n	8003dd6 <d_print_comp+0x1242>
 8003e10:	461a      	mov	r2, r3
 8003e12:	3301      	adds	r3, #1
 8003e14:	e7ed      	b.n	8003df2 <d_print_comp+0x125e>
 8003e16:	4f68      	ldr	r7, [pc, #416]	; (8003fb8 <d_print_comp+0x1424>)
 8003e18:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003e1c:	f107 081a 	add.w	r8, r7, #26
 8003e20:	f04f 0900 	mov.w	r9, #0
 8003e24:	e016      	b.n	8003e54 <d_print_comp+0x12c0>
 8003e26:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003e2a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003e2e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003e32:	4798      	blx	r3
 8003e34:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003e38:	3301      	adds	r3, #1
 8003e3a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003e3e:	2200      	movs	r2, #0
 8003e40:	2301      	movs	r3, #1
 8003e42:	45b8      	cmp	r8, r7
 8003e44:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003e48:	f804 a002 	strb.w	sl, [r4, r2]
 8003e4c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003e50:	f000 83c5 	beq.w	80045de <d_print_comp+0x1a4a>
 8003e54:	2bff      	cmp	r3, #255	; 0xff
 8003e56:	4619      	mov	r1, r3
 8003e58:	4620      	mov	r0, r4
 8003e5a:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003e5e:	d0e2      	beq.n	8003e26 <d_print_comp+0x1292>
 8003e60:	461a      	mov	r2, r3
 8003e62:	3301      	adds	r3, #1
 8003e64:	e7ed      	b.n	8003e42 <d_print_comp+0x12ae>
 8003e66:	4f55      	ldr	r7, [pc, #340]	; (8003fbc <d_print_comp+0x1428>)
 8003e68:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003e6c:	f107 0811 	add.w	r8, r7, #17
 8003e70:	f04f 0900 	mov.w	r9, #0
 8003e74:	e016      	b.n	8003ea4 <d_print_comp+0x1310>
 8003e76:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003e7a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003e7e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8003e82:	4798      	blx	r3
 8003e84:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003e88:	3301      	adds	r3, #1
 8003e8a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003e8e:	2200      	movs	r2, #0
 8003e90:	2301      	movs	r3, #1
 8003e92:	45b8      	cmp	r8, r7
 8003e94:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003e98:	f804 a002 	strb.w	sl, [r4, r2]
 8003e9c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8003ea0:	f000 83a6 	beq.w	80045f0 <d_print_comp+0x1a5c>
 8003ea4:	2bff      	cmp	r3, #255	; 0xff
 8003ea6:	4619      	mov	r1, r3
 8003ea8:	4620      	mov	r0, r4
 8003eaa:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8003eae:	d0e2      	beq.n	8003e76 <d_print_comp+0x12e2>
 8003eb0:	461a      	mov	r2, r3
 8003eb2:	3301      	adds	r3, #1
 8003eb4:	e7ed      	b.n	8003e92 <d_print_comp+0x12fe>
 8003eb6:	f8d4 711c 	ldr.w	r7, [r4, #284]	; 0x11c
 8003eba:	f8d5 9008 	ldr.w	r9, [r5, #8]
 8003ebe:	2f00      	cmp	r7, #0
 8003ec0:	f040 85ae 	bne.w	8004a20 <d_print_comp+0x1e8c>
 8003ec4:	f899 2000 	ldrb.w	r2, [r9]
 8003ec8:	2a05      	cmp	r2, #5
 8003eca:	f001 8180 	beq.w	80051ce <d_print_comp+0x263a>
 8003ece:	f899 3000 	ldrb.w	r3, [r9]
 8003ed2:	2b23      	cmp	r3, #35	; 0x23
 8003ed4:	f000 85a0 	beq.w	8004a18 <d_print_comp+0x1e84>
 8003ed8:	782a      	ldrb	r2, [r5, #0]
 8003eda:	429a      	cmp	r2, r3
 8003edc:	f000 859c 	beq.w	8004a18 <d_print_comp+0x1e84>
 8003ee0:	2b24      	cmp	r3, #36	; 0x24
 8003ee2:	f001 8162 	beq.w	80051aa <d_print_comp+0x2616>
 8003ee6:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
 8003eea:	46a9      	mov	r9, r5
 8003eec:	ab18      	add	r3, sp, #96	; 0x60
 8003eee:	f8d4 2110 	ldr.w	r2, [r4, #272]	; 0x110
 8003ef2:	f843 cd40 	str.w	ip, [r3, #-64]!
 8003ef6:	2100      	movs	r1, #0
 8003ef8:	e9cd 120a 	strd	r1, r2, [sp, #40]	; 0x28
 8003efc:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8003f00:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003f04:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8003f08:	e010      	b.n	8003f2c <d_print_comp+0x1398>
 8003f0a:	2200      	movs	r2, #0
 8003f0c:	ab18      	add	r3, sp, #96	; 0x60
 8003f0e:	f8d4 1114 	ldr.w	r1, [r4, #276]	; 0x114
 8003f12:	f843 1d40 	str.w	r1, [r3, #-64]!
 8003f16:	f8d4 1110 	ldr.w	r1, [r4, #272]	; 0x110
 8003f1a:	9509      	str	r5, [sp, #36]	; 0x24
 8003f1c:	2000      	movs	r0, #0
 8003f1e:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003f22:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8003f26:	46a9      	mov	r9, r5
 8003f28:	2a00      	cmp	r2, #0
 8003f2a:	d0eb      	beq.n	8003f04 <d_print_comp+0x1370>
 8003f2c:	4631      	mov	r1, r6
 8003f2e:	4620      	mov	r0, r4
 8003f30:	f7fe fe30 	bl	8002b94 <d_print_comp>
 8003f34:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003f36:	b923      	cbnz	r3, 8003f42 <d_print_comp+0x13ae>
 8003f38:	464a      	mov	r2, r9
 8003f3a:	4631      	mov	r1, r6
 8003f3c:	4620      	mov	r0, r4
 8003f3e:	f001 fcbf 	bl	80058c0 <d_print_mod>
 8003f42:	9b08      	ldr	r3, [sp, #32]
 8003f44:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8003f48:	b10f      	cbz	r7, 8003f4e <d_print_comp+0x13ba>
 8003f4a:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
 8003f4e:	9905      	ldr	r1, [sp, #20]
 8003f50:	686a      	ldr	r2, [r5, #4]
 8003f52:	f7fe bf12 	b.w	8002d7a <d_print_comp+0x1e6>
 8003f56:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
 8003f5a:	4663      	mov	r3, ip
 8003f5c:	f1bc 0f00 	cmp.w	ip, #0
 8003f60:	d0c3      	beq.n	8003eea <d_print_comp+0x1356>
 8003f62:	6899      	ldr	r1, [r3, #8]
 8003f64:	b951      	cbnz	r1, 8003f7c <d_print_comp+0x13e8>
 8003f66:	685a      	ldr	r2, [r3, #4]
 8003f68:	7812      	ldrb	r2, [r2, #0]
 8003f6a:	f1a2 0e19 	sub.w	lr, r2, #25
 8003f6e:	f1be 0f02 	cmp.w	lr, #2
 8003f72:	f201 80fc 	bhi.w	800516e <d_print_comp+0x25da>
 8003f76:	4290      	cmp	r0, r2
 8003f78:	f001 80f0 	beq.w	800515c <d_print_comp+0x25c8>
 8003f7c:	681b      	ldr	r3, [r3, #0]
 8003f7e:	2b00      	cmp	r3, #0
 8003f80:	d1ef      	bne.n	8003f62 <d_print_comp+0x13ce>
 8003f82:	e7b2      	b.n	8003eea <d_print_comp+0x1356>
 8003f84:	e9d5 6702 	ldrd	r6, r7, [r5, #8]
 8003f88:	2f00      	cmp	r7, #0
 8003f8a:	f43e aef6 	beq.w	8002d7a <d_print_comp+0x1e6>
 8003f8e:	4437      	add	r7, r6
 8003f90:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8003f94:	3f01      	subs	r7, #1
 8003f96:	3e01      	subs	r6, #1
 8003f98:	f04f 0800 	mov.w	r8, #0
 8003f9c:	e027      	b.n	8003fee <d_print_comp+0x145a>
 8003f9e:	bf00      	nop
 8003fa0:	08011f1b 	.word	0x08011f1b
 8003fa4:	08011f03 	.word	0x08011f03
 8003fa8:	08011ee7 	.word	0x08011ee7
 8003fac:	08011ecf 	.word	0x08011ecf
 8003fb0:	08011ebb 	.word	0x08011ebb
 8003fb4:	08011eab 	.word	0x08011eab
 8003fb8:	08011e8f 	.word	0x08011e8f
 8003fbc:	08011e7b 	.word	0x08011e7b
 8003fc0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8003fc4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8003fc8:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8003fcc:	4798      	blx	r3
 8003fce:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8003fd2:	3301      	adds	r3, #1
 8003fd4:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8003fd8:	2200      	movs	r2, #0
 8003fda:	2301      	movs	r3, #1
 8003fdc:	42b7      	cmp	r7, r6
 8003fde:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8003fe2:	f804 9002 	strb.w	r9, [r4, r2]
 8003fe6:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8003fea:	f000 83ce 	beq.w	800478a <d_print_comp+0x1bf6>
 8003fee:	2bff      	cmp	r3, #255	; 0xff
 8003ff0:	4619      	mov	r1, r3
 8003ff2:	4620      	mov	r0, r4
 8003ff4:	f816 9f01 	ldrb.w	r9, [r6, #1]!
 8003ff8:	d0e2      	beq.n	8003fc0 <d_print_comp+0x142c>
 8003ffa:	461a      	mov	r2, r3
 8003ffc:	3301      	adds	r3, #1
 8003ffe:	e7ed      	b.n	8003fdc <d_print_comp+0x1448>
 8004000:	4631      	mov	r1, r6
 8004002:	68aa      	ldr	r2, [r5, #8]
 8004004:	4620      	mov	r0, r4
 8004006:	f7fe fdc5 	bl	8002b94 <d_print_comp>
 800400a:	9905      	ldr	r1, [sp, #20]
 800400c:	686a      	ldr	r2, [r5, #4]
 800400e:	f7fe beb4 	b.w	8002d7a <d_print_comp+0x1e6>
 8004012:	f016 0604 	ands.w	r6, r6, #4
 8004016:	68a8      	ldr	r0, [r5, #8]
 8004018:	f040 8505 	bne.w	8004a26 <d_print_comp+0x1e92>
 800401c:	e9d0 7300 	ldrd	r7, r3, [r0]
 8004020:	2b00      	cmp	r3, #0
 8004022:	f43e aeaa 	beq.w	8002d7a <d_print_comp+0x1e6>
 8004026:	eb07 0803 	add.w	r8, r7, r3
 800402a:	f108 38ff 	add.w	r8, r8, #4294967295
 800402e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004032:	3f01      	subs	r7, #1
 8004034:	46b1      	mov	r9, r6
 8004036:	e015      	b.n	8004064 <d_print_comp+0x14d0>
 8004038:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800403c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004040:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004044:	4798      	blx	r3
 8004046:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800404a:	3301      	adds	r3, #1
 800404c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004050:	2200      	movs	r2, #0
 8004052:	2301      	movs	r3, #1
 8004054:	45b8      	cmp	r8, r7
 8004056:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800405a:	54a6      	strb	r6, [r4, r2]
 800405c:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004060:	f000 8545 	beq.w	8004aee <d_print_comp+0x1f5a>
 8004064:	2bff      	cmp	r3, #255	; 0xff
 8004066:	4619      	mov	r1, r3
 8004068:	4620      	mov	r0, r4
 800406a:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 800406e:	d0e3      	beq.n	8004038 <d_print_comp+0x14a4>
 8004070:	461a      	mov	r2, r3
 8004072:	3301      	adds	r3, #1
 8004074:	e7ee      	b.n	8004054 <d_print_comp+0x14c0>
 8004076:	f8d5 8008 	ldr.w	r8, [r5, #8]
 800407a:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 800407e:	9302      	str	r3, [sp, #8]
 8004080:	2200      	movs	r2, #0
 8004082:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 8004086:	f1b8 0f00 	cmp.w	r8, #0
 800408a:	d025      	beq.n	80040d8 <d_print_comp+0x1544>
 800408c:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8004090:	9301      	str	r3, [sp, #4]
 8004092:	f10d 0920 	add.w	r9, sp, #32
 8004096:	4623      	mov	r3, r4
 8004098:	4617      	mov	r7, r2
 800409a:	4644      	mov	r4, r8
 800409c:	4692      	mov	sl, r2
 800409e:	4649      	mov	r1, r9
 80040a0:	46ab      	mov	fp, r5
 80040a2:	4698      	mov	r8, r3
 80040a4:	7825      	ldrb	r5, [r4, #0]
 80040a6:	9b01      	ldr	r3, [sp, #4]
 80040a8:	600a      	str	r2, [r1, #0]
 80040aa:	4628      	mov	r0, r5
 80040ac:	e9c1 4a01 	strd	r4, sl, [r1, #4]
 80040b0:	60cb      	str	r3, [r1, #12]
 80040b2:	3701      	adds	r7, #1
 80040b4:	460a      	mov	r2, r1
 80040b6:	f7fc f97f 	bl	80003b8 <is_fnqual_component_type>
 80040ba:	2800      	cmp	r0, #0
 80040bc:	f000 87c8 	beq.w	8005050 <d_print_comp+0x24bc>
 80040c0:	68a4      	ldr	r4, [r4, #8]
 80040c2:	2c00      	cmp	r4, #0
 80040c4:	f001 8057 	beq.w	8005176 <d_print_comp+0x25e2>
 80040c8:	2f04      	cmp	r7, #4
 80040ca:	f101 0110 	add.w	r1, r1, #16
 80040ce:	d1e9      	bne.n	80040a4 <d_print_comp+0x1510>
 80040d0:	4644      	mov	r4, r8
 80040d2:	465d      	mov	r5, fp
 80040d4:	f8c8 2114 	str.w	r2, [r8, #276]	; 0x114
 80040d8:	2301      	movs	r3, #1
 80040da:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 80040de:	9905      	ldr	r1, [sp, #20]
 80040e0:	686a      	ldr	r2, [r5, #4]
 80040e2:	f7fe be4a 	b.w	8002d7a <d_print_comp+0x1e6>
 80040e6:	f016 0604 	ands.w	r6, r6, #4
 80040ea:	68af      	ldr	r7, [r5, #8]
 80040ec:	f040 8405 	bne.w	80048fa <d_print_comp+0x1d66>
 80040f0:	68eb      	ldr	r3, [r5, #12]
 80040f2:	2b00      	cmp	r3, #0
 80040f4:	f43e ae41 	beq.w	8002d7a <d_print_comp+0x1e6>
 80040f8:	eb07 0803 	add.w	r8, r7, r3
 80040fc:	f108 38ff 	add.w	r8, r8, #4294967295
 8004100:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004104:	3f01      	subs	r7, #1
 8004106:	46b1      	mov	r9, r6
 8004108:	e015      	b.n	8004136 <d_print_comp+0x15a2>
 800410a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800410e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004112:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004116:	4798      	blx	r3
 8004118:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800411c:	3301      	adds	r3, #1
 800411e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004122:	2200      	movs	r2, #0
 8004124:	2301      	movs	r3, #1
 8004126:	45b8      	cmp	r8, r7
 8004128:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800412c:	54a6      	strb	r6, [r4, r2]
 800412e:	f884 6104 	strb.w	r6, [r4, #260]	; 0x104
 8004132:	f000 84e0 	beq.w	8004af6 <d_print_comp+0x1f62>
 8004136:	2bff      	cmp	r3, #255	; 0xff
 8004138:	4619      	mov	r1, r3
 800413a:	4620      	mov	r0, r4
 800413c:	f817 6f01 	ldrb.w	r6, [r7, #1]!
 8004140:	d0e3      	beq.n	800410a <d_print_comp+0x1576>
 8004142:	461a      	mov	r2, r3
 8004144:	3301      	adds	r3, #1
 8004146:	e7ee      	b.n	8004126 <d_print_comp+0x1592>
 8004148:	68aa      	ldr	r2, [r5, #8]
 800414a:	4631      	mov	r1, r6
 800414c:	4620      	mov	r0, r4
 800414e:	f7fe fd21 	bl	8002b94 <d_print_comp>
 8004152:	f016 0904 	ands.w	r9, r6, #4
 8004156:	f000 8681 	beq.w	8004e5c <d_print_comp+0x22c8>
 800415a:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 800415e:	2fff      	cmp	r7, #255	; 0xff
 8004160:	d112      	bne.n	8004188 <d_print_comp+0x15f4>
 8004162:	f04f 0800 	mov.w	r8, #0
 8004166:	4639      	mov	r1, r7
 8004168:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800416c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004170:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004174:	4620      	mov	r0, r4
 8004176:	4798      	blx	r3
 8004178:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800417c:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8004180:	3301      	adds	r3, #1
 8004182:	4647      	mov	r7, r8
 8004184:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004188:	232e      	movs	r3, #46	; 0x2e
 800418a:	1c7a      	adds	r2, r7, #1
 800418c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004190:	55e3      	strb	r3, [r4, r7]
 8004192:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004196:	68ef      	ldr	r7, [r5, #12]
 8004198:	783b      	ldrb	r3, [r7, #0]
 800419a:	2b46      	cmp	r3, #70	; 0x46
 800419c:	f000 873a 	beq.w	8005014 <d_print_comp+0x2480>
 80041a0:	463a      	mov	r2, r7
 80041a2:	4631      	mov	r1, r6
 80041a4:	4620      	mov	r0, r4
 80041a6:	f7fe fcf5 	bl	8002b94 <d_print_comp>
 80041aa:	9905      	ldr	r1, [sp, #20]
 80041ac:	686a      	ldr	r2, [r5, #4]
 80041ae:	f7fe bde4 	b.w	8002d7a <d_print_comp+0x1e6>
 80041b2:	2301      	movs	r3, #1
 80041b4:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 80041b8:	686a      	ldr	r2, [r5, #4]
 80041ba:	f7fe bdde 	b.w	8002d7a <d_print_comp+0x1e6>
 80041be:	3701      	adds	r7, #1
 80041c0:	454f      	cmp	r7, r9
 80041c2:	f47e ae2b 	bne.w	8002e1c <d_print_comp+0x288>
 80041c6:	9d03      	ldr	r5, [sp, #12]
 80041c8:	9905      	ldr	r1, [sp, #20]
 80041ca:	686a      	ldr	r2, [r5, #4]
 80041cc:	f7fe bdd5 	b.w	8002d7a <d_print_comp+0x1e6>
 80041d0:	4631      	mov	r1, r6
 80041d2:	68aa      	ldr	r2, [r5, #8]
 80041d4:	4620      	mov	r0, r4
 80041d6:	f7fe fcdd 	bl	8002b94 <d_print_comp>
 80041da:	9905      	ldr	r1, [sp, #20]
 80041dc:	686a      	ldr	r2, [r5, #4]
 80041de:	f7fe bdcc 	b.w	8002d7a <d_print_comp+0x1e6>
 80041e2:	4631      	mov	r1, r6
 80041e4:	68aa      	ldr	r2, [r5, #8]
 80041e6:	4620      	mov	r0, r4
 80041e8:	f7fe fcd4 	bl	8002b94 <d_print_comp>
 80041ec:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80041f0:	2fff      	cmp	r7, #255	; 0xff
 80041f2:	d111      	bne.n	8004218 <d_print_comp+0x1684>
 80041f4:	2600      	movs	r6, #0
 80041f6:	4639      	mov	r1, r7
 80041f8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80041fc:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004200:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004204:	4620      	mov	r0, r4
 8004206:	4798      	blx	r3
 8004208:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800420c:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004210:	3301      	adds	r3, #1
 8004212:	4637      	mov	r7, r6
 8004214:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004218:	1c7a      	adds	r2, r7, #1
 800421a:	2329      	movs	r3, #41	; 0x29
 800421c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004220:	55e3      	strb	r3, [r4, r7]
 8004222:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004226:	686a      	ldr	r2, [r5, #4]
 8004228:	9905      	ldr	r1, [sp, #20]
 800422a:	f7fe bda6 	b.w	8002d7a <d_print_comp+0x1e6>
 800422e:	f8d4 311c 	ldr.w	r3, [r4, #284]	; 0x11c
 8004232:	68aa      	ldr	r2, [r5, #8]
 8004234:	4fd3      	ldr	r7, [pc, #844]	; (8004584 <d_print_comp+0x19f0>)
 8004236:	3301      	adds	r3, #1
 8004238:	4631      	mov	r1, r6
 800423a:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
 800423e:	4620      	mov	r0, r4
 8004240:	f7fe fca8 	bl	8002b94 <d_print_comp>
 8004244:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8004248:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800424c:	3a01      	subs	r2, #1
 800424e:	f8c4 211c 	str.w	r2, [r4, #284]	; 0x11c
 8004252:	1cbe      	adds	r6, r7, #2
 8004254:	f04f 0800 	mov.w	r8, #0
 8004258:	e015      	b.n	8004286 <d_print_comp+0x16f2>
 800425a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800425e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004262:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004266:	4798      	blx	r3
 8004268:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800426c:	3301      	adds	r3, #1
 800426e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004272:	2200      	movs	r2, #0
 8004274:	2301      	movs	r3, #1
 8004276:	42b7      	cmp	r7, r6
 8004278:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800427c:	f804 9002 	strb.w	r9, [r4, r2]
 8004280:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8004284:	d011      	beq.n	80042aa <d_print_comp+0x1716>
 8004286:	2bff      	cmp	r3, #255	; 0xff
 8004288:	4619      	mov	r1, r3
 800428a:	4620      	mov	r0, r4
 800428c:	f817 9b01 	ldrb.w	r9, [r7], #1
 8004290:	d0e3      	beq.n	800425a <d_print_comp+0x16c6>
 8004292:	461a      	mov	r2, r3
 8004294:	3301      	adds	r3, #1
 8004296:	e7ee      	b.n	8004276 <d_print_comp+0x16e2>
 8004298:	4631      	mov	r1, r6
 800429a:	68aa      	ldr	r2, [r5, #8]
 800429c:	4620      	mov	r0, r4
 800429e:	f7fe fc79 	bl	8002b94 <d_print_comp>
 80042a2:	9905      	ldr	r1, [sp, #20]
 80042a4:	686a      	ldr	r2, [r5, #4]
 80042a6:	f7fe bd68 	b.w	8002d7a <d_print_comp+0x1e6>
 80042aa:	68ea      	ldr	r2, [r5, #12]
 80042ac:	49b6      	ldr	r1, [pc, #728]	; (8004588 <d_print_comp+0x19f4>)
 80042ae:	3201      	adds	r2, #1
 80042b0:	a808      	add	r0, sp, #32
 80042b2:	f009 fed1 	bl	800e058 <sprintf>
 80042b6:	a808      	add	r0, sp, #32
 80042b8:	f002 fd5c 	bl	8006d74 <strlen>
 80042bc:	b328      	cbz	r0, 800430a <d_print_comp+0x1776>
 80042be:	ae08      	add	r6, sp, #32
 80042c0:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80042c4:	1837      	adds	r7, r6, r0
 80042c6:	f04f 0800 	mov.w	r8, #0
 80042ca:	e015      	b.n	80042f8 <d_print_comp+0x1764>
 80042cc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80042d0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80042d4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80042d8:	4798      	blx	r3
 80042da:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80042de:	3301      	adds	r3, #1
 80042e0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80042e4:	2200      	movs	r2, #0
 80042e6:	2301      	movs	r3, #1
 80042e8:	42be      	cmp	r6, r7
 80042ea:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80042ee:	f804 9002 	strb.w	r9, [r4, r2]
 80042f2:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80042f6:	d00a      	beq.n	800430e <d_print_comp+0x177a>
 80042f8:	2bff      	cmp	r3, #255	; 0xff
 80042fa:	4619      	mov	r1, r3
 80042fc:	4620      	mov	r0, r4
 80042fe:	f816 9b01 	ldrb.w	r9, [r6], #1
 8004302:	d0e3      	beq.n	80042cc <d_print_comp+0x1738>
 8004304:	461a      	mov	r2, r3
 8004306:	3301      	adds	r3, #1
 8004308:	e7ee      	b.n	80042e8 <d_print_comp+0x1754>
 800430a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800430e:	2bff      	cmp	r3, #255	; 0xff
 8004310:	d110      	bne.n	8004334 <d_print_comp+0x17a0>
 8004312:	2600      	movs	r6, #0
 8004314:	4619      	mov	r1, r3
 8004316:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800431a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800431e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004322:	4620      	mov	r0, r4
 8004324:	4798      	blx	r3
 8004326:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800432a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800432e:	3301      	adds	r3, #1
 8004330:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004334:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 8004338:	9905      	ldr	r1, [sp, #20]
 800433a:	1c50      	adds	r0, r2, #1
 800433c:	237d      	movs	r3, #125	; 0x7d
 800433e:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 8004342:	54a3      	strb	r3, [r4, r2]
 8004344:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004348:	686a      	ldr	r2, [r5, #4]
 800434a:	f7fe bd16 	b.w	8002d7a <d_print_comp+0x1e6>
 800434e:	4631      	mov	r1, r6
 8004350:	68aa      	ldr	r2, [r5, #8]
 8004352:	4620      	mov	r0, r4
 8004354:	f7fe fc1e 	bl	8002b94 <d_print_comp>
 8004358:	9905      	ldr	r1, [sp, #20]
 800435a:	686a      	ldr	r2, [r5, #4]
 800435c:	f7fe bd0d 	b.w	8002d7a <d_print_comp+0x1e6>
 8004360:	68aa      	ldr	r2, [r5, #8]
 8004362:	4989      	ldr	r1, [pc, #548]	; (8004588 <d_print_comp+0x19f4>)
 8004364:	3201      	adds	r2, #1
 8004366:	a808      	add	r0, sp, #32
 8004368:	f009 fe76 	bl	800e058 <sprintf>
 800436c:	a808      	add	r0, sp, #32
 800436e:	f002 fd01 	bl	8006d74 <strlen>
 8004372:	2800      	cmp	r0, #0
 8004374:	d071      	beq.n	800445a <d_print_comp+0x18c6>
 8004376:	ae08      	add	r6, sp, #32
 8004378:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800437c:	1837      	adds	r7, r6, r0
 800437e:	f04f 0800 	mov.w	r8, #0
 8004382:	e015      	b.n	80043b0 <d_print_comp+0x181c>
 8004384:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004388:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800438c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004390:	4798      	blx	r3
 8004392:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004396:	3301      	adds	r3, #1
 8004398:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800439c:	2200      	movs	r2, #0
 800439e:	2301      	movs	r3, #1
 80043a0:	42b7      	cmp	r7, r6
 80043a2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80043a6:	f804 9002 	strb.w	r9, [r4, r2]
 80043aa:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80043ae:	d056      	beq.n	800445e <d_print_comp+0x18ca>
 80043b0:	2bff      	cmp	r3, #255	; 0xff
 80043b2:	4619      	mov	r1, r3
 80043b4:	4620      	mov	r0, r4
 80043b6:	f816 9b01 	ldrb.w	r9, [r6], #1
 80043ba:	d0e3      	beq.n	8004384 <d_print_comp+0x17f0>
 80043bc:	461a      	mov	r2, r3
 80043be:	3301      	adds	r3, #1
 80043c0:	e7ee      	b.n	80043a0 <d_print_comp+0x180c>
 80043c2:	4631      	mov	r1, r6
 80043c4:	68ea      	ldr	r2, [r5, #12]
 80043c6:	4620      	mov	r0, r4
 80043c8:	f7fe fbe4 	bl	8002b94 <d_print_comp>
 80043cc:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80043d0:	2fff      	cmp	r7, #255	; 0xff
 80043d2:	d111      	bne.n	80043f8 <d_print_comp+0x1864>
 80043d4:	2600      	movs	r6, #0
 80043d6:	4639      	mov	r1, r7
 80043d8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80043dc:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80043e0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80043e4:	4620      	mov	r0, r4
 80043e6:	4798      	blx	r3
 80043e8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80043ec:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80043f0:	3301      	adds	r3, #1
 80043f2:	4637      	mov	r7, r6
 80043f4:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80043f8:	1c7a      	adds	r2, r7, #1
 80043fa:	235d      	movs	r3, #93	; 0x5d
 80043fc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004400:	55e3      	strb	r3, [r4, r7]
 8004402:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004406:	686a      	ldr	r2, [r5, #4]
 8004408:	9905      	ldr	r1, [sp, #20]
 800440a:	f7fe bcb6 	b.w	8002d7a <d_print_comp+0x1e6>
 800440e:	4631      	mov	r1, r6
 8004410:	68ea      	ldr	r2, [r5, #12]
 8004412:	4620      	mov	r0, r4
 8004414:	f7fe fbbe 	bl	8002b94 <d_print_comp>
 8004418:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 800441c:	2fff      	cmp	r7, #255	; 0xff
 800441e:	d111      	bne.n	8004444 <d_print_comp+0x18b0>
 8004420:	2600      	movs	r6, #0
 8004422:	4639      	mov	r1, r7
 8004424:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004428:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800442c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004430:	4620      	mov	r0, r4
 8004432:	4798      	blx	r3
 8004434:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004438:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800443c:	3301      	adds	r3, #1
 800443e:	4637      	mov	r7, r6
 8004440:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004444:	1c7a      	adds	r2, r7, #1
 8004446:	235d      	movs	r3, #93	; 0x5d
 8004448:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800444c:	55e3      	strb	r3, [r4, r7]
 800444e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004452:	686a      	ldr	r2, [r5, #4]
 8004454:	9905      	ldr	r1, [sp, #20]
 8004456:	f7fe bc90 	b.w	8002d7a <d_print_comp+0x1e6>
 800445a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800445e:	2bff      	cmp	r3, #255	; 0xff
 8004460:	d110      	bne.n	8004484 <d_print_comp+0x18f0>
 8004462:	2600      	movs	r6, #0
 8004464:	4619      	mov	r1, r3
 8004466:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800446a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800446e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004472:	4620      	mov	r0, r4
 8004474:	4798      	blx	r3
 8004476:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800447a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800447e:	3301      	adds	r3, #1
 8004480:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004484:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 8004488:	9905      	ldr	r1, [sp, #20]
 800448a:	1c50      	adds	r0, r2, #1
 800448c:	237d      	movs	r3, #125	; 0x7d
 800448e:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 8004492:	54a3      	strb	r3, [r4, r2]
 8004494:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004498:	686a      	ldr	r2, [r5, #4]
 800449a:	f7fe bc6e 	b.w	8002d7a <d_print_comp+0x1e6>
 800449e:	4631      	mov	r1, r6
 80044a0:	68aa      	ldr	r2, [r5, #8]
 80044a2:	4620      	mov	r0, r4
 80044a4:	f7fe fb76 	bl	8002b94 <d_print_comp>
 80044a8:	9905      	ldr	r1, [sp, #20]
 80044aa:	686a      	ldr	r2, [r5, #4]
 80044ac:	f7fe bc65 	b.w	8002d7a <d_print_comp+0x1e6>
 80044b0:	9905      	ldr	r1, [sp, #20]
 80044b2:	686a      	ldr	r2, [r5, #4]
 80044b4:	f7fe bc61 	b.w	8002d7a <d_print_comp+0x1e6>
 80044b8:	4631      	mov	r1, r6
 80044ba:	68aa      	ldr	r2, [r5, #8]
 80044bc:	4620      	mov	r0, r4
 80044be:	f7fe fb69 	bl	8002b94 <d_print_comp>
 80044c2:	9905      	ldr	r1, [sp, #20]
 80044c4:	686a      	ldr	r2, [r5, #4]
 80044c6:	f7fe bc58 	b.w	8002d7a <d_print_comp+0x1e6>
 80044ca:	4631      	mov	r1, r6
 80044cc:	68ea      	ldr	r2, [r5, #12]
 80044ce:	4620      	mov	r0, r4
 80044d0:	f7fe fb60 	bl	8002b94 <d_print_comp>
 80044d4:	9905      	ldr	r1, [sp, #20]
 80044d6:	686a      	ldr	r2, [r5, #4]
 80044d8:	f7fe bc4f 	b.w	8002d7a <d_print_comp+0x1e6>
 80044dc:	f8d4 2144 	ldr.w	r2, [r4, #324]	; 0x144
 80044e0:	b13a      	cbz	r2, 80044f2 <d_print_comp+0x195e>
 80044e2:	ab18      	add	r3, sp, #96	; 0x60
 80044e4:	f8d4 1110 	ldr.w	r1, [r4, #272]	; 0x110
 80044e8:	f843 1d40 	str.w	r1, [r3, #-64]!
 80044ec:	9209      	str	r2, [sp, #36]	; 0x24
 80044ee:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80044f2:	68aa      	ldr	r2, [r5, #8]
 80044f4:	7813      	ldrb	r3, [r2, #0]
 80044f6:	2b04      	cmp	r3, #4
 80044f8:	f000 84d6 	beq.w	8004ea8 <d_print_comp+0x2314>
 80044fc:	4631      	mov	r1, r6
 80044fe:	4620      	mov	r0, r4
 8004500:	f7fe fb48 	bl	8002b94 <d_print_comp>
 8004504:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8004508:	b113      	cbz	r3, 8004510 <d_print_comp+0x197c>
 800450a:	9b08      	ldr	r3, [sp, #32]
 800450c:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004510:	9905      	ldr	r1, [sp, #20]
 8004512:	686a      	ldr	r2, [r5, #4]
 8004514:	f7fe bc31 	b.w	8002d7a <d_print_comp+0x1e6>
 8004518:	f8da 6004 	ldr.w	r6, [sl, #4]
 800451c:	7832      	ldrb	r2, [r6, #0]
 800451e:	3a61      	subs	r2, #97	; 0x61
 8004520:	2a19      	cmp	r2, #25
 8004522:	d81d      	bhi.n	8004560 <d_print_comp+0x19cc>
 8004524:	2bff      	cmp	r3, #255	; 0xff
 8004526:	d110      	bne.n	800454a <d_print_comp+0x19b6>
 8004528:	2600      	movs	r6, #0
 800452a:	4619      	mov	r1, r3
 800452c:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004530:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004534:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004538:	4620      	mov	r0, r4
 800453a:	4798      	blx	r3
 800453c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004540:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004544:	3301      	adds	r3, #1
 8004546:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800454a:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 800454e:	2320      	movs	r3, #32
 8004550:	1c51      	adds	r1, r2, #1
 8004552:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004556:	54a3      	strb	r3, [r4, r2]
 8004558:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800455c:	f8da 6004 	ldr.w	r6, [sl, #4]
 8004560:	19f3      	adds	r3, r6, r7
 8004562:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8004566:	2b20      	cmp	r3, #32
 8004568:	bf08      	it	eq
 800456a:	f107 37ff 	addeq.w	r7, r7, #4294967295
 800456e:	2f00      	cmp	r7, #0
 8004570:	f000 86fb 	beq.w	800536a <d_print_comp+0x27d6>
 8004574:	3e01      	subs	r6, #1
 8004576:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800457a:	4437      	add	r7, r6
 800457c:	f04f 0800 	mov.w	r8, #0
 8004580:	e01b      	b.n	80045ba <d_print_comp+0x1a26>
 8004582:	bf00      	nop
 8004584:	08012038 	.word	0x08012038
 8004588:	08011d88 	.word	0x08011d88
 800458c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004590:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004594:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004598:	4798      	blx	r3
 800459a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800459e:	3301      	adds	r3, #1
 80045a0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80045a4:	2200      	movs	r2, #0
 80045a6:	2301      	movs	r3, #1
 80045a8:	42be      	cmp	r6, r7
 80045aa:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80045ae:	f804 9002 	strb.w	r9, [r4, r2]
 80045b2:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80045b6:	f000 80ec 	beq.w	8004792 <d_print_comp+0x1bfe>
 80045ba:	2bff      	cmp	r3, #255	; 0xff
 80045bc:	4619      	mov	r1, r3
 80045be:	4620      	mov	r0, r4
 80045c0:	f816 9f01 	ldrb.w	r9, [r6, #1]!
 80045c4:	d0e2      	beq.n	800458c <d_print_comp+0x19f8>
 80045c6:	461a      	mov	r2, r3
 80045c8:	3301      	adds	r3, #1
 80045ca:	e7ed      	b.n	80045a8 <d_print_comp+0x1a14>
 80045cc:	4631      	mov	r1, r6
 80045ce:	68aa      	ldr	r2, [r5, #8]
 80045d0:	4620      	mov	r0, r4
 80045d2:	f7fe fadf 	bl	8002b94 <d_print_comp>
 80045d6:	9905      	ldr	r1, [sp, #20]
 80045d8:	686a      	ldr	r2, [r5, #4]
 80045da:	f7fe bbce 	b.w	8002d7a <d_print_comp+0x1e6>
 80045de:	4631      	mov	r1, r6
 80045e0:	68aa      	ldr	r2, [r5, #8]
 80045e2:	4620      	mov	r0, r4
 80045e4:	f7fe fad6 	bl	8002b94 <d_print_comp>
 80045e8:	9905      	ldr	r1, [sp, #20]
 80045ea:	686a      	ldr	r2, [r5, #4]
 80045ec:	f7fe bbc5 	b.w	8002d7a <d_print_comp+0x1e6>
 80045f0:	4631      	mov	r1, r6
 80045f2:	68aa      	ldr	r2, [r5, #8]
 80045f4:	4620      	mov	r0, r4
 80045f6:	f7fe facd 	bl	8002b94 <d_print_comp>
 80045fa:	9905      	ldr	r1, [sp, #20]
 80045fc:	686a      	ldr	r2, [r5, #4]
 80045fe:	f7fe bbbc 	b.w	8002d7a <d_print_comp+0x1e6>
 8004602:	4631      	mov	r1, r6
 8004604:	68aa      	ldr	r2, [r5, #8]
 8004606:	4620      	mov	r0, r4
 8004608:	f7fe fac4 	bl	8002b94 <d_print_comp>
 800460c:	9905      	ldr	r1, [sp, #20]
 800460e:	686a      	ldr	r2, [r5, #4]
 8004610:	f7fe bbb3 	b.w	8002d7a <d_print_comp+0x1e6>
 8004614:	4631      	mov	r1, r6
 8004616:	68aa      	ldr	r2, [r5, #8]
 8004618:	4620      	mov	r0, r4
 800461a:	f7fe fabb 	bl	8002b94 <d_print_comp>
 800461e:	9905      	ldr	r1, [sp, #20]
 8004620:	686a      	ldr	r2, [r5, #4]
 8004622:	f7fe bbaa 	b.w	8002d7a <d_print_comp+0x1e6>
 8004626:	4631      	mov	r1, r6
 8004628:	68aa      	ldr	r2, [r5, #8]
 800462a:	4620      	mov	r0, r4
 800462c:	f7fe fab2 	bl	8002b94 <d_print_comp>
 8004630:	9905      	ldr	r1, [sp, #20]
 8004632:	686a      	ldr	r2, [r5, #4]
 8004634:	f7fe bba1 	b.w	8002d7a <d_print_comp+0x1e6>
 8004638:	4631      	mov	r1, r6
 800463a:	68aa      	ldr	r2, [r5, #8]
 800463c:	4620      	mov	r0, r4
 800463e:	f7fe faa9 	bl	8002b94 <d_print_comp>
 8004642:	9905      	ldr	r1, [sp, #20]
 8004644:	686a      	ldr	r2, [r5, #4]
 8004646:	f7fe bb98 	b.w	8002d7a <d_print_comp+0x1e6>
 800464a:	4631      	mov	r1, r6
 800464c:	68aa      	ldr	r2, [r5, #8]
 800464e:	4620      	mov	r0, r4
 8004650:	f7fe faa0 	bl	8002b94 <d_print_comp>
 8004654:	9905      	ldr	r1, [sp, #20]
 8004656:	686a      	ldr	r2, [r5, #4]
 8004658:	f7fe bb8f 	b.w	8002d7a <d_print_comp+0x1e6>
 800465c:	4fcf      	ldr	r7, [pc, #828]	; (800499c <d_print_comp+0x1e08>)
 800465e:	68ea      	ldr	r2, [r5, #12]
 8004660:	4631      	mov	r1, r6
 8004662:	4620      	mov	r0, r4
 8004664:	f7fe fa96 	bl	8002b94 <d_print_comp>
 8004668:	f107 0805 	add.w	r8, r7, #5
 800466c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004670:	f04f 0900 	mov.w	r9, #0
 8004674:	e015      	b.n	80046a2 <d_print_comp+0x1b0e>
 8004676:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800467a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800467e:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004682:	4798      	blx	r3
 8004684:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004688:	3301      	adds	r3, #1
 800468a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800468e:	2200      	movs	r2, #0
 8004690:	2301      	movs	r3, #1
 8004692:	4547      	cmp	r7, r8
 8004694:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004698:	f804 a002 	strb.w	sl, [r4, r2]
 800469c:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80046a0:	d008      	beq.n	80046b4 <d_print_comp+0x1b20>
 80046a2:	2bff      	cmp	r3, #255	; 0xff
 80046a4:	4619      	mov	r1, r3
 80046a6:	4620      	mov	r0, r4
 80046a8:	f817 ab01 	ldrb.w	sl, [r7], #1
 80046ac:	d0e3      	beq.n	8004676 <d_print_comp+0x1ae2>
 80046ae:	461a      	mov	r2, r3
 80046b0:	3301      	adds	r3, #1
 80046b2:	e7ee      	b.n	8004692 <d_print_comp+0x1afe>
 80046b4:	4631      	mov	r1, r6
 80046b6:	68aa      	ldr	r2, [r5, #8]
 80046b8:	4620      	mov	r0, r4
 80046ba:	f7fe fa6b 	bl	8002b94 <d_print_comp>
 80046be:	9905      	ldr	r1, [sp, #20]
 80046c0:	686a      	ldr	r2, [r5, #4]
 80046c2:	f7fe bb5a 	b.w	8002d7a <d_print_comp+0x1e6>
 80046c6:	4fb6      	ldr	r7, [pc, #728]	; (80049a0 <d_print_comp+0x1e0c>)
 80046c8:	68aa      	ldr	r2, [r5, #8]
 80046ca:	4631      	mov	r1, r6
 80046cc:	4620      	mov	r0, r4
 80046ce:	f7fe fa61 	bl	8002b94 <d_print_comp>
 80046d2:	f107 0804 	add.w	r8, r7, #4
 80046d6:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80046da:	f04f 0900 	mov.w	r9, #0
 80046de:	e015      	b.n	800470c <d_print_comp+0x1b78>
 80046e0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80046e4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80046e8:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80046ec:	4798      	blx	r3
 80046ee:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80046f2:	3301      	adds	r3, #1
 80046f4:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80046f8:	2200      	movs	r2, #0
 80046fa:	2301      	movs	r3, #1
 80046fc:	45b8      	cmp	r8, r7
 80046fe:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004702:	f804 a002 	strb.w	sl, [r4, r2]
 8004706:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 800470a:	d008      	beq.n	800471e <d_print_comp+0x1b8a>
 800470c:	2bff      	cmp	r3, #255	; 0xff
 800470e:	4619      	mov	r1, r3
 8004710:	4620      	mov	r0, r4
 8004712:	f817 ab01 	ldrb.w	sl, [r7], #1
 8004716:	d0e3      	beq.n	80046e0 <d_print_comp+0x1b4c>
 8004718:	461a      	mov	r2, r3
 800471a:	3301      	adds	r3, #1
 800471c:	e7ee      	b.n	80046fc <d_print_comp+0x1b68>
 800471e:	4631      	mov	r1, r6
 8004720:	68ea      	ldr	r2, [r5, #12]
 8004722:	4620      	mov	r0, r4
 8004724:	f7fe fa36 	bl	8002b94 <d_print_comp>
 8004728:	9905      	ldr	r1, [sp, #20]
 800472a:	686a      	ldr	r2, [r5, #4]
 800472c:	f7fe bb25 	b.w	8002d7a <d_print_comp+0x1e6>
 8004730:	4631      	mov	r1, r6
 8004732:	68aa      	ldr	r2, [r5, #8]
 8004734:	4620      	mov	r0, r4
 8004736:	f7fe fa2d 	bl	8002b94 <d_print_comp>
 800473a:	9905      	ldr	r1, [sp, #20]
 800473c:	686a      	ldr	r2, [r5, #4]
 800473e:	f7fe bb1c 	b.w	8002d7a <d_print_comp+0x1e6>
 8004742:	4631      	mov	r1, r6
 8004744:	68aa      	ldr	r2, [r5, #8]
 8004746:	4620      	mov	r0, r4
 8004748:	f7fe fa24 	bl	8002b94 <d_print_comp>
 800474c:	9905      	ldr	r1, [sp, #20]
 800474e:	686a      	ldr	r2, [r5, #4]
 8004750:	f7fe bb13 	b.w	8002d7a <d_print_comp+0x1e6>
 8004754:	4631      	mov	r1, r6
 8004756:	68aa      	ldr	r2, [r5, #8]
 8004758:	4620      	mov	r0, r4
 800475a:	f7fe fa1b 	bl	8002b94 <d_print_comp>
 800475e:	9905      	ldr	r1, [sp, #20]
 8004760:	686a      	ldr	r2, [r5, #4]
 8004762:	f7fe bb0a 	b.w	8002d7a <d_print_comp+0x1e6>
 8004766:	4631      	mov	r1, r6
 8004768:	68aa      	ldr	r2, [r5, #8]
 800476a:	4620      	mov	r0, r4
 800476c:	f7fe fa12 	bl	8002b94 <d_print_comp>
 8004770:	9905      	ldr	r1, [sp, #20]
 8004772:	686a      	ldr	r2, [r5, #4]
 8004774:	f7fe bb01 	b.w	8002d7a <d_print_comp+0x1e6>
 8004778:	4631      	mov	r1, r6
 800477a:	68aa      	ldr	r2, [r5, #8]
 800477c:	4620      	mov	r0, r4
 800477e:	f7fe fa09 	bl	8002b94 <d_print_comp>
 8004782:	9905      	ldr	r1, [sp, #20]
 8004784:	686a      	ldr	r2, [r5, #4]
 8004786:	f7fe baf8 	b.w	8002d7a <d_print_comp+0x1e6>
 800478a:	9905      	ldr	r1, [sp, #20]
 800478c:	686a      	ldr	r2, [r5, #4]
 800478e:	f7fe baf4 	b.w	8002d7a <d_print_comp+0x1e6>
 8004792:	9905      	ldr	r1, [sp, #20]
 8004794:	686a      	ldr	r2, [r5, #4]
 8004796:	f7fe baf0 	b.w	8002d7a <d_print_comp+0x1e6>
 800479a:	4631      	mov	r1, r6
 800479c:	68ea      	ldr	r2, [r5, #12]
 800479e:	9301      	str	r3, [sp, #4]
 80047a0:	4620      	mov	r0, r4
 80047a2:	f8d4 6124 	ldr.w	r6, [r4, #292]	; 0x124
 80047a6:	f7fe f9f5 	bl	8002b94 <d_print_comp>
 80047aa:	f8d4 2124 	ldr.w	r2, [r4, #292]	; 0x124
 80047ae:	9b01      	ldr	r3, [sp, #4]
 80047b0:	4296      	cmp	r6, r2
 80047b2:	f000 8441 	beq.w	8005038 <d_print_comp+0x24a4>
 80047b6:	9905      	ldr	r1, [sp, #20]
 80047b8:	686a      	ldr	r2, [r5, #4]
 80047ba:	f7fe bade 	b.w	8002d7a <d_print_comp+0x1e6>
 80047be:	4e79      	ldr	r6, [pc, #484]	; (80049a4 <d_print_comp+0x1e10>)
 80047c0:	4690      	mov	r8, r2
 80047c2:	f106 0906 	add.w	r9, r6, #6
 80047c6:	e014      	b.n	80047f2 <d_print_comp+0x1c5e>
 80047c8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80047cc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80047d0:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80047d4:	4798      	blx	r3
 80047d6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80047da:	3301      	adds	r3, #1
 80047dc:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80047e0:	2200      	movs	r2, #0
 80047e2:	2301      	movs	r3, #1
 80047e4:	45b1      	cmp	r9, r6
 80047e6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80047ea:	54a7      	strb	r7, [r4, r2]
 80047ec:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80047f0:	d008      	beq.n	8004804 <d_print_comp+0x1c70>
 80047f2:	2bff      	cmp	r3, #255	; 0xff
 80047f4:	4619      	mov	r1, r3
 80047f6:	4620      	mov	r0, r4
 80047f8:	f816 7b01 	ldrb.w	r7, [r6], #1
 80047fc:	d0e4      	beq.n	80047c8 <d_print_comp+0x1c34>
 80047fe:	461a      	mov	r2, r3
 8004800:	3301      	adds	r3, #1
 8004802:	e7ef      	b.n	80047e4 <d_print_comp+0x1c50>
 8004804:	9905      	ldr	r1, [sp, #20]
 8004806:	686a      	ldr	r2, [r5, #4]
 8004808:	f7fe bab7 	b.w	8002d7a <d_print_comp+0x1e6>
 800480c:	4642      	mov	r2, r8
 800480e:	a808      	add	r0, sp, #32
 8004810:	4965      	ldr	r1, [pc, #404]	; (80049a8 <d_print_comp+0x1e14>)
 8004812:	f009 fc21 	bl	800e058 <sprintf>
 8004816:	a808      	add	r0, sp, #32
 8004818:	f002 faac 	bl	8006d74 <strlen>
 800481c:	b328      	cbz	r0, 800486a <d_print_comp+0x1cd6>
 800481e:	ae08      	add	r6, sp, #32
 8004820:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004824:	eb06 0900 	add.w	r9, r6, r0
 8004828:	f04f 0800 	mov.w	r8, #0
 800482c:	e014      	b.n	8004858 <d_print_comp+0x1cc4>
 800482e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004832:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004836:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800483a:	4798      	blx	r3
 800483c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004840:	3301      	adds	r3, #1
 8004842:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004846:	2200      	movs	r2, #0
 8004848:	2301      	movs	r3, #1
 800484a:	45b1      	cmp	r9, r6
 800484c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004850:	54a7      	strb	r7, [r4, r2]
 8004852:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004856:	d008      	beq.n	800486a <d_print_comp+0x1cd6>
 8004858:	2bff      	cmp	r3, #255	; 0xff
 800485a:	4619      	mov	r1, r3
 800485c:	4620      	mov	r0, r4
 800485e:	f816 7b01 	ldrb.w	r7, [r6], #1
 8004862:	d0e4      	beq.n	800482e <d_print_comp+0x1c9a>
 8004864:	461a      	mov	r2, r3
 8004866:	3301      	adds	r3, #1
 8004868:	e7ef      	b.n	800484a <d_print_comp+0x1cb6>
 800486a:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 800486e:	2fff      	cmp	r7, #255	; 0xff
 8004870:	d111      	bne.n	8004896 <d_print_comp+0x1d02>
 8004872:	2600      	movs	r6, #0
 8004874:	4639      	mov	r1, r7
 8004876:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800487a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800487e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004882:	4620      	mov	r0, r4
 8004884:	4798      	blx	r3
 8004886:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800488a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800488e:	3301      	adds	r3, #1
 8004890:	4637      	mov	r7, r6
 8004892:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004896:	1c7a      	adds	r2, r7, #1
 8004898:	237d      	movs	r3, #125	; 0x7d
 800489a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800489e:	55e3      	strb	r3, [r4, r7]
 80048a0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80048a4:	686a      	ldr	r2, [r5, #4]
 80048a6:	9905      	ldr	r1, [sp, #20]
 80048a8:	f7fe ba67 	b.w	8002d7a <d_print_comp+0x1e6>
 80048ac:	4e3f      	ldr	r6, [pc, #252]	; (80049ac <d_print_comp+0x1e18>)
 80048ae:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80048b2:	f106 0905 	add.w	r9, r6, #5
 80048b6:	f04f 0800 	mov.w	r8, #0
 80048ba:	e015      	b.n	80048e8 <d_print_comp+0x1d54>
 80048bc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80048c0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80048c4:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80048c8:	4798      	blx	r3
 80048ca:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80048ce:	3301      	adds	r3, #1
 80048d0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80048d4:	2200      	movs	r2, #0
 80048d6:	2301      	movs	r3, #1
 80048d8:	45b1      	cmp	r9, r6
 80048da:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80048de:	54a7      	strb	r7, [r4, r2]
 80048e0:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80048e4:	f000 80cf 	beq.w	8004a86 <d_print_comp+0x1ef2>
 80048e8:	2bff      	cmp	r3, #255	; 0xff
 80048ea:	4619      	mov	r1, r3
 80048ec:	4620      	mov	r0, r4
 80048ee:	f816 7b01 	ldrb.w	r7, [r6], #1
 80048f2:	d0e3      	beq.n	80048bc <d_print_comp+0x1d28>
 80048f4:	461a      	mov	r2, r3
 80048f6:	3301      	adds	r3, #1
 80048f8:	e7ee      	b.n	80048d8 <d_print_comp+0x1d44>
 80048fa:	68ee      	ldr	r6, [r5, #12]
 80048fc:	443e      	add	r6, r7
 80048fe:	42be      	cmp	r6, r7
 8004900:	f67e aa3b 	bls.w	8002d7a <d_print_comp+0x1e6>
 8004904:	f04f 0800 	mov.w	r8, #0
 8004908:	e018      	b.n	800493c <d_print_comp+0x1da8>
 800490a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800490e:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004912:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004916:	4620      	mov	r0, r4
 8004918:	4798      	blx	r3
 800491a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800491e:	3301      	adds	r3, #1
 8004920:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004924:	2100      	movs	r1, #0
 8004926:	2301      	movs	r3, #1
 8004928:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800492c:	f804 9001 	strb.w	r9, [r4, r1]
 8004930:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 8004934:	3701      	adds	r7, #1
 8004936:	42be      	cmp	r6, r7
 8004938:	f240 80e1 	bls.w	8004afe <d_print_comp+0x1f6a>
 800493c:	1bf3      	subs	r3, r6, r7
 800493e:	2b03      	cmp	r3, #3
 8004940:	f897 9000 	ldrb.w	r9, [r7]
 8004944:	dd02      	ble.n	800494c <d_print_comp+0x1db8>
 8004946:	f1b9 0f5f 	cmp.w	r9, #95	; 0x5f
 800494a:	d005      	beq.n	8004958 <d_print_comp+0x1dc4>
 800494c:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8004950:	29ff      	cmp	r1, #255	; 0xff
 8004952:	d0da      	beq.n	800490a <d_print_comp+0x1d76>
 8004954:	1c4b      	adds	r3, r1, #1
 8004956:	e7e7      	b.n	8004928 <d_print_comp+0x1d94>
 8004958:	787b      	ldrb	r3, [r7, #1]
 800495a:	2b5f      	cmp	r3, #95	; 0x5f
 800495c:	d1f6      	bne.n	800494c <d_print_comp+0x1db8>
 800495e:	78bb      	ldrb	r3, [r7, #2]
 8004960:	2b55      	cmp	r3, #85	; 0x55
 8004962:	d1f3      	bne.n	800494c <d_print_comp+0x1db8>
 8004964:	1cf9      	adds	r1, r7, #3
 8004966:	2000      	movs	r0, #0
 8004968:	e002      	b.n	8004970 <d_print_comp+0x1ddc>
 800496a:	4613      	mov	r3, r2
 800496c:	eb03 1000 	add.w	r0, r3, r0, lsl #4
 8004970:	428e      	cmp	r6, r1
 8004972:	468a      	mov	sl, r1
 8004974:	d9ea      	bls.n	800494c <d_print_comp+0x1db8>
 8004976:	f811 3b01 	ldrb.w	r3, [r1], #1
 800497a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 800497e:	fa5f fe82 	uxtb.w	lr, r2
 8004982:	f1be 0f09 	cmp.w	lr, #9
 8004986:	f1a3 0c41 	sub.w	ip, r3, #65	; 0x41
 800498a:	d9ee      	bls.n	800496a <d_print_comp+0x1dd6>
 800498c:	f1bc 0f05 	cmp.w	ip, #5
 8004990:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8004994:	f200 85c7 	bhi.w	8005526 <d_print_comp+0x2992>
 8004998:	3b37      	subs	r3, #55	; 0x37
 800499a:	e7e7      	b.n	800496c <d_print_comp+0x1dd8>
 800499c:	08011efc 	.word	0x08011efc
 80049a0:	08011e38 	.word	0x08011e38
 80049a4:	08011f5c 	.word	0x08011f5c
 80049a8:	08011d88 	.word	0x08011d88
 80049ac:	08011dfc 	.word	0x08011dfc
 80049b0:	9905      	ldr	r1, [sp, #20]
 80049b2:	686a      	ldr	r2, [r5, #4]
 80049b4:	f7fe b9e1 	b.w	8002d7a <d_print_comp+0x1e6>
 80049b8:	68aa      	ldr	r2, [r5, #8]
 80049ba:	9201      	str	r2, [sp, #4]
 80049bc:	4619      	mov	r1, r3
 80049be:	2b00      	cmp	r3, #0
 80049c0:	f47e aa26 	bne.w	8002e10 <d_print_comp+0x27c>
 80049c4:	9905      	ldr	r1, [sp, #20]
 80049c6:	686a      	ldr	r2, [r5, #4]
 80049c8:	f7fe b9d7 	b.w	8002d7a <d_print_comp+0x1e6>
 80049cc:	4ece      	ldr	r6, [pc, #824]	; (8004d08 <d_print_comp+0x2174>)
 80049ce:	f106 0904 	add.w	r9, r6, #4
 80049d2:	e014      	b.n	80049fe <d_print_comp+0x1e6a>
 80049d4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80049d8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80049dc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80049e0:	4798      	blx	r3
 80049e2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80049e6:	3301      	adds	r3, #1
 80049e8:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80049ec:	2200      	movs	r2, #0
 80049ee:	2301      	movs	r3, #1
 80049f0:	45b1      	cmp	r9, r6
 80049f2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80049f6:	54a7      	strb	r7, [r4, r2]
 80049f8:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 80049fc:	d008      	beq.n	8004a10 <d_print_comp+0x1e7c>
 80049fe:	2bff      	cmp	r3, #255	; 0xff
 8004a00:	4619      	mov	r1, r3
 8004a02:	4620      	mov	r0, r4
 8004a04:	f816 7b01 	ldrb.w	r7, [r6], #1
 8004a08:	d0e4      	beq.n	80049d4 <d_print_comp+0x1e40>
 8004a0a:	461a      	mov	r2, r3
 8004a0c:	3301      	adds	r3, #1
 8004a0e:	e7ef      	b.n	80049f0 <d_print_comp+0x1e5c>
 8004a10:	9905      	ldr	r1, [sp, #20]
 8004a12:	686a      	ldr	r2, [r5, #4]
 8004a14:	f7fe b9b1 	b.w	8002d7a <d_print_comp+0x1e6>
 8004a18:	f8d4 c114 	ldr.w	ip, [r4, #276]	; 0x114
 8004a1c:	f7ff ba66 	b.w	8003eec <d_print_comp+0x1358>
 8004a20:	2700      	movs	r7, #0
 8004a22:	f7ff ba54 	b.w	8003ece <d_print_comp+0x133a>
 8004a26:	e9d0 6702 	ldrd	r6, r7, [r0, #8]
 8004a2a:	2f00      	cmp	r7, #0
 8004a2c:	f43e a9a5 	beq.w	8002d7a <d_print_comp+0x1e6>
 8004a30:	4437      	add	r7, r6
 8004a32:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004a36:	3f01      	subs	r7, #1
 8004a38:	3e01      	subs	r6, #1
 8004a3a:	f04f 0900 	mov.w	r9, #0
 8004a3e:	e015      	b.n	8004a6c <d_print_comp+0x1ed8>
 8004a40:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004a44:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004a48:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004a4c:	4798      	blx	r3
 8004a4e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004a52:	3301      	adds	r3, #1
 8004a54:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004a58:	2200      	movs	r2, #0
 8004a5a:	2301      	movs	r3, #1
 8004a5c:	42b7      	cmp	r7, r6
 8004a5e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004a62:	f804 8002 	strb.w	r8, [r4, r2]
 8004a66:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8004a6a:	d008      	beq.n	8004a7e <d_print_comp+0x1eea>
 8004a6c:	2bff      	cmp	r3, #255	; 0xff
 8004a6e:	4619      	mov	r1, r3
 8004a70:	4620      	mov	r0, r4
 8004a72:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8004a76:	d0e3      	beq.n	8004a40 <d_print_comp+0x1eac>
 8004a78:	461a      	mov	r2, r3
 8004a7a:	3301      	adds	r3, #1
 8004a7c:	e7ee      	b.n	8004a5c <d_print_comp+0x1ec8>
 8004a7e:	9905      	ldr	r1, [sp, #20]
 8004a80:	686a      	ldr	r2, [r5, #4]
 8004a82:	f7fe b97a 	b.w	8002d7a <d_print_comp+0x1e6>
 8004a86:	68aa      	ldr	r2, [r5, #8]
 8004a88:	49a0      	ldr	r1, [pc, #640]	; (8004d0c <d_print_comp+0x2178>)
 8004a8a:	3201      	adds	r2, #1
 8004a8c:	a808      	add	r0, sp, #32
 8004a8e:	f009 fae3 	bl	800e058 <sprintf>
 8004a92:	a808      	add	r0, sp, #32
 8004a94:	f002 f96e 	bl	8006d74 <strlen>
 8004a98:	b328      	cbz	r0, 8004ae6 <d_print_comp+0x1f52>
 8004a9a:	ae08      	add	r6, sp, #32
 8004a9c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004aa0:	eb06 0900 	add.w	r9, r6, r0
 8004aa4:	f04f 0800 	mov.w	r8, #0
 8004aa8:	e014      	b.n	8004ad4 <d_print_comp+0x1f40>
 8004aaa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004aae:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004ab2:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004ab6:	4798      	blx	r3
 8004ab8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004abc:	3301      	adds	r3, #1
 8004abe:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004ac2:	2200      	movs	r2, #0
 8004ac4:	2301      	movs	r3, #1
 8004ac6:	45b1      	cmp	r9, r6
 8004ac8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004acc:	54a7      	strb	r7, [r4, r2]
 8004ace:	f884 7104 	strb.w	r7, [r4, #260]	; 0x104
 8004ad2:	d008      	beq.n	8004ae6 <d_print_comp+0x1f52>
 8004ad4:	2bff      	cmp	r3, #255	; 0xff
 8004ad6:	4619      	mov	r1, r3
 8004ad8:	4620      	mov	r0, r4
 8004ada:	f816 7b01 	ldrb.w	r7, [r6], #1
 8004ade:	d0e4      	beq.n	8004aaa <d_print_comp+0x1f16>
 8004ae0:	461a      	mov	r2, r3
 8004ae2:	3301      	adds	r3, #1
 8004ae4:	e7ef      	b.n	8004ac6 <d_print_comp+0x1f32>
 8004ae6:	9905      	ldr	r1, [sp, #20]
 8004ae8:	686a      	ldr	r2, [r5, #4]
 8004aea:	f7fe b946 	b.w	8002d7a <d_print_comp+0x1e6>
 8004aee:	9905      	ldr	r1, [sp, #20]
 8004af0:	686a      	ldr	r2, [r5, #4]
 8004af2:	f7fe b942 	b.w	8002d7a <d_print_comp+0x1e6>
 8004af6:	9905      	ldr	r1, [sp, #20]
 8004af8:	686a      	ldr	r2, [r5, #4]
 8004afa:	f7fe b93e 	b.w	8002d7a <d_print_comp+0x1e6>
 8004afe:	9905      	ldr	r1, [sp, #20]
 8004b00:	686a      	ldr	r2, [r5, #4]
 8004b02:	f7fe b93a 	b.w	8002d7a <d_print_comp+0x1e6>
 8004b06:	68db      	ldr	r3, [r3, #12]
 8004b08:	781b      	ldrb	r3, [r3, #0]
 8004b0a:	2b3b      	cmp	r3, #59	; 0x3b
 8004b0c:	f47e abf6 	bne.w	80032fc <d_print_comp+0x768>
 8004b10:	f105 030c 	add.w	r3, r5, #12
 8004b14:	68aa      	ldr	r2, [r5, #8]
 8004b16:	4631      	mov	r1, r6
 8004b18:	4620      	mov	r0, r4
 8004b1a:	f001 fd95 	bl	8006648 <d_maybe_print_fold_expression.isra.20>
 8004b1e:	4680      	mov	r8, r0
 8004b20:	2800      	cmp	r0, #0
 8004b22:	f040 86a0 	bne.w	8005866 <d_print_comp+0x2cd2>
 8004b26:	e9d5 7202 	ldrd	r7, r2, [r5, #8]
 8004b2a:	68b9      	ldr	r1, [r7, #8]
 8004b2c:	68d3      	ldr	r3, [r2, #12]
 8004b2e:	6808      	ldr	r0, [r1, #0]
 8004b30:	4977      	ldr	r1, [pc, #476]	; (8004d10 <d_print_comp+0x217c>)
 8004b32:	f8d2 b008 	ldr.w	fp, [r2, #8]
 8004b36:	e9d3 a902 	ldrd	sl, r9, [r3, #8]
 8004b3a:	f002 f911 	bl	8006d60 <strcmp>
 8004b3e:	2800      	cmp	r0, #0
 8004b40:	f000 8674 	beq.w	800582c <d_print_comp+0x2c98>
 8004b44:	2204      	movs	r2, #4
 8004b46:	4973      	ldr	r1, [pc, #460]	; (8004d14 <d_print_comp+0x2180>)
 8004b48:	4620      	mov	r0, r4
 8004b4a:	f7fb fbff 	bl	800034c <d_append_buffer>
 8004b4e:	f8db 3008 	ldr.w	r3, [fp, #8]
 8004b52:	b303      	cbz	r3, 8004b96 <d_print_comp+0x2002>
 8004b54:	465a      	mov	r2, fp
 8004b56:	4631      	mov	r1, r6
 8004b58:	4620      	mov	r0, r4
 8004b5a:	f001 fd23 	bl	80065a4 <d_print_subexpr>
 8004b5e:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004b62:	2fff      	cmp	r7, #255	; 0xff
 8004b64:	d110      	bne.n	8004b88 <d_print_comp+0x1ff4>
 8004b66:	4639      	mov	r1, r7
 8004b68:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004b6c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004b70:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004b74:	4620      	mov	r0, r4
 8004b76:	4798      	blx	r3
 8004b78:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004b7c:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8004b80:	3301      	adds	r3, #1
 8004b82:	4647      	mov	r7, r8
 8004b84:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004b88:	2320      	movs	r3, #32
 8004b8a:	1c7a      	adds	r2, r7, #1
 8004b8c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004b90:	55e3      	strb	r3, [r4, r7]
 8004b92:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004b96:	4652      	mov	r2, sl
 8004b98:	4631      	mov	r1, r6
 8004b9a:	4620      	mov	r0, r4
 8004b9c:	f7fd fffa 	bl	8002b94 <d_print_comp>
 8004ba0:	f1b9 0f00 	cmp.w	r9, #0
 8004ba4:	f000 8663 	beq.w	800586e <d_print_comp+0x2cda>
 8004ba8:	464a      	mov	r2, r9
 8004baa:	4631      	mov	r1, r6
 8004bac:	4620      	mov	r0, r4
 8004bae:	f001 fcf9 	bl	80065a4 <d_print_subexpr>
 8004bb2:	9905      	ldr	r1, [sp, #20]
 8004bb4:	686a      	ldr	r2, [r5, #4]
 8004bb6:	f7fe b8e0 	b.w	8002d7a <d_print_comp+0x1e6>
 8004bba:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8004bbe:	4956      	ldr	r1, [pc, #344]	; (8004d18 <d_print_comp+0x2184>)
 8004bc0:	f8d3 a000 	ldr.w	sl, [r3]
 8004bc4:	4650      	mov	r0, sl
 8004bc6:	f002 f8cb 	bl	8006d60 <strcmp>
 8004bca:	f898 3000 	ldrb.w	r3, [r8]
 8004bce:	b910      	cbnz	r0, 8004bd6 <d_print_comp+0x2042>
 8004bd0:	2b03      	cmp	r3, #3
 8004bd2:	f000 852b 	beq.w	800562c <d_print_comp+0x2a98>
 8004bd6:	2b38      	cmp	r3, #56	; 0x38
 8004bd8:	f000 850c 	beq.w	80055f4 <d_print_comp+0x2a60>
 8004bdc:	494f      	ldr	r1, [pc, #316]	; (8004d1c <d_print_comp+0x2188>)
 8004bde:	4650      	mov	r0, sl
 8004be0:	f002 f8be 	bl	8006d60 <strcmp>
 8004be4:	4607      	mov	r7, r0
 8004be6:	2800      	cmp	r0, #0
 8004be8:	f000 8513 	beq.w	8005612 <d_print_comp+0x2a7e>
 8004bec:	494c      	ldr	r1, [pc, #304]	; (8004d20 <d_print_comp+0x218c>)
 8004bee:	4650      	mov	r0, sl
 8004bf0:	f002 f8b6 	bl	8006d60 <strcmp>
 8004bf4:	2800      	cmp	r0, #0
 8004bf6:	f000 8333 	beq.w	8005260 <d_print_comp+0x26cc>
 8004bfa:	4631      	mov	r1, r6
 8004bfc:	4620      	mov	r0, r4
 8004bfe:	464a      	mov	r2, r9
 8004c00:	f001 fc90 	bl	8006524 <d_print_expr_op>
 8004c04:	4947      	ldr	r1, [pc, #284]	; (8004d24 <d_print_comp+0x2190>)
 8004c06:	4650      	mov	r0, sl
 8004c08:	f002 f8aa 	bl	8006d60 <strcmp>
 8004c0c:	2800      	cmp	r0, #0
 8004c0e:	f000 83b0 	beq.w	8005372 <d_print_comp+0x27de>
 8004c12:	4650      	mov	r0, sl
 8004c14:	4944      	ldr	r1, [pc, #272]	; (8004d28 <d_print_comp+0x2194>)
 8004c16:	f002 f8a3 	bl	8006d60 <strcmp>
 8004c1a:	4681      	mov	r9, r0
 8004c1c:	2800      	cmp	r0, #0
 8004c1e:	f47e abd7 	bne.w	80033d0 <d_print_comp+0x83c>
 8004c22:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004c26:	2fff      	cmp	r7, #255	; 0xff
 8004c28:	d110      	bne.n	8004c4c <d_print_comp+0x20b8>
 8004c2a:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 8004c2e:	4639      	mov	r1, r7
 8004c30:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004c34:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004c38:	4620      	mov	r0, r4
 8004c3a:	4798      	blx	r3
 8004c3c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004c40:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 8004c44:	3301      	adds	r3, #1
 8004c46:	464f      	mov	r7, r9
 8004c48:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004c4c:	1c78      	adds	r0, r7, #1
 8004c4e:	2328      	movs	r3, #40	; 0x28
 8004c50:	f8c4 0100 	str.w	r0, [r4, #256]	; 0x100
 8004c54:	4642      	mov	r2, r8
 8004c56:	55e3      	strb	r3, [r4, r7]
 8004c58:	4631      	mov	r1, r6
 8004c5a:	4620      	mov	r0, r4
 8004c5c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004c60:	f7fd ff98 	bl	8002b94 <d_print_comp>
 8004c64:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004c68:	2fff      	cmp	r7, #255	; 0xff
 8004c6a:	d111      	bne.n	8004c90 <d_print_comp+0x20fc>
 8004c6c:	2600      	movs	r6, #0
 8004c6e:	4639      	mov	r1, r7
 8004c70:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004c74:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004c78:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004c7c:	4620      	mov	r0, r4
 8004c7e:	4798      	blx	r3
 8004c80:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004c84:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004c88:	3301      	adds	r3, #1
 8004c8a:	4637      	mov	r7, r6
 8004c8c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004c90:	1c7a      	adds	r2, r7, #1
 8004c92:	2329      	movs	r3, #41	; 0x29
 8004c94:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004c98:	55e3      	strb	r3, [r4, r7]
 8004c9a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004c9e:	686a      	ldr	r2, [r5, #4]
 8004ca0:	9905      	ldr	r1, [sp, #20]
 8004ca2:	f7fe b86a 	b.w	8002d7a <d_print_comp+0x1e6>
 8004ca6:	f105 020c 	add.w	r2, r5, #12
 8004caa:	4641      	mov	r1, r8
 8004cac:	4620      	mov	r0, r4
 8004cae:	f001 f935 	bl	8005f1c <d_print_function_type.isra.15>
 8004cb2:	68aa      	ldr	r2, [r5, #8]
 8004cb4:	2a00      	cmp	r2, #0
 8004cb6:	f000 83fd 	beq.w	80054b4 <d_print_comp+0x2920>
 8004cba:	4641      	mov	r1, r8
 8004cbc:	4620      	mov	r0, r4
 8004cbe:	f7fd ff69 	bl	8002b94 <d_print_comp>
 8004cc2:	9905      	ldr	r1, [sp, #20]
 8004cc4:	686a      	ldr	r2, [r5, #4]
 8004cc6:	f7fe b858 	b.w	8002d7a <d_print_comp+0x1e6>
 8004cca:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004cce:	2fff      	cmp	r7, #255	; 0xff
 8004cd0:	d111      	bne.n	8004cf6 <d_print_comp+0x2162>
 8004cd2:	2600      	movs	r6, #0
 8004cd4:	4639      	mov	r1, r7
 8004cd6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004cda:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004cde:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004ce2:	4620      	mov	r0, r4
 8004ce4:	4798      	blx	r3
 8004ce6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004cea:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004cee:	3301      	adds	r3, #1
 8004cf0:	4637      	mov	r7, r6
 8004cf2:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004cf6:	2320      	movs	r3, #32
 8004cf8:	1c7a      	adds	r2, r7, #1
 8004cfa:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004cfe:	55e3      	strb	r3, [r4, r7]
 8004d00:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004d04:	f7fe bf72 	b.w	8003bec <d_print_comp+0x1058>
 8004d08:	08011fdc 	.word	0x08011fdc
 8004d0c:	08011d88 	.word	0x08011d88
 8004d10:	08011d9c 	.word	0x08011d9c
 8004d14:	08011f98 	.word	0x08011f98
 8004d18:	08011f80 	.word	0x08011f80
 8004d1c:	08011f84 	.word	0x08011f84
 8004d20:	08011d8c 	.word	0x08011d8c
 8004d24:	08011f88 	.word	0x08011f88
 8004d28:	080122a8 	.word	0x080122a8
 8004d2c:	689b      	ldr	r3, [r3, #8]
 8004d2e:	f893 8010 	ldrb.w	r8, [r3, #16]
 8004d32:	f1b8 0f00 	cmp.w	r8, #0
 8004d36:	f43e aa89 	beq.w	800324c <d_print_comp+0x6b8>
 8004d3a:	f1b8 0f06 	cmp.w	r8, #6
 8004d3e:	f240 843f 	bls.w	80055c0 <d_print_comp+0x2a2c>
 8004d42:	f1b8 0f07 	cmp.w	r8, #7
 8004d46:	f47e aa81 	bne.w	800324c <d_print_comp+0x6b8>
 8004d4a:	68eb      	ldr	r3, [r5, #12]
 8004d4c:	781a      	ldrb	r2, [r3, #0]
 8004d4e:	2a00      	cmp	r2, #0
 8004d50:	f47e aa7c 	bne.w	800324c <d_print_comp+0x6b8>
 8004d54:	68da      	ldr	r2, [r3, #12]
 8004d56:	2a01      	cmp	r2, #1
 8004d58:	f47e aa78 	bne.w	800324c <d_print_comp+0x6b8>
 8004d5c:	283c      	cmp	r0, #60	; 0x3c
 8004d5e:	f47e aa75 	bne.w	800324c <d_print_comp+0x6b8>
 8004d62:	689b      	ldr	r3, [r3, #8]
 8004d64:	781b      	ldrb	r3, [r3, #0]
 8004d66:	2b30      	cmp	r3, #48	; 0x30
 8004d68:	f000 84b6 	beq.w	80056d8 <d_print_comp+0x2b44>
 8004d6c:	2b31      	cmp	r3, #49	; 0x31
 8004d6e:	f47e aa6d 	bne.w	800324c <d_print_comp+0x6b8>
 8004d72:	2204      	movs	r2, #4
 8004d74:	49c3      	ldr	r1, [pc, #780]	; (8005084 <d_print_comp+0x24f0>)
 8004d76:	4620      	mov	r0, r4
 8004d78:	f7fb fae8 	bl	800034c <d_append_buffer>
 8004d7c:	9905      	ldr	r1, [sp, #20]
 8004d7e:	686a      	ldr	r2, [r5, #4]
 8004d80:	f7fd bffb 	b.w	8002d7a <d_print_comp+0x1e6>
 8004d84:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004d88:	2fff      	cmp	r7, #255	; 0xff
 8004d8a:	d112      	bne.n	8004db2 <d_print_comp+0x221e>
 8004d8c:	f04f 0800 	mov.w	r8, #0
 8004d90:	4639      	mov	r1, r7
 8004d92:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004d96:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004d9a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004d9e:	4620      	mov	r0, r4
 8004da0:	4798      	blx	r3
 8004da2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004da6:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8004daa:	3301      	adds	r3, #1
 8004dac:	4647      	mov	r7, r8
 8004dae:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004db2:	1c7a      	adds	r2, r7, #1
 8004db4:	235b      	movs	r3, #91	; 0x5b
 8004db6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004dba:	55e3      	strb	r3, [r4, r7]
 8004dbc:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004dc0:	4631      	mov	r1, r6
 8004dc2:	68ea      	ldr	r2, [r5, #12]
 8004dc4:	4620      	mov	r0, r4
 8004dc6:	f7fd fee5 	bl	8002b94 <d_print_comp>
 8004dca:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004dce:	2fff      	cmp	r7, #255	; 0xff
 8004dd0:	d111      	bne.n	8004df6 <d_print_comp+0x2262>
 8004dd2:	2600      	movs	r6, #0
 8004dd4:	4639      	mov	r1, r7
 8004dd6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004dda:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004dde:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004de2:	4620      	mov	r0, r4
 8004de4:	4798      	blx	r3
 8004de6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004dea:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004dee:	3301      	adds	r3, #1
 8004df0:	4637      	mov	r7, r6
 8004df2:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004df6:	1c7a      	adds	r2, r7, #1
 8004df8:	235d      	movs	r3, #93	; 0x5d
 8004dfa:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004dfe:	55e3      	strb	r3, [r4, r7]
 8004e00:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004e04:	686a      	ldr	r2, [r5, #4]
 8004e06:	9905      	ldr	r1, [sp, #20]
 8004e08:	f7fd bfb7 	b.w	8002d7a <d_print_comp+0x1e6>
 8004e0c:	1c59      	adds	r1, r3, #1
 8004e0e:	2229      	movs	r2, #41	; 0x29
 8004e10:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004e14:	54e2      	strb	r2, [r4, r3]
 8004e16:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8004e1a:	782b      	ldrb	r3, [r5, #0]
 8004e1c:	2b3d      	cmp	r3, #61	; 0x3d
 8004e1e:	f47e aa57 	bne.w	80032d0 <d_print_comp+0x73c>
 8004e22:	29ff      	cmp	r1, #255	; 0xff
 8004e24:	d10f      	bne.n	8004e46 <d_print_comp+0x22b2>
 8004e26:	2700      	movs	r7, #0
 8004e28:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004e2c:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8004e30:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004e34:	4620      	mov	r0, r4
 8004e36:	4798      	blx	r3
 8004e38:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004e3c:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8004e40:	3301      	adds	r3, #1
 8004e42:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004e46:	f8d4 2100 	ldr.w	r2, [r4, #256]	; 0x100
 8004e4a:	232d      	movs	r3, #45	; 0x2d
 8004e4c:	1c51      	adds	r1, r2, #1
 8004e4e:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8004e52:	54a3      	strb	r3, [r4, r2]
 8004e54:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004e58:	f7fe ba3a 	b.w	80032d0 <d_print_comp+0x73c>
 8004e5c:	4f8a      	ldr	r7, [pc, #552]	; (8005088 <d_print_comp+0x24f4>)
 8004e5e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004e62:	f107 0a02 	add.w	sl, r7, #2
 8004e66:	e016      	b.n	8004e96 <d_print_comp+0x2302>
 8004e68:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004e6c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004e70:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8004e74:	4798      	blx	r3
 8004e76:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004e7a:	3301      	adds	r3, #1
 8004e7c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004e80:	2200      	movs	r2, #0
 8004e82:	2301      	movs	r3, #1
 8004e84:	45ba      	cmp	sl, r7
 8004e86:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004e8a:	f804 8002 	strb.w	r8, [r4, r2]
 8004e8e:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8004e92:	f43f a980 	beq.w	8004196 <d_print_comp+0x1602>
 8004e96:	2bff      	cmp	r3, #255	; 0xff
 8004e98:	4619      	mov	r1, r3
 8004e9a:	4620      	mov	r0, r4
 8004e9c:	f817 8b01 	ldrb.w	r8, [r7], #1
 8004ea0:	d0e2      	beq.n	8004e68 <d_print_comp+0x22d4>
 8004ea2:	461a      	mov	r2, r3
 8004ea4:	3301      	adds	r3, #1
 8004ea6:	e7ed      	b.n	8004e84 <d_print_comp+0x22f0>
 8004ea8:	6892      	ldr	r2, [r2, #8]
 8004eaa:	4631      	mov	r1, r6
 8004eac:	4620      	mov	r0, r4
 8004eae:	f7fd fe71 	bl	8002b94 <d_print_comp>
 8004eb2:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 8004eb6:	b113      	cbz	r3, 8004ebe <d_print_comp+0x232a>
 8004eb8:	9b08      	ldr	r3, [sp, #32]
 8004eba:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8004ebe:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8004ec2:	2b3c      	cmp	r3, #60	; 0x3c
 8004ec4:	f000 82c4 	beq.w	8005450 <d_print_comp+0x28bc>
 8004ec8:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004ecc:	2fff      	cmp	r7, #255	; 0xff
 8004ece:	d112      	bne.n	8004ef6 <d_print_comp+0x2362>
 8004ed0:	f04f 0800 	mov.w	r8, #0
 8004ed4:	4639      	mov	r1, r7
 8004ed6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004eda:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8004ede:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004ee2:	4620      	mov	r0, r4
 8004ee4:	4798      	blx	r3
 8004ee6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004eea:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8004eee:	3301      	adds	r3, #1
 8004ef0:	4647      	mov	r7, r8
 8004ef2:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004ef6:	233c      	movs	r3, #60	; 0x3c
 8004ef8:	1c7a      	adds	r2, r7, #1
 8004efa:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004efe:	55e3      	strb	r3, [r4, r7]
 8004f00:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004f04:	68ab      	ldr	r3, [r5, #8]
 8004f06:	4631      	mov	r1, r6
 8004f08:	68da      	ldr	r2, [r3, #12]
 8004f0a:	4620      	mov	r0, r4
 8004f0c:	f7fd fe42 	bl	8002b94 <d_print_comp>
 8004f10:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8004f14:	2b3e      	cmp	r3, #62	; 0x3e
 8004f16:	f000 827d 	beq.w	8005414 <d_print_comp+0x2880>
 8004f1a:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004f1e:	2fff      	cmp	r7, #255	; 0xff
 8004f20:	d111      	bne.n	8004f46 <d_print_comp+0x23b2>
 8004f22:	2600      	movs	r6, #0
 8004f24:	4639      	mov	r1, r7
 8004f26:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004f2a:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8004f2e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004f32:	4620      	mov	r0, r4
 8004f34:	4798      	blx	r3
 8004f36:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004f3a:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8004f3e:	3301      	adds	r3, #1
 8004f40:	4637      	mov	r7, r6
 8004f42:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004f46:	233e      	movs	r3, #62	; 0x3e
 8004f48:	1c7a      	adds	r2, r7, #1
 8004f4a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004f4e:	55e3      	strb	r3, [r4, r7]
 8004f50:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004f54:	f7ff badc 	b.w	8004510 <d_print_comp+0x197c>
 8004f58:	4f4c      	ldr	r7, [pc, #304]	; (800508c <d_print_comp+0x24f8>)
 8004f5a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8004f5e:	f107 0905 	add.w	r9, r7, #5
 8004f62:	f04f 0a00 	mov.w	sl, #0
 8004f66:	e016      	b.n	8004f96 <d_print_comp+0x2402>
 8004f68:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004f6c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004f70:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8004f74:	4798      	blx	r3
 8004f76:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004f7a:	3301      	adds	r3, #1
 8004f7c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004f80:	2200      	movs	r2, #0
 8004f82:	2301      	movs	r3, #1
 8004f84:	45b9      	cmp	r9, r7
 8004f86:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8004f8a:	f804 8002 	strb.w	r8, [r4, r2]
 8004f8e:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8004f92:	f43e ab41 	beq.w	8003618 <d_print_comp+0xa84>
 8004f96:	2bff      	cmp	r3, #255	; 0xff
 8004f98:	4619      	mov	r1, r3
 8004f9a:	4620      	mov	r0, r4
 8004f9c:	f817 8b01 	ldrb.w	r8, [r7], #1
 8004fa0:	d0e2      	beq.n	8004f68 <d_print_comp+0x23d4>
 8004fa2:	461a      	mov	r2, r3
 8004fa4:	3301      	adds	r3, #1
 8004fa6:	e7ed      	b.n	8004f84 <d_print_comp+0x23f0>
 8004fa8:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8004fac:	2fff      	cmp	r7, #255	; 0xff
 8004fae:	d112      	bne.n	8004fd6 <d_print_comp+0x2442>
 8004fb0:	f04f 0a00 	mov.w	sl, #0
 8004fb4:	4639      	mov	r1, r7
 8004fb6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8004fba:	f884 a0ff 	strb.w	sl, [r4, #255]	; 0xff
 8004fbe:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8004fc2:	4620      	mov	r0, r4
 8004fc4:	4798      	blx	r3
 8004fc6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8004fca:	f8c4 a100 	str.w	sl, [r4, #256]	; 0x100
 8004fce:	3301      	adds	r3, #1
 8004fd0:	4657      	mov	r7, sl
 8004fd2:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8004fd6:	2320      	movs	r3, #32
 8004fd8:	1c7a      	adds	r2, r7, #1
 8004fda:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8004fde:	55e3      	strb	r3, [r4, r7]
 8004fe0:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8004fe4:	f7fe bdda 	b.w	8003b9c <d_print_comp+0x1008>
 8004fe8:	f8d4 1120 	ldr.w	r1, [r4, #288]	; 0x120
 8004fec:	2900      	cmp	r1, #0
 8004fee:	f6fe ad99 	blt.w	8003b24 <d_print_comp+0xf90>
 8004ff2:	f7fb fbc3 	bl	800077c <d_index_template_argument.part.9>
 8004ff6:	4602      	mov	r2, r0
 8004ff8:	2800      	cmp	r0, #0
 8004ffa:	f47e ad93 	bne.w	8003b24 <d_print_comp+0xf90>
 8004ffe:	2301      	movs	r3, #1
 8005000:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8005004:	686a      	ldr	r2, [r5, #4]
 8005006:	9905      	ldr	r1, [sp, #20]
 8005008:	f7fd beb7 	b.w	8002d7a <d_print_comp+0x1e6>
 800500c:	9905      	ldr	r1, [sp, #20]
 800500e:	686a      	ldr	r2, [r5, #4]
 8005010:	f7fd beb3 	b.w	8002d7a <d_print_comp+0x1e6>
 8005014:	220d      	movs	r2, #13
 8005016:	491e      	ldr	r1, [pc, #120]	; (8005090 <d_print_comp+0x24fc>)
 8005018:	4620      	mov	r0, r4
 800501a:	f7fb f997 	bl	800034c <d_append_buffer>
 800501e:	68f9      	ldr	r1, [r7, #12]
 8005020:	4620      	mov	r0, r4
 8005022:	3101      	adds	r1, #1
 8005024:	f7fb fc84 	bl	8000930 <d_append_num>
 8005028:	2203      	movs	r2, #3
 800502a:	491a      	ldr	r1, [pc, #104]	; (8005094 <d_print_comp+0x2500>)
 800502c:	4620      	mov	r0, r4
 800502e:	f7fb f98d 	bl	800034c <d_append_buffer>
 8005032:	68bf      	ldr	r7, [r7, #8]
 8005034:	f7ff b8b4 	b.w	80041a0 <d_print_comp+0x160c>
 8005038:	f8d4 0100 	ldr.w	r0, [r4, #256]	; 0x100
 800503c:	9905      	ldr	r1, [sp, #20]
 800503e:	686a      	ldr	r2, [r5, #4]
 8005040:	42b8      	cmp	r0, r7
 8005042:	f47d ae9a 	bne.w	8002d7a <d_print_comp+0x1e6>
 8005046:	3b01      	subs	r3, #1
 8005048:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800504c:	f7fd be95 	b.w	8002d7a <d_print_comp+0x1e6>
 8005050:	4642      	mov	r2, r8
 8005052:	465b      	mov	r3, fp
 8005054:	46ab      	mov	fp, r5
 8005056:	f1bb 0f04 	cmp.w	fp, #4
 800505a:	46a0      	mov	r8, r4
 800505c:	461d      	mov	r5, r3
 800505e:	4614      	mov	r4, r2
 8005060:	f8c2 1114 	str.w	r1, [r2, #276]	; 0x114
 8005064:	f000 82a3 	beq.w	80055ae <d_print_comp+0x2a1a>
 8005068:	f1bb 0f02 	cmp.w	fp, #2
 800506c:	d137      	bne.n	80050de <d_print_comp+0x254a>
 800506e:	f8d8 a00c 	ldr.w	sl, [r8, #12]
 8005072:	f89a 3000 	ldrb.w	r3, [sl]
 8005076:	2b46      	cmp	r3, #70	; 0x46
 8005078:	f000 8327 	beq.w	80056ca <d_print_comp+0x2b36>
 800507c:	eb09 1207 	add.w	r2, r9, r7, lsl #4
 8005080:	3a0c      	subs	r2, #12
 8005082:	e020      	b.n	80050c6 <d_print_comp+0x2532>
 8005084:	08011fb4 	.word	0x08011fb4
 8005088:	08011dd8 	.word	0x08011dd8
 800508c:	08011f4c 	.word	0x08011f4c
 8005090:	08011ddc 	.word	0x08011ddc
 8005094:	08011dec 	.word	0x08011dec
 8005098:	2f04      	cmp	r7, #4
 800509a:	f43f a81d 	beq.w	80040d8 <d_print_comp+0x1544>
 800509e:	e89b 000f 	ldmia.w	fp, {r0, r1, r2, r3}
 80050a2:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
 80050a6:	2300      	movs	r3, #0
 80050a8:	f84e 3c0c 	str.w	r3, [lr, #-12]
 80050ac:	f84e ac10 	str.w	sl, [lr, #-16]
 80050b0:	9b01      	ldr	r3, [sp, #4]
 80050b2:	f8da a008 	ldr.w	sl, [sl, #8]
 80050b6:	f8c4 c114 	str.w	ip, [r4, #276]	; 0x114
 80050ba:	3701      	adds	r7, #1
 80050bc:	f84e bc04 	str.w	fp, [lr, #-4]
 80050c0:	f84e 3c08 	str.w	r3, [lr, #-8]
 80050c4:	4672      	mov	r2, lr
 80050c6:	f89a 0000 	ldrb.w	r0, [sl]
 80050ca:	f7fb f975 	bl	80003b8 <is_fnqual_component_type>
 80050ce:	f1a2 0b04 	sub.w	fp, r2, #4
 80050d2:	f102 0e10 	add.w	lr, r2, #16
 80050d6:	f102 0c0c 	add.w	ip, r2, #12
 80050da:	2800      	cmp	r0, #0
 80050dc:	d1dc      	bne.n	8005098 <d_print_comp+0x2504>
 80050de:	68ea      	ldr	r2, [r5, #12]
 80050e0:	4631      	mov	r1, r6
 80050e2:	4620      	mov	r0, r4
 80050e4:	f7fd fd56 	bl	8002b94 <d_print_comp>
 80050e8:	f898 3000 	ldrb.w	r3, [r8]
 80050ec:	2b04      	cmp	r3, #4
 80050ee:	bf04      	itt	eq
 80050f0:	9b06      	ldreq	r3, [sp, #24]
 80050f2:	f8c4 3110 	streq.w	r3, [r4, #272]	; 0x110
 80050f6:	013f      	lsls	r7, r7, #4
 80050f8:	f04f 0a20 	mov.w	sl, #32
 80050fc:	46a8      	mov	r8, r5
 80050fe:	eb09 0b07 	add.w	fp, r9, r7
 8005102:	f85b 5c08 	ldr.w	r5, [fp, #-8]
 8005106:	bb0d      	cbnz	r5, 800514c <d_print_comp+0x25b8>
 8005108:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800510c:	2bff      	cmp	r3, #255	; 0xff
 800510e:	4620      	mov	r0, r4
 8005110:	4619      	mov	r1, r3
 8005112:	d10e      	bne.n	8005132 <d_print_comp+0x259e>
 8005114:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005118:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800511c:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005120:	4798      	blx	r3
 8005122:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005126:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 800512a:	1c5a      	adds	r2, r3, #1
 800512c:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005130:	462b      	mov	r3, r5
 8005132:	1c59      	adds	r1, r3, #1
 8005134:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005138:	f85b 2c0c 	ldr.w	r2, [fp, #-12]
 800513c:	f804 a003 	strb.w	sl, [r4, r3]
 8005140:	4631      	mov	r1, r6
 8005142:	4620      	mov	r0, r4
 8005144:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8005148:	f000 fbba 	bl	80058c0 <d_print_mod>
 800514c:	3f10      	subs	r7, #16
 800514e:	d1d6      	bne.n	80050fe <d_print_comp+0x256a>
 8005150:	9b02      	ldr	r3, [sp, #8]
 8005152:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8005156:	4645      	mov	r5, r8
 8005158:	f7fe bfc1 	b.w	80040de <d_print_comp+0x154a>
 800515c:	4631      	mov	r1, r6
 800515e:	68aa      	ldr	r2, [r5, #8]
 8005160:	4620      	mov	r0, r4
 8005162:	f7fd fd17 	bl	8002b94 <d_print_comp>
 8005166:	9905      	ldr	r1, [sp, #20]
 8005168:	686a      	ldr	r2, [r5, #4]
 800516a:	f7fd be06 	b.w	8002d7a <d_print_comp+0x1e6>
 800516e:	460f      	mov	r7, r1
 8005170:	46a9      	mov	r9, r5
 8005172:	f7fe bebb 	b.w	8003eec <d_print_comp+0x1358>
 8005176:	4644      	mov	r4, r8
 8005178:	465d      	mov	r5, fp
 800517a:	f8c8 1114 	str.w	r1, [r8, #276]	; 0x114
 800517e:	f7fe bfab 	b.w	80040d8 <d_print_comp+0x1544>
 8005182:	68ea      	ldr	r2, [r5, #12]
 8005184:	4631      	mov	r1, r6
 8005186:	4620      	mov	r0, r4
 8005188:	f7fd fd04 	bl	8002b94 <d_print_comp>
 800518c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800518e:	9a01      	ldr	r2, [sp, #4]
 8005190:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
 8005194:	2b00      	cmp	r3, #0
 8005196:	f43e ab19 	beq.w	80037cc <d_print_comp+0xc38>
 800519a:	f7fe bb1f 	b.w	80037dc <d_print_comp+0xc48>
 800519e:	2301      	movs	r3, #1
 80051a0:	4664      	mov	r4, ip
 80051a2:	f8cc 3118 	str.w	r3, [ip, #280]	; 0x118
 80051a6:	f7fe bb19 	b.w	80037dc <d_print_comp+0xc48>
 80051aa:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80051ae:	f7fe bead 	b.w	8003f0c <d_print_comp+0x1378>
 80051b2:	4631      	mov	r1, r6
 80051b4:	68aa      	ldr	r2, [r5, #8]
 80051b6:	4620      	mov	r0, r4
 80051b8:	f001 f9f4 	bl	80065a4 <d_print_subexpr>
 80051bc:	2203      	movs	r2, #3
 80051be:	49bf      	ldr	r1, [pc, #764]	; (80054bc <d_print_comp+0x2928>)
 80051c0:	4620      	mov	r0, r4
 80051c2:	f7fb f8c3 	bl	800034c <d_append_buffer>
 80051c6:	9905      	ldr	r1, [sp, #20]
 80051c8:	686a      	ldr	r2, [r5, #4]
 80051ca:	f7fd bdd6 	b.w	8002d7a <d_print_comp+0x1e6>
 80051ce:	f8d4 e130 	ldr.w	lr, [r4, #304]	; 0x130
 80051d2:	f8d4 212c 	ldr.w	r2, [r4, #300]	; 0x12c
 80051d6:	f1be 0f00 	cmp.w	lr, #0
 80051da:	dd17      	ble.n	800520c <d_print_comp+0x2678>
 80051dc:	6810      	ldr	r0, [r2, #0]
 80051de:	4581      	cmp	r9, r0
 80051e0:	f000 81a7 	beq.w	8005532 <d_print_comp+0x299e>
 80051e4:	f102 0b08 	add.w	fp, r2, #8
 80051e8:	46bc      	mov	ip, r7
 80051ea:	9101      	str	r1, [sp, #4]
 80051ec:	4670      	mov	r0, lr
 80051ee:	e004      	b.n	80051fa <d_print_comp+0x2666>
 80051f0:	f852 103c 	ldr.w	r1, [r2, ip, lsl #3]
 80051f4:	4589      	cmp	r9, r1
 80051f6:	f000 819d 	beq.w	8005534 <d_print_comp+0x29a0>
 80051fa:	f10c 0c01 	add.w	ip, ip, #1
 80051fe:	4560      	cmp	r0, ip
 8005200:	46da      	mov	sl, fp
 8005202:	f10b 0b08 	add.w	fp, fp, #8
 8005206:	d1f3      	bne.n	80051f0 <d_print_comp+0x265c>
 8005208:	9901      	ldr	r1, [sp, #4]
 800520a:	4686      	mov	lr, r0
 800520c:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 8005210:	459e      	cmp	lr, r3
 8005212:	f280 8344 	bge.w	800589e <d_print_comp+0x2d0a>
 8005216:	f10e 0301 	add.w	r3, lr, #1
 800521a:	eb02 0cce 	add.w	ip, r2, lr, lsl #3
 800521e:	f8c4 3130 	str.w	r3, [r4, #304]	; 0x130
 8005222:	f8d4 0110 	ldr.w	r0, [r4, #272]	; 0x110
 8005226:	f842 903e 	str.w	r9, [r2, lr, lsl #3]
 800522a:	f10c 0c04 	add.w	ip, ip, #4
 800522e:	2800      	cmp	r0, #0
 8005230:	f000 825b 	beq.w	80056ea <d_print_comp+0x2b56>
 8005234:	f8d4 213c 	ldr.w	r2, [r4, #316]	; 0x13c
 8005238:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 800523c:	429a      	cmp	r2, r3
 800523e:	f102 0e01 	add.w	lr, r2, #1
 8005242:	f280 832c 	bge.w	800589e <d_print_comp+0x2d0a>
 8005246:	f8d4 3138 	ldr.w	r3, [r4, #312]	; 0x138
 800524a:	f8c4 e13c 	str.w	lr, [r4, #316]	; 0x13c
 800524e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005252:	6842      	ldr	r2, [r0, #4]
 8005254:	605a      	str	r2, [r3, #4]
 8005256:	f8cc 3000 	str.w	r3, [ip]
 800525a:	6800      	ldr	r0, [r0, #0]
 800525c:	469c      	mov	ip, r3
 800525e:	e7e6      	b.n	800522e <d_print_comp+0x269a>
 8005260:	4606      	mov	r6, r0
 8005262:	4647      	mov	r7, r8
 8005264:	e001      	b.n	800526a <d_print_comp+0x26d6>
 8005266:	68ff      	ldr	r7, [r7, #12]
 8005268:	b31f      	cbz	r7, 80052b2 <d_print_comp+0x271e>
 800526a:	783b      	ldrb	r3, [r7, #0]
 800526c:	2b2f      	cmp	r3, #47	; 0x2f
 800526e:	d120      	bne.n	80052b2 <d_print_comp+0x271e>
 8005270:	68bb      	ldr	r3, [r7, #8]
 8005272:	b1f3      	cbz	r3, 80052b2 <d_print_comp+0x271e>
 8005274:	781a      	ldrb	r2, [r3, #0]
 8005276:	2a4a      	cmp	r2, #74	; 0x4a
 8005278:	bf18      	it	ne
 800527a:	3601      	addne	r6, #1
 800527c:	d1f3      	bne.n	8005266 <d_print_comp+0x26d2>
 800527e:	6899      	ldr	r1, [r3, #8]
 8005280:	4620      	mov	r0, r4
 8005282:	f7fb faa1 	bl	80007c8 <d_find_pack>
 8005286:	2800      	cmp	r0, #0
 8005288:	f000 81ef 	beq.w	800566a <d_print_comp+0x2ad6>
 800528c:	7803      	ldrb	r3, [r0, #0]
 800528e:	2b2f      	cmp	r3, #47	; 0x2f
 8005290:	f040 81eb 	bne.w	800566a <d_print_comp+0x2ad6>
 8005294:	6883      	ldr	r3, [r0, #8]
 8005296:	b153      	cbz	r3, 80052ae <d_print_comp+0x271a>
 8005298:	2300      	movs	r3, #0
 800529a:	e004      	b.n	80052a6 <d_print_comp+0x2712>
 800529c:	7802      	ldrb	r2, [r0, #0]
 800529e:	2a2f      	cmp	r2, #47	; 0x2f
 80052a0:	d105      	bne.n	80052ae <d_print_comp+0x271a>
 80052a2:	6882      	ldr	r2, [r0, #8]
 80052a4:	b11a      	cbz	r2, 80052ae <d_print_comp+0x271a>
 80052a6:	68c0      	ldr	r0, [r0, #12]
 80052a8:	3301      	adds	r3, #1
 80052aa:	2800      	cmp	r0, #0
 80052ac:	d1f6      	bne.n	800529c <d_print_comp+0x2708>
 80052ae:	441e      	add	r6, r3
 80052b0:	e7d9      	b.n	8005266 <d_print_comp+0x26d2>
 80052b2:	4631      	mov	r1, r6
 80052b4:	4620      	mov	r0, r4
 80052b6:	f7fb fb3b 	bl	8000930 <d_append_num>
 80052ba:	9905      	ldr	r1, [sp, #20]
 80052bc:	686a      	ldr	r2, [r5, #4]
 80052be:	f7fd bd5c 	b.w	8002d7a <d_print_comp+0x1e6>
 80052c2:	4631      	mov	r1, r6
 80052c4:	4620      	mov	r0, r4
 80052c6:	f001 f92d 	bl	8006524 <d_print_expr_op>
 80052ca:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80052ce:	2fff      	cmp	r7, #255	; 0xff
 80052d0:	d112      	bne.n	80052f8 <d_print_comp+0x2764>
 80052d2:	f04f 0800 	mov.w	r8, #0
 80052d6:	4639      	mov	r1, r7
 80052d8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80052dc:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 80052e0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80052e4:	4620      	mov	r0, r4
 80052e6:	4798      	blx	r3
 80052e8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80052ec:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 80052f0:	3301      	adds	r3, #1
 80052f2:	4647      	mov	r7, r8
 80052f4:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80052f8:	1c7a      	adds	r2, r7, #1
 80052fa:	233c      	movs	r3, #60	; 0x3c
 80052fc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005300:	55e3      	strb	r3, [r4, r7]
 8005302:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005306:	68eb      	ldr	r3, [r5, #12]
 8005308:	4631      	mov	r1, r6
 800530a:	689a      	ldr	r2, [r3, #8]
 800530c:	4620      	mov	r0, r4
 800530e:	f7fd fc41 	bl	8002b94 <d_print_comp>
 8005312:	2202      	movs	r2, #2
 8005314:	496a      	ldr	r1, [pc, #424]	; (80054c0 <d_print_comp+0x292c>)
 8005316:	4620      	mov	r0, r4
 8005318:	f7fb f818 	bl	800034c <d_append_buffer>
 800531c:	68eb      	ldr	r3, [r5, #12]
 800531e:	4631      	mov	r1, r6
 8005320:	68da      	ldr	r2, [r3, #12]
 8005322:	4620      	mov	r0, r4
 8005324:	f7fd fc36 	bl	8002b94 <d_print_comp>
 8005328:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 800532c:	2fff      	cmp	r7, #255	; 0xff
 800532e:	d111      	bne.n	8005354 <d_print_comp+0x27c0>
 8005330:	2600      	movs	r6, #0
 8005332:	4639      	mov	r1, r7
 8005334:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005338:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800533c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005340:	4620      	mov	r0, r4
 8005342:	4798      	blx	r3
 8005344:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005348:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800534c:	3301      	adds	r3, #1
 800534e:	4637      	mov	r7, r6
 8005350:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005354:	1c7a      	adds	r2, r7, #1
 8005356:	2329      	movs	r3, #41	; 0x29
 8005358:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800535c:	55e3      	strb	r3, [r4, r7]
 800535e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005362:	686a      	ldr	r2, [r5, #4]
 8005364:	9905      	ldr	r1, [sp, #20]
 8005366:	f7fd bd08 	b.w	8002d7a <d_print_comp+0x1e6>
 800536a:	9905      	ldr	r1, [sp, #20]
 800536c:	686a      	ldr	r2, [r5, #4]
 800536e:	f7fd bd04 	b.w	8002d7a <d_print_comp+0x1e6>
 8005372:	4642      	mov	r2, r8
 8005374:	4631      	mov	r1, r6
 8005376:	4620      	mov	r0, r4
 8005378:	f7fd fc0c 	bl	8002b94 <d_print_comp>
 800537c:	9905      	ldr	r1, [sp, #20]
 800537e:	686a      	ldr	r2, [r5, #4]
 8005380:	f7fd bcfb 	b.w	8002d7a <d_print_comp+0x1e6>
 8005384:	a918      	add	r1, sp, #96	; 0x60
 8005386:	4620      	mov	r0, r4
 8005388:	f841 3d40 	str.w	r3, [r1, #-64]!
 800538c:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8005390:	f8c4 1114 	str.w	r1, [r4, #276]	; 0x114
 8005394:	4641      	mov	r1, r8
 8005396:	960a      	str	r6, [sp, #40]	; 0x28
 8005398:	930b      	str	r3, [sp, #44]	; 0x2c
 800539a:	9509      	str	r5, [sp, #36]	; 0x24
 800539c:	f7fd fbfa 	bl	8002b94 <d_print_comp>
 80053a0:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80053a2:	9b08      	ldr	r3, [sp, #32]
 80053a4:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 80053a8:	b9ee      	cbnz	r6, 80053e6 <d_print_comp+0x2852>
 80053aa:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80053ae:	2fff      	cmp	r7, #255	; 0xff
 80053b0:	d110      	bne.n	80053d4 <d_print_comp+0x2840>
 80053b2:	4639      	mov	r1, r7
 80053b4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80053b8:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80053bc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80053c0:	4620      	mov	r0, r4
 80053c2:	4798      	blx	r3
 80053c4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80053c8:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 80053cc:	3301      	adds	r3, #1
 80053ce:	4637      	mov	r7, r6
 80053d0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80053d4:	2320      	movs	r3, #32
 80053d6:	1c7a      	adds	r2, r7, #1
 80053d8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80053dc:	55e3      	strb	r3, [r4, r7]
 80053de:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80053e2:	f7fe ba0c 	b.w	80037fe <d_print_comp+0xc6a>
 80053e6:	9905      	ldr	r1, [sp, #20]
 80053e8:	686a      	ldr	r2, [r5, #4]
 80053ea:	f7fd bcc6 	b.w	8002d7a <d_print_comp+0x1e6>
 80053ee:	4935      	ldr	r1, [pc, #212]	; (80054c4 <d_print_comp+0x2930>)
 80053f0:	68b8      	ldr	r0, [r7, #8]
 80053f2:	f008 fe51 	bl	800e098 <strncmp>
 80053f6:	2800      	cmp	r0, #0
 80053f8:	f47e abc6 	bne.w	8003b88 <d_print_comp+0xff4>
 80053fc:	4631      	mov	r1, r6
 80053fe:	68ea      	ldr	r2, [r5, #12]
 8005400:	4620      	mov	r0, r4
 8005402:	f7fd fbc7 	bl	8002b94 <d_print_comp>
 8005406:	2202      	movs	r2, #2
 8005408:	492f      	ldr	r1, [pc, #188]	; (80054c8 <d_print_comp+0x2934>)
 800540a:	4620      	mov	r0, r4
 800540c:	f7fa ff9e 	bl	800034c <d_append_buffer>
 8005410:	f7fe bc09 	b.w	8003c26 <d_print_comp+0x1092>
 8005414:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8005418:	2fff      	cmp	r7, #255	; 0xff
 800541a:	d111      	bne.n	8005440 <d_print_comp+0x28ac>
 800541c:	2600      	movs	r6, #0
 800541e:	4639      	mov	r1, r7
 8005420:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005424:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8005428:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800542c:	4620      	mov	r0, r4
 800542e:	4798      	blx	r3
 8005430:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005434:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005438:	3301      	adds	r3, #1
 800543a:	4637      	mov	r7, r6
 800543c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005440:	2320      	movs	r3, #32
 8005442:	1c7a      	adds	r2, r7, #1
 8005444:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005448:	55e3      	strb	r3, [r4, r7]
 800544a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800544e:	e564      	b.n	8004f1a <d_print_comp+0x2386>
 8005450:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8005454:	2fff      	cmp	r7, #255	; 0xff
 8005456:	d112      	bne.n	800547e <d_print_comp+0x28ea>
 8005458:	f04f 0800 	mov.w	r8, #0
 800545c:	4639      	mov	r1, r7
 800545e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005462:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8005466:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800546a:	4620      	mov	r0, r4
 800546c:	4798      	blx	r3
 800546e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005472:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8005476:	3301      	adds	r3, #1
 8005478:	4647      	mov	r7, r8
 800547a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800547e:	2320      	movs	r3, #32
 8005480:	1c7a      	adds	r2, r7, #1
 8005482:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005486:	55e3      	strb	r3, [r4, r7]
 8005488:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800548c:	e51c      	b.n	8004ec8 <d_print_comp+0x2334>
 800548e:	4640      	mov	r0, r8
 8005490:	490e      	ldr	r1, [pc, #56]	; (80054cc <d_print_comp+0x2938>)
 8005492:	f001 fc65 	bl	8006d60 <strcmp>
 8005496:	2800      	cmp	r0, #0
 8005498:	f040 81fb 	bne.w	8005892 <d_print_comp+0x2cfe>
 800549c:	68eb      	ldr	r3, [r5, #12]
 800549e:	4631      	mov	r1, r6
 80054a0:	68da      	ldr	r2, [r3, #12]
 80054a2:	4620      	mov	r0, r4
 80054a4:	f001 f87e 	bl	80065a4 <d_print_subexpr>
 80054a8:	f7fd bc60 	b.w	8002d6c <d_print_comp+0x1d8>
 80054ac:	9905      	ldr	r1, [sp, #20]
 80054ae:	686a      	ldr	r2, [r5, #4]
 80054b0:	f7fd bc63 	b.w	8002d7a <d_print_comp+0x1e6>
 80054b4:	9905      	ldr	r1, [sp, #20]
 80054b6:	686a      	ldr	r2, [r5, #4]
 80054b8:	f7fd bc5f 	b.w	8002d7a <d_print_comp+0x1e6>
 80054bc:	08011fd8 	.word	0x08011fd8
 80054c0:	08011f8c 	.word	0x08011f8c
 80054c4:	08011df0 	.word	0x08011df0
 80054c8:	08011df8 	.word	0x08011df8
 80054cc:	08011d90 	.word	0x08011d90
 80054d0:	689b      	ldr	r3, [r3, #8]
 80054d2:	689a      	ldr	r2, [r3, #8]
 80054d4:	2a01      	cmp	r2, #1
 80054d6:	f47d ac4e 	bne.w	8002d76 <d_print_comp+0x1e2>
 80054da:	685b      	ldr	r3, [r3, #4]
 80054dc:	781b      	ldrb	r3, [r3, #0]
 80054de:	2b3e      	cmp	r3, #62	; 0x3e
 80054e0:	f47d ac49 	bne.w	8002d76 <d_print_comp+0x1e2>
 80054e4:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80054e8:	2fff      	cmp	r7, #255	; 0xff
 80054ea:	d111      	bne.n	8005510 <d_print_comp+0x297c>
 80054ec:	2600      	movs	r6, #0
 80054ee:	4639      	mov	r1, r7
 80054f0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80054f4:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 80054f8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80054fc:	4620      	mov	r0, r4
 80054fe:	4798      	blx	r3
 8005500:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005504:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005508:	3301      	adds	r3, #1
 800550a:	4637      	mov	r7, r6
 800550c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005510:	1c7a      	adds	r2, r7, #1
 8005512:	2329      	movs	r3, #41	; 0x29
 8005514:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005518:	55e3      	strb	r3, [r4, r7]
 800551a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800551e:	686a      	ldr	r2, [r5, #4]
 8005520:	9905      	ldr	r1, [sp, #20]
 8005522:	f7fd bc2a 	b.w	8002d7a <d_print_comp+0x1e6>
 8005526:	2a05      	cmp	r2, #5
 8005528:	f200 80a9 	bhi.w	800567e <d_print_comp+0x2aea>
 800552c:	3b57      	subs	r3, #87	; 0x57
 800552e:	f7ff ba1d 	b.w	800496c <d_print_comp+0x1dd8>
 8005532:	4692      	mov	sl, r2
 8005534:	461a      	mov	r2, r3
 8005536:	e001      	b.n	800553c <d_print_comp+0x29a8>
 8005538:	6852      	ldr	r2, [r2, #4]
 800553a:	b342      	cbz	r2, 800558e <d_print_comp+0x29fa>
 800553c:	6811      	ldr	r1, [r2, #0]
 800553e:	4589      	cmp	r9, r1
 8005540:	d003      	beq.n	800554a <d_print_comp+0x29b6>
 8005542:	428d      	cmp	r5, r1
 8005544:	d1f8      	bne.n	8005538 <d_print_comp+0x29a4>
 8005546:	429a      	cmp	r2, r3
 8005548:	d0f6      	beq.n	8005538 <d_print_comp+0x29a4>
 800554a:	f109 0108 	add.w	r1, r9, #8
 800554e:	4620      	mov	r0, r4
 8005550:	f7fb f92a 	bl	80007a8 <d_lookup_template_argument.isra.10>
 8005554:	4681      	mov	r9, r0
 8005556:	b198      	cbz	r0, 8005580 <d_print_comp+0x29ec>
 8005558:	f899 3000 	ldrb.w	r3, [r9]
 800555c:	2b2f      	cmp	r3, #47	; 0x2f
 800555e:	f47e acb6 	bne.w	8003ece <d_print_comp+0x133a>
 8005562:	f8d4 1120 	ldr.w	r1, [r4, #288]	; 0x120
 8005566:	2900      	cmp	r1, #0
 8005568:	f6fe acb6 	blt.w	8003ed8 <d_print_comp+0x1344>
 800556c:	4648      	mov	r0, r9
 800556e:	f7fb f905 	bl	800077c <d_index_template_argument.part.9>
 8005572:	4681      	mov	r9, r0
 8005574:	2800      	cmp	r0, #0
 8005576:	f47e acaa 	bne.w	8003ece <d_print_comp+0x133a>
 800557a:	b10f      	cbz	r7, 8005580 <d_print_comp+0x29ec>
 800557c:	f8c4 8110 	str.w	r8, [r4, #272]	; 0x110
 8005580:	2301      	movs	r3, #1
 8005582:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 8005586:	686a      	ldr	r2, [r5, #4]
 8005588:	9905      	ldr	r1, [sp, #20]
 800558a:	f7fd bbf6 	b.w	8002d7a <d_print_comp+0x1e6>
 800558e:	f8da 3004 	ldr.w	r3, [sl, #4]
 8005592:	f8d4 8110 	ldr.w	r8, [r4, #272]	; 0x110
 8005596:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 800559a:	f109 0108 	add.w	r1, r9, #8
 800559e:	4620      	mov	r0, r4
 80055a0:	f7fb f902 	bl	80007a8 <d_lookup_template_argument.isra.10>
 80055a4:	2701      	movs	r7, #1
 80055a6:	4681      	mov	r9, r0
 80055a8:	2800      	cmp	r0, #0
 80055aa:	d1d5      	bne.n	8005558 <d_print_comp+0x29c4>
 80055ac:	e7e6      	b.n	800557c <d_print_comp+0x29e8>
 80055ae:	ab18      	add	r3, sp, #96	; 0x60
 80055b0:	9a01      	ldr	r2, [sp, #4]
 80055b2:	f843 2d48 	str.w	r2, [r3, #-72]!
 80055b6:	f8cd 801c 	str.w	r8, [sp, #28]
 80055ba:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 80055be:	e58e      	b.n	80050de <d_print_comp+0x254a>
 80055c0:	68eb      	ldr	r3, [r5, #12]
 80055c2:	f893 9000 	ldrb.w	r9, [r3]
 80055c6:	f1b9 0f00 	cmp.w	r9, #0
 80055ca:	f47d ae3f 	bne.w	800324c <d_print_comp+0x6b8>
 80055ce:	283d      	cmp	r0, #61	; 0x3d
 80055d0:	f000 80e6 	beq.w	80057a0 <d_print_comp+0x2c0c>
 80055d4:	4631      	mov	r1, r6
 80055d6:	68ea      	ldr	r2, [r5, #12]
 80055d8:	4620      	mov	r0, r4
 80055da:	f1a8 0802 	sub.w	r8, r8, #2
 80055de:	f7fd fad9 	bl	8002b94 <d_print_comp>
 80055e2:	f1b8 0f04 	cmp.w	r8, #4
 80055e6:	f200 80d7 	bhi.w	8005798 <d_print_comp+0x2c04>
 80055ea:	e8df f008 	tbb	[pc, r8]
 80055ee:	93b4      	.short	0x93b4
 80055f0:	818a      	.short	0x818a
 80055f2:	35          	.byte	0x35
 80055f3:	00          	.byte	0x00
 80055f4:	f8d8 2008 	ldr.w	r2, [r8, #8]
 80055f8:	4631      	mov	r1, r6
 80055fa:	4620      	mov	r0, r4
 80055fc:	f000 ffd2 	bl	80065a4 <d_print_subexpr>
 8005600:	464a      	mov	r2, r9
 8005602:	4631      	mov	r1, r6
 8005604:	4620      	mov	r0, r4
 8005606:	f000 ff8d 	bl	8006524 <d_print_expr_op>
 800560a:	9905      	ldr	r1, [sp, #20]
 800560c:	686a      	ldr	r2, [r5, #4]
 800560e:	f7fd bbb4 	b.w	8002d7a <d_print_comp+0x1e6>
 8005612:	4641      	mov	r1, r8
 8005614:	4620      	mov	r0, r4
 8005616:	f7fb f8d7 	bl	80007c8 <d_find_pack>
 800561a:	b1a8      	cbz	r0, 8005648 <d_print_comp+0x2ab4>
 800561c:	7803      	ldrb	r3, [r0, #0]
 800561e:	2b2f      	cmp	r3, #47	; 0x2f
 8005620:	d112      	bne.n	8005648 <d_print_comp+0x2ab4>
 8005622:	6883      	ldr	r3, [r0, #8]
 8005624:	b183      	cbz	r3, 8005648 <d_print_comp+0x2ab4>
 8005626:	68c0      	ldr	r0, [r0, #12]
 8005628:	3701      	adds	r7, #1
 800562a:	e7f6      	b.n	800561a <d_print_comp+0x2a86>
 800562c:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005630:	781a      	ldrb	r2, [r3, #0]
 8005632:	2a01      	cmp	r2, #1
 8005634:	f47f aad2 	bne.w	8004bdc <d_print_comp+0x2048>
 8005638:	f8d8 200c 	ldr.w	r2, [r8, #12]
 800563c:	7812      	ldrb	r2, [r2, #0]
 800563e:	2a29      	cmp	r2, #41	; 0x29
 8005640:	bf08      	it	eq
 8005642:	4698      	moveq	r8, r3
 8005644:	f7ff baca 	b.w	8004bdc <d_print_comp+0x2048>
 8005648:	4639      	mov	r1, r7
 800564a:	4620      	mov	r0, r4
 800564c:	f7fb f970 	bl	8000930 <d_append_num>
 8005650:	9905      	ldr	r1, [sp, #20]
 8005652:	686a      	ldr	r2, [r5, #4]
 8005654:	f7fd bb91 	b.w	8002d7a <d_print_comp+0x1e6>
 8005658:	2203      	movs	r2, #3
 800565a:	4994      	ldr	r1, [pc, #592]	; (80058ac <d_print_comp+0x2d18>)
 800565c:	4620      	mov	r0, r4
 800565e:	f7fa fe75 	bl	800034c <d_append_buffer>
 8005662:	9905      	ldr	r1, [sp, #20]
 8005664:	686a      	ldr	r2, [r5, #4]
 8005666:	f7fd bb88 	b.w	8002d7a <d_print_comp+0x1e6>
 800566a:	2300      	movs	r3, #0
 800566c:	441e      	add	r6, r3
 800566e:	e5fa      	b.n	8005266 <d_print_comp+0x26d2>
 8005670:	464a      	mov	r2, r9
 8005672:	4631      	mov	r1, r6
 8005674:	4620      	mov	r0, r4
 8005676:	f000 ff55 	bl	8006524 <d_print_expr_op>
 800567a:	f7fd bea9 	b.w	80033d0 <d_print_comp+0x83c>
 800567e:	2b5f      	cmp	r3, #95	; 0x5f
 8005680:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005684:	f47f a964 	bne.w	8004950 <d_print_comp+0x1dbc>
 8005688:	28ff      	cmp	r0, #255	; 0xff
 800568a:	f63f a961 	bhi.w	8004950 <d_print_comp+0x1dbc>
 800568e:	29ff      	cmp	r1, #255	; 0xff
 8005690:	fa5f f980 	uxtb.w	r9, r0
 8005694:	d10f      	bne.n	80056b6 <d_print_comp+0x2b22>
 8005696:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800569a:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 800569e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80056a2:	4620      	mov	r0, r4
 80056a4:	4798      	blx	r3
 80056a6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80056aa:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 80056ae:	3301      	adds	r3, #1
 80056b0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80056b4:	2100      	movs	r1, #0
 80056b6:	1c4b      	adds	r3, r1, #1
 80056b8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80056bc:	4657      	mov	r7, sl
 80056be:	f804 9001 	strb.w	r9, [r4, r1]
 80056c2:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80056c6:	f7ff b935 	b.w	8004934 <d_print_comp+0x1da0>
 80056ca:	f8da a008 	ldr.w	sl, [sl, #8]
 80056ce:	f1ba 0f00 	cmp.w	sl, #0
 80056d2:	f43e ad01 	beq.w	80040d8 <d_print_comp+0x1544>
 80056d6:	e4d1      	b.n	800507c <d_print_comp+0x24e8>
 80056d8:	2205      	movs	r2, #5
 80056da:	4975      	ldr	r1, [pc, #468]	; (80058b0 <d_print_comp+0x2d1c>)
 80056dc:	4620      	mov	r0, r4
 80056de:	f7fa fe35 	bl	800034c <d_append_buffer>
 80056e2:	9905      	ldr	r1, [sp, #20]
 80056e4:	686a      	ldr	r2, [r5, #4]
 80056e6:	f7fd bb48 	b.w	8002d7a <d_print_comp+0x1e6>
 80056ea:	f8cc 0000 	str.w	r0, [ip]
 80056ee:	e72c      	b.n	800554a <d_print_comp+0x29b6>
 80056f0:	2202      	movs	r2, #2
 80056f2:	4970      	ldr	r1, [pc, #448]	; (80058b4 <d_print_comp+0x2d20>)
 80056f4:	4620      	mov	r0, r4
 80056f6:	f7fa fe29 	bl	800034c <d_append_buffer>
 80056fa:	9905      	ldr	r1, [sp, #20]
 80056fc:	686a      	ldr	r2, [r5, #4]
 80056fe:	f7fd bb3c 	b.w	8002d7a <d_print_comp+0x1e6>
 8005702:	2202      	movs	r2, #2
 8005704:	496c      	ldr	r1, [pc, #432]	; (80058b8 <d_print_comp+0x2d24>)
 8005706:	4620      	mov	r0, r4
 8005708:	f7fa fe20 	bl	800034c <d_append_buffer>
 800570c:	9905      	ldr	r1, [sp, #20]
 800570e:	686a      	ldr	r2, [r5, #4]
 8005710:	f7fd bb33 	b.w	8002d7a <d_print_comp+0x1e6>
 8005714:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 8005718:	2fff      	cmp	r7, #255	; 0xff
 800571a:	d111      	bne.n	8005740 <d_print_comp+0x2bac>
 800571c:	2600      	movs	r6, #0
 800571e:	4639      	mov	r1, r7
 8005720:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005724:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 8005728:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800572c:	4620      	mov	r0, r4
 800572e:	4798      	blx	r3
 8005730:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005734:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005738:	3301      	adds	r3, #1
 800573a:	4637      	mov	r7, r6
 800573c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005740:	1c7a      	adds	r2, r7, #1
 8005742:	236c      	movs	r3, #108	; 0x6c
 8005744:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005748:	55e3      	strb	r3, [r4, r7]
 800574a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800574e:	686a      	ldr	r2, [r5, #4]
 8005750:	9905      	ldr	r1, [sp, #20]
 8005752:	f7fd bb12 	b.w	8002d7a <d_print_comp+0x1e6>
 8005756:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 800575a:	2fff      	cmp	r7, #255	; 0xff
 800575c:	d111      	bne.n	8005782 <d_print_comp+0x2bee>
 800575e:	2600      	movs	r6, #0
 8005760:	4639      	mov	r1, r7
 8005762:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005766:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800576a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800576e:	4620      	mov	r0, r4
 8005770:	4798      	blx	r3
 8005772:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005776:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 800577a:	3301      	adds	r3, #1
 800577c:	4637      	mov	r7, r6
 800577e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005782:	1c7a      	adds	r2, r7, #1
 8005784:	2375      	movs	r3, #117	; 0x75
 8005786:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800578a:	55e3      	strb	r3, [r4, r7]
 800578c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005790:	686a      	ldr	r2, [r5, #4]
 8005792:	9905      	ldr	r1, [sp, #20]
 8005794:	f7fd baf1 	b.w	8002d7a <d_print_comp+0x1e6>
 8005798:	9905      	ldr	r1, [sp, #20]
 800579a:	686a      	ldr	r2, [r5, #4]
 800579c:	f7fd baed 	b.w	8002d7a <d_print_comp+0x1e6>
 80057a0:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80057a4:	2fff      	cmp	r7, #255	; 0xff
 80057a6:	d110      	bne.n	80057ca <d_print_comp+0x2c36>
 80057a8:	4639      	mov	r1, r7
 80057aa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80057ae:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80057b2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80057b6:	4620      	mov	r0, r4
 80057b8:	4798      	blx	r3
 80057ba:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80057be:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 80057c2:	3301      	adds	r3, #1
 80057c4:	464f      	mov	r7, r9
 80057c6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80057ca:	232d      	movs	r3, #45	; 0x2d
 80057cc:	1c7a      	adds	r2, r7, #1
 80057ce:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80057d2:	55e3      	strb	r3, [r4, r7]
 80057d4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80057d8:	e6fc      	b.n	80055d4 <d_print_comp+0x2a40>
 80057da:	689a      	ldr	r2, [r3, #8]
 80057dc:	6891      	ldr	r1, [r2, #8]
 80057de:	2901      	cmp	r1, #1
 80057e0:	f47d aa69 	bne.w	8002cb6 <d_print_comp+0x122>
 80057e4:	6852      	ldr	r2, [r2, #4]
 80057e6:	7812      	ldrb	r2, [r2, #0]
 80057e8:	2a3e      	cmp	r2, #62	; 0x3e
 80057ea:	f47d aa64 	bne.w	8002cb6 <d_print_comp+0x122>
 80057ee:	f8d4 7100 	ldr.w	r7, [r4, #256]	; 0x100
 80057f2:	2fff      	cmp	r7, #255	; 0xff
 80057f4:	d110      	bne.n	8005818 <d_print_comp+0x2c84>
 80057f6:	f884 00ff 	strb.w	r0, [r4, #255]	; 0xff
 80057fa:	4639      	mov	r1, r7
 80057fc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005800:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005804:	4620      	mov	r0, r4
 8005806:	4798      	blx	r3
 8005808:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800580c:	f8c4 8100 	str.w	r8, [r4, #256]	; 0x100
 8005810:	3301      	adds	r3, #1
 8005812:	4647      	mov	r7, r8
 8005814:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005818:	2328      	movs	r3, #40	; 0x28
 800581a:	1c7a      	adds	r2, r7, #1
 800581c:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005820:	55e3      	strb	r3, [r4, r7]
 8005822:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005826:	68ab      	ldr	r3, [r5, #8]
 8005828:	f7fd ba45 	b.w	8002cb6 <d_print_comp+0x122>
 800582c:	465a      	mov	r2, fp
 800582e:	4631      	mov	r1, r6
 8005830:	4620      	mov	r0, r4
 8005832:	f000 feb7 	bl	80065a4 <d_print_subexpr>
 8005836:	463a      	mov	r2, r7
 8005838:	4631      	mov	r1, r6
 800583a:	4620      	mov	r0, r4
 800583c:	f000 fe72 	bl	8006524 <d_print_expr_op>
 8005840:	4652      	mov	r2, sl
 8005842:	4631      	mov	r1, r6
 8005844:	4620      	mov	r0, r4
 8005846:	f000 fead 	bl	80065a4 <d_print_subexpr>
 800584a:	2203      	movs	r2, #3
 800584c:	491b      	ldr	r1, [pc, #108]	; (80058bc <d_print_comp+0x2d28>)
 800584e:	4620      	mov	r0, r4
 8005850:	f7fa fd7c 	bl	800034c <d_append_buffer>
 8005854:	464a      	mov	r2, r9
 8005856:	4631      	mov	r1, r6
 8005858:	4620      	mov	r0, r4
 800585a:	f000 fea3 	bl	80065a4 <d_print_subexpr>
 800585e:	9905      	ldr	r1, [sp, #20]
 8005860:	686a      	ldr	r2, [r5, #4]
 8005862:	f7fd ba8a 	b.w	8002d7a <d_print_comp+0x1e6>
 8005866:	9905      	ldr	r1, [sp, #20]
 8005868:	686a      	ldr	r2, [r5, #4]
 800586a:	f7fd ba86 	b.w	8002d7a <d_print_comp+0x1e6>
 800586e:	9905      	ldr	r1, [sp, #20]
 8005870:	686a      	ldr	r2, [r5, #4]
 8005872:	f7fd ba82 	b.w	8002d7a <d_print_comp+0x1e6>
 8005876:	68d3      	ldr	r3, [r2, #12]
 8005878:	781b      	ldrb	r3, [r3, #0]
 800587a:	2b29      	cmp	r3, #41	; 0x29
 800587c:	bf1c      	itt	ne
 800587e:	2301      	movne	r3, #1
 8005880:	f8c4 3118 	strne.w	r3, [r4, #280]	; 0x118
 8005884:	6892      	ldr	r2, [r2, #8]
 8005886:	4631      	mov	r1, r6
 8005888:	4620      	mov	r0, r4
 800588a:	f000 fe8b 	bl	80065a4 <d_print_subexpr>
 800588e:	f7fd ba22 	b.w	8002cd6 <d_print_comp+0x142>
 8005892:	463a      	mov	r2, r7
 8005894:	4631      	mov	r1, r6
 8005896:	4620      	mov	r0, r4
 8005898:	f000 fe44 	bl	8006524 <d_print_expr_op>
 800589c:	e5fe      	b.n	800549c <d_print_comp+0x2908>
 800589e:	2301      	movs	r3, #1
 80058a0:	f8c4 3118 	str.w	r3, [r4, #280]	; 0x118
 80058a4:	686a      	ldr	r2, [r5, #4]
 80058a6:	f7fd ba68 	b.w	8002d7a <d_print_comp+0x1e6>
 80058aa:	bf00      	nop
 80058ac:	08011fa8 	.word	0x08011fa8
 80058b0:	08011fac 	.word	0x08011fac
 80058b4:	08011fa4 	.word	0x08011fa4
 80058b8:	08011fa0 	.word	0x08011fa0
 80058bc:	08011f94 	.word	0x08011f94

080058c0 <d_print_mod>:
 80058c0:	7813      	ldrb	r3, [r2, #0]
 80058c2:	3b03      	subs	r3, #3
 80058c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80058c8:	4615      	mov	r5, r2
 80058ca:	4604      	mov	r4, r0
 80058cc:	460e      	mov	r6, r1
 80058ce:	2b4c      	cmp	r3, #76	; 0x4c
 80058d0:	f200 82c8 	bhi.w	8005e64 <d_print_mod+0x5a4>
 80058d4:	e8df f013 	tbh	[pc, r3, lsl #1]
 80058d8:	02c60075 	.word	0x02c60075
 80058dc:	02c602c6 	.word	0x02c602c6
 80058e0:	02c602c6 	.word	0x02c602c6
 80058e4:	02c602c6 	.word	0x02c602c6
 80058e8:	02c602c6 	.word	0x02c602c6
 80058ec:	02c602c6 	.word	0x02c602c6
 80058f0:	02c602c6 	.word	0x02c602c6
 80058f4:	02c602c6 	.word	0x02c602c6
 80058f8:	02c602c6 	.word	0x02c602c6
 80058fc:	02c602c6 	.word	0x02c602c6
 8005900:	02c602c6 	.word	0x02c602c6
 8005904:	00a1007a 	.word	0x00a1007a
 8005908:	007a00c8 	.word	0x007a00c8
 800590c:	00c800a1 	.word	0x00c800a1
 8005910:	010a00ee 	.word	0x010a00ee
 8005914:	01480126 	.word	0x01480126
 8005918:	02790166 	.word	0x02790166
 800591c:	029f0252 	.word	0x029f0252
 8005920:	02c602c6 	.word	0x02c602c6
 8005924:	02c602c6 	.word	0x02c602c6
 8005928:	02c60184 	.word	0x02c60184
 800592c:	02c601cc 	.word	0x02c601cc
 8005930:	02c602c6 	.word	0x02c602c6
 8005934:	02c602c6 	.word	0x02c602c6
 8005938:	02c602c6 	.word	0x02c602c6
 800593c:	02c602c6 	.word	0x02c602c6
 8005940:	02c602c6 	.word	0x02c602c6
 8005944:	02c602c6 	.word	0x02c602c6
 8005948:	02c602c6 	.word	0x02c602c6
 800594c:	02c602c6 	.word	0x02c602c6
 8005950:	02c602c6 	.word	0x02c602c6
 8005954:	02c602c6 	.word	0x02c602c6
 8005958:	02c602c6 	.word	0x02c602c6
 800595c:	02c602c6 	.word	0x02c602c6
 8005960:	02c602c6 	.word	0x02c602c6
 8005964:	02c602c6 	.word	0x02c602c6
 8005968:	01f402c6 	.word	0x01f402c6
 800596c:	022a02c6 	.word	0x022a02c6
 8005970:	004d      	.short	0x004d
 8005972:	4fd7      	ldr	r7, [pc, #860]	; (8005cd0 <d_print_mod+0x410>)
 8005974:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005978:	f107 0806 	add.w	r8, r7, #6
 800597c:	f04f 0900 	mov.w	r9, #0
 8005980:	e016      	b.n	80059b0 <d_print_mod+0xf0>
 8005982:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005986:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800598a:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 800598e:	4798      	blx	r3
 8005990:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005994:	3301      	adds	r3, #1
 8005996:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800599a:	2200      	movs	r2, #0
 800599c:	2301      	movs	r3, #1
 800599e:	4547      	cmp	r7, r8
 80059a0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80059a4:	f804 a002 	strb.w	sl, [r4, r2]
 80059a8:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 80059ac:	f000 825f 	beq.w	8005e6e <d_print_mod+0x5ae>
 80059b0:	2bff      	cmp	r3, #255	; 0xff
 80059b2:	4619      	mov	r1, r3
 80059b4:	4620      	mov	r0, r4
 80059b6:	f817 ab01 	ldrb.w	sl, [r7], #1
 80059ba:	d0e2      	beq.n	8005982 <d_print_mod+0xc2>
 80059bc:	461a      	mov	r2, r3
 80059be:	3301      	adds	r3, #1
 80059c0:	e7ed      	b.n	800599e <d_print_mod+0xde>
 80059c2:	68aa      	ldr	r2, [r5, #8]
 80059c4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80059c8:	f7fd b8e4 	b.w	8002b94 <d_print_comp>
 80059cc:	4dc1      	ldr	r5, [pc, #772]	; (8005cd4 <d_print_mod+0x414>)
 80059ce:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80059d2:	f105 0609 	add.w	r6, r5, #9
 80059d6:	2700      	movs	r7, #0
 80059d8:	e016      	b.n	8005a08 <d_print_mod+0x148>
 80059da:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80059de:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80059e2:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 80059e6:	4798      	blx	r3
 80059e8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80059ec:	3301      	adds	r3, #1
 80059ee:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80059f2:	2200      	movs	r2, #0
 80059f4:	2301      	movs	r3, #1
 80059f6:	42ae      	cmp	r6, r5
 80059f8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80059fc:	f804 8002 	strb.w	r8, [r4, r2]
 8005a00:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005a04:	f000 80ea 	beq.w	8005bdc <d_print_mod+0x31c>
 8005a08:	2bff      	cmp	r3, #255	; 0xff
 8005a0a:	4619      	mov	r1, r3
 8005a0c:	4620      	mov	r0, r4
 8005a0e:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 8005a12:	d0e2      	beq.n	80059da <d_print_mod+0x11a>
 8005a14:	461a      	mov	r2, r3
 8005a16:	3301      	adds	r3, #1
 8005a18:	e7ed      	b.n	80059f6 <d_print_mod+0x136>
 8005a1a:	4daf      	ldr	r5, [pc, #700]	; (8005cd8 <d_print_mod+0x418>)
 8005a1c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005a20:	f105 0609 	add.w	r6, r5, #9
 8005a24:	2700      	movs	r7, #0
 8005a26:	e016      	b.n	8005a56 <d_print_mod+0x196>
 8005a28:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005a2c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005a30:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005a34:	4798      	blx	r3
 8005a36:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005a3a:	3301      	adds	r3, #1
 8005a3c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005a40:	2200      	movs	r2, #0
 8005a42:	2301      	movs	r3, #1
 8005a44:	42ae      	cmp	r6, r5
 8005a46:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005a4a:	f804 8002 	strb.w	r8, [r4, r2]
 8005a4e:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005a52:	f000 80c3 	beq.w	8005bdc <d_print_mod+0x31c>
 8005a56:	2bff      	cmp	r3, #255	; 0xff
 8005a58:	4619      	mov	r1, r3
 8005a5a:	4620      	mov	r0, r4
 8005a5c:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 8005a60:	d0e2      	beq.n	8005a28 <d_print_mod+0x168>
 8005a62:	461a      	mov	r2, r3
 8005a64:	3301      	adds	r3, #1
 8005a66:	e7ed      	b.n	8005a44 <d_print_mod+0x184>
 8005a68:	4d9c      	ldr	r5, [pc, #624]	; (8005cdc <d_print_mod+0x41c>)
 8005a6a:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005a6e:	1dae      	adds	r6, r5, #6
 8005a70:	2700      	movs	r7, #0
 8005a72:	e016      	b.n	8005aa2 <d_print_mod+0x1e2>
 8005a74:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005a78:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005a7c:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005a80:	4798      	blx	r3
 8005a82:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005a86:	3301      	adds	r3, #1
 8005a88:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005a8c:	2200      	movs	r2, #0
 8005a8e:	2301      	movs	r3, #1
 8005a90:	42b5      	cmp	r5, r6
 8005a92:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005a96:	f804 8002 	strb.w	r8, [r4, r2]
 8005a9a:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005a9e:	f000 809d 	beq.w	8005bdc <d_print_mod+0x31c>
 8005aa2:	2bff      	cmp	r3, #255	; 0xff
 8005aa4:	4619      	mov	r1, r3
 8005aa6:	4620      	mov	r0, r4
 8005aa8:	f815 8b01 	ldrb.w	r8, [r5], #1
 8005aac:	d0e2      	beq.n	8005a74 <d_print_mod+0x1b4>
 8005aae:	461a      	mov	r2, r3
 8005ab0:	3301      	adds	r3, #1
 8005ab2:	e7ed      	b.n	8005a90 <d_print_mod+0x1d0>
 8005ab4:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005ab8:	29ff      	cmp	r1, #255	; 0xff
 8005aba:	d10f      	bne.n	8005adc <d_print_mod+0x21c>
 8005abc:	2500      	movs	r5, #0
 8005abe:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005ac2:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 8005ac6:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8005aca:	4798      	blx	r3
 8005acc:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005ad0:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8005ad4:	3301      	adds	r3, #1
 8005ad6:	4629      	mov	r1, r5
 8005ad8:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005adc:	2220      	movs	r2, #32
 8005ade:	1c4b      	adds	r3, r1, #1
 8005ae0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005ae4:	5462      	strb	r2, [r4, r1]
 8005ae6:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005aea:	e05d      	b.n	8005ba8 <d_print_mod+0x2e8>
 8005aec:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005af0:	29ff      	cmp	r1, #255	; 0xff
 8005af2:	d10f      	bne.n	8005b14 <d_print_mod+0x254>
 8005af4:	2500      	movs	r5, #0
 8005af6:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005afa:	f880 50ff 	strb.w	r5, [r0, #255]	; 0xff
 8005afe:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8005b02:	4798      	blx	r3
 8005b04:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005b08:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8005b0c:	3301      	adds	r3, #1
 8005b0e:	4629      	mov	r1, r5
 8005b10:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005b14:	2220      	movs	r2, #32
 8005b16:	1c4b      	adds	r3, r1, #1
 8005b18:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005b1c:	5462      	strb	r2, [r4, r1]
 8005b1e:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005b22:	e154      	b.n	8005dce <d_print_mod+0x50e>
 8005b24:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005b28:	29ff      	cmp	r1, #255	; 0xff
 8005b2a:	d10f      	bne.n	8005b4c <d_print_mod+0x28c>
 8005b2c:	2700      	movs	r7, #0
 8005b2e:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005b32:	f880 70ff 	strb.w	r7, [r0, #255]	; 0xff
 8005b36:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8005b3a:	4798      	blx	r3
 8005b3c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005b40:	f8c4 7100 	str.w	r7, [r4, #256]	; 0x100
 8005b44:	3301      	adds	r3, #1
 8005b46:	4639      	mov	r1, r7
 8005b48:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005b4c:	1c4a      	adds	r2, r1, #1
 8005b4e:	2320      	movs	r3, #32
 8005b50:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005b54:	5463      	strb	r3, [r4, r1]
 8005b56:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005b5a:	4631      	mov	r1, r6
 8005b5c:	68ea      	ldr	r2, [r5, #12]
 8005b5e:	4620      	mov	r0, r4
 8005b60:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005b64:	f7fd b816 	b.w	8002b94 <d_print_comp>
 8005b68:	f011 0604 	ands.w	r6, r1, #4
 8005b6c:	d136      	bne.n	8005bdc <d_print_mod+0x31c>
 8005b6e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005b72:	29ff      	cmp	r1, #255	; 0xff
 8005b74:	d10e      	bne.n	8005b94 <d_print_mod+0x2d4>
 8005b76:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005b7a:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8005b7e:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8005b82:	4798      	blx	r3
 8005b84:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005b88:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8005b8c:	3301      	adds	r3, #1
 8005b8e:	4631      	mov	r1, r6
 8005b90:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005b94:	232a      	movs	r3, #42	; 0x2a
 8005b96:	1c4a      	adds	r2, r1, #1
 8005b98:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005b9c:	5463      	strb	r3, [r4, r1]
 8005b9e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005ba2:	e01b      	b.n	8005bdc <d_print_mod+0x31c>
 8005ba4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005ba8:	2bff      	cmp	r3, #255	; 0xff
 8005baa:	f040 81a9 	bne.w	8005f00 <d_print_mod+0x640>
 8005bae:	2500      	movs	r5, #0
 8005bb0:	4619      	mov	r1, r3
 8005bb2:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005bb6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005bba:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005bbe:	4620      	mov	r0, r4
 8005bc0:	4798      	blx	r3
 8005bc2:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005bc6:	1c5a      	adds	r2, r3, #1
 8005bc8:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005bcc:	462b      	mov	r3, r5
 8005bce:	2101      	movs	r1, #1
 8005bd0:	2226      	movs	r2, #38	; 0x26
 8005bd2:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005bd6:	54e2      	strb	r2, [r4, r3]
 8005bd8:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8005bdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005be0:	f890 3104 	ldrb.w	r3, [r0, #260]	; 0x104
 8005be4:	2b28      	cmp	r3, #40	; 0x28
 8005be6:	d019      	beq.n	8005c1c <d_print_mod+0x35c>
 8005be8:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8005bec:	29ff      	cmp	r1, #255	; 0xff
 8005bee:	f040 818b 	bne.w	8005f08 <d_print_mod+0x648>
 8005bf2:	2700      	movs	r7, #0
 8005bf4:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8005bf8:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8005bfc:	f880 70ff 	strb.w	r7, [r0, #255]	; 0xff
 8005c00:	4798      	blx	r3
 8005c02:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005c06:	3301      	adds	r3, #1
 8005c08:	4639      	mov	r1, r7
 8005c0a:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005c0e:	2201      	movs	r2, #1
 8005c10:	2320      	movs	r3, #32
 8005c12:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005c16:	5463      	strb	r3, [r4, r1]
 8005c18:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005c1c:	68aa      	ldr	r2, [r5, #8]
 8005c1e:	4d30      	ldr	r5, [pc, #192]	; (8005ce0 <d_print_mod+0x420>)
 8005c20:	4631      	mov	r1, r6
 8005c22:	4620      	mov	r0, r4
 8005c24:	f7fc ffb6 	bl	8002b94 <d_print_comp>
 8005c28:	1cee      	adds	r6, r5, #3
 8005c2a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005c2e:	2700      	movs	r7, #0
 8005c30:	e015      	b.n	8005c5e <d_print_mod+0x39e>
 8005c32:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005c36:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005c3a:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005c3e:	4798      	blx	r3
 8005c40:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005c44:	3301      	adds	r3, #1
 8005c46:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005c4a:	2200      	movs	r2, #0
 8005c4c:	2301      	movs	r3, #1
 8005c4e:	42ae      	cmp	r6, r5
 8005c50:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005c54:	f804 8002 	strb.w	r8, [r4, r2]
 8005c58:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005c5c:	d0be      	beq.n	8005bdc <d_print_mod+0x31c>
 8005c5e:	2bff      	cmp	r3, #255	; 0xff
 8005c60:	4619      	mov	r1, r3
 8005c62:	4620      	mov	r0, r4
 8005c64:	f815 8b01 	ldrb.w	r8, [r5], #1
 8005c68:	d0e3      	beq.n	8005c32 <d_print_mod+0x372>
 8005c6a:	461a      	mov	r2, r3
 8005c6c:	3301      	adds	r3, #1
 8005c6e:	e7ee      	b.n	8005c4e <d_print_mod+0x38e>
 8005c70:	4f1c      	ldr	r7, [pc, #112]	; (8005ce4 <d_print_mod+0x424>)
 8005c72:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005c76:	f107 080a 	add.w	r8, r7, #10
 8005c7a:	f04f 0900 	mov.w	r9, #0
 8005c7e:	e016      	b.n	8005cae <d_print_mod+0x3ee>
 8005c80:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005c84:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005c88:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005c8c:	4798      	blx	r3
 8005c8e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005c92:	3301      	adds	r3, #1
 8005c94:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005c98:	2200      	movs	r2, #0
 8005c9a:	2301      	movs	r3, #1
 8005c9c:	45b8      	cmp	r8, r7
 8005c9e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005ca2:	f804 a002 	strb.w	sl, [r4, r2]
 8005ca6:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8005caa:	f000 811e 	beq.w	8005eea <d_print_mod+0x62a>
 8005cae:	2bff      	cmp	r3, #255	; 0xff
 8005cb0:	4619      	mov	r1, r3
 8005cb2:	4620      	mov	r0, r4
 8005cb4:	f817 ab01 	ldrb.w	sl, [r7], #1
 8005cb8:	d0e2      	beq.n	8005c80 <d_print_mod+0x3c0>
 8005cba:	461a      	mov	r2, r3
 8005cbc:	3301      	adds	r3, #1
 8005cbe:	e7ed      	b.n	8005c9c <d_print_mod+0x3dc>
 8005cc0:	4d09      	ldr	r5, [pc, #36]	; (8005ce8 <d_print_mod+0x428>)
 8005cc2:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005cc6:	f105 0611 	add.w	r6, r5, #17
 8005cca:	2700      	movs	r7, #0
 8005ccc:	e025      	b.n	8005d1a <d_print_mod+0x45a>
 8005cce:	bf00      	nop
 8005cd0:	08012098 	.word	0x08012098
 8005cd4:	08012057 	.word	0x08012057
 8005cd8:	08012063 	.word	0x08012063
 8005cdc:	08012070 	.word	0x08012070
 8005ce0:	080120bc 	.word	0x080120bc
 8005ce4:	080120c0 	.word	0x080120c0
 8005ce8:	08012077 	.word	0x08012077
 8005cec:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005cf0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005cf4:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005cf8:	4798      	blx	r3
 8005cfa:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005cfe:	3301      	adds	r3, #1
 8005d00:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005d04:	2200      	movs	r2, #0
 8005d06:	2301      	movs	r3, #1
 8005d08:	42ae      	cmp	r6, r5
 8005d0a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005d0e:	f804 8002 	strb.w	r8, [r4, r2]
 8005d12:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005d16:	f43f af61 	beq.w	8005bdc <d_print_mod+0x31c>
 8005d1a:	2bff      	cmp	r3, #255	; 0xff
 8005d1c:	4619      	mov	r1, r3
 8005d1e:	4620      	mov	r0, r4
 8005d20:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 8005d24:	d0e2      	beq.n	8005cec <d_print_mod+0x42c>
 8005d26:	461a      	mov	r2, r3
 8005d28:	3301      	adds	r3, #1
 8005d2a:	e7ed      	b.n	8005d08 <d_print_mod+0x448>
 8005d2c:	4f77      	ldr	r7, [pc, #476]	; (8005f0c <d_print_mod+0x64c>)
 8005d2e:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005d32:	f107 0809 	add.w	r8, r7, #9
 8005d36:	f04f 0900 	mov.w	r9, #0
 8005d3a:	e016      	b.n	8005d6a <d_print_mod+0x4aa>
 8005d3c:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005d40:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005d44:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 8005d48:	4798      	blx	r3
 8005d4a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005d4e:	3301      	adds	r3, #1
 8005d50:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005d54:	2200      	movs	r2, #0
 8005d56:	2301      	movs	r3, #1
 8005d58:	4547      	cmp	r7, r8
 8005d5a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005d5e:	f804 a002 	strb.w	sl, [r4, r2]
 8005d62:	f884 a104 	strb.w	sl, [r4, #260]	; 0x104
 8005d66:	f000 8082 	beq.w	8005e6e <d_print_mod+0x5ae>
 8005d6a:	2bff      	cmp	r3, #255	; 0xff
 8005d6c:	4619      	mov	r1, r3
 8005d6e:	4620      	mov	r0, r4
 8005d70:	f817 af01 	ldrb.w	sl, [r7, #1]!
 8005d74:	d0e2      	beq.n	8005d3c <d_print_mod+0x47c>
 8005d76:	461a      	mov	r2, r3
 8005d78:	3301      	adds	r3, #1
 8005d7a:	e7ed      	b.n	8005d58 <d_print_mod+0x498>
 8005d7c:	4d64      	ldr	r5, [pc, #400]	; (8005f10 <d_print_mod+0x650>)
 8005d7e:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005d82:	f105 0608 	add.w	r6, r5, #8
 8005d86:	2700      	movs	r7, #0
 8005d88:	e016      	b.n	8005db8 <d_print_mod+0x4f8>
 8005d8a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005d8e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005d92:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005d96:	4798      	blx	r3
 8005d98:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005d9c:	3301      	adds	r3, #1
 8005d9e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005da2:	2200      	movs	r2, #0
 8005da4:	2301      	movs	r3, #1
 8005da6:	42ae      	cmp	r6, r5
 8005da8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005dac:	f804 8002 	strb.w	r8, [r4, r2]
 8005db0:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005db4:	f43f af12 	beq.w	8005bdc <d_print_mod+0x31c>
 8005db8:	2bff      	cmp	r3, #255	; 0xff
 8005dba:	4619      	mov	r1, r3
 8005dbc:	4620      	mov	r0, r4
 8005dbe:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 8005dc2:	d0e2      	beq.n	8005d8a <d_print_mod+0x4ca>
 8005dc4:	461a      	mov	r2, r3
 8005dc6:	3301      	adds	r3, #1
 8005dc8:	e7ed      	b.n	8005da6 <d_print_mod+0x4e6>
 8005dca:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005dce:	4d51      	ldr	r5, [pc, #324]	; (8005f14 <d_print_mod+0x654>)
 8005dd0:	2700      	movs	r7, #0
 8005dd2:	1cae      	adds	r6, r5, #2
 8005dd4:	e016      	b.n	8005e04 <d_print_mod+0x544>
 8005dd6:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005dda:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005dde:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005de2:	4798      	blx	r3
 8005de4:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005de8:	3301      	adds	r3, #1
 8005dea:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005dee:	2200      	movs	r2, #0
 8005df0:	2301      	movs	r3, #1
 8005df2:	42b5      	cmp	r5, r6
 8005df4:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005df8:	f804 8002 	strb.w	r8, [r4, r2]
 8005dfc:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005e00:	f43f aeec 	beq.w	8005bdc <d_print_mod+0x31c>
 8005e04:	2bff      	cmp	r3, #255	; 0xff
 8005e06:	4619      	mov	r1, r3
 8005e08:	4620      	mov	r0, r4
 8005e0a:	f815 8b01 	ldrb.w	r8, [r5], #1
 8005e0e:	d0e2      	beq.n	8005dd6 <d_print_mod+0x516>
 8005e10:	461a      	mov	r2, r3
 8005e12:	3301      	adds	r3, #1
 8005e14:	e7ed      	b.n	8005df2 <d_print_mod+0x532>
 8005e16:	4d40      	ldr	r5, [pc, #256]	; (8005f18 <d_print_mod+0x658>)
 8005e18:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8005e1c:	f105 060a 	add.w	r6, r5, #10
 8005e20:	2700      	movs	r7, #0
 8005e22:	e016      	b.n	8005e52 <d_print_mod+0x592>
 8005e24:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005e28:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005e2c:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005e30:	4798      	blx	r3
 8005e32:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005e36:	3301      	adds	r3, #1
 8005e38:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005e3c:	2200      	movs	r2, #0
 8005e3e:	2301      	movs	r3, #1
 8005e40:	42b5      	cmp	r5, r6
 8005e42:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005e46:	f804 8002 	strb.w	r8, [r4, r2]
 8005e4a:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 8005e4e:	f43f aec5 	beq.w	8005bdc <d_print_mod+0x31c>
 8005e52:	2bff      	cmp	r3, #255	; 0xff
 8005e54:	4619      	mov	r1, r3
 8005e56:	4620      	mov	r0, r4
 8005e58:	f815 8b01 	ldrb.w	r8, [r5], #1
 8005e5c:	d0e2      	beq.n	8005e24 <d_print_mod+0x564>
 8005e5e:	461a      	mov	r2, r3
 8005e60:	3301      	adds	r3, #1
 8005e62:	e7ed      	b.n	8005e40 <d_print_mod+0x580>
 8005e64:	462a      	mov	r2, r5
 8005e66:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e6a:	f7fc be93 	b.w	8002b94 <d_print_comp>
 8005e6e:	68ea      	ldr	r2, [r5, #12]
 8005e70:	2a00      	cmp	r2, #0
 8005e72:	f43f aeb3 	beq.w	8005bdc <d_print_mod+0x31c>
 8005e76:	2bff      	cmp	r3, #255	; 0xff
 8005e78:	d144      	bne.n	8005f04 <d_print_mod+0x644>
 8005e7a:	2700      	movs	r7, #0
 8005e7c:	4619      	mov	r1, r3
 8005e7e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005e82:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005e86:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005e8a:	4620      	mov	r0, r4
 8005e8c:	4798      	blx	r3
 8005e8e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005e92:	68ea      	ldr	r2, [r5, #12]
 8005e94:	1c59      	adds	r1, r3, #1
 8005e96:	f8c4 1124 	str.w	r1, [r4, #292]	; 0x124
 8005e9a:	463b      	mov	r3, r7
 8005e9c:	2101      	movs	r1, #1
 8005e9e:	2528      	movs	r5, #40	; 0x28
 8005ea0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8005ea4:	4620      	mov	r0, r4
 8005ea6:	4631      	mov	r1, r6
 8005ea8:	54e5      	strb	r5, [r4, r3]
 8005eaa:	f884 5104 	strb.w	r5, [r4, #260]	; 0x104
 8005eae:	f7fc fe71 	bl	8002b94 <d_print_comp>
 8005eb2:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005eb6:	29ff      	cmp	r1, #255	; 0xff
 8005eb8:	d120      	bne.n	8005efc <d_print_mod+0x63c>
 8005eba:	2500      	movs	r5, #0
 8005ebc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005ec0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005ec4:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8005ec8:	4620      	mov	r0, r4
 8005eca:	4798      	blx	r3
 8005ecc:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005ed0:	3301      	adds	r3, #1
 8005ed2:	4629      	mov	r1, r5
 8005ed4:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8005ed8:	2201      	movs	r2, #1
 8005eda:	2329      	movs	r3, #41	; 0x29
 8005edc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005ee0:	5463      	strb	r3, [r4, r1]
 8005ee2:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005ee6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005eea:	4631      	mov	r1, r6
 8005eec:	68aa      	ldr	r2, [r5, #8]
 8005eee:	4620      	mov	r0, r4
 8005ef0:	f7fc fe50 	bl	8002b94 <d_print_comp>
 8005ef4:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005ef8:	29ff      	cmp	r1, #255	; 0xff
 8005efa:	d0de      	beq.n	8005eba <d_print_mod+0x5fa>
 8005efc:	1c4a      	adds	r2, r1, #1
 8005efe:	e7ec      	b.n	8005eda <d_print_mod+0x61a>
 8005f00:	1c59      	adds	r1, r3, #1
 8005f02:	e665      	b.n	8005bd0 <d_print_mod+0x310>
 8005f04:	1c59      	adds	r1, r3, #1
 8005f06:	e7ca      	b.n	8005e9e <d_print_mod+0x5de>
 8005f08:	1c4a      	adds	r2, r1, #1
 8005f0a:	e681      	b.n	8005c10 <d_print_mod+0x350>
 8005f0c:	0801208b 	.word	0x0801208b
 8005f10:	080120a3 	.word	0x080120a3
 8005f14:	080120a0 	.word	0x080120a0
 8005f18:	080120b0 	.word	0x080120b0

08005f1c <d_print_function_type.isra.15>:
 8005f1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005f20:	4604      	mov	r4, r0
 8005f22:	460e      	mov	r6, r1
 8005f24:	4617      	mov	r7, r2
 8005f26:	461d      	mov	r5, r3
 8005f28:	b1d3      	cbz	r3, 8005f60 <d_print_function_type.isra.15+0x44>
 8005f2a:	689b      	ldr	r3, [r3, #8]
 8005f2c:	b9c3      	cbnz	r3, 8005f60 <d_print_function_type.isra.15+0x44>
 8005f2e:	462a      	mov	r2, r5
 8005f30:	2001      	movs	r0, #1
 8005f32:	f8df c1c8 	ldr.w	ip, [pc, #456]	; 80060fc <d_print_function_type.isra.15+0x1e0>
 8005f36:	e001      	b.n	8005f3c <d_print_function_type.isra.15+0x20>
 8005f38:	6893      	ldr	r3, [r2, #8]
 8005f3a:	b98b      	cbnz	r3, 8005f60 <d_print_function_type.isra.15+0x44>
 8005f3c:	6853      	ldr	r3, [r2, #4]
 8005f3e:	781b      	ldrb	r3, [r3, #0]
 8005f40:	3b19      	subs	r3, #25
 8005f42:	b2db      	uxtb	r3, r3
 8005f44:	2b12      	cmp	r3, #18
 8005f46:	fa00 f103 	lsl.w	r1, r0, r3
 8005f4a:	d806      	bhi.n	8005f5a <d_print_function_type.isra.15+0x3e>
 8005f4c:	ea11 0f0c 	tst.w	r1, ip
 8005f50:	f040 80c7 	bne.w	80060e2 <d_print_function_type.isra.15+0x1c6>
 8005f54:	f411 6f60 	tst.w	r1, #3584	; 0xe00
 8005f58:	d154      	bne.n	8006004 <d_print_function_type.isra.15+0xe8>
 8005f5a:	6812      	ldr	r2, [r2, #0]
 8005f5c:	2a00      	cmp	r2, #0
 8005f5e:	d1eb      	bne.n	8005f38 <d_print_function_type.isra.15+0x1c>
 8005f60:	2300      	movs	r3, #0
 8005f62:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 8005f66:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
 8005f6a:	4631      	mov	r1, r6
 8005f6c:	462a      	mov	r2, r5
 8005f6e:	4620      	mov	r0, r4
 8005f70:	f000 f8c6 	bl	8006100 <d_print_mod_list>
 8005f74:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8005f78:	29ff      	cmp	r1, #255	; 0xff
 8005f7a:	f040 80a4 	bne.w	80060c6 <d_print_function_type.isra.15+0x1aa>
 8005f7e:	2300      	movs	r3, #0
 8005f80:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 8005f84:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005f88:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005f8c:	4620      	mov	r0, r4
 8005f8e:	4798      	blx	r3
 8005f90:	2328      	movs	r3, #40	; 0x28
 8005f92:	7023      	strb	r3, [r4, #0]
 8005f94:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8005f98:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005f9c:	683a      	ldr	r2, [r7, #0]
 8005f9e:	1c59      	adds	r1, r3, #1
 8005fa0:	2301      	movs	r3, #1
 8005fa2:	f8c4 1124 	str.w	r1, [r4, #292]	; 0x124
 8005fa6:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8005faa:	2a00      	cmp	r2, #0
 8005fac:	f000 8097 	beq.w	80060de <d_print_function_type.isra.15+0x1c2>
 8005fb0:	4631      	mov	r1, r6
 8005fb2:	4620      	mov	r0, r4
 8005fb4:	f7fc fdee 	bl	8002b94 <d_print_comp>
 8005fb8:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8005fbc:	2bff      	cmp	r3, #255	; 0xff
 8005fbe:	f040 808e 	bne.w	80060de <d_print_function_type.isra.15+0x1c2>
 8005fc2:	2700      	movs	r7, #0
 8005fc4:	4619      	mov	r1, r3
 8005fc6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8005fca:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8005fce:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 8005fd2:	4620      	mov	r0, r4
 8005fd4:	4798      	blx	r3
 8005fd6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8005fda:	1c5a      	adds	r2, r3, #1
 8005fdc:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8005fe0:	463b      	mov	r3, r7
 8005fe2:	2201      	movs	r2, #1
 8005fe4:	2029      	movs	r0, #41	; 0x29
 8005fe6:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8005fea:	4631      	mov	r1, r6
 8005fec:	54e0      	strb	r0, [r4, r3]
 8005fee:	462a      	mov	r2, r5
 8005ff0:	f884 0104 	strb.w	r0, [r4, #260]	; 0x104
 8005ff4:	2301      	movs	r3, #1
 8005ff6:	4620      	mov	r0, r4
 8005ff8:	f000 f882 	bl	8006100 <d_print_mod_list>
 8005ffc:	f8c4 8114 	str.w	r8, [r4, #276]	; 0x114
 8006000:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006004:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 8006008:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 800600c:	f003 02fd 	and.w	r2, r3, #253	; 0xfd
 8006010:	2a28      	cmp	r2, #40	; 0x28
 8006012:	d01e      	beq.n	8006052 <d_print_function_type.isra.15+0x136>
 8006014:	2b20      	cmp	r3, #32
 8006016:	d01c      	beq.n	8006052 <d_print_function_type.isra.15+0x136>
 8006018:	29ff      	cmp	r1, #255	; 0xff
 800601a:	d112      	bne.n	8006042 <d_print_function_type.isra.15+0x126>
 800601c:	2300      	movs	r3, #0
 800601e:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 8006022:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006026:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800602a:	4620      	mov	r0, r4
 800602c:	4798      	blx	r3
 800602e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8006032:	2220      	movs	r2, #32
 8006034:	3301      	adds	r3, #1
 8006036:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800603a:	7022      	strb	r2, [r4, #0]
 800603c:	2101      	movs	r1, #1
 800603e:	1c4a      	adds	r2, r1, #1
 8006040:	e01a      	b.n	8006078 <d_print_function_type.isra.15+0x15c>
 8006042:	1c4b      	adds	r3, r1, #1
 8006044:	2220      	movs	r2, #32
 8006046:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800604a:	5462      	strb	r2, [r4, r1]
 800604c:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 8006050:	4619      	mov	r1, r3
 8006052:	29ff      	cmp	r1, #255	; 0xff
 8006054:	d1f3      	bne.n	800603e <d_print_function_type.isra.15+0x122>
 8006056:	f04f 0800 	mov.w	r8, #0
 800605a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800605e:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006062:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8006066:	4620      	mov	r0, r4
 8006068:	4798      	blx	r3
 800606a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800606e:	3301      	adds	r3, #1
 8006070:	4641      	mov	r1, r8
 8006072:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006076:	2201      	movs	r2, #1
 8006078:	2328      	movs	r3, #40	; 0x28
 800607a:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800607e:	5463      	strb	r3, [r4, r1]
 8006080:	f04f 0900 	mov.w	r9, #0
 8006084:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006088:	f8d4 8114 	ldr.w	r8, [r4, #276]	; 0x114
 800608c:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 8006090:	464b      	mov	r3, r9
 8006092:	462a      	mov	r2, r5
 8006094:	4631      	mov	r1, r6
 8006096:	4620      	mov	r0, r4
 8006098:	f000 f832 	bl	8006100 <d_print_mod_list>
 800609c:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80060a0:	2bff      	cmp	r3, #255	; 0xff
 80060a2:	d123      	bne.n	80060ec <d_print_function_type.isra.15+0x1d0>
 80060a4:	4619      	mov	r1, r3
 80060a6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80060aa:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80060ae:	f884 90ff 	strb.w	r9, [r4, #255]	; 0xff
 80060b2:	4620      	mov	r0, r4
 80060b4:	4798      	blx	r3
 80060b6:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80060ba:	2229      	movs	r2, #41	; 0x29
 80060bc:	3301      	adds	r3, #1
 80060be:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80060c2:	7022      	strb	r2, [r4, #0]
 80060c4:	2101      	movs	r1, #1
 80060c6:	2228      	movs	r2, #40	; 0x28
 80060c8:	1c4b      	adds	r3, r1, #1
 80060ca:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80060ce:	5462      	strb	r2, [r4, r1]
 80060d0:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80060d4:	683a      	ldr	r2, [r7, #0]
 80060d6:	2a00      	cmp	r2, #0
 80060d8:	f43f af70 	beq.w	8005fbc <d_print_function_type.isra.15+0xa0>
 80060dc:	e768      	b.n	8005fb0 <d_print_function_type.isra.15+0x94>
 80060de:	1c5a      	adds	r2, r3, #1
 80060e0:	e780      	b.n	8005fe4 <d_print_function_type.isra.15+0xc8>
 80060e2:	f894 3104 	ldrb.w	r3, [r4, #260]	; 0x104
 80060e6:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80060ea:	e793      	b.n	8006014 <d_print_function_type.isra.15+0xf8>
 80060ec:	2229      	movs	r2, #41	; 0x29
 80060ee:	1c59      	adds	r1, r3, #1
 80060f0:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80060f4:	54e2      	strb	r2, [r4, r3]
 80060f6:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80060fa:	e73d      	b.n	8005f78 <d_print_function_type.isra.15+0x5c>
 80060fc:	00043107 	.word	0x00043107

08006100 <d_print_mod_list>:
 8006100:	2a00      	cmp	r2, #0
 8006102:	f000 80ac 	beq.w	800625e <d_print_mod_list+0x15e>
 8006106:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800610a:	461f      	mov	r7, r3
 800610c:	f8d0 3118 	ldr.w	r3, [r0, #280]	; 0x118
 8006110:	b089      	sub	sp, #36	; 0x24
 8006112:	4605      	mov	r5, r0
 8006114:	bb4b      	cbnz	r3, 800616a <d_print_mod_list+0x6a>
 8006116:	4688      	mov	r8, r1
 8006118:	4614      	mov	r4, r2
 800611a:	f04f 0901 	mov.w	r9, #1
 800611e:	e002      	b.n	8006126 <d_print_mod_list+0x26>
 8006120:	f8d5 3118 	ldr.w	r3, [r5, #280]	; 0x118
 8006124:	bb0b      	cbnz	r3, 800616a <d_print_mod_list+0x6a>
 8006126:	68a3      	ldr	r3, [r4, #8]
 8006128:	b9e3      	cbnz	r3, 8006164 <d_print_mod_list+0x64>
 800612a:	f8d4 a004 	ldr.w	sl, [r4, #4]
 800612e:	f89a 6000 	ldrb.w	r6, [sl]
 8006132:	4630      	mov	r0, r6
 8006134:	b917      	cbnz	r7, 800613c <d_print_mod_list+0x3c>
 8006136:	f7fa f93f 	bl	80003b8 <is_fnqual_component_type>
 800613a:	b998      	cbnz	r0, 8006164 <d_print_mod_list+0x64>
 800613c:	68e3      	ldr	r3, [r4, #12]
 800613e:	f8c4 9008 	str.w	r9, [r4, #8]
 8006142:	2e29      	cmp	r6, #41	; 0x29
 8006144:	f8d5 b110 	ldr.w	fp, [r5, #272]	; 0x110
 8006148:	f8c5 3110 	str.w	r3, [r5, #272]	; 0x110
 800614c:	4652      	mov	r2, sl
 800614e:	4641      	mov	r1, r8
 8006150:	4628      	mov	r0, r5
 8006152:	d00d      	beq.n	8006170 <d_print_mod_list+0x70>
 8006154:	2e2a      	cmp	r6, #42	; 0x2a
 8006156:	d015      	beq.n	8006184 <d_print_mod_list+0x84>
 8006158:	2e02      	cmp	r6, #2
 800615a:	d01d      	beq.n	8006198 <d_print_mod_list+0x98>
 800615c:	f7ff fbb0 	bl	80058c0 <d_print_mod>
 8006160:	f8c5 b110 	str.w	fp, [r5, #272]	; 0x110
 8006164:	6824      	ldr	r4, [r4, #0]
 8006166:	2c00      	cmp	r4, #0
 8006168:	d1da      	bne.n	8006120 <d_print_mod_list+0x20>
 800616a:	b009      	add	sp, #36	; 0x24
 800616c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006170:	6823      	ldr	r3, [r4, #0]
 8006172:	f10a 020c 	add.w	r2, sl, #12
 8006176:	f7ff fed1 	bl	8005f1c <d_print_function_type.isra.15>
 800617a:	f8c5 b110 	str.w	fp, [r5, #272]	; 0x110
 800617e:	b009      	add	sp, #36	; 0x24
 8006180:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006184:	6823      	ldr	r3, [r4, #0]
 8006186:	f10a 0208 	add.w	r2, sl, #8
 800618a:	f000 f8f1 	bl	8006370 <d_print_array_type.isra.14>
 800618e:	f8c5 b110 	str.w	fp, [r5, #272]	; 0x110
 8006192:	b009      	add	sp, #36	; 0x24
 8006194:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006198:	2600      	movs	r6, #0
 800619a:	f8d5 7114 	ldr.w	r7, [r5, #276]	; 0x114
 800619e:	f8da 2008 	ldr.w	r2, [sl, #8]
 80061a2:	f8c5 6114 	str.w	r6, [r5, #276]	; 0x114
 80061a6:	f7fc fcf5 	bl	8002b94 <d_print_comp>
 80061aa:	f8c5 7114 	str.w	r7, [r5, #276]	; 0x114
 80061ae:	f018 0704 	ands.w	r7, r8, #4
 80061b2:	d02f      	beq.n	8006214 <d_print_mod_list+0x114>
 80061b4:	f8d5 1100 	ldr.w	r1, [r5, #256]	; 0x100
 80061b8:	29ff      	cmp	r1, #255	; 0xff
 80061ba:	f040 80cf 	bne.w	800635c <d_print_mod_list+0x25c>
 80061be:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 80061c2:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 80061c6:	f885 60ff 	strb.w	r6, [r5, #255]	; 0xff
 80061ca:	4628      	mov	r0, r5
 80061cc:	4798      	blx	r3
 80061ce:	f8d5 3124 	ldr.w	r3, [r5, #292]	; 0x124
 80061d2:	3301      	adds	r3, #1
 80061d4:	4631      	mov	r1, r6
 80061d6:	f8c5 3124 	str.w	r3, [r5, #292]	; 0x124
 80061da:	2201      	movs	r2, #1
 80061dc:	232e      	movs	r3, #46	; 0x2e
 80061de:	f8c5 2100 	str.w	r2, [r5, #256]	; 0x100
 80061e2:	546b      	strb	r3, [r5, r1]
 80061e4:	f885 3104 	strb.w	r3, [r5, #260]	; 0x104
 80061e8:	6863      	ldr	r3, [r4, #4]
 80061ea:	68dc      	ldr	r4, [r3, #12]
 80061ec:	7820      	ldrb	r0, [r4, #0]
 80061ee:	2846      	cmp	r0, #70	; 0x46
 80061f0:	d102      	bne.n	80061f8 <d_print_mod_list+0xf8>
 80061f2:	e035      	b.n	8006260 <d_print_mod_list+0x160>
 80061f4:	68a4      	ldr	r4, [r4, #8]
 80061f6:	7820      	ldrb	r0, [r4, #0]
 80061f8:	f7fa f8de 	bl	80003b8 <is_fnqual_component_type>
 80061fc:	2800      	cmp	r0, #0
 80061fe:	d1f9      	bne.n	80061f4 <d_print_mod_list+0xf4>
 8006200:	4622      	mov	r2, r4
 8006202:	4641      	mov	r1, r8
 8006204:	4628      	mov	r0, r5
 8006206:	f7fc fcc5 	bl	8002b94 <d_print_comp>
 800620a:	f8c5 b110 	str.w	fp, [r5, #272]	; 0x110
 800620e:	b009      	add	sp, #36	; 0x24
 8006210:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006214:	4e52      	ldr	r6, [pc, #328]	; (8006360 <d_print_mod_list+0x260>)
 8006216:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
 800621a:	f106 0902 	add.w	r9, r6, #2
 800621e:	e015      	b.n	800624c <d_print_mod_list+0x14c>
 8006220:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 8006224:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 8006228:	f885 70ff 	strb.w	r7, [r5, #255]	; 0xff
 800622c:	4798      	blx	r3
 800622e:	f8d5 3124 	ldr.w	r3, [r5, #292]	; 0x124
 8006232:	3301      	adds	r3, #1
 8006234:	f8c5 3124 	str.w	r3, [r5, #292]	; 0x124
 8006238:	2200      	movs	r2, #0
 800623a:	2301      	movs	r3, #1
 800623c:	45b1      	cmp	r9, r6
 800623e:	f8c5 3100 	str.w	r3, [r5, #256]	; 0x100
 8006242:	f805 a002 	strb.w	sl, [r5, r2]
 8006246:	f885 a104 	strb.w	sl, [r5, #260]	; 0x104
 800624a:	d0cd      	beq.n	80061e8 <d_print_mod_list+0xe8>
 800624c:	2bff      	cmp	r3, #255	; 0xff
 800624e:	4619      	mov	r1, r3
 8006250:	4628      	mov	r0, r5
 8006252:	f816 ab01 	ldrb.w	sl, [r6], #1
 8006256:	d0e3      	beq.n	8006220 <d_print_mod_list+0x120>
 8006258:	461a      	mov	r2, r3
 800625a:	3301      	adds	r3, #1
 800625c:	e7ee      	b.n	800623c <d_print_mod_list+0x13c>
 800625e:	4770      	bx	lr
 8006260:	4e40      	ldr	r6, [pc, #256]	; (8006364 <d_print_mod_list+0x264>)
 8006262:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
 8006266:	f106 070d 	add.w	r7, r6, #13
 800626a:	f04f 0900 	mov.w	r9, #0
 800626e:	e015      	b.n	800629c <d_print_mod_list+0x19c>
 8006270:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 8006274:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 8006278:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
 800627c:	4798      	blx	r3
 800627e:	f8d5 3124 	ldr.w	r3, [r5, #292]	; 0x124
 8006282:	3301      	adds	r3, #1
 8006284:	f8c5 3124 	str.w	r3, [r5, #292]	; 0x124
 8006288:	2200      	movs	r2, #0
 800628a:	2301      	movs	r3, #1
 800628c:	42b7      	cmp	r7, r6
 800628e:	f8c5 3100 	str.w	r3, [r5, #256]	; 0x100
 8006292:	f805 a002 	strb.w	sl, [r5, r2]
 8006296:	f885 a104 	strb.w	sl, [r5, #260]	; 0x104
 800629a:	d008      	beq.n	80062ae <d_print_mod_list+0x1ae>
 800629c:	2bff      	cmp	r3, #255	; 0xff
 800629e:	4619      	mov	r1, r3
 80062a0:	4628      	mov	r0, r5
 80062a2:	f816 ab01 	ldrb.w	sl, [r6], #1
 80062a6:	d0e3      	beq.n	8006270 <d_print_mod_list+0x170>
 80062a8:	461a      	mov	r2, r3
 80062aa:	3301      	adds	r3, #1
 80062ac:	e7ee      	b.n	800628c <d_print_mod_list+0x18c>
 80062ae:	68e2      	ldr	r2, [r4, #12]
 80062b0:	492d      	ldr	r1, [pc, #180]	; (8006368 <d_print_mod_list+0x268>)
 80062b2:	3201      	adds	r2, #1
 80062b4:	a801      	add	r0, sp, #4
 80062b6:	f007 fecf 	bl	800e058 <sprintf>
 80062ba:	a801      	add	r0, sp, #4
 80062bc:	f000 fd5a 	bl	8006d74 <strlen>
 80062c0:	b328      	cbz	r0, 800630e <d_print_mod_list+0x20e>
 80062c2:	ae01      	add	r6, sp, #4
 80062c4:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
 80062c8:	1837      	adds	r7, r6, r0
 80062ca:	f04f 0900 	mov.w	r9, #0
 80062ce:	e015      	b.n	80062fc <d_print_mod_list+0x1fc>
 80062d0:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 80062d4:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 80062d8:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
 80062dc:	4798      	blx	r3
 80062de:	f8d5 3124 	ldr.w	r3, [r5, #292]	; 0x124
 80062e2:	3301      	adds	r3, #1
 80062e4:	f8c5 3124 	str.w	r3, [r5, #292]	; 0x124
 80062e8:	2200      	movs	r2, #0
 80062ea:	2301      	movs	r3, #1
 80062ec:	42be      	cmp	r6, r7
 80062ee:	f8c5 3100 	str.w	r3, [r5, #256]	; 0x100
 80062f2:	f805 a002 	strb.w	sl, [r5, r2]
 80062f6:	f885 a104 	strb.w	sl, [r5, #260]	; 0x104
 80062fa:	d00a      	beq.n	8006312 <d_print_mod_list+0x212>
 80062fc:	2bff      	cmp	r3, #255	; 0xff
 80062fe:	4619      	mov	r1, r3
 8006300:	4628      	mov	r0, r5
 8006302:	f816 ab01 	ldrb.w	sl, [r6], #1
 8006306:	d0e3      	beq.n	80062d0 <d_print_mod_list+0x1d0>
 8006308:	461a      	mov	r2, r3
 800630a:	3301      	adds	r3, #1
 800630c:	e7ee      	b.n	80062ec <d_print_mod_list+0x1ec>
 800630e:	f8d5 3100 	ldr.w	r3, [r5, #256]	; 0x100
 8006312:	4e16      	ldr	r6, [pc, #88]	; (800636c <d_print_mod_list+0x26c>)
 8006314:	f04f 0900 	mov.w	r9, #0
 8006318:	1cf7      	adds	r7, r6, #3
 800631a:	e016      	b.n	800634a <d_print_mod_list+0x24a>
 800631c:	f8d5 3108 	ldr.w	r3, [r5, #264]	; 0x108
 8006320:	f8d5 210c 	ldr.w	r2, [r5, #268]	; 0x10c
 8006324:	f885 90ff 	strb.w	r9, [r5, #255]	; 0xff
 8006328:	4798      	blx	r3
 800632a:	f8d5 3124 	ldr.w	r3, [r5, #292]	; 0x124
 800632e:	3301      	adds	r3, #1
 8006330:	f8c5 3124 	str.w	r3, [r5, #292]	; 0x124
 8006334:	2200      	movs	r2, #0
 8006336:	2301      	movs	r3, #1
 8006338:	42b7      	cmp	r7, r6
 800633a:	f8c5 3100 	str.w	r3, [r5, #256]	; 0x100
 800633e:	f805 a002 	strb.w	sl, [r5, r2]
 8006342:	f885 a104 	strb.w	sl, [r5, #260]	; 0x104
 8006346:	f43f af55 	beq.w	80061f4 <d_print_mod_list+0xf4>
 800634a:	2bff      	cmp	r3, #255	; 0xff
 800634c:	4619      	mov	r1, r3
 800634e:	4628      	mov	r0, r5
 8006350:	f816 ab01 	ldrb.w	sl, [r6], #1
 8006354:	d0e2      	beq.n	800631c <d_print_mod_list+0x21c>
 8006356:	461a      	mov	r2, r3
 8006358:	3301      	adds	r3, #1
 800635a:	e7ed      	b.n	8006338 <d_print_mod_list+0x238>
 800635c:	1c4a      	adds	r2, r1, #1
 800635e:	e73d      	b.n	80061dc <d_print_mod_list+0xdc>
 8006360:	08011dd8 	.word	0x08011dd8
 8006364:	08011ddc 	.word	0x08011ddc
 8006368:	08011d88 	.word	0x08011d88
 800636c:	08011dec 	.word	0x08011dec

08006370 <d_print_array_type.isra.14>:
 8006370:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006374:	4604      	mov	r4, r0
 8006376:	460f      	mov	r7, r1
 8006378:	4690      	mov	r8, r2
 800637a:	b15b      	cbz	r3, 8006394 <d_print_array_type.isra.14+0x24>
 800637c:	461e      	mov	r6, r3
 800637e:	689d      	ldr	r5, [r3, #8]
 8006380:	2d00      	cmp	r5, #0
 8006382:	d042      	beq.n	800640a <d_print_array_type.isra.14+0x9a>
 8006384:	681b      	ldr	r3, [r3, #0]
 8006386:	2b00      	cmp	r3, #0
 8006388:	d1f9      	bne.n	800637e <d_print_array_type.isra.14+0xe>
 800638a:	4632      	mov	r2, r6
 800638c:	4639      	mov	r1, r7
 800638e:	4620      	mov	r0, r4
 8006390:	f7ff feb6 	bl	8006100 <d_print_mod_list>
 8006394:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006398:	29ff      	cmp	r1, #255	; 0xff
 800639a:	f040 80b1 	bne.w	8006500 <d_print_array_type.isra.14+0x190>
 800639e:	2300      	movs	r3, #0
 80063a0:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 80063a4:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80063a8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80063ac:	4620      	mov	r0, r4
 80063ae:	4798      	blx	r3
 80063b0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80063b4:	2220      	movs	r2, #32
 80063b6:	3301      	adds	r3, #1
 80063b8:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80063bc:	7022      	strb	r2, [r4, #0]
 80063be:	2301      	movs	r3, #1
 80063c0:	225b      	movs	r2, #91	; 0x5b
 80063c2:	1c59      	adds	r1, r3, #1
 80063c4:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 80063c8:	54e2      	strb	r2, [r4, r3]
 80063ca:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 80063ce:	f8d8 2000 	ldr.w	r2, [r8]
 80063d2:	2a00      	cmp	r2, #0
 80063d4:	d140      	bne.n	8006458 <d_print_array_type.isra.14+0xe8>
 80063d6:	29ff      	cmp	r1, #255	; 0xff
 80063d8:	d145      	bne.n	8006466 <d_print_array_type.isra.14+0xf6>
 80063da:	2500      	movs	r5, #0
 80063dc:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80063e0:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80063e4:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80063e8:	4620      	mov	r0, r4
 80063ea:	4798      	blx	r3
 80063ec:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80063f0:	3301      	adds	r3, #1
 80063f2:	4629      	mov	r1, r5
 80063f4:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80063f8:	2201      	movs	r2, #1
 80063fa:	235d      	movs	r3, #93	; 0x5d
 80063fc:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8006400:	5463      	strb	r3, [r4, r1]
 8006402:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006406:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800640a:	685b      	ldr	r3, [r3, #4]
 800640c:	781b      	ldrb	r3, [r3, #0]
 800640e:	2b2a      	cmp	r3, #42	; 0x2a
 8006410:	d12b      	bne.n	800646a <d_print_array_type.isra.14+0xfa>
 8006412:	462b      	mov	r3, r5
 8006414:	4632      	mov	r2, r6
 8006416:	4639      	mov	r1, r7
 8006418:	4620      	mov	r0, r4
 800641a:	f7ff fe71 	bl	8006100 <d_print_mod_list>
 800641e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8006422:	2bff      	cmp	r3, #255	; 0xff
 8006424:	d1cc      	bne.n	80063c0 <d_print_array_type.isra.14+0x50>
 8006426:	2200      	movs	r2, #0
 8006428:	4619      	mov	r1, r3
 800642a:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 800642e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006432:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006436:	4620      	mov	r0, r4
 8006438:	4798      	blx	r3
 800643a:	235b      	movs	r3, #91	; 0x5b
 800643c:	7023      	strb	r3, [r4, #0]
 800643e:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006442:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8006446:	f8d8 2000 	ldr.w	r2, [r8]
 800644a:	3301      	adds	r3, #1
 800644c:	2101      	movs	r1, #1
 800644e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006452:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006456:	b132      	cbz	r2, 8006466 <d_print_array_type.isra.14+0xf6>
 8006458:	4639      	mov	r1, r7
 800645a:	4620      	mov	r0, r4
 800645c:	f7fc fb9a 	bl	8002b94 <d_print_comp>
 8006460:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006464:	e7b7      	b.n	80063d6 <d_print_array_type.isra.14+0x66>
 8006466:	1c4a      	adds	r2, r1, #1
 8006468:	e7c7      	b.n	80063fa <d_print_array_type.isra.14+0x8a>
 800646a:	f8df 90b4 	ldr.w	r9, [pc, #180]	; 8006520 <d_print_array_type.isra.14+0x1b0>
 800646e:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 8006472:	f109 0a02 	add.w	sl, r9, #2
 8006476:	e016      	b.n	80064a6 <d_print_array_type.isra.14+0x136>
 8006478:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800647c:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006480:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8006484:	4798      	blx	r3
 8006486:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800648a:	2200      	movs	r2, #0
 800648c:	3301      	adds	r3, #1
 800648e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006492:	45ca      	cmp	sl, r9
 8006494:	f04f 0301 	mov.w	r3, #1
 8006498:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800649c:	f804 b002 	strb.w	fp, [r4, r2]
 80064a0:	f884 b104 	strb.w	fp, [r4, #260]	; 0x104
 80064a4:	d010      	beq.n	80064c8 <d_print_array_type.isra.14+0x158>
 80064a6:	2bff      	cmp	r3, #255	; 0xff
 80064a8:	4619      	mov	r1, r3
 80064aa:	4620      	mov	r0, r4
 80064ac:	f819 bb01 	ldrb.w	fp, [r9], #1
 80064b0:	d0e2      	beq.n	8006478 <d_print_array_type.isra.14+0x108>
 80064b2:	461a      	mov	r2, r3
 80064b4:	45ca      	cmp	sl, r9
 80064b6:	f103 0301 	add.w	r3, r3, #1
 80064ba:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80064be:	f804 b002 	strb.w	fp, [r4, r2]
 80064c2:	f884 b104 	strb.w	fp, [r4, #260]	; 0x104
 80064c6:	d1ee      	bne.n	80064a6 <d_print_array_type.isra.14+0x136>
 80064c8:	2300      	movs	r3, #0
 80064ca:	4632      	mov	r2, r6
 80064cc:	4639      	mov	r1, r7
 80064ce:	4620      	mov	r0, r4
 80064d0:	f7ff fe16 	bl	8006100 <d_print_mod_list>
 80064d4:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 80064d8:	2bff      	cmp	r3, #255	; 0xff
 80064da:	d119      	bne.n	8006510 <d_print_array_type.isra.14+0x1a0>
 80064dc:	2200      	movs	r2, #0
 80064de:	4619      	mov	r1, r3
 80064e0:	f884 20ff 	strb.w	r2, [r4, #255]	; 0xff
 80064e4:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80064e8:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80064ec:	4620      	mov	r0, r4
 80064ee:	4798      	blx	r3
 80064f0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80064f4:	2229      	movs	r2, #41	; 0x29
 80064f6:	3301      	adds	r3, #1
 80064f8:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80064fc:	7022      	strb	r2, [r4, #0]
 80064fe:	2101      	movs	r1, #1
 8006500:	2220      	movs	r2, #32
 8006502:	1c4b      	adds	r3, r1, #1
 8006504:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8006508:	5462      	strb	r2, [r4, r1]
 800650a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800650e:	e788      	b.n	8006422 <d_print_array_type.isra.14+0xb2>
 8006510:	2229      	movs	r2, #41	; 0x29
 8006512:	1c59      	adds	r1, r3, #1
 8006514:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006518:	54e2      	strb	r2, [r4, r3]
 800651a:	f884 2104 	strb.w	r2, [r4, #260]	; 0x104
 800651e:	e73b      	b.n	8006398 <d_print_array_type.isra.14+0x28>
 8006520:	08011fd4 	.word	0x08011fd4

08006524 <d_print_expr_op>:
 8006524:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006528:	7815      	ldrb	r5, [r2, #0]
 800652a:	2d31      	cmp	r5, #49	; 0x31
 800652c:	d003      	beq.n	8006536 <d_print_expr_op+0x12>
 800652e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006532:	f7fc bb2f 	b.w	8002b94 <d_print_comp>
 8006536:	6893      	ldr	r3, [r2, #8]
 8006538:	e9d3 5601 	ldrd	r5, r6, [r3, #4]
 800653c:	b37e      	cbz	r6, 800659e <d_print_expr_op+0x7a>
 800653e:	442e      	add	r6, r5
 8006540:	4604      	mov	r4, r0
 8006542:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8006546:	3e01      	subs	r6, #1
 8006548:	3d01      	subs	r5, #1
 800654a:	2700      	movs	r7, #0
 800654c:	e016      	b.n	800657c <d_print_expr_op+0x58>
 800654e:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006552:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006556:	f884 70ff 	strb.w	r7, [r4, #255]	; 0xff
 800655a:	4798      	blx	r3
 800655c:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8006560:	2200      	movs	r2, #0
 8006562:	3301      	adds	r3, #1
 8006564:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006568:	42b5      	cmp	r5, r6
 800656a:	f04f 0301 	mov.w	r3, #1
 800656e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8006572:	f804 8002 	strb.w	r8, [r4, r2]
 8006576:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 800657a:	d010      	beq.n	800659e <d_print_expr_op+0x7a>
 800657c:	2bff      	cmp	r3, #255	; 0xff
 800657e:	4619      	mov	r1, r3
 8006580:	4620      	mov	r0, r4
 8006582:	f815 8f01 	ldrb.w	r8, [r5, #1]!
 8006586:	d0e2      	beq.n	800654e <d_print_expr_op+0x2a>
 8006588:	461a      	mov	r2, r3
 800658a:	42b5      	cmp	r5, r6
 800658c:	f103 0301 	add.w	r3, r3, #1
 8006590:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8006594:	f804 8002 	strb.w	r8, [r4, r2]
 8006598:	f884 8104 	strb.w	r8, [r4, #260]	; 0x104
 800659c:	d1ee      	bne.n	800657c <d_print_expr_op+0x58>
 800659e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80065a2:	bf00      	nop

080065a4 <d_print_subexpr>:
 80065a4:	7813      	ldrb	r3, [r2, #0]
 80065a6:	2b01      	cmp	r3, #1
 80065a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80065ac:	4604      	mov	r4, r0
 80065ae:	d941      	bls.n	8006634 <d_print_subexpr+0x90>
 80065b0:	2b30      	cmp	r3, #48	; 0x30
 80065b2:	d03f      	beq.n	8006634 <d_print_subexpr+0x90>
 80065b4:	2b06      	cmp	r3, #6
 80065b6:	d03d      	beq.n	8006634 <d_print_subexpr+0x90>
 80065b8:	f8d0 7100 	ldr.w	r7, [r0, #256]	; 0x100
 80065bc:	2fff      	cmp	r7, #255	; 0xff
 80065be:	460e      	mov	r6, r1
 80065c0:	4615      	mov	r5, r2
 80065c2:	d13e      	bne.n	8006642 <d_print_subexpr+0x9e>
 80065c4:	f04f 0800 	mov.w	r8, #0
 80065c8:	4639      	mov	r1, r7
 80065ca:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 80065ce:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 80065d2:	f880 80ff 	strb.w	r8, [r0, #255]	; 0xff
 80065d6:	4798      	blx	r3
 80065d8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80065dc:	3301      	adds	r3, #1
 80065de:	4647      	mov	r7, r8
 80065e0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80065e4:	2201      	movs	r2, #1
 80065e6:	2328      	movs	r3, #40	; 0x28
 80065e8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80065ec:	4631      	mov	r1, r6
 80065ee:	55e3      	strb	r3, [r4, r7]
 80065f0:	462a      	mov	r2, r5
 80065f2:	4620      	mov	r0, r4
 80065f4:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80065f8:	f7fc facc 	bl	8002b94 <d_print_comp>
 80065fc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006600:	29ff      	cmp	r1, #255	; 0xff
 8006602:	d11c      	bne.n	800663e <d_print_subexpr+0x9a>
 8006604:	2500      	movs	r5, #0
 8006606:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 800660a:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800660e:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 8006612:	4620      	mov	r0, r4
 8006614:	4798      	blx	r3
 8006616:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800661a:	3301      	adds	r3, #1
 800661c:	4629      	mov	r1, r5
 800661e:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006622:	2201      	movs	r2, #1
 8006624:	2329      	movs	r3, #41	; 0x29
 8006626:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800662a:	5463      	strb	r3, [r4, r1]
 800662c:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006630:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006634:	4620      	mov	r0, r4
 8006636:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800663a:	f7fc baab 	b.w	8002b94 <d_print_comp>
 800663e:	1c4a      	adds	r2, r1, #1
 8006640:	e7f0      	b.n	8006624 <d_print_subexpr+0x80>
 8006642:	1c7a      	adds	r2, r7, #1
 8006644:	e7cf      	b.n	80065e6 <d_print_subexpr+0x42>
 8006646:	bf00      	nop

08006648 <d_maybe_print_fold_expression.isra.20>:
 8006648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800664c:	6892      	ldr	r2, [r2, #8]
 800664e:	6812      	ldr	r2, [r2, #0]
 8006650:	7816      	ldrb	r6, [r2, #0]
 8006652:	2e66      	cmp	r6, #102	; 0x66
 8006654:	b083      	sub	sp, #12
 8006656:	d003      	beq.n	8006660 <d_maybe_print_fold_expression.isra.20+0x18>
 8006658:	2000      	movs	r0, #0
 800665a:	b003      	add	sp, #12
 800665c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006660:	681b      	ldr	r3, [r3, #0]
 8006662:	e9d3 8902 	ldrd	r8, r9, [r3, #8]
 8006666:	f899 3000 	ldrb.w	r3, [r9]
 800666a:	2b3b      	cmp	r3, #59	; 0x3b
 800666c:	f000 8110 	beq.w	8006890 <d_maybe_print_fold_expression.isra.20+0x248>
 8006670:	2300      	movs	r3, #0
 8006672:	9301      	str	r3, [sp, #4]
 8006674:	f04f 33ff 	mov.w	r3, #4294967295
 8006678:	f8d0 7120 	ldr.w	r7, [r0, #288]	; 0x120
 800667c:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
 8006680:	7853      	ldrb	r3, [r2, #1]
 8006682:	3b4c      	subs	r3, #76	; 0x4c
 8006684:	460d      	mov	r5, r1
 8006686:	4604      	mov	r4, r0
 8006688:	2b26      	cmp	r3, #38	; 0x26
 800668a:	d83a      	bhi.n	8006702 <d_maybe_print_fold_expression.isra.20+0xba>
 800668c:	e8df f003 	tbb	[pc, r3]
 8006690:	393939b0 	.word	0x393939b0
 8006694:	39b03939 	.word	0x39b03939
 8006698:	39393939 	.word	0x39393939
 800669c:	39393939 	.word	0x39393939
 80066a0:	39393939 	.word	0x39393939
 80066a4:	39393939 	.word	0x39393939
 80066a8:	39393939 	.word	0x39393939
 80066ac:	39393939 	.word	0x39393939
 80066b0:	39393989 	.word	0x39393989
 80066b4:	3939      	.short	0x3939
 80066b6:	3f          	.byte	0x3f
 80066b7:	00          	.byte	0x00
 80066b8:	4642      	mov	r2, r8
 80066ba:	4629      	mov	r1, r5
 80066bc:	4620      	mov	r0, r4
 80066be:	f7ff ff31 	bl	8006524 <d_print_expr_op>
 80066c2:	9a01      	ldr	r2, [sp, #4]
 80066c4:	4629      	mov	r1, r5
 80066c6:	4620      	mov	r0, r4
 80066c8:	f7ff ff6c 	bl	80065a4 <d_print_subexpr>
 80066cc:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 80066d0:	29ff      	cmp	r1, #255	; 0xff
 80066d2:	f040 80ea 	bne.w	80068aa <d_maybe_print_fold_expression.isra.20+0x262>
 80066d6:	2500      	movs	r5, #0
 80066d8:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80066dc:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80066e0:	f884 50ff 	strb.w	r5, [r4, #255]	; 0xff
 80066e4:	4620      	mov	r0, r4
 80066e6:	4798      	blx	r3
 80066e8:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80066ec:	3301      	adds	r3, #1
 80066ee:	4629      	mov	r1, r5
 80066f0:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80066f4:	2201      	movs	r2, #1
 80066f6:	2329      	movs	r3, #41	; 0x29
 80066f8:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 80066fc:	5463      	strb	r3, [r4, r1]
 80066fe:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006702:	2001      	movs	r0, #1
 8006704:	f8c4 7120 	str.w	r7, [r4, #288]	; 0x120
 8006708:	b003      	add	sp, #12
 800670a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800670e:	f8d0 1100 	ldr.w	r1, [r0, #256]	; 0x100
 8006712:	29ff      	cmp	r1, #255	; 0xff
 8006714:	f040 80cb 	bne.w	80068ae <d_maybe_print_fold_expression.isra.20+0x266>
 8006718:	2600      	movs	r6, #0
 800671a:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 800671e:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8006722:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8006726:	4798      	blx	r3
 8006728:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800672c:	3301      	adds	r3, #1
 800672e:	4631      	mov	r1, r6
 8006730:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006734:	2201      	movs	r2, #1
 8006736:	2328      	movs	r3, #40	; 0x28
 8006738:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 800673c:	4620      	mov	r0, r4
 800673e:	5463      	strb	r3, [r4, r1]
 8006740:	464a      	mov	r2, r9
 8006742:	4629      	mov	r1, r5
 8006744:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8006748:	f7ff ff2c 	bl	80065a4 <d_print_subexpr>
 800674c:	4629      	mov	r1, r5
 800674e:	4d59      	ldr	r5, [pc, #356]	; (80068b4 <d_maybe_print_fold_expression.isra.20+0x26c>)
 8006750:	4642      	mov	r2, r8
 8006752:	4620      	mov	r0, r4
 8006754:	f7ff fee6 	bl	8006524 <d_print_expr_op>
 8006758:	1d2e      	adds	r6, r5, #4
 800675a:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800675e:	f04f 0800 	mov.w	r8, #0
 8006762:	e015      	b.n	8006790 <d_maybe_print_fold_expression.isra.20+0x148>
 8006764:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006768:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 800676c:	f884 80ff 	strb.w	r8, [r4, #255]	; 0xff
 8006770:	4798      	blx	r3
 8006772:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8006776:	3301      	adds	r3, #1
 8006778:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 800677c:	2200      	movs	r2, #0
 800677e:	2301      	movs	r3, #1
 8006780:	42ae      	cmp	r6, r5
 8006782:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8006786:	f804 9002 	strb.w	r9, [r4, r2]
 800678a:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 800678e:	d0b8      	beq.n	8006702 <d_maybe_print_fold_expression.isra.20+0xba>
 8006790:	2bff      	cmp	r3, #255	; 0xff
 8006792:	4619      	mov	r1, r3
 8006794:	4620      	mov	r0, r4
 8006796:	f815 9b01 	ldrb.w	r9, [r5], #1
 800679a:	d0e3      	beq.n	8006764 <d_maybe_print_fold_expression.isra.20+0x11c>
 800679c:	461a      	mov	r2, r3
 800679e:	3301      	adds	r3, #1
 80067a0:	e7ee      	b.n	8006780 <d_maybe_print_fold_expression.isra.20+0x138>
 80067a2:	4e45      	ldr	r6, [pc, #276]	; (80068b8 <d_maybe_print_fold_expression.isra.20+0x270>)
 80067a4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80067a8:	f106 0a04 	add.w	sl, r6, #4
 80067ac:	e017      	b.n	80067de <d_maybe_print_fold_expression.isra.20+0x196>
 80067ae:	f04f 0300 	mov.w	r3, #0
 80067b2:	f884 30ff 	strb.w	r3, [r4, #255]	; 0xff
 80067b6:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 80067ba:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 80067be:	4798      	blx	r3
 80067c0:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 80067c4:	3301      	adds	r3, #1
 80067c6:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 80067ca:	2200      	movs	r2, #0
 80067cc:	2301      	movs	r3, #1
 80067ce:	45b2      	cmp	sl, r6
 80067d0:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 80067d4:	f804 b002 	strb.w	fp, [r4, r2]
 80067d8:	f884 b104 	strb.w	fp, [r4, #260]	; 0x104
 80067dc:	d05e      	beq.n	800689c <d_maybe_print_fold_expression.isra.20+0x254>
 80067de:	2bff      	cmp	r3, #255	; 0xff
 80067e0:	4619      	mov	r1, r3
 80067e2:	4620      	mov	r0, r4
 80067e4:	f816 bb01 	ldrb.w	fp, [r6], #1
 80067e8:	d0e1      	beq.n	80067ae <d_maybe_print_fold_expression.isra.20+0x166>
 80067ea:	461a      	mov	r2, r3
 80067ec:	3301      	adds	r3, #1
 80067ee:	e7ee      	b.n	80067ce <d_maybe_print_fold_expression.isra.20+0x186>
 80067f0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80067f4:	2bff      	cmp	r3, #255	; 0xff
 80067f6:	d110      	bne.n	800681a <d_maybe_print_fold_expression.isra.20+0x1d2>
 80067f8:	2600      	movs	r6, #0
 80067fa:	4619      	mov	r1, r3
 80067fc:	f8d0 210c 	ldr.w	r2, [r0, #268]	; 0x10c
 8006800:	f8d0 3108 	ldr.w	r3, [r0, #264]	; 0x108
 8006804:	f880 60ff 	strb.w	r6, [r0, #255]	; 0xff
 8006808:	4798      	blx	r3
 800680a:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 800680e:	f8c4 6100 	str.w	r6, [r4, #256]	; 0x100
 8006812:	1c5a      	adds	r2, r3, #1
 8006814:	f8c4 2124 	str.w	r2, [r4, #292]	; 0x124
 8006818:	4633      	mov	r3, r6
 800681a:	1c59      	adds	r1, r3, #1
 800681c:	f04f 0c28 	mov.w	ip, #40	; 0x28
 8006820:	464a      	mov	r2, r9
 8006822:	f8c4 1100 	str.w	r1, [r4, #256]	; 0x100
 8006826:	4620      	mov	r0, r4
 8006828:	f804 c003 	strb.w	ip, [r4, r3]
 800682c:	4629      	mov	r1, r5
 800682e:	f884 c104 	strb.w	ip, [r4, #260]	; 0x104
 8006832:	f8df 9088 	ldr.w	r9, [pc, #136]	; 80068bc <d_maybe_print_fold_expression.isra.20+0x274>
 8006836:	f7ff feb5 	bl	80065a4 <d_print_subexpr>
 800683a:	4642      	mov	r2, r8
 800683c:	4629      	mov	r1, r5
 800683e:	4620      	mov	r0, r4
 8006840:	f7ff fe70 	bl	8006524 <d_print_expr_op>
 8006844:	f109 0a03 	add.w	sl, r9, #3
 8006848:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800684c:	2600      	movs	r6, #0
 800684e:	e016      	b.n	800687e <d_maybe_print_fold_expression.isra.20+0x236>
 8006850:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006854:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006858:	f884 60ff 	strb.w	r6, [r4, #255]	; 0xff
 800685c:	4798      	blx	r3
 800685e:	f8d4 3124 	ldr.w	r3, [r4, #292]	; 0x124
 8006862:	3301      	adds	r3, #1
 8006864:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
 8006868:	2200      	movs	r2, #0
 800686a:	2301      	movs	r3, #1
 800686c:	45d1      	cmp	r9, sl
 800686e:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8006872:	f804 b002 	strb.w	fp, [r4, r2]
 8006876:	f884 b104 	strb.w	fp, [r4, #260]	; 0x104
 800687a:	f43f af1d 	beq.w	80066b8 <d_maybe_print_fold_expression.isra.20+0x70>
 800687e:	2bff      	cmp	r3, #255	; 0xff
 8006880:	4619      	mov	r1, r3
 8006882:	4620      	mov	r0, r4
 8006884:	f819 bb01 	ldrb.w	fp, [r9], #1
 8006888:	d0e2      	beq.n	8006850 <d_maybe_print_fold_expression.isra.20+0x208>
 800688a:	461a      	mov	r2, r3
 800688c:	3301      	adds	r3, #1
 800688e:	e7ed      	b.n	800686c <d_maybe_print_fold_expression.isra.20+0x224>
 8006890:	f8d9 300c 	ldr.w	r3, [r9, #12]
 8006894:	9301      	str	r3, [sp, #4]
 8006896:	f8d9 9008 	ldr.w	r9, [r9, #8]
 800689a:	e6eb      	b.n	8006674 <d_maybe_print_fold_expression.isra.20+0x2c>
 800689c:	4642      	mov	r2, r8
 800689e:	4629      	mov	r1, r5
 80068a0:	4620      	mov	r0, r4
 80068a2:	f7ff fe3f 	bl	8006524 <d_print_expr_op>
 80068a6:	464a      	mov	r2, r9
 80068a8:	e70c      	b.n	80066c4 <d_maybe_print_fold_expression.isra.20+0x7c>
 80068aa:	1c4a      	adds	r2, r1, #1
 80068ac:	e723      	b.n	80066f6 <d_maybe_print_fold_expression.isra.20+0xae>
 80068ae:	1c4a      	adds	r2, r1, #1
 80068b0:	e741      	b.n	8006736 <d_maybe_print_fold_expression.isra.20+0xee>
 80068b2:	bf00      	nop
 80068b4:	080120d4 	.word	0x080120d4
 80068b8:	080120cc 	.word	0x080120cc
 80068bc:	08011fd8 	.word	0x08011fd8

080068c0 <d_demangle_callback.constprop.22>:
 80068c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80068c4:	b0e5      	sub	sp, #404	; 0x194
 80068c6:	f890 a000 	ldrb.w	sl, [r0]
 80068ca:	f1ba 0f5f 	cmp.w	sl, #95	; 0x5f
 80068ce:	af00      	add	r7, sp, #0
 80068d0:	4605      	mov	r5, r0
 80068d2:	4688      	mov	r8, r1
 80068d4:	4616      	mov	r6, r2
 80068d6:	f000 80f3 	beq.w	8006ac0 <d_demangle_callback.constprop.22+0x200>
 80068da:	2208      	movs	r2, #8
 80068dc:	49bb      	ldr	r1, [pc, #748]	; (8006bcc <d_demangle_callback.constprop.22+0x30c>)
 80068de:	4628      	mov	r0, r5
 80068e0:	f007 fbda 	bl	800e098 <strncmp>
 80068e4:	b948      	cbnz	r0, 80068fa <d_demangle_callback.constprop.22+0x3a>
 80068e6:	7a2b      	ldrb	r3, [r5, #8]
 80068e8:	2b2e      	cmp	r3, #46	; 0x2e
 80068ea:	f000 80d8 	beq.w	8006a9e <d_demangle_callback.constprop.22+0x1de>
 80068ee:	2b5f      	cmp	r3, #95	; 0x5f
 80068f0:	f000 80d5 	beq.w	8006a9e <d_demangle_callback.constprop.22+0x1de>
 80068f4:	2b24      	cmp	r3, #36	; 0x24
 80068f6:	f000 80d2 	beq.w	8006a9e <d_demangle_callback.constprop.22+0x1de>
 80068fa:	f04f 0900 	mov.w	r9, #0
 80068fe:	4628      	mov	r0, r5
 8006900:	f000 fa38 	bl	8006d74 <strlen>
 8006904:	0142      	lsls	r2, r0, #5
 8006906:	0083      	lsls	r3, r0, #2
 8006908:	3208      	adds	r2, #8
 800690a:	330a      	adds	r3, #10
 800690c:	ebad 0d02 	sub.w	sp, sp, r2
 8006910:	f023 0307 	bic.w	r3, r3, #7
 8006914:	2400      	movs	r4, #0
 8006916:	46eb      	mov	fp, sp
 8006918:	1829      	adds	r1, r5, r0
 800691a:	ebad 0d03 	sub.w	sp, sp, r3
 800691e:	2211      	movs	r2, #17
 8006920:	0043      	lsls	r3, r0, #1
 8006922:	f1b9 0f01 	cmp.w	r9, #1
 8006926:	f8c7 b01c 	str.w	fp, [r7, #28]
 800692a:	f8c7 d028 	str.w	sp, [r7, #40]	; 0x28
 800692e:	60fd      	str	r5, [r7, #12]
 8006930:	61bd      	str	r5, [r7, #24]
 8006932:	6338      	str	r0, [r7, #48]	; 0x30
 8006934:	6139      	str	r1, [r7, #16]
 8006936:	627b      	str	r3, [r7, #36]	; 0x24
 8006938:	617a      	str	r2, [r7, #20]
 800693a:	623c      	str	r4, [r7, #32]
 800693c:	62fc      	str	r4, [r7, #44]	; 0x2c
 800693e:	e9c7 440d 	strd	r4, r4, [r7, #52]	; 0x34
 8006942:	e9c7 440f 	strd	r4, r4, [r7, #60]	; 0x3c
 8006946:	647c      	str	r4, [r7, #68]	; 0x44
 8006948:	f000 80a0 	beq.w	8006a8c <d_demangle_callback.constprop.22+0x1cc>
 800694c:	f0c0 80bf 	bcc.w	8006ace <d_demangle_callback.constprop.22+0x20e>
 8006950:	7aea      	ldrb	r2, [r5, #11]
 8006952:	f1b9 0f02 	cmp.w	r9, #2
 8006956:	f105 0a0b 	add.w	sl, r5, #11
 800695a:	bf14      	ite	ne
 800695c:	f04f 0944 	movne.w	r9, #68	; 0x44
 8006960:	f04f 0943 	moveq.w	r9, #67	; 0x43
 8006964:	2a5f      	cmp	r2, #95	; 0x5f
 8006966:	f8c7 a018 	str.w	sl, [r7, #24]
 800696a:	f000 80b9 	beq.w	8006ae0 <d_demangle_callback.constprop.22+0x220>
 800696e:	4650      	mov	r0, sl
 8006970:	607b      	str	r3, [r7, #4]
 8006972:	f000 f9ff 	bl	8006d74 <strlen>
 8006976:	687b      	ldr	r3, [r7, #4]
 8006978:	2b00      	cmp	r3, #0
 800697a:	f340 8123 	ble.w	8006bc4 <d_demangle_callback.constprop.22+0x304>
 800697e:	2300      	movs	r3, #0
 8006980:	2201      	movs	r2, #1
 8006982:	f8cb 3004 	str.w	r3, [fp, #4]
 8006986:	623a      	str	r2, [r7, #32]
 8006988:	2800      	cmp	r0, #0
 800698a:	f000 811b 	beq.w	8006bc4 <d_demangle_callback.constprop.22+0x304>
 800698e:	e9cb a002 	strd	sl, r0, [fp, #8]
 8006992:	f88b 3000 	strb.w	r3, [fp]
 8006996:	4649      	mov	r1, r9
 8006998:	2300      	movs	r3, #0
 800699a:	465a      	mov	r2, fp
 800699c:	f107 000c 	add.w	r0, r7, #12
 80069a0:	f7f9 fc1e 	bl	80001e0 <d_make_comp>
 80069a4:	69bc      	ldr	r4, [r7, #24]
 80069a6:	4605      	mov	r5, r0
 80069a8:	4620      	mov	r0, r4
 80069aa:	f000 f9e3 	bl	8006d74 <strlen>
 80069ae:	1823      	adds	r3, r4, r0
 80069b0:	61bb      	str	r3, [r7, #24]
 80069b2:	f814 9000 	ldrb.w	r9, [r4, r0]
 80069b6:	f1b9 0f00 	cmp.w	r9, #0
 80069ba:	d16a      	bne.n	8006a92 <d_demangle_callback.constprop.22+0x1d2>
 80069bc:	2d00      	cmp	r5, #0
 80069be:	d068      	beq.n	8006a92 <d_demangle_callback.constprop.22+0x1d2>
 80069c0:	f107 0448 	add.w	r4, r7, #72	; 0x48
 80069c4:	462a      	mov	r2, r5
 80069c6:	f507 71be 	add.w	r1, r7, #380	; 0x17c
 80069ca:	f507 70c4 	add.w	r0, r7, #392	; 0x188
 80069ce:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
 80069d2:	f8c4 610c 	str.w	r6, [r4, #268]	; 0x10c
 80069d6:	f8c4 9100 	str.w	r9, [r4, #256]	; 0x100
 80069da:	f884 9104 	strb.w	r9, [r4, #260]	; 0x104
 80069de:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
 80069e2:	f8c4 9114 	str.w	r9, [r4, #276]	; 0x114
 80069e6:	f8c4 9120 	str.w	r9, [r4, #288]	; 0x120
 80069ea:	f8c4 9124 	str.w	r9, [r4, #292]	; 0x124
 80069ee:	f8c4 9118 	str.w	r9, [r4, #280]	; 0x118
 80069f2:	f8c4 911c 	str.w	r9, [r4, #284]	; 0x11c
 80069f6:	f8c4 9128 	str.w	r9, [r4, #296]	; 0x128
 80069fa:	f8c4 912c 	str.w	r9, [r4, #300]	; 0x12c
 80069fe:	f8c4 9130 	str.w	r9, [r4, #304]	; 0x130
 8006a02:	f8c4 9134 	str.w	r9, [r4, #308]	; 0x134
 8006a06:	f8c4 9138 	str.w	r9, [r4, #312]	; 0x138
 8006a0a:	f8c4 913c 	str.w	r9, [r4, #316]	; 0x13c
 8006a0e:	f8c4 9140 	str.w	r9, [r4, #320]	; 0x140
 8006a12:	f7f9 fc49 	bl	80002a8 <d_count_templates_scopes>
 8006a16:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 8006a1a:	f8d4 6140 	ldr.w	r6, [r4, #320]	; 0x140
 8006a1e:	f8c4 9144 	str.w	r9, [r4, #324]	; 0x144
 8006a22:	2b01      	cmp	r3, #1
 8006a24:	fb06 f603 	mul.w	r6, r6, r3
 8006a28:	461a      	mov	r2, r3
 8006a2a:	bfb8      	it	lt
 8006a2c:	2201      	movlt	r2, #1
 8006a2e:	00d2      	lsls	r2, r2, #3
 8006a30:	2e01      	cmp	r6, #1
 8006a32:	4633      	mov	r3, r6
 8006a34:	f102 0208 	add.w	r2, r2, #8
 8006a38:	bfb8      	it	lt
 8006a3a:	2301      	movlt	r3, #1
 8006a3c:	46e8      	mov	r8, sp
 8006a3e:	00db      	lsls	r3, r3, #3
 8006a40:	ebad 0d02 	sub.w	sp, sp, r2
 8006a44:	3308      	adds	r3, #8
 8006a46:	4669      	mov	r1, sp
 8006a48:	462a      	mov	r2, r5
 8006a4a:	ebad 0d03 	sub.w	sp, sp, r3
 8006a4e:	4620      	mov	r0, r4
 8006a50:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 8006a54:	2111      	movs	r1, #17
 8006a56:	f8c4 d138 	str.w	sp, [r4, #312]	; 0x138
 8006a5a:	f8c4 6140 	str.w	r6, [r4, #320]	; 0x140
 8006a5e:	f7fc f899 	bl	8002b94 <d_print_comp>
 8006a62:	f8d4 1100 	ldr.w	r1, [r4, #256]	; 0x100
 8006a66:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8006a6a:	f804 9001 	strb.w	r9, [r4, r1]
 8006a6e:	4620      	mov	r0, r4
 8006a70:	46c5      	mov	sp, r8
 8006a72:	f8d4 210c 	ldr.w	r2, [r4, #268]	; 0x10c
 8006a76:	4798      	blx	r3
 8006a78:	f8d4 0118 	ldr.w	r0, [r4, #280]	; 0x118
 8006a7c:	fab0 f080 	clz	r0, r0
 8006a80:	0940      	lsrs	r0, r0, #5
 8006a82:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8006a86:	46bd      	mov	sp, r7
 8006a88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a8c:	f1ba 0f5f 	cmp.w	sl, #95	; 0x5f
 8006a90:	d033      	beq.n	8006afa <d_demangle_callback.constprop.22+0x23a>
 8006a92:	2000      	movs	r0, #0
 8006a94:	f507 77ca 	add.w	r7, r7, #404	; 0x194
 8006a98:	46bd      	mov	sp, r7
 8006a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a9e:	7a6b      	ldrb	r3, [r5, #9]
 8006aa0:	2b44      	cmp	r3, #68	; 0x44
 8006aa2:	d002      	beq.n	8006aaa <d_demangle_callback.constprop.22+0x1ea>
 8006aa4:	2b49      	cmp	r3, #73	; 0x49
 8006aa6:	f47f af28 	bne.w	80068fa <d_demangle_callback.constprop.22+0x3a>
 8006aaa:	7aaa      	ldrb	r2, [r5, #10]
 8006aac:	2a5f      	cmp	r2, #95	; 0x5f
 8006aae:	f47f af24 	bne.w	80068fa <d_demangle_callback.constprop.22+0x3a>
 8006ab2:	2b49      	cmp	r3, #73	; 0x49
 8006ab4:	bf14      	ite	ne
 8006ab6:	f04f 0903 	movne.w	r9, #3
 8006aba:	f04f 0902 	moveq.w	r9, #2
 8006abe:	e71e      	b.n	80068fe <d_demangle_callback.constprop.22+0x3e>
 8006ac0:	7843      	ldrb	r3, [r0, #1]
 8006ac2:	2b5a      	cmp	r3, #90	; 0x5a
 8006ac4:	f47f af09 	bne.w	80068da <d_demangle_callback.constprop.22+0x1a>
 8006ac8:	f04f 0901 	mov.w	r9, #1
 8006acc:	e717      	b.n	80068fe <d_demangle_callback.constprop.22+0x3e>
 8006ace:	f107 000c 	add.w	r0, r7, #12
 8006ad2:	f7fa fe05 	bl	80016e0 <d_type>
 8006ad6:	69bb      	ldr	r3, [r7, #24]
 8006ad8:	4605      	mov	r5, r0
 8006ada:	f893 9000 	ldrb.w	r9, [r3]
 8006ade:	e76a      	b.n	80069b6 <d_demangle_callback.constprop.22+0xf6>
 8006ae0:	7b2a      	ldrb	r2, [r5, #12]
 8006ae2:	2a5a      	cmp	r2, #90	; 0x5a
 8006ae4:	f47f af43 	bne.w	800696e <d_demangle_callback.constprop.22+0xae>
 8006ae8:	350d      	adds	r5, #13
 8006aea:	4621      	mov	r1, r4
 8006aec:	f107 000c 	add.w	r0, r7, #12
 8006af0:	61bd      	str	r5, [r7, #24]
 8006af2:	f7fb fd37 	bl	8002564 <d_encoding>
 8006af6:	4683      	mov	fp, r0
 8006af8:	e74d      	b.n	8006996 <d_demangle_callback.constprop.22+0xd6>
 8006afa:	786b      	ldrb	r3, [r5, #1]
 8006afc:	2b5a      	cmp	r3, #90	; 0x5a
 8006afe:	d1c8      	bne.n	8006a92 <d_demangle_callback.constprop.22+0x1d2>
 8006b00:	3502      	adds	r5, #2
 8006b02:	4649      	mov	r1, r9
 8006b04:	f107 000c 	add.w	r0, r7, #12
 8006b08:	61bd      	str	r5, [r7, #24]
 8006b0a:	f7fb fd2b 	bl	8002564 <d_encoding>
 8006b0e:	697b      	ldr	r3, [r7, #20]
 8006b10:	07db      	lsls	r3, r3, #31
 8006b12:	4605      	mov	r5, r0
 8006b14:	d552      	bpl.n	8006bbc <d_demangle_callback.constprop.22+0x2fc>
 8006b16:	69b8      	ldr	r0, [r7, #24]
 8006b18:	f890 9000 	ldrb.w	r9, [r0]
 8006b1c:	f1b9 0f2e 	cmp.w	r9, #46	; 0x2e
 8006b20:	f47f af49 	bne.w	80069b6 <d_demangle_callback.constprop.22+0xf6>
 8006b24:	7843      	ldrb	r3, [r0, #1]
 8006b26:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8006b2a:	2a19      	cmp	r2, #25
 8006b2c:	d93a      	bls.n	8006ba4 <d_demangle_callback.constprop.22+0x2e4>
 8006b2e:	2b5f      	cmp	r3, #95	; 0x5f
 8006b30:	d038      	beq.n	8006ba4 <d_demangle_callback.constprop.22+0x2e4>
 8006b32:	3b30      	subs	r3, #48	; 0x30
 8006b34:	2b09      	cmp	r3, #9
 8006b36:	d841      	bhi.n	8006bbc <d_demangle_callback.constprop.22+0x2fc>
 8006b38:	7803      	ldrb	r3, [r0, #0]
 8006b3a:	4602      	mov	r2, r0
 8006b3c:	2b2e      	cmp	r3, #46	; 0x2e
 8006b3e:	d112      	bne.n	8006b66 <d_demangle_callback.constprop.22+0x2a6>
 8006b40:	7853      	ldrb	r3, [r2, #1]
 8006b42:	3b30      	subs	r3, #48	; 0x30
 8006b44:	2b09      	cmp	r3, #9
 8006b46:	d80e      	bhi.n	8006b66 <d_demangle_callback.constprop.22+0x2a6>
 8006b48:	7893      	ldrb	r3, [r2, #2]
 8006b4a:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8006b4e:	2909      	cmp	r1, #9
 8006b50:	f102 0202 	add.w	r2, r2, #2
 8006b54:	d8f2      	bhi.n	8006b3c <d_demangle_callback.constprop.22+0x27c>
 8006b56:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8006b5a:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8006b5e:	2909      	cmp	r1, #9
 8006b60:	d9f9      	bls.n	8006b56 <d_demangle_callback.constprop.22+0x296>
 8006b62:	2b2e      	cmp	r3, #46	; 0x2e
 8006b64:	d0ec      	beq.n	8006b40 <d_demangle_callback.constprop.22+0x280>
 8006b66:	e9d7 1308 	ldrd	r1, r3, [r7, #32]
 8006b6a:	4299      	cmp	r1, r3
 8006b6c:	61ba      	str	r2, [r7, #24]
 8006b6e:	da17      	bge.n	8006ba0 <d_demangle_callback.constprop.22+0x2e0>
 8006b70:	f8d7 e01c 	ldr.w	lr, [r7, #28]
 8006b74:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 8006b78:	eb0e 030c 	add.w	r3, lr, ip
 8006b7c:	3101      	adds	r1, #1
 8006b7e:	1a12      	subs	r2, r2, r0
 8006b80:	605c      	str	r4, [r3, #4]
 8006b82:	6239      	str	r1, [r7, #32]
 8006b84:	d00c      	beq.n	8006ba0 <d_demangle_callback.constprop.22+0x2e0>
 8006b86:	605c      	str	r4, [r3, #4]
 8006b88:	f80e 400c 	strb.w	r4, [lr, ip]
 8006b8c:	e9c3 0202 	strd	r0, r2, [r3, #8]
 8006b90:	462a      	mov	r2, r5
 8006b92:	214d      	movs	r1, #77	; 0x4d
 8006b94:	f107 000c 	add.w	r0, r7, #12
 8006b98:	f7f9 fb22 	bl	80001e0 <d_make_comp>
 8006b9c:	4605      	mov	r5, r0
 8006b9e:	e7ba      	b.n	8006b16 <d_demangle_callback.constprop.22+0x256>
 8006ba0:	2300      	movs	r3, #0
 8006ba2:	e7f5      	b.n	8006b90 <d_demangle_callback.constprop.22+0x2d0>
 8006ba4:	1c81      	adds	r1, r0, #2
 8006ba6:	460a      	mov	r2, r1
 8006ba8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006bac:	f1a3 0c61 	sub.w	ip, r3, #97	; 0x61
 8006bb0:	f1bc 0f19 	cmp.w	ip, #25
 8006bb4:	d9f7      	bls.n	8006ba6 <d_demangle_callback.constprop.22+0x2e6>
 8006bb6:	2b5f      	cmp	r3, #95	; 0x5f
 8006bb8:	d0f5      	beq.n	8006ba6 <d_demangle_callback.constprop.22+0x2e6>
 8006bba:	e7bf      	b.n	8006b3c <d_demangle_callback.constprop.22+0x27c>
 8006bbc:	69bb      	ldr	r3, [r7, #24]
 8006bbe:	f893 9000 	ldrb.w	r9, [r3]
 8006bc2:	e6f8      	b.n	80069b6 <d_demangle_callback.constprop.22+0xf6>
 8006bc4:	f04f 0b00 	mov.w	fp, #0
 8006bc8:	e6e5      	b.n	8006996 <d_demangle_callback.constprop.22+0xd6>
 8006bca:	bf00      	nop
 8006bcc:	08011d64 	.word	0x08011d64

08006bd0 <__cxa_demangle>:
 8006bd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006bd4:	b084      	sub	sp, #16
 8006bd6:	b380      	cbz	r0, 8006c3a <__cxa_demangle+0x6a>
 8006bd8:	b101      	cbz	r1, 8006bdc <__cxa_demangle+0xc>
 8006bda:	b372      	cbz	r2, 8006c3a <__cxa_demangle+0x6a>
 8006bdc:	2400      	movs	r4, #0
 8006bde:	4617      	mov	r7, r2
 8006be0:	460e      	mov	r6, r1
 8006be2:	466a      	mov	r2, sp
 8006be4:	492b      	ldr	r1, [pc, #172]	; (8006c94 <__cxa_demangle+0xc4>)
 8006be6:	461d      	mov	r5, r3
 8006be8:	e9cd 4400 	strd	r4, r4, [sp]
 8006bec:	e9cd 4402 	strd	r4, r4, [sp, #8]
 8006bf0:	f7ff fe66 	bl	80068c0 <d_demangle_callback.constprop.22>
 8006bf4:	2800      	cmp	r0, #0
 8006bf6:	d047      	beq.n	8006c88 <__cxa_demangle+0xb8>
 8006bf8:	9b03      	ldr	r3, [sp, #12]
 8006bfa:	9c00      	ldr	r4, [sp, #0]
 8006bfc:	b9ab      	cbnz	r3, 8006c2a <__cxa_demangle+0x5a>
 8006bfe:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8006c02:	b36c      	cbz	r4, 8006c60 <__cxa_demangle+0x90>
 8006c04:	b1b6      	cbz	r6, 8006c34 <__cxa_demangle+0x64>
 8006c06:	4620      	mov	r0, r4
 8006c08:	f000 f8b4 	bl	8006d74 <strlen>
 8006c0c:	683b      	ldr	r3, [r7, #0]
 8006c0e:	4298      	cmp	r0, r3
 8006c10:	d31c      	bcc.n	8006c4c <__cxa_demangle+0x7c>
 8006c12:	4630      	mov	r0, r6
 8006c14:	f006 fd60 	bl	800d6d8 <free>
 8006c18:	f8c7 8000 	str.w	r8, [r7]
 8006c1c:	b195      	cbz	r5, 8006c44 <__cxa_demangle+0x74>
 8006c1e:	2300      	movs	r3, #0
 8006c20:	4620      	mov	r0, r4
 8006c22:	602b      	str	r3, [r5, #0]
 8006c24:	b004      	add	sp, #16
 8006c26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006c2a:	b334      	cbz	r4, 8006c7a <__cxa_demangle+0xaa>
 8006c2c:	f04f 0801 	mov.w	r8, #1
 8006c30:	2e00      	cmp	r6, #0
 8006c32:	d1e8      	bne.n	8006c06 <__cxa_demangle+0x36>
 8006c34:	2f00      	cmp	r7, #0
 8006c36:	d1ef      	bne.n	8006c18 <__cxa_demangle+0x48>
 8006c38:	e7f0      	b.n	8006c1c <__cxa_demangle+0x4c>
 8006c3a:	b113      	cbz	r3, 8006c42 <__cxa_demangle+0x72>
 8006c3c:	f06f 0202 	mvn.w	r2, #2
 8006c40:	601a      	str	r2, [r3, #0]
 8006c42:	2400      	movs	r4, #0
 8006c44:	4620      	mov	r0, r4
 8006c46:	b004      	add	sp, #16
 8006c48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006c4c:	1c42      	adds	r2, r0, #1
 8006c4e:	4621      	mov	r1, r4
 8006c50:	4630      	mov	r0, r6
 8006c52:	f006 ff8e 	bl	800db72 <memcpy>
 8006c56:	4620      	mov	r0, r4
 8006c58:	f006 fd3e 	bl	800d6d8 <free>
 8006c5c:	4634      	mov	r4, r6
 8006c5e:	e7dd      	b.n	8006c1c <__cxa_demangle+0x4c>
 8006c60:	2d00      	cmp	r5, #0
 8006c62:	d0ee      	beq.n	8006c42 <__cxa_demangle+0x72>
 8006c64:	f1b8 0f01 	cmp.w	r8, #1
 8006c68:	d009      	beq.n	8006c7e <__cxa_demangle+0xae>
 8006c6a:	2400      	movs	r4, #0
 8006c6c:	f06f 0301 	mvn.w	r3, #1
 8006c70:	4620      	mov	r0, r4
 8006c72:	602b      	str	r3, [r5, #0]
 8006c74:	b004      	add	sp, #16
 8006c76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006c7a:	2d00      	cmp	r5, #0
 8006c7c:	d0e1      	beq.n	8006c42 <__cxa_demangle+0x72>
 8006c7e:	f04f 33ff 	mov.w	r3, #4294967295
 8006c82:	602b      	str	r3, [r5, #0]
 8006c84:	2400      	movs	r4, #0
 8006c86:	e7dd      	b.n	8006c44 <__cxa_demangle+0x74>
 8006c88:	9800      	ldr	r0, [sp, #0]
 8006c8a:	f006 fd25 	bl	800d6d8 <free>
 8006c8e:	2d00      	cmp	r5, #0
 8006c90:	d1eb      	bne.n	8006c6a <__cxa_demangle+0x9a>
 8006c92:	e7d6      	b.n	8006c42 <__cxa_demangle+0x72>
 8006c94:	08000859 	.word	0x08000859

08006c98 <__gcclibcxx_demangle_callback>:
 8006c98:	b160      	cbz	r0, 8006cb4 <__gcclibcxx_demangle_callback+0x1c>
 8006c9a:	b508      	push	{r3, lr}
 8006c9c:	b139      	cbz	r1, 8006cae <__gcclibcxx_demangle_callback+0x16>
 8006c9e:	f7ff fe0f 	bl	80068c0 <d_demangle_callback.constprop.22>
 8006ca2:	2800      	cmp	r0, #0
 8006ca4:	bf0c      	ite	eq
 8006ca6:	f06f 0001 	mvneq.w	r0, #1
 8006caa:	2000      	movne	r0, #0
 8006cac:	bd08      	pop	{r3, pc}
 8006cae:	f06f 0002 	mvn.w	r0, #2
 8006cb2:	bd08      	pop	{r3, pc}
 8006cb4:	f06f 0002 	mvn.w	r0, #2
 8006cb8:	4770      	bx	lr
 8006cba:	bf00      	nop
 8006cbc:	0000      	movs	r0, r0
	...

08006cc0 <memchr>:
 8006cc0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006cc4:	2a10      	cmp	r2, #16
 8006cc6:	db2b      	blt.n	8006d20 <memchr+0x60>
 8006cc8:	f010 0f07 	tst.w	r0, #7
 8006ccc:	d008      	beq.n	8006ce0 <memchr+0x20>
 8006cce:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006cd2:	3a01      	subs	r2, #1
 8006cd4:	428b      	cmp	r3, r1
 8006cd6:	d02d      	beq.n	8006d34 <memchr+0x74>
 8006cd8:	f010 0f07 	tst.w	r0, #7
 8006cdc:	b342      	cbz	r2, 8006d30 <memchr+0x70>
 8006cde:	d1f6      	bne.n	8006cce <memchr+0xe>
 8006ce0:	b4f0      	push	{r4, r5, r6, r7}
 8006ce2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8006ce6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8006cea:	f022 0407 	bic.w	r4, r2, #7
 8006cee:	f07f 0700 	mvns.w	r7, #0
 8006cf2:	2300      	movs	r3, #0
 8006cf4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8006cf8:	3c08      	subs	r4, #8
 8006cfa:	ea85 0501 	eor.w	r5, r5, r1
 8006cfe:	ea86 0601 	eor.w	r6, r6, r1
 8006d02:	fa85 f547 	uadd8	r5, r5, r7
 8006d06:	faa3 f587 	sel	r5, r3, r7
 8006d0a:	fa86 f647 	uadd8	r6, r6, r7
 8006d0e:	faa5 f687 	sel	r6, r5, r7
 8006d12:	b98e      	cbnz	r6, 8006d38 <memchr+0x78>
 8006d14:	d1ee      	bne.n	8006cf4 <memchr+0x34>
 8006d16:	bcf0      	pop	{r4, r5, r6, r7}
 8006d18:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8006d1c:	f002 0207 	and.w	r2, r2, #7
 8006d20:	b132      	cbz	r2, 8006d30 <memchr+0x70>
 8006d22:	f810 3b01 	ldrb.w	r3, [r0], #1
 8006d26:	3a01      	subs	r2, #1
 8006d28:	ea83 0301 	eor.w	r3, r3, r1
 8006d2c:	b113      	cbz	r3, 8006d34 <memchr+0x74>
 8006d2e:	d1f8      	bne.n	8006d22 <memchr+0x62>
 8006d30:	2000      	movs	r0, #0
 8006d32:	4770      	bx	lr
 8006d34:	3801      	subs	r0, #1
 8006d36:	4770      	bx	lr
 8006d38:	2d00      	cmp	r5, #0
 8006d3a:	bf06      	itte	eq
 8006d3c:	4635      	moveq	r5, r6
 8006d3e:	3803      	subeq	r0, #3
 8006d40:	3807      	subne	r0, #7
 8006d42:	f015 0f01 	tst.w	r5, #1
 8006d46:	d107      	bne.n	8006d58 <memchr+0x98>
 8006d48:	3001      	adds	r0, #1
 8006d4a:	f415 7f80 	tst.w	r5, #256	; 0x100
 8006d4e:	bf02      	ittt	eq
 8006d50:	3001      	addeq	r0, #1
 8006d52:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8006d56:	3001      	addeq	r0, #1
 8006d58:	bcf0      	pop	{r4, r5, r6, r7}
 8006d5a:	3801      	subs	r0, #1
 8006d5c:	4770      	bx	lr
 8006d5e:	bf00      	nop

08006d60 <strcmp>:
 8006d60:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006d64:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006d68:	2a01      	cmp	r2, #1
 8006d6a:	bf28      	it	cs
 8006d6c:	429a      	cmpcs	r2, r3
 8006d6e:	d0f7      	beq.n	8006d60 <strcmp>
 8006d70:	1ad0      	subs	r0, r2, r3
 8006d72:	4770      	bx	lr

08006d74 <strlen>:
 8006d74:	4603      	mov	r3, r0
 8006d76:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006d7a:	2a00      	cmp	r2, #0
 8006d7c:	d1fb      	bne.n	8006d76 <strlen+0x2>
 8006d7e:	1a18      	subs	r0, r3, r0
 8006d80:	3801      	subs	r0, #1
 8006d82:	4770      	bx	lr

08006d84 <__aeabi_drsub>:
 8006d84:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8006d88:	e002      	b.n	8006d90 <__adddf3>
 8006d8a:	bf00      	nop

08006d8c <__aeabi_dsub>:
 8006d8c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08006d90 <__adddf3>:
 8006d90:	b530      	push	{r4, r5, lr}
 8006d92:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8006d96:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8006d9a:	ea94 0f05 	teq	r4, r5
 8006d9e:	bf08      	it	eq
 8006da0:	ea90 0f02 	teqeq	r0, r2
 8006da4:	bf1f      	itttt	ne
 8006da6:	ea54 0c00 	orrsne.w	ip, r4, r0
 8006daa:	ea55 0c02 	orrsne.w	ip, r5, r2
 8006dae:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8006db2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8006db6:	f000 80e2 	beq.w	8006f7e <__adddf3+0x1ee>
 8006dba:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8006dbe:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8006dc2:	bfb8      	it	lt
 8006dc4:	426d      	neglt	r5, r5
 8006dc6:	dd0c      	ble.n	8006de2 <__adddf3+0x52>
 8006dc8:	442c      	add	r4, r5
 8006dca:	ea80 0202 	eor.w	r2, r0, r2
 8006dce:	ea81 0303 	eor.w	r3, r1, r3
 8006dd2:	ea82 0000 	eor.w	r0, r2, r0
 8006dd6:	ea83 0101 	eor.w	r1, r3, r1
 8006dda:	ea80 0202 	eor.w	r2, r0, r2
 8006dde:	ea81 0303 	eor.w	r3, r1, r3
 8006de2:	2d36      	cmp	r5, #54	; 0x36
 8006de4:	bf88      	it	hi
 8006de6:	bd30      	pophi	{r4, r5, pc}
 8006de8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8006dec:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8006df0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8006df4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8006df8:	d002      	beq.n	8006e00 <__adddf3+0x70>
 8006dfa:	4240      	negs	r0, r0
 8006dfc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8006e00:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8006e04:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8006e08:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8006e0c:	d002      	beq.n	8006e14 <__adddf3+0x84>
 8006e0e:	4252      	negs	r2, r2
 8006e10:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8006e14:	ea94 0f05 	teq	r4, r5
 8006e18:	f000 80a7 	beq.w	8006f6a <__adddf3+0x1da>
 8006e1c:	f1a4 0401 	sub.w	r4, r4, #1
 8006e20:	f1d5 0e20 	rsbs	lr, r5, #32
 8006e24:	db0d      	blt.n	8006e42 <__adddf3+0xb2>
 8006e26:	fa02 fc0e 	lsl.w	ip, r2, lr
 8006e2a:	fa22 f205 	lsr.w	r2, r2, r5
 8006e2e:	1880      	adds	r0, r0, r2
 8006e30:	f141 0100 	adc.w	r1, r1, #0
 8006e34:	fa03 f20e 	lsl.w	r2, r3, lr
 8006e38:	1880      	adds	r0, r0, r2
 8006e3a:	fa43 f305 	asr.w	r3, r3, r5
 8006e3e:	4159      	adcs	r1, r3
 8006e40:	e00e      	b.n	8006e60 <__adddf3+0xd0>
 8006e42:	f1a5 0520 	sub.w	r5, r5, #32
 8006e46:	f10e 0e20 	add.w	lr, lr, #32
 8006e4a:	2a01      	cmp	r2, #1
 8006e4c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8006e50:	bf28      	it	cs
 8006e52:	f04c 0c02 	orrcs.w	ip, ip, #2
 8006e56:	fa43 f305 	asr.w	r3, r3, r5
 8006e5a:	18c0      	adds	r0, r0, r3
 8006e5c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8006e60:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8006e64:	d507      	bpl.n	8006e76 <__adddf3+0xe6>
 8006e66:	f04f 0e00 	mov.w	lr, #0
 8006e6a:	f1dc 0c00 	rsbs	ip, ip, #0
 8006e6e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8006e72:	eb6e 0101 	sbc.w	r1, lr, r1
 8006e76:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8006e7a:	d31b      	bcc.n	8006eb4 <__adddf3+0x124>
 8006e7c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8006e80:	d30c      	bcc.n	8006e9c <__adddf3+0x10c>
 8006e82:	0849      	lsrs	r1, r1, #1
 8006e84:	ea5f 0030 	movs.w	r0, r0, rrx
 8006e88:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8006e8c:	f104 0401 	add.w	r4, r4, #1
 8006e90:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8006e94:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8006e98:	f080 809a 	bcs.w	8006fd0 <__adddf3+0x240>
 8006e9c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8006ea0:	bf08      	it	eq
 8006ea2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8006ea6:	f150 0000 	adcs.w	r0, r0, #0
 8006eaa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8006eae:	ea41 0105 	orr.w	r1, r1, r5
 8006eb2:	bd30      	pop	{r4, r5, pc}
 8006eb4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8006eb8:	4140      	adcs	r0, r0
 8006eba:	eb41 0101 	adc.w	r1, r1, r1
 8006ebe:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8006ec2:	f1a4 0401 	sub.w	r4, r4, #1
 8006ec6:	d1e9      	bne.n	8006e9c <__adddf3+0x10c>
 8006ec8:	f091 0f00 	teq	r1, #0
 8006ecc:	bf04      	itt	eq
 8006ece:	4601      	moveq	r1, r0
 8006ed0:	2000      	moveq	r0, #0
 8006ed2:	fab1 f381 	clz	r3, r1
 8006ed6:	bf08      	it	eq
 8006ed8:	3320      	addeq	r3, #32
 8006eda:	f1a3 030b 	sub.w	r3, r3, #11
 8006ede:	f1b3 0220 	subs.w	r2, r3, #32
 8006ee2:	da0c      	bge.n	8006efe <__adddf3+0x16e>
 8006ee4:	320c      	adds	r2, #12
 8006ee6:	dd08      	ble.n	8006efa <__adddf3+0x16a>
 8006ee8:	f102 0c14 	add.w	ip, r2, #20
 8006eec:	f1c2 020c 	rsb	r2, r2, #12
 8006ef0:	fa01 f00c 	lsl.w	r0, r1, ip
 8006ef4:	fa21 f102 	lsr.w	r1, r1, r2
 8006ef8:	e00c      	b.n	8006f14 <__adddf3+0x184>
 8006efa:	f102 0214 	add.w	r2, r2, #20
 8006efe:	bfd8      	it	le
 8006f00:	f1c2 0c20 	rsble	ip, r2, #32
 8006f04:	fa01 f102 	lsl.w	r1, r1, r2
 8006f08:	fa20 fc0c 	lsr.w	ip, r0, ip
 8006f0c:	bfdc      	itt	le
 8006f0e:	ea41 010c 	orrle.w	r1, r1, ip
 8006f12:	4090      	lslle	r0, r2
 8006f14:	1ae4      	subs	r4, r4, r3
 8006f16:	bfa2      	ittt	ge
 8006f18:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8006f1c:	4329      	orrge	r1, r5
 8006f1e:	bd30      	popge	{r4, r5, pc}
 8006f20:	ea6f 0404 	mvn.w	r4, r4
 8006f24:	3c1f      	subs	r4, #31
 8006f26:	da1c      	bge.n	8006f62 <__adddf3+0x1d2>
 8006f28:	340c      	adds	r4, #12
 8006f2a:	dc0e      	bgt.n	8006f4a <__adddf3+0x1ba>
 8006f2c:	f104 0414 	add.w	r4, r4, #20
 8006f30:	f1c4 0220 	rsb	r2, r4, #32
 8006f34:	fa20 f004 	lsr.w	r0, r0, r4
 8006f38:	fa01 f302 	lsl.w	r3, r1, r2
 8006f3c:	ea40 0003 	orr.w	r0, r0, r3
 8006f40:	fa21 f304 	lsr.w	r3, r1, r4
 8006f44:	ea45 0103 	orr.w	r1, r5, r3
 8006f48:	bd30      	pop	{r4, r5, pc}
 8006f4a:	f1c4 040c 	rsb	r4, r4, #12
 8006f4e:	f1c4 0220 	rsb	r2, r4, #32
 8006f52:	fa20 f002 	lsr.w	r0, r0, r2
 8006f56:	fa01 f304 	lsl.w	r3, r1, r4
 8006f5a:	ea40 0003 	orr.w	r0, r0, r3
 8006f5e:	4629      	mov	r1, r5
 8006f60:	bd30      	pop	{r4, r5, pc}
 8006f62:	fa21 f004 	lsr.w	r0, r1, r4
 8006f66:	4629      	mov	r1, r5
 8006f68:	bd30      	pop	{r4, r5, pc}
 8006f6a:	f094 0f00 	teq	r4, #0
 8006f6e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8006f72:	bf06      	itte	eq
 8006f74:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8006f78:	3401      	addeq	r4, #1
 8006f7a:	3d01      	subne	r5, #1
 8006f7c:	e74e      	b.n	8006e1c <__adddf3+0x8c>
 8006f7e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8006f82:	bf18      	it	ne
 8006f84:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8006f88:	d029      	beq.n	8006fde <__adddf3+0x24e>
 8006f8a:	ea94 0f05 	teq	r4, r5
 8006f8e:	bf08      	it	eq
 8006f90:	ea90 0f02 	teqeq	r0, r2
 8006f94:	d005      	beq.n	8006fa2 <__adddf3+0x212>
 8006f96:	ea54 0c00 	orrs.w	ip, r4, r0
 8006f9a:	bf04      	itt	eq
 8006f9c:	4619      	moveq	r1, r3
 8006f9e:	4610      	moveq	r0, r2
 8006fa0:	bd30      	pop	{r4, r5, pc}
 8006fa2:	ea91 0f03 	teq	r1, r3
 8006fa6:	bf1e      	ittt	ne
 8006fa8:	2100      	movne	r1, #0
 8006faa:	2000      	movne	r0, #0
 8006fac:	bd30      	popne	{r4, r5, pc}
 8006fae:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8006fb2:	d105      	bne.n	8006fc0 <__adddf3+0x230>
 8006fb4:	0040      	lsls	r0, r0, #1
 8006fb6:	4149      	adcs	r1, r1
 8006fb8:	bf28      	it	cs
 8006fba:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8006fbe:	bd30      	pop	{r4, r5, pc}
 8006fc0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8006fc4:	bf3c      	itt	cc
 8006fc6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8006fca:	bd30      	popcc	{r4, r5, pc}
 8006fcc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8006fd0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8006fd4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006fd8:	f04f 0000 	mov.w	r0, #0
 8006fdc:	bd30      	pop	{r4, r5, pc}
 8006fde:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8006fe2:	bf1a      	itte	ne
 8006fe4:	4619      	movne	r1, r3
 8006fe6:	4610      	movne	r0, r2
 8006fe8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8006fec:	bf1c      	itt	ne
 8006fee:	460b      	movne	r3, r1
 8006ff0:	4602      	movne	r2, r0
 8006ff2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8006ff6:	bf06      	itte	eq
 8006ff8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8006ffc:	ea91 0f03 	teqeq	r1, r3
 8007000:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8007004:	bd30      	pop	{r4, r5, pc}
 8007006:	bf00      	nop

08007008 <__aeabi_ui2d>:
 8007008:	f090 0f00 	teq	r0, #0
 800700c:	bf04      	itt	eq
 800700e:	2100      	moveq	r1, #0
 8007010:	4770      	bxeq	lr
 8007012:	b530      	push	{r4, r5, lr}
 8007014:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007018:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800701c:	f04f 0500 	mov.w	r5, #0
 8007020:	f04f 0100 	mov.w	r1, #0
 8007024:	e750      	b.n	8006ec8 <__adddf3+0x138>
 8007026:	bf00      	nop

08007028 <__aeabi_i2d>:
 8007028:	f090 0f00 	teq	r0, #0
 800702c:	bf04      	itt	eq
 800702e:	2100      	moveq	r1, #0
 8007030:	4770      	bxeq	lr
 8007032:	b530      	push	{r4, r5, lr}
 8007034:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007038:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800703c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8007040:	bf48      	it	mi
 8007042:	4240      	negmi	r0, r0
 8007044:	f04f 0100 	mov.w	r1, #0
 8007048:	e73e      	b.n	8006ec8 <__adddf3+0x138>
 800704a:	bf00      	nop

0800704c <__aeabi_f2d>:
 800704c:	0042      	lsls	r2, r0, #1
 800704e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8007052:	ea4f 0131 	mov.w	r1, r1, rrx
 8007056:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800705a:	bf1f      	itttt	ne
 800705c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8007060:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8007064:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8007068:	4770      	bxne	lr
 800706a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800706e:	bf08      	it	eq
 8007070:	4770      	bxeq	lr
 8007072:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8007076:	bf04      	itt	eq
 8007078:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800707c:	4770      	bxeq	lr
 800707e:	b530      	push	{r4, r5, lr}
 8007080:	f44f 7460 	mov.w	r4, #896	; 0x380
 8007084:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007088:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800708c:	e71c      	b.n	8006ec8 <__adddf3+0x138>
 800708e:	bf00      	nop

08007090 <__aeabi_ul2d>:
 8007090:	ea50 0201 	orrs.w	r2, r0, r1
 8007094:	bf08      	it	eq
 8007096:	4770      	bxeq	lr
 8007098:	b530      	push	{r4, r5, lr}
 800709a:	f04f 0500 	mov.w	r5, #0
 800709e:	e00a      	b.n	80070b6 <__aeabi_l2d+0x16>

080070a0 <__aeabi_l2d>:
 80070a0:	ea50 0201 	orrs.w	r2, r0, r1
 80070a4:	bf08      	it	eq
 80070a6:	4770      	bxeq	lr
 80070a8:	b530      	push	{r4, r5, lr}
 80070aa:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80070ae:	d502      	bpl.n	80070b6 <__aeabi_l2d+0x16>
 80070b0:	4240      	negs	r0, r0
 80070b2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80070b6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80070ba:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80070be:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80070c2:	f43f aed8 	beq.w	8006e76 <__adddf3+0xe6>
 80070c6:	f04f 0203 	mov.w	r2, #3
 80070ca:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80070ce:	bf18      	it	ne
 80070d0:	3203      	addne	r2, #3
 80070d2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80070d6:	bf18      	it	ne
 80070d8:	3203      	addne	r2, #3
 80070da:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80070de:	f1c2 0320 	rsb	r3, r2, #32
 80070e2:	fa00 fc03 	lsl.w	ip, r0, r3
 80070e6:	fa20 f002 	lsr.w	r0, r0, r2
 80070ea:	fa01 fe03 	lsl.w	lr, r1, r3
 80070ee:	ea40 000e 	orr.w	r0, r0, lr
 80070f2:	fa21 f102 	lsr.w	r1, r1, r2
 80070f6:	4414      	add	r4, r2
 80070f8:	e6bd      	b.n	8006e76 <__adddf3+0xe6>
 80070fa:	bf00      	nop

080070fc <__aeabi_dmul>:
 80070fc:	b570      	push	{r4, r5, r6, lr}
 80070fe:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007102:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8007106:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800710a:	bf1d      	ittte	ne
 800710c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8007110:	ea94 0f0c 	teqne	r4, ip
 8007114:	ea95 0f0c 	teqne	r5, ip
 8007118:	f000 f8de 	bleq	80072d8 <__aeabi_dmul+0x1dc>
 800711c:	442c      	add	r4, r5
 800711e:	ea81 0603 	eor.w	r6, r1, r3
 8007122:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8007126:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800712a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800712e:	bf18      	it	ne
 8007130:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8007134:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007138:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800713c:	d038      	beq.n	80071b0 <__aeabi_dmul+0xb4>
 800713e:	fba0 ce02 	umull	ip, lr, r0, r2
 8007142:	f04f 0500 	mov.w	r5, #0
 8007146:	fbe1 e502 	umlal	lr, r5, r1, r2
 800714a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800714e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8007152:	f04f 0600 	mov.w	r6, #0
 8007156:	fbe1 5603 	umlal	r5, r6, r1, r3
 800715a:	f09c 0f00 	teq	ip, #0
 800715e:	bf18      	it	ne
 8007160:	f04e 0e01 	orrne.w	lr, lr, #1
 8007164:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8007168:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800716c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8007170:	d204      	bcs.n	800717c <__aeabi_dmul+0x80>
 8007172:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8007176:	416d      	adcs	r5, r5
 8007178:	eb46 0606 	adc.w	r6, r6, r6
 800717c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8007180:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8007184:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8007188:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 800718c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8007190:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8007194:	bf88      	it	hi
 8007196:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800719a:	d81e      	bhi.n	80071da <__aeabi_dmul+0xde>
 800719c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80071a0:	bf08      	it	eq
 80071a2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80071a6:	f150 0000 	adcs.w	r0, r0, #0
 80071aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80071ae:	bd70      	pop	{r4, r5, r6, pc}
 80071b0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80071b4:	ea46 0101 	orr.w	r1, r6, r1
 80071b8:	ea40 0002 	orr.w	r0, r0, r2
 80071bc:	ea81 0103 	eor.w	r1, r1, r3
 80071c0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80071c4:	bfc2      	ittt	gt
 80071c6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80071ca:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80071ce:	bd70      	popgt	{r4, r5, r6, pc}
 80071d0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80071d4:	f04f 0e00 	mov.w	lr, #0
 80071d8:	3c01      	subs	r4, #1
 80071da:	f300 80ab 	bgt.w	8007334 <__aeabi_dmul+0x238>
 80071de:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80071e2:	bfde      	ittt	le
 80071e4:	2000      	movle	r0, #0
 80071e6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80071ea:	bd70      	pople	{r4, r5, r6, pc}
 80071ec:	f1c4 0400 	rsb	r4, r4, #0
 80071f0:	3c20      	subs	r4, #32
 80071f2:	da35      	bge.n	8007260 <__aeabi_dmul+0x164>
 80071f4:	340c      	adds	r4, #12
 80071f6:	dc1b      	bgt.n	8007230 <__aeabi_dmul+0x134>
 80071f8:	f104 0414 	add.w	r4, r4, #20
 80071fc:	f1c4 0520 	rsb	r5, r4, #32
 8007200:	fa00 f305 	lsl.w	r3, r0, r5
 8007204:	fa20 f004 	lsr.w	r0, r0, r4
 8007208:	fa01 f205 	lsl.w	r2, r1, r5
 800720c:	ea40 0002 	orr.w	r0, r0, r2
 8007210:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8007214:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8007218:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800721c:	fa21 f604 	lsr.w	r6, r1, r4
 8007220:	eb42 0106 	adc.w	r1, r2, r6
 8007224:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8007228:	bf08      	it	eq
 800722a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800722e:	bd70      	pop	{r4, r5, r6, pc}
 8007230:	f1c4 040c 	rsb	r4, r4, #12
 8007234:	f1c4 0520 	rsb	r5, r4, #32
 8007238:	fa00 f304 	lsl.w	r3, r0, r4
 800723c:	fa20 f005 	lsr.w	r0, r0, r5
 8007240:	fa01 f204 	lsl.w	r2, r1, r4
 8007244:	ea40 0002 	orr.w	r0, r0, r2
 8007248:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800724c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8007250:	f141 0100 	adc.w	r1, r1, #0
 8007254:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8007258:	bf08      	it	eq
 800725a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800725e:	bd70      	pop	{r4, r5, r6, pc}
 8007260:	f1c4 0520 	rsb	r5, r4, #32
 8007264:	fa00 f205 	lsl.w	r2, r0, r5
 8007268:	ea4e 0e02 	orr.w	lr, lr, r2
 800726c:	fa20 f304 	lsr.w	r3, r0, r4
 8007270:	fa01 f205 	lsl.w	r2, r1, r5
 8007274:	ea43 0302 	orr.w	r3, r3, r2
 8007278:	fa21 f004 	lsr.w	r0, r1, r4
 800727c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8007280:	fa21 f204 	lsr.w	r2, r1, r4
 8007284:	ea20 0002 	bic.w	r0, r0, r2
 8007288:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 800728c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8007290:	bf08      	it	eq
 8007292:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8007296:	bd70      	pop	{r4, r5, r6, pc}
 8007298:	f094 0f00 	teq	r4, #0
 800729c:	d10f      	bne.n	80072be <__aeabi_dmul+0x1c2>
 800729e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80072a2:	0040      	lsls	r0, r0, #1
 80072a4:	eb41 0101 	adc.w	r1, r1, r1
 80072a8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80072ac:	bf08      	it	eq
 80072ae:	3c01      	subeq	r4, #1
 80072b0:	d0f7      	beq.n	80072a2 <__aeabi_dmul+0x1a6>
 80072b2:	ea41 0106 	orr.w	r1, r1, r6
 80072b6:	f095 0f00 	teq	r5, #0
 80072ba:	bf18      	it	ne
 80072bc:	4770      	bxne	lr
 80072be:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80072c2:	0052      	lsls	r2, r2, #1
 80072c4:	eb43 0303 	adc.w	r3, r3, r3
 80072c8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80072cc:	bf08      	it	eq
 80072ce:	3d01      	subeq	r5, #1
 80072d0:	d0f7      	beq.n	80072c2 <__aeabi_dmul+0x1c6>
 80072d2:	ea43 0306 	orr.w	r3, r3, r6
 80072d6:	4770      	bx	lr
 80072d8:	ea94 0f0c 	teq	r4, ip
 80072dc:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80072e0:	bf18      	it	ne
 80072e2:	ea95 0f0c 	teqne	r5, ip
 80072e6:	d00c      	beq.n	8007302 <__aeabi_dmul+0x206>
 80072e8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80072ec:	bf18      	it	ne
 80072ee:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80072f2:	d1d1      	bne.n	8007298 <__aeabi_dmul+0x19c>
 80072f4:	ea81 0103 	eor.w	r1, r1, r3
 80072f8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80072fc:	f04f 0000 	mov.w	r0, #0
 8007300:	bd70      	pop	{r4, r5, r6, pc}
 8007302:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8007306:	bf06      	itte	eq
 8007308:	4610      	moveq	r0, r2
 800730a:	4619      	moveq	r1, r3
 800730c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8007310:	d019      	beq.n	8007346 <__aeabi_dmul+0x24a>
 8007312:	ea94 0f0c 	teq	r4, ip
 8007316:	d102      	bne.n	800731e <__aeabi_dmul+0x222>
 8007318:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 800731c:	d113      	bne.n	8007346 <__aeabi_dmul+0x24a>
 800731e:	ea95 0f0c 	teq	r5, ip
 8007322:	d105      	bne.n	8007330 <__aeabi_dmul+0x234>
 8007324:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8007328:	bf1c      	itt	ne
 800732a:	4610      	movne	r0, r2
 800732c:	4619      	movne	r1, r3
 800732e:	d10a      	bne.n	8007346 <__aeabi_dmul+0x24a>
 8007330:	ea81 0103 	eor.w	r1, r1, r3
 8007334:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8007338:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800733c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007340:	f04f 0000 	mov.w	r0, #0
 8007344:	bd70      	pop	{r4, r5, r6, pc}
 8007346:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800734a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800734e:	bd70      	pop	{r4, r5, r6, pc}

08007350 <__aeabi_ddiv>:
 8007350:	b570      	push	{r4, r5, r6, lr}
 8007352:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007356:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800735a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800735e:	bf1d      	ittte	ne
 8007360:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8007364:	ea94 0f0c 	teqne	r4, ip
 8007368:	ea95 0f0c 	teqne	r5, ip
 800736c:	f000 f8a7 	bleq	80074be <__aeabi_ddiv+0x16e>
 8007370:	eba4 0405 	sub.w	r4, r4, r5
 8007374:	ea81 0e03 	eor.w	lr, r1, r3
 8007378:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800737c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007380:	f000 8088 	beq.w	8007494 <__aeabi_ddiv+0x144>
 8007384:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007388:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 800738c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8007390:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8007394:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8007398:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 800739c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80073a0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80073a4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80073a8:	429d      	cmp	r5, r3
 80073aa:	bf08      	it	eq
 80073ac:	4296      	cmpeq	r6, r2
 80073ae:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80073b2:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80073b6:	d202      	bcs.n	80073be <__aeabi_ddiv+0x6e>
 80073b8:	085b      	lsrs	r3, r3, #1
 80073ba:	ea4f 0232 	mov.w	r2, r2, rrx
 80073be:	1ab6      	subs	r6, r6, r2
 80073c0:	eb65 0503 	sbc.w	r5, r5, r3
 80073c4:	085b      	lsrs	r3, r3, #1
 80073c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80073ca:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80073ce:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80073d2:	ebb6 0e02 	subs.w	lr, r6, r2
 80073d6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80073da:	bf22      	ittt	cs
 80073dc:	1ab6      	subcs	r6, r6, r2
 80073de:	4675      	movcs	r5, lr
 80073e0:	ea40 000c 	orrcs.w	r0, r0, ip
 80073e4:	085b      	lsrs	r3, r3, #1
 80073e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80073ea:	ebb6 0e02 	subs.w	lr, r6, r2
 80073ee:	eb75 0e03 	sbcs.w	lr, r5, r3
 80073f2:	bf22      	ittt	cs
 80073f4:	1ab6      	subcs	r6, r6, r2
 80073f6:	4675      	movcs	r5, lr
 80073f8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80073fc:	085b      	lsrs	r3, r3, #1
 80073fe:	ea4f 0232 	mov.w	r2, r2, rrx
 8007402:	ebb6 0e02 	subs.w	lr, r6, r2
 8007406:	eb75 0e03 	sbcs.w	lr, r5, r3
 800740a:	bf22      	ittt	cs
 800740c:	1ab6      	subcs	r6, r6, r2
 800740e:	4675      	movcs	r5, lr
 8007410:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8007414:	085b      	lsrs	r3, r3, #1
 8007416:	ea4f 0232 	mov.w	r2, r2, rrx
 800741a:	ebb6 0e02 	subs.w	lr, r6, r2
 800741e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8007422:	bf22      	ittt	cs
 8007424:	1ab6      	subcs	r6, r6, r2
 8007426:	4675      	movcs	r5, lr
 8007428:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800742c:	ea55 0e06 	orrs.w	lr, r5, r6
 8007430:	d018      	beq.n	8007464 <__aeabi_ddiv+0x114>
 8007432:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8007436:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800743a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800743e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8007442:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8007446:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800744a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800744e:	d1c0      	bne.n	80073d2 <__aeabi_ddiv+0x82>
 8007450:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8007454:	d10b      	bne.n	800746e <__aeabi_ddiv+0x11e>
 8007456:	ea41 0100 	orr.w	r1, r1, r0
 800745a:	f04f 0000 	mov.w	r0, #0
 800745e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8007462:	e7b6      	b.n	80073d2 <__aeabi_ddiv+0x82>
 8007464:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8007468:	bf04      	itt	eq
 800746a:	4301      	orreq	r1, r0
 800746c:	2000      	moveq	r0, #0
 800746e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8007472:	bf88      	it	hi
 8007474:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8007478:	f63f aeaf 	bhi.w	80071da <__aeabi_dmul+0xde>
 800747c:	ebb5 0c03 	subs.w	ip, r5, r3
 8007480:	bf04      	itt	eq
 8007482:	ebb6 0c02 	subseq.w	ip, r6, r2
 8007486:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800748a:	f150 0000 	adcs.w	r0, r0, #0
 800748e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8007492:	bd70      	pop	{r4, r5, r6, pc}
 8007494:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8007498:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 800749c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80074a0:	bfc2      	ittt	gt
 80074a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80074a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80074aa:	bd70      	popgt	{r4, r5, r6, pc}
 80074ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80074b0:	f04f 0e00 	mov.w	lr, #0
 80074b4:	3c01      	subs	r4, #1
 80074b6:	e690      	b.n	80071da <__aeabi_dmul+0xde>
 80074b8:	ea45 0e06 	orr.w	lr, r5, r6
 80074bc:	e68d      	b.n	80071da <__aeabi_dmul+0xde>
 80074be:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80074c2:	ea94 0f0c 	teq	r4, ip
 80074c6:	bf08      	it	eq
 80074c8:	ea95 0f0c 	teqeq	r5, ip
 80074cc:	f43f af3b 	beq.w	8007346 <__aeabi_dmul+0x24a>
 80074d0:	ea94 0f0c 	teq	r4, ip
 80074d4:	d10a      	bne.n	80074ec <__aeabi_ddiv+0x19c>
 80074d6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80074da:	f47f af34 	bne.w	8007346 <__aeabi_dmul+0x24a>
 80074de:	ea95 0f0c 	teq	r5, ip
 80074e2:	f47f af25 	bne.w	8007330 <__aeabi_dmul+0x234>
 80074e6:	4610      	mov	r0, r2
 80074e8:	4619      	mov	r1, r3
 80074ea:	e72c      	b.n	8007346 <__aeabi_dmul+0x24a>
 80074ec:	ea95 0f0c 	teq	r5, ip
 80074f0:	d106      	bne.n	8007500 <__aeabi_ddiv+0x1b0>
 80074f2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80074f6:	f43f aefd 	beq.w	80072f4 <__aeabi_dmul+0x1f8>
 80074fa:	4610      	mov	r0, r2
 80074fc:	4619      	mov	r1, r3
 80074fe:	e722      	b.n	8007346 <__aeabi_dmul+0x24a>
 8007500:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8007504:	bf18      	it	ne
 8007506:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800750a:	f47f aec5 	bne.w	8007298 <__aeabi_dmul+0x19c>
 800750e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8007512:	f47f af0d 	bne.w	8007330 <__aeabi_dmul+0x234>
 8007516:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800751a:	f47f aeeb 	bne.w	80072f4 <__aeabi_dmul+0x1f8>
 800751e:	e712      	b.n	8007346 <__aeabi_dmul+0x24a>

08007520 <__gedf2>:
 8007520:	f04f 3cff 	mov.w	ip, #4294967295
 8007524:	e006      	b.n	8007534 <__cmpdf2+0x4>
 8007526:	bf00      	nop

08007528 <__ledf2>:
 8007528:	f04f 0c01 	mov.w	ip, #1
 800752c:	e002      	b.n	8007534 <__cmpdf2+0x4>
 800752e:	bf00      	nop

08007530 <__cmpdf2>:
 8007530:	f04f 0c01 	mov.w	ip, #1
 8007534:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007538:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800753c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8007540:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8007544:	bf18      	it	ne
 8007546:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800754a:	d01b      	beq.n	8007584 <__cmpdf2+0x54>
 800754c:	b001      	add	sp, #4
 800754e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8007552:	bf0c      	ite	eq
 8007554:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8007558:	ea91 0f03 	teqne	r1, r3
 800755c:	bf02      	ittt	eq
 800755e:	ea90 0f02 	teqeq	r0, r2
 8007562:	2000      	moveq	r0, #0
 8007564:	4770      	bxeq	lr
 8007566:	f110 0f00 	cmn.w	r0, #0
 800756a:	ea91 0f03 	teq	r1, r3
 800756e:	bf58      	it	pl
 8007570:	4299      	cmppl	r1, r3
 8007572:	bf08      	it	eq
 8007574:	4290      	cmpeq	r0, r2
 8007576:	bf2c      	ite	cs
 8007578:	17d8      	asrcs	r0, r3, #31
 800757a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800757e:	f040 0001 	orr.w	r0, r0, #1
 8007582:	4770      	bx	lr
 8007584:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8007588:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800758c:	d102      	bne.n	8007594 <__cmpdf2+0x64>
 800758e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8007592:	d107      	bne.n	80075a4 <__cmpdf2+0x74>
 8007594:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8007598:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800759c:	d1d6      	bne.n	800754c <__cmpdf2+0x1c>
 800759e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80075a2:	d0d3      	beq.n	800754c <__cmpdf2+0x1c>
 80075a4:	f85d 0b04 	ldr.w	r0, [sp], #4
 80075a8:	4770      	bx	lr
 80075aa:	bf00      	nop

080075ac <__aeabi_cdrcmple>:
 80075ac:	4684      	mov	ip, r0
 80075ae:	4610      	mov	r0, r2
 80075b0:	4662      	mov	r2, ip
 80075b2:	468c      	mov	ip, r1
 80075b4:	4619      	mov	r1, r3
 80075b6:	4663      	mov	r3, ip
 80075b8:	e000      	b.n	80075bc <__aeabi_cdcmpeq>
 80075ba:	bf00      	nop

080075bc <__aeabi_cdcmpeq>:
 80075bc:	b501      	push	{r0, lr}
 80075be:	f7ff ffb7 	bl	8007530 <__cmpdf2>
 80075c2:	2800      	cmp	r0, #0
 80075c4:	bf48      	it	mi
 80075c6:	f110 0f00 	cmnmi.w	r0, #0
 80075ca:	bd01      	pop	{r0, pc}

080075cc <__aeabi_dcmpeq>:
 80075cc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80075d0:	f7ff fff4 	bl	80075bc <__aeabi_cdcmpeq>
 80075d4:	bf0c      	ite	eq
 80075d6:	2001      	moveq	r0, #1
 80075d8:	2000      	movne	r0, #0
 80075da:	f85d fb08 	ldr.w	pc, [sp], #8
 80075de:	bf00      	nop

080075e0 <__aeabi_dcmplt>:
 80075e0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80075e4:	f7ff ffea 	bl	80075bc <__aeabi_cdcmpeq>
 80075e8:	bf34      	ite	cc
 80075ea:	2001      	movcc	r0, #1
 80075ec:	2000      	movcs	r0, #0
 80075ee:	f85d fb08 	ldr.w	pc, [sp], #8
 80075f2:	bf00      	nop

080075f4 <__aeabi_dcmple>:
 80075f4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80075f8:	f7ff ffe0 	bl	80075bc <__aeabi_cdcmpeq>
 80075fc:	bf94      	ite	ls
 80075fe:	2001      	movls	r0, #1
 8007600:	2000      	movhi	r0, #0
 8007602:	f85d fb08 	ldr.w	pc, [sp], #8
 8007606:	bf00      	nop

08007608 <__aeabi_dcmpge>:
 8007608:	f84d ed08 	str.w	lr, [sp, #-8]!
 800760c:	f7ff ffce 	bl	80075ac <__aeabi_cdrcmple>
 8007610:	bf94      	ite	ls
 8007612:	2001      	movls	r0, #1
 8007614:	2000      	movhi	r0, #0
 8007616:	f85d fb08 	ldr.w	pc, [sp], #8
 800761a:	bf00      	nop

0800761c <__aeabi_dcmpgt>:
 800761c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007620:	f7ff ffc4 	bl	80075ac <__aeabi_cdrcmple>
 8007624:	bf34      	ite	cc
 8007626:	2001      	movcc	r0, #1
 8007628:	2000      	movcs	r0, #0
 800762a:	f85d fb08 	ldr.w	pc, [sp], #8
 800762e:	bf00      	nop

08007630 <__aeabi_dcmpun>:
 8007630:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8007634:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8007638:	d102      	bne.n	8007640 <__aeabi_dcmpun+0x10>
 800763a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800763e:	d10a      	bne.n	8007656 <__aeabi_dcmpun+0x26>
 8007640:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8007644:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8007648:	d102      	bne.n	8007650 <__aeabi_dcmpun+0x20>
 800764a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800764e:	d102      	bne.n	8007656 <__aeabi_dcmpun+0x26>
 8007650:	f04f 0000 	mov.w	r0, #0
 8007654:	4770      	bx	lr
 8007656:	f04f 0001 	mov.w	r0, #1
 800765a:	4770      	bx	lr

0800765c <__aeabi_d2iz>:
 800765c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007660:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8007664:	d215      	bcs.n	8007692 <__aeabi_d2iz+0x36>
 8007666:	d511      	bpl.n	800768c <__aeabi_d2iz+0x30>
 8007668:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 800766c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8007670:	d912      	bls.n	8007698 <__aeabi_d2iz+0x3c>
 8007672:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007676:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800767a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800767e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007682:	fa23 f002 	lsr.w	r0, r3, r2
 8007686:	bf18      	it	ne
 8007688:	4240      	negne	r0, r0
 800768a:	4770      	bx	lr
 800768c:	f04f 0000 	mov.w	r0, #0
 8007690:	4770      	bx	lr
 8007692:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8007696:	d105      	bne.n	80076a4 <__aeabi_d2iz+0x48>
 8007698:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 800769c:	bf08      	it	eq
 800769e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80076a2:	4770      	bx	lr
 80076a4:	f04f 0000 	mov.w	r0, #0
 80076a8:	4770      	bx	lr
 80076aa:	bf00      	nop

080076ac <__aeabi_uldivmod>:
 80076ac:	b953      	cbnz	r3, 80076c4 <__aeabi_uldivmod+0x18>
 80076ae:	b94a      	cbnz	r2, 80076c4 <__aeabi_uldivmod+0x18>
 80076b0:	2900      	cmp	r1, #0
 80076b2:	bf08      	it	eq
 80076b4:	2800      	cmpeq	r0, #0
 80076b6:	bf1c      	itt	ne
 80076b8:	f04f 31ff 	movne.w	r1, #4294967295
 80076bc:	f04f 30ff 	movne.w	r0, #4294967295
 80076c0:	f001 b8f8 	b.w	80088b4 <__aeabi_idiv0>
 80076c4:	f1ad 0c08 	sub.w	ip, sp, #8
 80076c8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80076cc:	f000 f806 	bl	80076dc <__udivmoddi4>
 80076d0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80076d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80076d8:	b004      	add	sp, #16
 80076da:	4770      	bx	lr

080076dc <__udivmoddi4>:
 80076dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80076e0:	9e08      	ldr	r6, [sp, #32]
 80076e2:	4604      	mov	r4, r0
 80076e4:	4688      	mov	r8, r1
 80076e6:	2b00      	cmp	r3, #0
 80076e8:	d14b      	bne.n	8007782 <__udivmoddi4+0xa6>
 80076ea:	428a      	cmp	r2, r1
 80076ec:	4615      	mov	r5, r2
 80076ee:	d967      	bls.n	80077c0 <__udivmoddi4+0xe4>
 80076f0:	fab2 f282 	clz	r2, r2
 80076f4:	b14a      	cbz	r2, 800770a <__udivmoddi4+0x2e>
 80076f6:	f1c2 0720 	rsb	r7, r2, #32
 80076fa:	fa01 f302 	lsl.w	r3, r1, r2
 80076fe:	fa20 f707 	lsr.w	r7, r0, r7
 8007702:	4095      	lsls	r5, r2
 8007704:	ea47 0803 	orr.w	r8, r7, r3
 8007708:	4094      	lsls	r4, r2
 800770a:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 800770e:	0c23      	lsrs	r3, r4, #16
 8007710:	fbb8 f7fe 	udiv	r7, r8, lr
 8007714:	fa1f fc85 	uxth.w	ip, r5
 8007718:	fb0e 8817 	mls	r8, lr, r7, r8
 800771c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8007720:	fb07 f10c 	mul.w	r1, r7, ip
 8007724:	4299      	cmp	r1, r3
 8007726:	d909      	bls.n	800773c <__udivmoddi4+0x60>
 8007728:	18eb      	adds	r3, r5, r3
 800772a:	f107 30ff 	add.w	r0, r7, #4294967295
 800772e:	f080 811b 	bcs.w	8007968 <__udivmoddi4+0x28c>
 8007732:	4299      	cmp	r1, r3
 8007734:	f240 8118 	bls.w	8007968 <__udivmoddi4+0x28c>
 8007738:	3f02      	subs	r7, #2
 800773a:	442b      	add	r3, r5
 800773c:	1a5b      	subs	r3, r3, r1
 800773e:	b2a4      	uxth	r4, r4
 8007740:	fbb3 f0fe 	udiv	r0, r3, lr
 8007744:	fb0e 3310 	mls	r3, lr, r0, r3
 8007748:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800774c:	fb00 fc0c 	mul.w	ip, r0, ip
 8007750:	45a4      	cmp	ip, r4
 8007752:	d909      	bls.n	8007768 <__udivmoddi4+0x8c>
 8007754:	192c      	adds	r4, r5, r4
 8007756:	f100 33ff 	add.w	r3, r0, #4294967295
 800775a:	f080 8107 	bcs.w	800796c <__udivmoddi4+0x290>
 800775e:	45a4      	cmp	ip, r4
 8007760:	f240 8104 	bls.w	800796c <__udivmoddi4+0x290>
 8007764:	3802      	subs	r0, #2
 8007766:	442c      	add	r4, r5
 8007768:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 800776c:	eba4 040c 	sub.w	r4, r4, ip
 8007770:	2700      	movs	r7, #0
 8007772:	b11e      	cbz	r6, 800777c <__udivmoddi4+0xa0>
 8007774:	40d4      	lsrs	r4, r2
 8007776:	2300      	movs	r3, #0
 8007778:	e9c6 4300 	strd	r4, r3, [r6]
 800777c:	4639      	mov	r1, r7
 800777e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007782:	428b      	cmp	r3, r1
 8007784:	d909      	bls.n	800779a <__udivmoddi4+0xbe>
 8007786:	2e00      	cmp	r6, #0
 8007788:	f000 80eb 	beq.w	8007962 <__udivmoddi4+0x286>
 800778c:	2700      	movs	r7, #0
 800778e:	e9c6 0100 	strd	r0, r1, [r6]
 8007792:	4638      	mov	r0, r7
 8007794:	4639      	mov	r1, r7
 8007796:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800779a:	fab3 f783 	clz	r7, r3
 800779e:	2f00      	cmp	r7, #0
 80077a0:	d147      	bne.n	8007832 <__udivmoddi4+0x156>
 80077a2:	428b      	cmp	r3, r1
 80077a4:	d302      	bcc.n	80077ac <__udivmoddi4+0xd0>
 80077a6:	4282      	cmp	r2, r0
 80077a8:	f200 80fa 	bhi.w	80079a0 <__udivmoddi4+0x2c4>
 80077ac:	1a84      	subs	r4, r0, r2
 80077ae:	eb61 0303 	sbc.w	r3, r1, r3
 80077b2:	2001      	movs	r0, #1
 80077b4:	4698      	mov	r8, r3
 80077b6:	2e00      	cmp	r6, #0
 80077b8:	d0e0      	beq.n	800777c <__udivmoddi4+0xa0>
 80077ba:	e9c6 4800 	strd	r4, r8, [r6]
 80077be:	e7dd      	b.n	800777c <__udivmoddi4+0xa0>
 80077c0:	b902      	cbnz	r2, 80077c4 <__udivmoddi4+0xe8>
 80077c2:	deff      	udf	#255	; 0xff
 80077c4:	fab2 f282 	clz	r2, r2
 80077c8:	2a00      	cmp	r2, #0
 80077ca:	f040 808f 	bne.w	80078ec <__udivmoddi4+0x210>
 80077ce:	1b49      	subs	r1, r1, r5
 80077d0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80077d4:	fa1f f885 	uxth.w	r8, r5
 80077d8:	2701      	movs	r7, #1
 80077da:	fbb1 fcfe 	udiv	ip, r1, lr
 80077de:	0c23      	lsrs	r3, r4, #16
 80077e0:	fb0e 111c 	mls	r1, lr, ip, r1
 80077e4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80077e8:	fb08 f10c 	mul.w	r1, r8, ip
 80077ec:	4299      	cmp	r1, r3
 80077ee:	d907      	bls.n	8007800 <__udivmoddi4+0x124>
 80077f0:	18eb      	adds	r3, r5, r3
 80077f2:	f10c 30ff 	add.w	r0, ip, #4294967295
 80077f6:	d202      	bcs.n	80077fe <__udivmoddi4+0x122>
 80077f8:	4299      	cmp	r1, r3
 80077fa:	f200 80cd 	bhi.w	8007998 <__udivmoddi4+0x2bc>
 80077fe:	4684      	mov	ip, r0
 8007800:	1a59      	subs	r1, r3, r1
 8007802:	b2a3      	uxth	r3, r4
 8007804:	fbb1 f0fe 	udiv	r0, r1, lr
 8007808:	fb0e 1410 	mls	r4, lr, r0, r1
 800780c:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8007810:	fb08 f800 	mul.w	r8, r8, r0
 8007814:	45a0      	cmp	r8, r4
 8007816:	d907      	bls.n	8007828 <__udivmoddi4+0x14c>
 8007818:	192c      	adds	r4, r5, r4
 800781a:	f100 33ff 	add.w	r3, r0, #4294967295
 800781e:	d202      	bcs.n	8007826 <__udivmoddi4+0x14a>
 8007820:	45a0      	cmp	r8, r4
 8007822:	f200 80b6 	bhi.w	8007992 <__udivmoddi4+0x2b6>
 8007826:	4618      	mov	r0, r3
 8007828:	eba4 0408 	sub.w	r4, r4, r8
 800782c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8007830:	e79f      	b.n	8007772 <__udivmoddi4+0x96>
 8007832:	f1c7 0c20 	rsb	ip, r7, #32
 8007836:	40bb      	lsls	r3, r7
 8007838:	fa22 fe0c 	lsr.w	lr, r2, ip
 800783c:	ea4e 0e03 	orr.w	lr, lr, r3
 8007840:	fa01 f407 	lsl.w	r4, r1, r7
 8007844:	fa20 f50c 	lsr.w	r5, r0, ip
 8007848:	fa21 f30c 	lsr.w	r3, r1, ip
 800784c:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8007850:	4325      	orrs	r5, r4
 8007852:	fbb3 f9f8 	udiv	r9, r3, r8
 8007856:	0c2c      	lsrs	r4, r5, #16
 8007858:	fb08 3319 	mls	r3, r8, r9, r3
 800785c:	fa1f fa8e 	uxth.w	sl, lr
 8007860:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8007864:	fb09 f40a 	mul.w	r4, r9, sl
 8007868:	429c      	cmp	r4, r3
 800786a:	fa02 f207 	lsl.w	r2, r2, r7
 800786e:	fa00 f107 	lsl.w	r1, r0, r7
 8007872:	d90b      	bls.n	800788c <__udivmoddi4+0x1b0>
 8007874:	eb1e 0303 	adds.w	r3, lr, r3
 8007878:	f109 30ff 	add.w	r0, r9, #4294967295
 800787c:	f080 8087 	bcs.w	800798e <__udivmoddi4+0x2b2>
 8007880:	429c      	cmp	r4, r3
 8007882:	f240 8084 	bls.w	800798e <__udivmoddi4+0x2b2>
 8007886:	f1a9 0902 	sub.w	r9, r9, #2
 800788a:	4473      	add	r3, lr
 800788c:	1b1b      	subs	r3, r3, r4
 800788e:	b2ad      	uxth	r5, r5
 8007890:	fbb3 f0f8 	udiv	r0, r3, r8
 8007894:	fb08 3310 	mls	r3, r8, r0, r3
 8007898:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 800789c:	fb00 fa0a 	mul.w	sl, r0, sl
 80078a0:	45a2      	cmp	sl, r4
 80078a2:	d908      	bls.n	80078b6 <__udivmoddi4+0x1da>
 80078a4:	eb1e 0404 	adds.w	r4, lr, r4
 80078a8:	f100 33ff 	add.w	r3, r0, #4294967295
 80078ac:	d26b      	bcs.n	8007986 <__udivmoddi4+0x2aa>
 80078ae:	45a2      	cmp	sl, r4
 80078b0:	d969      	bls.n	8007986 <__udivmoddi4+0x2aa>
 80078b2:	3802      	subs	r0, #2
 80078b4:	4474      	add	r4, lr
 80078b6:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80078ba:	fba0 8902 	umull	r8, r9, r0, r2
 80078be:	eba4 040a 	sub.w	r4, r4, sl
 80078c2:	454c      	cmp	r4, r9
 80078c4:	46c2      	mov	sl, r8
 80078c6:	464b      	mov	r3, r9
 80078c8:	d354      	bcc.n	8007974 <__udivmoddi4+0x298>
 80078ca:	d051      	beq.n	8007970 <__udivmoddi4+0x294>
 80078cc:	2e00      	cmp	r6, #0
 80078ce:	d069      	beq.n	80079a4 <__udivmoddi4+0x2c8>
 80078d0:	ebb1 050a 	subs.w	r5, r1, sl
 80078d4:	eb64 0403 	sbc.w	r4, r4, r3
 80078d8:	fa04 fc0c 	lsl.w	ip, r4, ip
 80078dc:	40fd      	lsrs	r5, r7
 80078de:	40fc      	lsrs	r4, r7
 80078e0:	ea4c 0505 	orr.w	r5, ip, r5
 80078e4:	e9c6 5400 	strd	r5, r4, [r6]
 80078e8:	2700      	movs	r7, #0
 80078ea:	e747      	b.n	800777c <__udivmoddi4+0xa0>
 80078ec:	f1c2 0320 	rsb	r3, r2, #32
 80078f0:	fa20 f703 	lsr.w	r7, r0, r3
 80078f4:	4095      	lsls	r5, r2
 80078f6:	fa01 f002 	lsl.w	r0, r1, r2
 80078fa:	fa21 f303 	lsr.w	r3, r1, r3
 80078fe:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8007902:	4338      	orrs	r0, r7
 8007904:	0c01      	lsrs	r1, r0, #16
 8007906:	fbb3 f7fe 	udiv	r7, r3, lr
 800790a:	fa1f f885 	uxth.w	r8, r5
 800790e:	fb0e 3317 	mls	r3, lr, r7, r3
 8007912:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8007916:	fb07 f308 	mul.w	r3, r7, r8
 800791a:	428b      	cmp	r3, r1
 800791c:	fa04 f402 	lsl.w	r4, r4, r2
 8007920:	d907      	bls.n	8007932 <__udivmoddi4+0x256>
 8007922:	1869      	adds	r1, r5, r1
 8007924:	f107 3cff 	add.w	ip, r7, #4294967295
 8007928:	d22f      	bcs.n	800798a <__udivmoddi4+0x2ae>
 800792a:	428b      	cmp	r3, r1
 800792c:	d92d      	bls.n	800798a <__udivmoddi4+0x2ae>
 800792e:	3f02      	subs	r7, #2
 8007930:	4429      	add	r1, r5
 8007932:	1acb      	subs	r3, r1, r3
 8007934:	b281      	uxth	r1, r0
 8007936:	fbb3 f0fe 	udiv	r0, r3, lr
 800793a:	fb0e 3310 	mls	r3, lr, r0, r3
 800793e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8007942:	fb00 f308 	mul.w	r3, r0, r8
 8007946:	428b      	cmp	r3, r1
 8007948:	d907      	bls.n	800795a <__udivmoddi4+0x27e>
 800794a:	1869      	adds	r1, r5, r1
 800794c:	f100 3cff 	add.w	ip, r0, #4294967295
 8007950:	d217      	bcs.n	8007982 <__udivmoddi4+0x2a6>
 8007952:	428b      	cmp	r3, r1
 8007954:	d915      	bls.n	8007982 <__udivmoddi4+0x2a6>
 8007956:	3802      	subs	r0, #2
 8007958:	4429      	add	r1, r5
 800795a:	1ac9      	subs	r1, r1, r3
 800795c:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8007960:	e73b      	b.n	80077da <__udivmoddi4+0xfe>
 8007962:	4637      	mov	r7, r6
 8007964:	4630      	mov	r0, r6
 8007966:	e709      	b.n	800777c <__udivmoddi4+0xa0>
 8007968:	4607      	mov	r7, r0
 800796a:	e6e7      	b.n	800773c <__udivmoddi4+0x60>
 800796c:	4618      	mov	r0, r3
 800796e:	e6fb      	b.n	8007768 <__udivmoddi4+0x8c>
 8007970:	4541      	cmp	r1, r8
 8007972:	d2ab      	bcs.n	80078cc <__udivmoddi4+0x1f0>
 8007974:	ebb8 0a02 	subs.w	sl, r8, r2
 8007978:	eb69 020e 	sbc.w	r2, r9, lr
 800797c:	3801      	subs	r0, #1
 800797e:	4613      	mov	r3, r2
 8007980:	e7a4      	b.n	80078cc <__udivmoddi4+0x1f0>
 8007982:	4660      	mov	r0, ip
 8007984:	e7e9      	b.n	800795a <__udivmoddi4+0x27e>
 8007986:	4618      	mov	r0, r3
 8007988:	e795      	b.n	80078b6 <__udivmoddi4+0x1da>
 800798a:	4667      	mov	r7, ip
 800798c:	e7d1      	b.n	8007932 <__udivmoddi4+0x256>
 800798e:	4681      	mov	r9, r0
 8007990:	e77c      	b.n	800788c <__udivmoddi4+0x1b0>
 8007992:	3802      	subs	r0, #2
 8007994:	442c      	add	r4, r5
 8007996:	e747      	b.n	8007828 <__udivmoddi4+0x14c>
 8007998:	f1ac 0c02 	sub.w	ip, ip, #2
 800799c:	442b      	add	r3, r5
 800799e:	e72f      	b.n	8007800 <__udivmoddi4+0x124>
 80079a0:	4638      	mov	r0, r7
 80079a2:	e708      	b.n	80077b6 <__udivmoddi4+0xda>
 80079a4:	4637      	mov	r7, r6
 80079a6:	e6e9      	b.n	800777c <__udivmoddi4+0xa0>

080079a8 <selfrel_offset31>:
 80079a8:	6803      	ldr	r3, [r0, #0]
 80079aa:	005a      	lsls	r2, r3, #1
 80079ac:	bf4c      	ite	mi
 80079ae:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 80079b2:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
 80079b6:	4418      	add	r0, r3
 80079b8:	4770      	bx	lr
 80079ba:	bf00      	nop

080079bc <search_EIT_table>:
 80079bc:	b361      	cbz	r1, 8007a18 <search_EIT_table+0x5c>
 80079be:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80079c2:	f101 3aff 	add.w	sl, r1, #4294967295
 80079c6:	4690      	mov	r8, r2
 80079c8:	4606      	mov	r6, r0
 80079ca:	46d1      	mov	r9, sl
 80079cc:	2700      	movs	r7, #0
 80079ce:	eb07 0409 	add.w	r4, r7, r9
 80079d2:	eb04 74d4 	add.w	r4, r4, r4, lsr #31
 80079d6:	1064      	asrs	r4, r4, #1
 80079d8:	00e5      	lsls	r5, r4, #3
 80079da:	1971      	adds	r1, r6, r5
 80079dc:	4608      	mov	r0, r1
 80079de:	f7ff ffe3 	bl	80079a8 <selfrel_offset31>
 80079e2:	45a2      	cmp	sl, r4
 80079e4:	4683      	mov	fp, r0
 80079e6:	f105 0008 	add.w	r0, r5, #8
 80079ea:	4430      	add	r0, r6
 80079ec:	d009      	beq.n	8007a02 <search_EIT_table+0x46>
 80079ee:	f7ff ffdb 	bl	80079a8 <selfrel_offset31>
 80079f2:	45c3      	cmp	fp, r8
 80079f4:	f100 30ff 	add.w	r0, r0, #4294967295
 80079f8:	d805      	bhi.n	8007a06 <search_EIT_table+0x4a>
 80079fa:	4540      	cmp	r0, r8
 80079fc:	d209      	bcs.n	8007a12 <search_EIT_table+0x56>
 80079fe:	1c67      	adds	r7, r4, #1
 8007a00:	e7e5      	b.n	80079ce <search_EIT_table+0x12>
 8007a02:	45c3      	cmp	fp, r8
 8007a04:	d905      	bls.n	8007a12 <search_EIT_table+0x56>
 8007a06:	42a7      	cmp	r7, r4
 8007a08:	d002      	beq.n	8007a10 <search_EIT_table+0x54>
 8007a0a:	f104 39ff 	add.w	r9, r4, #4294967295
 8007a0e:	e7de      	b.n	80079ce <search_EIT_table+0x12>
 8007a10:	2100      	movs	r1, #0
 8007a12:	4608      	mov	r0, r1
 8007a14:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a18:	4608      	mov	r0, r1
 8007a1a:	4770      	bx	lr

08007a1c <__gnu_unwind_get_pr_addr>:
 8007a1c:	2801      	cmp	r0, #1
 8007a1e:	d007      	beq.n	8007a30 <__gnu_unwind_get_pr_addr+0x14>
 8007a20:	2802      	cmp	r0, #2
 8007a22:	d007      	beq.n	8007a34 <__gnu_unwind_get_pr_addr+0x18>
 8007a24:	4b04      	ldr	r3, [pc, #16]	; (8007a38 <__gnu_unwind_get_pr_addr+0x1c>)
 8007a26:	2800      	cmp	r0, #0
 8007a28:	bf0c      	ite	eq
 8007a2a:	4618      	moveq	r0, r3
 8007a2c:	2000      	movne	r0, #0
 8007a2e:	4770      	bx	lr
 8007a30:	4802      	ldr	r0, [pc, #8]	; (8007a3c <__gnu_unwind_get_pr_addr+0x20>)
 8007a32:	4770      	bx	lr
 8007a34:	4802      	ldr	r0, [pc, #8]	; (8007a40 <__gnu_unwind_get_pr_addr+0x24>)
 8007a36:	4770      	bx	lr
 8007a38:	08008109 	.word	0x08008109
 8007a3c:	0800810d 	.word	0x0800810d
 8007a40:	08008111 	.word	0x08008111

08007a44 <get_eit_entry>:
 8007a44:	b530      	push	{r4, r5, lr}
 8007a46:	4b25      	ldr	r3, [pc, #148]	; (8007adc <get_eit_entry+0x98>)
 8007a48:	b083      	sub	sp, #12
 8007a4a:	4604      	mov	r4, r0
 8007a4c:	1e8d      	subs	r5, r1, #2
 8007a4e:	b34b      	cbz	r3, 8007aa4 <get_eit_entry+0x60>
 8007a50:	a901      	add	r1, sp, #4
 8007a52:	4628      	mov	r0, r5
 8007a54:	f3af 8000 	nop.w
 8007a58:	b1f0      	cbz	r0, 8007a98 <get_eit_entry+0x54>
 8007a5a:	9901      	ldr	r1, [sp, #4]
 8007a5c:	462a      	mov	r2, r5
 8007a5e:	f7ff ffad 	bl	80079bc <search_EIT_table>
 8007a62:	4601      	mov	r1, r0
 8007a64:	b1c0      	cbz	r0, 8007a98 <get_eit_entry+0x54>
 8007a66:	f7ff ff9f 	bl	80079a8 <selfrel_offset31>
 8007a6a:	684b      	ldr	r3, [r1, #4]
 8007a6c:	64a0      	str	r0, [r4, #72]	; 0x48
 8007a6e:	2b01      	cmp	r3, #1
 8007a70:	d02e      	beq.n	8007ad0 <get_eit_entry+0x8c>
 8007a72:	2b00      	cmp	r3, #0
 8007a74:	f101 0004 	add.w	r0, r1, #4
 8007a78:	db26      	blt.n	8007ac8 <get_eit_entry+0x84>
 8007a7a:	f7ff ff95 	bl	80079a8 <selfrel_offset31>
 8007a7e:	2300      	movs	r3, #0
 8007a80:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 8007a84:	6803      	ldr	r3, [r0, #0]
 8007a86:	2b00      	cmp	r3, #0
 8007a88:	db12      	blt.n	8007ab0 <get_eit_entry+0x6c>
 8007a8a:	f7ff ff8d 	bl	80079a8 <selfrel_offset31>
 8007a8e:	2300      	movs	r3, #0
 8007a90:	6120      	str	r0, [r4, #16]
 8007a92:	4618      	mov	r0, r3
 8007a94:	b003      	add	sp, #12
 8007a96:	bd30      	pop	{r4, r5, pc}
 8007a98:	2300      	movs	r3, #0
 8007a9a:	6123      	str	r3, [r4, #16]
 8007a9c:	2309      	movs	r3, #9
 8007a9e:	4618      	mov	r0, r3
 8007aa0:	b003      	add	sp, #12
 8007aa2:	bd30      	pop	{r4, r5, pc}
 8007aa4:	490e      	ldr	r1, [pc, #56]	; (8007ae0 <get_eit_entry+0x9c>)
 8007aa6:	480f      	ldr	r0, [pc, #60]	; (8007ae4 <get_eit_entry+0xa0>)
 8007aa8:	1a09      	subs	r1, r1, r0
 8007aaa:	10c9      	asrs	r1, r1, #3
 8007aac:	9101      	str	r1, [sp, #4]
 8007aae:	e7d5      	b.n	8007a5c <get_eit_entry+0x18>
 8007ab0:	f3c3 6003 	ubfx	r0, r3, #24, #4
 8007ab4:	f7ff ffb2 	bl	8007a1c <__gnu_unwind_get_pr_addr>
 8007ab8:	2800      	cmp	r0, #0
 8007aba:	bf14      	ite	ne
 8007abc:	2300      	movne	r3, #0
 8007abe:	2309      	moveq	r3, #9
 8007ac0:	6120      	str	r0, [r4, #16]
 8007ac2:	4618      	mov	r0, r3
 8007ac4:	b003      	add	sp, #12
 8007ac6:	bd30      	pop	{r4, r5, pc}
 8007ac8:	2301      	movs	r3, #1
 8007aca:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
 8007ace:	e7d9      	b.n	8007a84 <get_eit_entry+0x40>
 8007ad0:	2300      	movs	r3, #0
 8007ad2:	6123      	str	r3, [r4, #16]
 8007ad4:	2305      	movs	r3, #5
 8007ad6:	4618      	mov	r0, r3
 8007ad8:	b003      	add	sp, #12
 8007ada:	bd30      	pop	{r4, r5, pc}
 8007adc:	00000000 	.word	0x00000000
 8007ae0:	08012ad0 	.word	0x08012ad0
 8007ae4:	08012938 	.word	0x08012938

08007ae8 <restore_non_core_regs>:
 8007ae8:	6803      	ldr	r3, [r0, #0]
 8007aea:	07da      	lsls	r2, r3, #31
 8007aec:	b510      	push	{r4, lr}
 8007aee:	4604      	mov	r4, r0
 8007af0:	d406      	bmi.n	8007b00 <restore_non_core_regs+0x18>
 8007af2:	079b      	lsls	r3, r3, #30
 8007af4:	f100 0048 	add.w	r0, r0, #72	; 0x48
 8007af8:	d509      	bpl.n	8007b0e <restore_non_core_regs+0x26>
 8007afa:	f000 fc5f 	bl	80083bc <__gnu_Unwind_Restore_VFP_D>
 8007afe:	6823      	ldr	r3, [r4, #0]
 8007b00:	0759      	lsls	r1, r3, #29
 8007b02:	d509      	bpl.n	8007b18 <restore_non_core_regs+0x30>
 8007b04:	071a      	lsls	r2, r3, #28
 8007b06:	d50e      	bpl.n	8007b26 <restore_non_core_regs+0x3e>
 8007b08:	06db      	lsls	r3, r3, #27
 8007b0a:	d513      	bpl.n	8007b34 <restore_non_core_regs+0x4c>
 8007b0c:	bd10      	pop	{r4, pc}
 8007b0e:	f000 fc4d 	bl	80083ac <__gnu_Unwind_Restore_VFP>
 8007b12:	6823      	ldr	r3, [r4, #0]
 8007b14:	0759      	lsls	r1, r3, #29
 8007b16:	d4f5      	bmi.n	8007b04 <restore_non_core_regs+0x1c>
 8007b18:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8007b1c:	f000 fc56 	bl	80083cc <__gnu_Unwind_Restore_VFP_D_16_to_31>
 8007b20:	6823      	ldr	r3, [r4, #0]
 8007b22:	071a      	lsls	r2, r3, #28
 8007b24:	d4f0      	bmi.n	8007b08 <restore_non_core_regs+0x20>
 8007b26:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8007b2a:	f000 fc57 	bl	80083dc <__gnu_Unwind_Restore_WMMXD>
 8007b2e:	6823      	ldr	r3, [r4, #0]
 8007b30:	06db      	lsls	r3, r3, #27
 8007b32:	d4eb      	bmi.n	8007b0c <restore_non_core_regs+0x24>
 8007b34:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
 8007b38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007b3c:	f000 bc92 	b.w	8008464 <__gnu_Unwind_Restore_WMMXC>

08007b40 <_Unwind_decode_typeinfo_ptr.isra.0>:
 8007b40:	6803      	ldr	r3, [r0, #0]
 8007b42:	b103      	cbz	r3, 8007b46 <_Unwind_decode_typeinfo_ptr.isra.0+0x6>
 8007b44:	4403      	add	r3, r0
 8007b46:	4618      	mov	r0, r3
 8007b48:	4770      	bx	lr
 8007b4a:	bf00      	nop

08007b4c <__gnu_unwind_24bit.isra.1>:
 8007b4c:	2009      	movs	r0, #9
 8007b4e:	4770      	bx	lr

08007b50 <_Unwind_DebugHook>:
 8007b50:	4770      	bx	lr
 8007b52:	bf00      	nop

08007b54 <unwind_phase2>:
 8007b54:	b570      	push	{r4, r5, r6, lr}
 8007b56:	4604      	mov	r4, r0
 8007b58:	460d      	mov	r5, r1
 8007b5a:	e008      	b.n	8007b6e <unwind_phase2+0x1a>
 8007b5c:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8007b5e:	6163      	str	r3, [r4, #20]
 8007b60:	462a      	mov	r2, r5
 8007b62:	6923      	ldr	r3, [r4, #16]
 8007b64:	4621      	mov	r1, r4
 8007b66:	2001      	movs	r0, #1
 8007b68:	4798      	blx	r3
 8007b6a:	2808      	cmp	r0, #8
 8007b6c:	d108      	bne.n	8007b80 <unwind_phase2+0x2c>
 8007b6e:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8007b70:	4620      	mov	r0, r4
 8007b72:	f7ff ff67 	bl	8007a44 <get_eit_entry>
 8007b76:	4606      	mov	r6, r0
 8007b78:	2800      	cmp	r0, #0
 8007b7a:	d0ef      	beq.n	8007b5c <unwind_phase2+0x8>
 8007b7c:	f005 fb5a 	bl	800d234 <abort>
 8007b80:	2807      	cmp	r0, #7
 8007b82:	d1fb      	bne.n	8007b7c <unwind_phase2+0x28>
 8007b84:	4630      	mov	r0, r6
 8007b86:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8007b88:	f7ff ffe2 	bl	8007b50 <_Unwind_DebugHook>
 8007b8c:	1d28      	adds	r0, r5, #4
 8007b8e:	f000 fc01 	bl	8008394 <__restore_core_regs>
 8007b92:	bf00      	nop

08007b94 <unwind_phase2_forced>:
 8007b94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007b98:	1d0c      	adds	r4, r1, #4
 8007b9a:	4605      	mov	r5, r0
 8007b9c:	4617      	mov	r7, r2
 8007b9e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007ba0:	f5ad 7d72 	sub.w	sp, sp, #968	; 0x3c8
 8007ba4:	ae03      	add	r6, sp, #12
 8007ba6:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8007ba8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007baa:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8007bac:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007bae:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8007bb0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8007bb4:	ac02      	add	r4, sp, #8
 8007bb6:	f8d5 800c 	ldr.w	r8, [r5, #12]
 8007bba:	f8d5 9018 	ldr.w	r9, [r5, #24]
 8007bbe:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8007bc2:	2300      	movs	r3, #0
 8007bc4:	6023      	str	r3, [r4, #0]
 8007bc6:	e021      	b.n	8007c0c <unwind_phase2_forced+0x78>
 8007bc8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007bca:	616b      	str	r3, [r5, #20]
 8007bcc:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8007bd0:	4621      	mov	r1, r4
 8007bd2:	a87a      	add	r0, sp, #488	; 0x1e8
 8007bd4:	f005 ffcd 	bl	800db72 <memcpy>
 8007bd8:	692b      	ldr	r3, [r5, #16]
 8007bda:	aa7a      	add	r2, sp, #488	; 0x1e8
 8007bdc:	4629      	mov	r1, r5
 8007bde:	4630      	mov	r0, r6
 8007be0:	4798      	blx	r3
 8007be2:	9b88      	ldr	r3, [sp, #544]	; 0x220
 8007be4:	e9cd 4900 	strd	r4, r9, [sp]
 8007be8:	4682      	mov	sl, r0
 8007bea:	6463      	str	r3, [r4, #68]	; 0x44
 8007bec:	4631      	mov	r1, r6
 8007bee:	462b      	mov	r3, r5
 8007bf0:	462a      	mov	r2, r5
 8007bf2:	2001      	movs	r0, #1
 8007bf4:	47c0      	blx	r8
 8007bf6:	4607      	mov	r7, r0
 8007bf8:	b9f8      	cbnz	r0, 8007c3a <unwind_phase2_forced+0xa6>
 8007bfa:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8007bfe:	a97a      	add	r1, sp, #488	; 0x1e8
 8007c00:	4620      	mov	r0, r4
 8007c02:	f005 ffb6 	bl	800db72 <memcpy>
 8007c06:	f1ba 0f08 	cmp.w	sl, #8
 8007c0a:	d11c      	bne.n	8007c46 <unwind_phase2_forced+0xb2>
 8007c0c:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8007c0e:	4628      	mov	r0, r5
 8007c10:	f7ff ff18 	bl	8007a44 <get_eit_entry>
 8007c14:	2f00      	cmp	r7, #0
 8007c16:	bf08      	it	eq
 8007c18:	2609      	moveq	r6, #9
 8007c1a:	4607      	mov	r7, r0
 8007c1c:	bf18      	it	ne
 8007c1e:	260a      	movne	r6, #10
 8007c20:	2800      	cmp	r0, #0
 8007c22:	d0d1      	beq.n	8007bc8 <unwind_phase2_forced+0x34>
 8007c24:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007c26:	f046 0110 	orr.w	r1, r6, #16
 8007c2a:	e9cd 4900 	strd	r4, r9, [sp]
 8007c2e:	462a      	mov	r2, r5
 8007c30:	6463      	str	r3, [r4, #68]	; 0x44
 8007c32:	2001      	movs	r0, #1
 8007c34:	462b      	mov	r3, r5
 8007c36:	47c0      	blx	r8
 8007c38:	b100      	cbz	r0, 8007c3c <unwind_phase2_forced+0xa8>
 8007c3a:	2709      	movs	r7, #9
 8007c3c:	4638      	mov	r0, r7
 8007c3e:	f50d 7d72 	add.w	sp, sp, #968	; 0x3c8
 8007c42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007c46:	f1ba 0f07 	cmp.w	sl, #7
 8007c4a:	d1f6      	bne.n	8007c3a <unwind_phase2_forced+0xa6>
 8007c4c:	4638      	mov	r0, r7
 8007c4e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8007c50:	f7ff ff7e 	bl	8007b50 <_Unwind_DebugHook>
 8007c54:	a803      	add	r0, sp, #12
 8007c56:	f000 fb9d 	bl	8008394 <__restore_core_regs>
 8007c5a:	bf00      	nop

08007c5c <_Unwind_GetCFA>:
 8007c5c:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8007c5e:	4770      	bx	lr

08007c60 <__gnu_Unwind_RaiseException>:
 8007c60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007c62:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8007c64:	640b      	str	r3, [r1, #64]	; 0x40
 8007c66:	1d0d      	adds	r5, r1, #4
 8007c68:	460f      	mov	r7, r1
 8007c6a:	4606      	mov	r6, r0
 8007c6c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007c6e:	b0f9      	sub	sp, #484	; 0x1e4
 8007c70:	ac01      	add	r4, sp, #4
 8007c72:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007c74:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007c76:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007c78:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007c7a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007c7c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8007c80:	f04f 35ff 	mov.w	r5, #4294967295
 8007c84:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8007c88:	9500      	str	r5, [sp, #0]
 8007c8a:	e006      	b.n	8007c9a <__gnu_Unwind_RaiseException+0x3a>
 8007c8c:	6933      	ldr	r3, [r6, #16]
 8007c8e:	466a      	mov	r2, sp
 8007c90:	4631      	mov	r1, r6
 8007c92:	4798      	blx	r3
 8007c94:	2808      	cmp	r0, #8
 8007c96:	4604      	mov	r4, r0
 8007c98:	d108      	bne.n	8007cac <__gnu_Unwind_RaiseException+0x4c>
 8007c9a:	9910      	ldr	r1, [sp, #64]	; 0x40
 8007c9c:	4630      	mov	r0, r6
 8007c9e:	f7ff fed1 	bl	8007a44 <get_eit_entry>
 8007ca2:	2800      	cmp	r0, #0
 8007ca4:	d0f2      	beq.n	8007c8c <__gnu_Unwind_RaiseException+0x2c>
 8007ca6:	2009      	movs	r0, #9
 8007ca8:	b079      	add	sp, #484	; 0x1e4
 8007caa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007cac:	4668      	mov	r0, sp
 8007cae:	f7ff ff1b 	bl	8007ae8 <restore_non_core_regs>
 8007cb2:	2c06      	cmp	r4, #6
 8007cb4:	d1f7      	bne.n	8007ca6 <__gnu_Unwind_RaiseException+0x46>
 8007cb6:	4639      	mov	r1, r7
 8007cb8:	4630      	mov	r0, r6
 8007cba:	f7ff ff4b 	bl	8007b54 <unwind_phase2>
 8007cbe:	bf00      	nop

08007cc0 <__gnu_Unwind_ForcedUnwind>:
 8007cc0:	b430      	push	{r4, r5}
 8007cc2:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8007cc4:	60c1      	str	r1, [r0, #12]
 8007cc6:	6182      	str	r2, [r0, #24]
 8007cc8:	4619      	mov	r1, r3
 8007cca:	641d      	str	r5, [r3, #64]	; 0x40
 8007ccc:	2200      	movs	r2, #0
 8007cce:	bc30      	pop	{r4, r5}
 8007cd0:	e760      	b.n	8007b94 <unwind_phase2_forced>
 8007cd2:	bf00      	nop

08007cd4 <__gnu_Unwind_Resume>:
 8007cd4:	b570      	push	{r4, r5, r6, lr}
 8007cd6:	68c6      	ldr	r6, [r0, #12]
 8007cd8:	6943      	ldr	r3, [r0, #20]
 8007cda:	640b      	str	r3, [r1, #64]	; 0x40
 8007cdc:	b9be      	cbnz	r6, 8007d0e <__gnu_Unwind_Resume+0x3a>
 8007cde:	6903      	ldr	r3, [r0, #16]
 8007ce0:	460a      	mov	r2, r1
 8007ce2:	4604      	mov	r4, r0
 8007ce4:	460d      	mov	r5, r1
 8007ce6:	4601      	mov	r1, r0
 8007ce8:	2002      	movs	r0, #2
 8007cea:	4798      	blx	r3
 8007cec:	2807      	cmp	r0, #7
 8007cee:	d007      	beq.n	8007d00 <__gnu_Unwind_Resume+0x2c>
 8007cf0:	2808      	cmp	r0, #8
 8007cf2:	d103      	bne.n	8007cfc <__gnu_Unwind_Resume+0x28>
 8007cf4:	4629      	mov	r1, r5
 8007cf6:	4620      	mov	r0, r4
 8007cf8:	f7ff ff2c 	bl	8007b54 <unwind_phase2>
 8007cfc:	f005 fa9a 	bl	800d234 <abort>
 8007d00:	4630      	mov	r0, r6
 8007d02:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8007d04:	f7ff ff24 	bl	8007b50 <_Unwind_DebugHook>
 8007d08:	1d28      	adds	r0, r5, #4
 8007d0a:	f000 fb43 	bl	8008394 <__restore_core_regs>
 8007d0e:	2201      	movs	r2, #1
 8007d10:	f7ff ff40 	bl	8007b94 <unwind_phase2_forced>
 8007d14:	f005 fa8e 	bl	800d234 <abort>

08007d18 <__gnu_Unwind_Resume_or_Rethrow>:
 8007d18:	68c2      	ldr	r2, [r0, #12]
 8007d1a:	b11a      	cbz	r2, 8007d24 <__gnu_Unwind_Resume_or_Rethrow+0xc>
 8007d1c:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 8007d1e:	640a      	str	r2, [r1, #64]	; 0x40
 8007d20:	2200      	movs	r2, #0
 8007d22:	e737      	b.n	8007b94 <unwind_phase2_forced>
 8007d24:	e79c      	b.n	8007c60 <__gnu_Unwind_RaiseException>
 8007d26:	bf00      	nop

08007d28 <_Unwind_Complete>:
 8007d28:	4770      	bx	lr
 8007d2a:	bf00      	nop

08007d2c <_Unwind_DeleteException>:
 8007d2c:	6883      	ldr	r3, [r0, #8]
 8007d2e:	b113      	cbz	r3, 8007d36 <_Unwind_DeleteException+0xa>
 8007d30:	4601      	mov	r1, r0
 8007d32:	2001      	movs	r0, #1
 8007d34:	4718      	bx	r3
 8007d36:	4770      	bx	lr

08007d38 <_Unwind_VRS_Get>:
 8007d38:	2904      	cmp	r1, #4
 8007d3a:	d807      	bhi.n	8007d4c <_Unwind_VRS_Get+0x14>
 8007d3c:	e8df f001 	tbb	[pc, r1]
 8007d40:	08060803 	.word	0x08060803
 8007d44:	08          	.byte	0x08
 8007d45:	00          	.byte	0x00
 8007d46:	b90b      	cbnz	r3, 8007d4c <_Unwind_VRS_Get+0x14>
 8007d48:	2a0f      	cmp	r2, #15
 8007d4a:	d903      	bls.n	8007d54 <_Unwind_VRS_Get+0x1c>
 8007d4c:	2002      	movs	r0, #2
 8007d4e:	4770      	bx	lr
 8007d50:	2001      	movs	r0, #1
 8007d52:	4770      	bx	lr
 8007d54:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8007d58:	4618      	mov	r0, r3
 8007d5a:	6853      	ldr	r3, [r2, #4]
 8007d5c:	9a00      	ldr	r2, [sp, #0]
 8007d5e:	6013      	str	r3, [r2, #0]
 8007d60:	4770      	bx	lr
 8007d62:	bf00      	nop

08007d64 <_Unwind_GetGR>:
 8007d64:	b510      	push	{r4, lr}
 8007d66:	b084      	sub	sp, #16
 8007d68:	2300      	movs	r3, #0
 8007d6a:	ac03      	add	r4, sp, #12
 8007d6c:	460a      	mov	r2, r1
 8007d6e:	9400      	str	r4, [sp, #0]
 8007d70:	4619      	mov	r1, r3
 8007d72:	f7ff ffe1 	bl	8007d38 <_Unwind_VRS_Get>
 8007d76:	9803      	ldr	r0, [sp, #12]
 8007d78:	b004      	add	sp, #16
 8007d7a:	bd10      	pop	{r4, pc}

08007d7c <_Unwind_VRS_Set>:
 8007d7c:	2904      	cmp	r1, #4
 8007d7e:	d807      	bhi.n	8007d90 <_Unwind_VRS_Set+0x14>
 8007d80:	e8df f001 	tbb	[pc, r1]
 8007d84:	08060803 	.word	0x08060803
 8007d88:	08          	.byte	0x08
 8007d89:	00          	.byte	0x00
 8007d8a:	b90b      	cbnz	r3, 8007d90 <_Unwind_VRS_Set+0x14>
 8007d8c:	2a0f      	cmp	r2, #15
 8007d8e:	d903      	bls.n	8007d98 <_Unwind_VRS_Set+0x1c>
 8007d90:	2002      	movs	r0, #2
 8007d92:	4770      	bx	lr
 8007d94:	2001      	movs	r0, #1
 8007d96:	4770      	bx	lr
 8007d98:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8007d9c:	9a00      	ldr	r2, [sp, #0]
 8007d9e:	6812      	ldr	r2, [r2, #0]
 8007da0:	6042      	str	r2, [r0, #4]
 8007da2:	4618      	mov	r0, r3
 8007da4:	4770      	bx	lr
 8007da6:	bf00      	nop

08007da8 <_Unwind_SetGR>:
 8007da8:	b510      	push	{r4, lr}
 8007daa:	b084      	sub	sp, #16
 8007dac:	ac04      	add	r4, sp, #16
 8007dae:	2300      	movs	r3, #0
 8007db0:	f844 2d04 	str.w	r2, [r4, #-4]!
 8007db4:	460a      	mov	r2, r1
 8007db6:	9400      	str	r4, [sp, #0]
 8007db8:	4619      	mov	r1, r3
 8007dba:	f7ff ffdf 	bl	8007d7c <_Unwind_VRS_Set>
 8007dbe:	b004      	add	sp, #16
 8007dc0:	bd10      	pop	{r4, pc}
 8007dc2:	bf00      	nop

08007dc4 <__gnu_Unwind_Backtrace>:
 8007dc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007dc6:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
 8007dc8:	6413      	str	r3, [r2, #64]	; 0x40
 8007dca:	1d15      	adds	r5, r2, #4
 8007dcc:	4607      	mov	r7, r0
 8007dce:	460e      	mov	r6, r1
 8007dd0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007dd2:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
 8007dd6:	ac17      	add	r4, sp, #92	; 0x5c
 8007dd8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007dda:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007ddc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007dde:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007de0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007de2:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8007de6:	f04f 35ff 	mov.w	r5, #4294967295
 8007dea:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8007dee:	9516      	str	r5, [sp, #88]	; 0x58
 8007df0:	e010      	b.n	8007e14 <__gnu_Unwind_Backtrace+0x50>
 8007df2:	a816      	add	r0, sp, #88	; 0x58
 8007df4:	f7ff ffd8 	bl	8007da8 <_Unwind_SetGR>
 8007df8:	4631      	mov	r1, r6
 8007dfa:	a816      	add	r0, sp, #88	; 0x58
 8007dfc:	47b8      	blx	r7
 8007dfe:	aa16      	add	r2, sp, #88	; 0x58
 8007e00:	4669      	mov	r1, sp
 8007e02:	b978      	cbnz	r0, 8007e24 <__gnu_Unwind_Backtrace+0x60>
 8007e04:	9b04      	ldr	r3, [sp, #16]
 8007e06:	2008      	movs	r0, #8
 8007e08:	4798      	blx	r3
 8007e0a:	2805      	cmp	r0, #5
 8007e0c:	4604      	mov	r4, r0
 8007e0e:	d00a      	beq.n	8007e26 <__gnu_Unwind_Backtrace+0x62>
 8007e10:	2809      	cmp	r0, #9
 8007e12:	d007      	beq.n	8007e24 <__gnu_Unwind_Backtrace+0x60>
 8007e14:	9926      	ldr	r1, [sp, #152]	; 0x98
 8007e16:	4668      	mov	r0, sp
 8007e18:	f7ff fe14 	bl	8007a44 <get_eit_entry>
 8007e1c:	466a      	mov	r2, sp
 8007e1e:	210c      	movs	r1, #12
 8007e20:	2800      	cmp	r0, #0
 8007e22:	d0e6      	beq.n	8007df2 <__gnu_Unwind_Backtrace+0x2e>
 8007e24:	2409      	movs	r4, #9
 8007e26:	a816      	add	r0, sp, #88	; 0x58
 8007e28:	f7ff fe5e 	bl	8007ae8 <restore_non_core_regs>
 8007e2c:	4620      	mov	r0, r4
 8007e2e:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
 8007e32:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007e34 <__gnu_unwind_pr_common>:
 8007e34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e38:	460d      	mov	r5, r1
 8007e3a:	6cc9      	ldr	r1, [r1, #76]	; 0x4c
 8007e3c:	b089      	sub	sp, #36	; 0x24
 8007e3e:	1d0c      	adds	r4, r1, #4
 8007e40:	4616      	mov	r6, r2
 8007e42:	f000 0b03 	and.w	fp, r0, #3
 8007e46:	680a      	ldr	r2, [r1, #0]
 8007e48:	9406      	str	r4, [sp, #24]
 8007e4a:	461f      	mov	r7, r3
 8007e4c:	2b00      	cmp	r3, #0
 8007e4e:	d068      	beq.n	8007f22 <__gnu_unwind_pr_common+0xee>
 8007e50:	0c13      	lsrs	r3, r2, #16
 8007e52:	b2d9      	uxtb	r1, r3
 8007e54:	0412      	lsls	r2, r2, #16
 8007e56:	f88d 301d 	strb.w	r3, [sp, #29]
 8007e5a:	2302      	movs	r3, #2
 8007e5c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8007e60:	9205      	str	r2, [sp, #20]
 8007e62:	f88d 301c 	strb.w	r3, [sp, #28]
 8007e66:	6d2b      	ldr	r3, [r5, #80]	; 0x50
 8007e68:	f1bb 0f02 	cmp.w	fp, #2
 8007e6c:	bf08      	it	eq
 8007e6e:	6bac      	ldreq	r4, [r5, #56]	; 0x38
 8007e70:	f013 0301 	ands.w	r3, r3, #1
 8007e74:	d146      	bne.n	8007f04 <__gnu_unwind_pr_common+0xd0>
 8007e76:	9301      	str	r3, [sp, #4]
 8007e78:	f000 0308 	and.w	r3, r0, #8
 8007e7c:	9300      	str	r3, [sp, #0]
 8007e7e:	f8d4 9000 	ldr.w	r9, [r4]
 8007e82:	f1b9 0f00 	cmp.w	r9, #0
 8007e86:	f000 80f3 	beq.w	8008070 <__gnu_unwind_pr_common+0x23c>
 8007e8a:	2f02      	cmp	r7, #2
 8007e8c:	d045      	beq.n	8007f1a <__gnu_unwind_pr_common+0xe6>
 8007e8e:	f8b4 9000 	ldrh.w	r9, [r4]
 8007e92:	f8b4 8002 	ldrh.w	r8, [r4, #2]
 8007e96:	3404      	adds	r4, #4
 8007e98:	6cab      	ldr	r3, [r5, #72]	; 0x48
 8007e9a:	f028 0a01 	bic.w	sl, r8, #1
 8007e9e:	210f      	movs	r1, #15
 8007ea0:	4630      	mov	r0, r6
 8007ea2:	449a      	add	sl, r3
 8007ea4:	f7ff ff5e 	bl	8007d64 <_Unwind_GetGR>
 8007ea8:	4582      	cmp	sl, r0
 8007eaa:	d834      	bhi.n	8007f16 <__gnu_unwind_pr_common+0xe2>
 8007eac:	f029 0301 	bic.w	r3, r9, #1
 8007eb0:	4453      	add	r3, sl
 8007eb2:	4283      	cmp	r3, r0
 8007eb4:	bf94      	ite	ls
 8007eb6:	2000      	movls	r0, #0
 8007eb8:	2001      	movhi	r0, #1
 8007eba:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8007ebe:	f008 0802 	and.w	r8, r8, #2
 8007ec2:	f009 0901 	and.w	r9, r9, #1
 8007ec6:	ea48 0809 	orr.w	r8, r8, r9
 8007eca:	f1b8 0f01 	cmp.w	r8, #1
 8007ece:	d03a      	beq.n	8007f46 <__gnu_unwind_pr_common+0x112>
 8007ed0:	d331      	bcc.n	8007f36 <__gnu_unwind_pr_common+0x102>
 8007ed2:	f1b8 0f02 	cmp.w	r8, #2
 8007ed6:	d11a      	bne.n	8007f0e <__gnu_unwind_pr_common+0xda>
 8007ed8:	6823      	ldr	r3, [r4, #0]
 8007eda:	f023 4a00 	bic.w	sl, r3, #2147483648	; 0x80000000
 8007ede:	f1bb 0f00 	cmp.w	fp, #0
 8007ee2:	d166      	bne.n	8007fb2 <__gnu_unwind_pr_common+0x17e>
 8007ee4:	b130      	cbz	r0, 8007ef4 <__gnu_unwind_pr_common+0xc0>
 8007ee6:	9a00      	ldr	r2, [sp, #0]
 8007ee8:	2a00      	cmp	r2, #0
 8007eea:	d06c      	beq.n	8007fc6 <__gnu_unwind_pr_common+0x192>
 8007eec:	f1ba 0f00 	cmp.w	sl, #0
 8007ef0:	f000 8090 	beq.w	8008014 <__gnu_unwind_pr_common+0x1e0>
 8007ef4:	2b00      	cmp	r3, #0
 8007ef6:	da00      	bge.n	8007efa <__gnu_unwind_pr_common+0xc6>
 8007ef8:	3404      	adds	r4, #4
 8007efa:	f10a 0301 	add.w	r3, sl, #1
 8007efe:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8007f02:	e7bc      	b.n	8007e7e <__gnu_unwind_pr_common+0x4a>
 8007f04:	4630      	mov	r0, r6
 8007f06:	a905      	add	r1, sp, #20
 8007f08:	f000 fb46 	bl	8008598 <__gnu_unwind_execute>
 8007f0c:	b178      	cbz	r0, 8007f2e <__gnu_unwind_pr_common+0xfa>
 8007f0e:	2009      	movs	r0, #9
 8007f10:	b009      	add	sp, #36	; 0x24
 8007f12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f16:	2000      	movs	r0, #0
 8007f18:	e7cf      	b.n	8007eba <__gnu_unwind_pr_common+0x86>
 8007f1a:	f8d4 8004 	ldr.w	r8, [r4, #4]
 8007f1e:	3408      	adds	r4, #8
 8007f20:	e7ba      	b.n	8007e98 <__gnu_unwind_pr_common+0x64>
 8007f22:	0212      	lsls	r2, r2, #8
 8007f24:	2303      	movs	r3, #3
 8007f26:	9205      	str	r2, [sp, #20]
 8007f28:	f8ad 301c 	strh.w	r3, [sp, #28]
 8007f2c:	e79b      	b.n	8007e66 <__gnu_unwind_pr_common+0x32>
 8007f2e:	2008      	movs	r0, #8
 8007f30:	b009      	add	sp, #36	; 0x24
 8007f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007f36:	f1bb 0f00 	cmp.w	fp, #0
 8007f3a:	d002      	beq.n	8007f42 <__gnu_unwind_pr_common+0x10e>
 8007f3c:	2800      	cmp	r0, #0
 8007f3e:	f040 80b4 	bne.w	80080aa <__gnu_unwind_pr_common+0x276>
 8007f42:	3404      	adds	r4, #4
 8007f44:	e79b      	b.n	8007e7e <__gnu_unwind_pr_common+0x4a>
 8007f46:	f1bb 0f00 	cmp.w	fp, #0
 8007f4a:	d118      	bne.n	8007f7e <__gnu_unwind_pr_common+0x14a>
 8007f4c:	b1a8      	cbz	r0, 8007f7a <__gnu_unwind_pr_common+0x146>
 8007f4e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8007f52:	1c99      	adds	r1, r3, #2
 8007f54:	ea4f 72d2 	mov.w	r2, r2, lsr #31
 8007f58:	d0d9      	beq.n	8007f0e <__gnu_unwind_pr_common+0xda>
 8007f5a:	f105 0158 	add.w	r1, r5, #88	; 0x58
 8007f5e:	3301      	adds	r3, #1
 8007f60:	9104      	str	r1, [sp, #16]
 8007f62:	f000 80b5 	beq.w	80080d0 <__gnu_unwind_pr_common+0x29c>
 8007f66:	1d20      	adds	r0, r4, #4
 8007f68:	f7ff fdea 	bl	8007b40 <_Unwind_decode_typeinfo_ptr.isra.0>
 8007f6c:	ab04      	add	r3, sp, #16
 8007f6e:	4601      	mov	r1, r0
 8007f70:	4628      	mov	r0, r5
 8007f72:	f004 fcc7 	bl	800c904 <__cxa_type_match>
 8007f76:	2800      	cmp	r0, #0
 8007f78:	d167      	bne.n	800804a <__gnu_unwind_pr_common+0x216>
 8007f7a:	3408      	adds	r4, #8
 8007f7c:	e77f      	b.n	8007e7e <__gnu_unwind_pr_common+0x4a>
 8007f7e:	210d      	movs	r1, #13
 8007f80:	4630      	mov	r0, r6
 8007f82:	f8d5 8020 	ldr.w	r8, [r5, #32]
 8007f86:	f7ff feed 	bl	8007d64 <_Unwind_GetGR>
 8007f8a:	4580      	cmp	r8, r0
 8007f8c:	d1f5      	bne.n	8007f7a <__gnu_unwind_pr_common+0x146>
 8007f8e:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8007f90:	429c      	cmp	r4, r3
 8007f92:	d1f2      	bne.n	8007f7a <__gnu_unwind_pr_common+0x146>
 8007f94:	4620      	mov	r0, r4
 8007f96:	f7ff fd07 	bl	80079a8 <selfrel_offset31>
 8007f9a:	210f      	movs	r1, #15
 8007f9c:	4602      	mov	r2, r0
 8007f9e:	4630      	mov	r0, r6
 8007fa0:	f7ff ff02 	bl	8007da8 <_Unwind_SetGR>
 8007fa4:	4630      	mov	r0, r6
 8007fa6:	462a      	mov	r2, r5
 8007fa8:	2100      	movs	r1, #0
 8007faa:	f7ff fefd 	bl	8007da8 <_Unwind_SetGR>
 8007fae:	2007      	movs	r0, #7
 8007fb0:	e7ae      	b.n	8007f10 <__gnu_unwind_pr_common+0xdc>
 8007fb2:	210d      	movs	r1, #13
 8007fb4:	4630      	mov	r0, r6
 8007fb6:	f8d5 8020 	ldr.w	r8, [r5, #32]
 8007fba:	f7ff fed3 	bl	8007d64 <_Unwind_GetGR>
 8007fbe:	4580      	cmp	r8, r0
 8007fc0:	d032      	beq.n	8008028 <__gnu_unwind_pr_common+0x1f4>
 8007fc2:	6823      	ldr	r3, [r4, #0]
 8007fc4:	e796      	b.n	8007ef4 <__gnu_unwind_pr_common+0xc0>
 8007fc6:	f1ba 0f00 	cmp.w	sl, #0
 8007fca:	d023      	beq.n	8008014 <__gnu_unwind_pr_common+0x1e0>
 8007fcc:	f105 0358 	add.w	r3, r5, #88	; 0x58
 8007fd0:	f104 0804 	add.w	r8, r4, #4
 8007fd4:	f8cd b008 	str.w	fp, [sp, #8]
 8007fd8:	f8dd 9000 	ldr.w	r9, [sp]
 8007fdc:	9703      	str	r7, [sp, #12]
 8007fde:	46a3      	mov	fp, r4
 8007fe0:	461c      	mov	r4, r3
 8007fe2:	e002      	b.n	8007fea <__gnu_unwind_pr_common+0x1b6>
 8007fe4:	4557      	cmp	r7, sl
 8007fe6:	46b9      	mov	r9, r7
 8007fe8:	d040      	beq.n	800806c <__gnu_unwind_pr_common+0x238>
 8007fea:	4640      	mov	r0, r8
 8007fec:	9404      	str	r4, [sp, #16]
 8007fee:	f7ff fda7 	bl	8007b40 <_Unwind_decode_typeinfo_ptr.isra.0>
 8007ff2:	ab04      	add	r3, sp, #16
 8007ff4:	4601      	mov	r1, r0
 8007ff6:	2200      	movs	r2, #0
 8007ff8:	4628      	mov	r0, r5
 8007ffa:	f004 fc83 	bl	800c904 <__cxa_type_match>
 8007ffe:	f109 0701 	add.w	r7, r9, #1
 8008002:	f108 0804 	add.w	r8, r8, #4
 8008006:	2800      	cmp	r0, #0
 8008008:	d0ec      	beq.n	8007fe4 <__gnu_unwind_pr_common+0x1b0>
 800800a:	45d1      	cmp	r9, sl
 800800c:	465c      	mov	r4, fp
 800800e:	e9dd b702 	ldrd	fp, r7, [sp, #8]
 8008012:	d1d6      	bne.n	8007fc2 <__gnu_unwind_pr_common+0x18e>
 8008014:	4630      	mov	r0, r6
 8008016:	210d      	movs	r1, #13
 8008018:	f7ff fea4 	bl	8007d64 <_Unwind_GetGR>
 800801c:	9b04      	ldr	r3, [sp, #16]
 800801e:	6228      	str	r0, [r5, #32]
 8008020:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
 8008024:	2006      	movs	r0, #6
 8008026:	e773      	b.n	8007f10 <__gnu_unwind_pr_common+0xdc>
 8008028:	6aab      	ldr	r3, [r5, #40]	; 0x28
 800802a:	429c      	cmp	r4, r3
 800802c:	d1c9      	bne.n	8007fc2 <__gnu_unwind_pr_common+0x18e>
 800802e:	2204      	movs	r2, #4
 8008030:	f04f 0800 	mov.w	r8, #0
 8008034:	18a3      	adds	r3, r4, r2
 8008036:	e9c5 a80a 	strd	sl, r8, [r5, #40]	; 0x28
 800803a:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
 800803e:	6823      	ldr	r3, [r4, #0]
 8008040:	4543      	cmp	r3, r8
 8008042:	db4d      	blt.n	80080e0 <__gnu_unwind_pr_common+0x2ac>
 8008044:	2301      	movs	r3, #1
 8008046:	9301      	str	r3, [sp, #4]
 8008048:	e757      	b.n	8007efa <__gnu_unwind_pr_common+0xc6>
 800804a:	4680      	mov	r8, r0
 800804c:	210d      	movs	r1, #13
 800804e:	4630      	mov	r0, r6
 8008050:	f7ff fe88 	bl	8007d64 <_Unwind_GetGR>
 8008054:	f1b8 0f02 	cmp.w	r8, #2
 8008058:	6228      	str	r0, [r5, #32]
 800805a:	d13e      	bne.n	80080da <__gnu_unwind_pr_common+0x2a6>
 800805c:	462b      	mov	r3, r5
 800805e:	9a04      	ldr	r2, [sp, #16]
 8008060:	f843 2f2c 	str.w	r2, [r3, #44]!
 8008064:	626b      	str	r3, [r5, #36]	; 0x24
 8008066:	62ac      	str	r4, [r5, #40]	; 0x28
 8008068:	2006      	movs	r0, #6
 800806a:	e751      	b.n	8007f10 <__gnu_unwind_pr_common+0xdc>
 800806c:	465c      	mov	r4, fp
 800806e:	e7d1      	b.n	8008014 <__gnu_unwind_pr_common+0x1e0>
 8008070:	a905      	add	r1, sp, #20
 8008072:	4630      	mov	r0, r6
 8008074:	f000 fa90 	bl	8008598 <__gnu_unwind_execute>
 8008078:	2800      	cmp	r0, #0
 800807a:	f47f af48 	bne.w	8007f0e <__gnu_unwind_pr_common+0xda>
 800807e:	9b01      	ldr	r3, [sp, #4]
 8008080:	2b00      	cmp	r3, #0
 8008082:	f43f af54 	beq.w	8007f2e <__gnu_unwind_pr_common+0xfa>
 8008086:	210f      	movs	r1, #15
 8008088:	4630      	mov	r0, r6
 800808a:	f7ff fe6b 	bl	8007d64 <_Unwind_GetGR>
 800808e:	210e      	movs	r1, #14
 8008090:	4602      	mov	r2, r0
 8008092:	4630      	mov	r0, r6
 8008094:	f7ff fe88 	bl	8007da8 <_Unwind_SetGR>
 8008098:	4630      	mov	r0, r6
 800809a:	4a1a      	ldr	r2, [pc, #104]	; (8008104 <__gnu_unwind_pr_common+0x2d0>)
 800809c:	210f      	movs	r1, #15
 800809e:	f7ff fe83 	bl	8007da8 <_Unwind_SetGR>
 80080a2:	2007      	movs	r0, #7
 80080a4:	b009      	add	sp, #36	; 0x24
 80080a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80080aa:	4620      	mov	r0, r4
 80080ac:	f7ff fc7c 	bl	80079a8 <selfrel_offset31>
 80080b0:	3404      	adds	r4, #4
 80080b2:	4607      	mov	r7, r0
 80080b4:	63ac      	str	r4, [r5, #56]	; 0x38
 80080b6:	4628      	mov	r0, r5
 80080b8:	f004 fc7c 	bl	800c9b4 <__cxa_begin_cleanup>
 80080bc:	2800      	cmp	r0, #0
 80080be:	f43f af26 	beq.w	8007f0e <__gnu_unwind_pr_common+0xda>
 80080c2:	4630      	mov	r0, r6
 80080c4:	463a      	mov	r2, r7
 80080c6:	210f      	movs	r1, #15
 80080c8:	f7ff fe6e 	bl	8007da8 <_Unwind_SetGR>
 80080cc:	2007      	movs	r0, #7
 80080ce:	e71f      	b.n	8007f10 <__gnu_unwind_pr_common+0xdc>
 80080d0:	4630      	mov	r0, r6
 80080d2:	210d      	movs	r1, #13
 80080d4:	f7ff fe46 	bl	8007d64 <_Unwind_GetGR>
 80080d8:	6228      	str	r0, [r5, #32]
 80080da:	9b04      	ldr	r3, [sp, #16]
 80080dc:	626b      	str	r3, [r5, #36]	; 0x24
 80080de:	e7c2      	b.n	8008066 <__gnu_unwind_pr_common+0x232>
 80080e0:	f10a 0001 	add.w	r0, sl, #1
 80080e4:	eb04 0080 	add.w	r0, r4, r0, lsl #2
 80080e8:	f7ff fc5e 	bl	80079a8 <selfrel_offset31>
 80080ec:	210f      	movs	r1, #15
 80080ee:	4602      	mov	r2, r0
 80080f0:	4630      	mov	r0, r6
 80080f2:	f7ff fe59 	bl	8007da8 <_Unwind_SetGR>
 80080f6:	4630      	mov	r0, r6
 80080f8:	462a      	mov	r2, r5
 80080fa:	4641      	mov	r1, r8
 80080fc:	f7ff fe54 	bl	8007da8 <_Unwind_SetGR>
 8008100:	2007      	movs	r0, #7
 8008102:	e705      	b.n	8007f10 <__gnu_unwind_pr_common+0xdc>
 8008104:	0800c81d 	.word	0x0800c81d

08008108 <__aeabi_unwind_cpp_pr0>:
 8008108:	2300      	movs	r3, #0
 800810a:	e693      	b.n	8007e34 <__gnu_unwind_pr_common>

0800810c <__aeabi_unwind_cpp_pr1>:
 800810c:	2301      	movs	r3, #1
 800810e:	e691      	b.n	8007e34 <__gnu_unwind_pr_common>

08008110 <__aeabi_unwind_cpp_pr2>:
 8008110:	2302      	movs	r3, #2
 8008112:	e68f      	b.n	8007e34 <__gnu_unwind_pr_common>

08008114 <_Unwind_VRS_Pop>:
 8008114:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008118:	4605      	mov	r5, r0
 800811a:	b0c4      	sub	sp, #272	; 0x110
 800811c:	2904      	cmp	r1, #4
 800811e:	d806      	bhi.n	800812e <_Unwind_VRS_Pop+0x1a>
 8008120:	e8df f001 	tbb	[pc, r1]
 8008124:	03052b4d 	.word	0x03052b4d
 8008128:	09          	.byte	0x09
 8008129:	00          	.byte	0x00
 800812a:	2b03      	cmp	r3, #3
 800812c:	d05f      	beq.n	80081ee <_Unwind_VRS_Pop+0xda>
 800812e:	2002      	movs	r0, #2
 8008130:	b044      	add	sp, #272	; 0x110
 8008132:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008136:	2b00      	cmp	r3, #0
 8008138:	d1f9      	bne.n	800812e <_Unwind_VRS_Pop+0x1a>
 800813a:	2a10      	cmp	r2, #16
 800813c:	d8f7      	bhi.n	800812e <_Unwind_VRS_Pop+0x1a>
 800813e:	682b      	ldr	r3, [r5, #0]
 8008140:	06dc      	lsls	r4, r3, #27
 8008142:	f100 80f4 	bmi.w	800832e <_Unwind_VRS_Pop+0x21a>
 8008146:	ac22      	add	r4, sp, #136	; 0x88
 8008148:	4620      	mov	r0, r4
 800814a:	9201      	str	r2, [sp, #4]
 800814c:	f000 f994 	bl	8008478 <__gnu_Unwind_Save_WMMXC>
 8008150:	6ba8      	ldr	r0, [r5, #56]	; 0x38
 8008152:	9a01      	ldr	r2, [sp, #4]
 8008154:	2300      	movs	r3, #0
 8008156:	2601      	movs	r6, #1
 8008158:	fa06 f103 	lsl.w	r1, r6, r3
 800815c:	4211      	tst	r1, r2
 800815e:	d003      	beq.n	8008168 <_Unwind_VRS_Pop+0x54>
 8008160:	6801      	ldr	r1, [r0, #0]
 8008162:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8008166:	3004      	adds	r0, #4
 8008168:	3301      	adds	r3, #1
 800816a:	2b04      	cmp	r3, #4
 800816c:	d1f4      	bne.n	8008158 <_Unwind_VRS_Pop+0x44>
 800816e:	63a8      	str	r0, [r5, #56]	; 0x38
 8008170:	4620      	mov	r0, r4
 8008172:	f000 f977 	bl	8008464 <__gnu_Unwind_Restore_WMMXC>
 8008176:	2000      	movs	r0, #0
 8008178:	e7da      	b.n	8008130 <_Unwind_VRS_Pop+0x1c>
 800817a:	2b01      	cmp	r3, #1
 800817c:	ea4f 4612 	mov.w	r6, r2, lsr #16
 8008180:	b297      	uxth	r7, r2
 8008182:	d052      	beq.n	800822a <_Unwind_VRS_Pop+0x116>
 8008184:	2b05      	cmp	r3, #5
 8008186:	d1d2      	bne.n	800812e <_Unwind_VRS_Pop+0x1a>
 8008188:	eb06 0807 	add.w	r8, r6, r7
 800818c:	f1b8 0f20 	cmp.w	r8, #32
 8008190:	d8cd      	bhi.n	800812e <_Unwind_VRS_Pop+0x1a>
 8008192:	2e0f      	cmp	r6, #15
 8008194:	f240 8099 	bls.w	80082ca <_Unwind_VRS_Pop+0x1b6>
 8008198:	46b8      	mov	r8, r7
 800819a:	2f00      	cmp	r7, #0
 800819c:	f040 80db 	bne.w	8008356 <_Unwind_VRS_Pop+0x242>
 80081a0:	6baa      	ldr	r2, [r5, #56]	; 0x38
 80081a2:	63aa      	str	r2, [r5, #56]	; 0x38
 80081a4:	2e0f      	cmp	r6, #15
 80081a6:	f240 80be 	bls.w	8008326 <_Unwind_VRS_Pop+0x212>
 80081aa:	f1b8 0f00 	cmp.w	r8, #0
 80081ae:	d002      	beq.n	80081b6 <_Unwind_VRS_Pop+0xa2>
 80081b0:	a802      	add	r0, sp, #8
 80081b2:	f000 f90b 	bl	80083cc <__gnu_Unwind_Restore_VFP_D_16_to_31>
 80081b6:	2000      	movs	r0, #0
 80081b8:	b044      	add	sp, #272	; 0x110
 80081ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80081be:	2b00      	cmp	r3, #0
 80081c0:	d1b5      	bne.n	800812e <_Unwind_VRS_Pop+0x1a>
 80081c2:	6bac      	ldr	r4, [r5, #56]	; 0x38
 80081c4:	b297      	uxth	r7, r2
 80081c6:	1d28      	adds	r0, r5, #4
 80081c8:	2601      	movs	r6, #1
 80081ca:	fa06 f103 	lsl.w	r1, r6, r3
 80081ce:	4239      	tst	r1, r7
 80081d0:	f103 0301 	add.w	r3, r3, #1
 80081d4:	d002      	beq.n	80081dc <_Unwind_VRS_Pop+0xc8>
 80081d6:	6821      	ldr	r1, [r4, #0]
 80081d8:	6001      	str	r1, [r0, #0]
 80081da:	3404      	adds	r4, #4
 80081dc:	2b10      	cmp	r3, #16
 80081de:	f100 0004 	add.w	r0, r0, #4
 80081e2:	d1f2      	bne.n	80081ca <_Unwind_VRS_Pop+0xb6>
 80081e4:	f412 5000 	ands.w	r0, r2, #8192	; 0x2000
 80081e8:	d1e5      	bne.n	80081b6 <_Unwind_VRS_Pop+0xa2>
 80081ea:	63ac      	str	r4, [r5, #56]	; 0x38
 80081ec:	e7a0      	b.n	8008130 <_Unwind_VRS_Pop+0x1c>
 80081ee:	0c16      	lsrs	r6, r2, #16
 80081f0:	b297      	uxth	r7, r2
 80081f2:	19f3      	adds	r3, r6, r7
 80081f4:	2b10      	cmp	r3, #16
 80081f6:	d89a      	bhi.n	800812e <_Unwind_VRS_Pop+0x1a>
 80081f8:	682b      	ldr	r3, [r5, #0]
 80081fa:	071a      	lsls	r2, r3, #28
 80081fc:	d45d      	bmi.n	80082ba <_Unwind_VRS_Pop+0x1a6>
 80081fe:	ac22      	add	r4, sp, #136	; 0x88
 8008200:	4620      	mov	r0, r4
 8008202:	f000 f90d 	bl	8008420 <__gnu_Unwind_Save_WMMXD>
 8008206:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 800820a:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800820c:	b13f      	cbz	r7, 800821e <_Unwind_VRS_Pop+0x10a>
 800820e:	eb03 02c7 	add.w	r2, r3, r7, lsl #3
 8008212:	6818      	ldr	r0, [r3, #0]
 8008214:	f841 0b04 	str.w	r0, [r1], #4
 8008218:	3304      	adds	r3, #4
 800821a:	4293      	cmp	r3, r2
 800821c:	d1f9      	bne.n	8008212 <_Unwind_VRS_Pop+0xfe>
 800821e:	4620      	mov	r0, r4
 8008220:	63ab      	str	r3, [r5, #56]	; 0x38
 8008222:	f000 f8db 	bl	80083dc <__gnu_Unwind_Restore_WMMXD>
 8008226:	2000      	movs	r0, #0
 8008228:	e782      	b.n	8008130 <_Unwind_VRS_Pop+0x1c>
 800822a:	19f2      	adds	r2, r6, r7
 800822c:	2a10      	cmp	r2, #16
 800822e:	f63f af7e 	bhi.w	800812e <_Unwind_VRS_Pop+0x1a>
 8008232:	2e0f      	cmp	r6, #15
 8008234:	f63f af7b 	bhi.w	800812e <_Unwind_VRS_Pop+0x1a>
 8008238:	682a      	ldr	r2, [r5, #0]
 800823a:	07d1      	lsls	r1, r2, #31
 800823c:	d508      	bpl.n	8008250 <_Unwind_VRS_Pop+0x13c>
 800823e:	4628      	mov	r0, r5
 8008240:	f022 0203 	bic.w	r2, r2, #3
 8008244:	f840 2b48 	str.w	r2, [r0], #72
 8008248:	9301      	str	r3, [sp, #4]
 800824a:	f000 f8b3 	bl	80083b4 <__gnu_Unwind_Save_VFP>
 800824e:	9b01      	ldr	r3, [sp, #4]
 8008250:	9301      	str	r3, [sp, #4]
 8008252:	ac22      	add	r4, sp, #136	; 0x88
 8008254:	4620      	mov	r0, r4
 8008256:	f000 f8ad 	bl	80083b4 <__gnu_Unwind_Save_VFP>
 800825a:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 800825c:	9b01      	ldr	r3, [sp, #4]
 800825e:	2f00      	cmp	r7, #0
 8008260:	f000 8095 	beq.w	800838e <_Unwind_VRS_Pop+0x27a>
 8008264:	007f      	lsls	r7, r7, #1
 8008266:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 800826a:	f04f 0800 	mov.w	r8, #0
 800826e:	3c04      	subs	r4, #4
 8008270:	eb01 0287 	add.w	r2, r1, r7, lsl #2
 8008274:	f851 0b04 	ldr.w	r0, [r1], #4
 8008278:	f844 0f04 	str.w	r0, [r4, #4]!
 800827c:	4291      	cmp	r1, r2
 800827e:	d1f9      	bne.n	8008274 <_Unwind_VRS_Pop+0x160>
 8008280:	f1b8 0f00 	cmp.w	r8, #0
 8008284:	d00f      	beq.n	80082a6 <_Unwind_VRS_Pop+0x192>
 8008286:	ac02      	add	r4, sp, #8
 8008288:	2e10      	cmp	r6, #16
 800828a:	4631      	mov	r1, r6
 800828c:	bf38      	it	cc
 800828e:	2110      	movcc	r1, #16
 8008290:	eb04 01c1 	add.w	r1, r4, r1, lsl #3
 8008294:	3984      	subs	r1, #132	; 0x84
 8008296:	eb02 04c8 	add.w	r4, r2, r8, lsl #3
 800829a:	f852 0b04 	ldr.w	r0, [r2], #4
 800829e:	f841 0f04 	str.w	r0, [r1, #4]!
 80082a2:	4294      	cmp	r4, r2
 80082a4:	d1f9      	bne.n	800829a <_Unwind_VRS_Pop+0x186>
 80082a6:	2b01      	cmp	r3, #1
 80082a8:	f47f af7b 	bne.w	80081a2 <_Unwind_VRS_Pop+0x8e>
 80082ac:	ac22      	add	r4, sp, #136	; 0x88
 80082ae:	3204      	adds	r2, #4
 80082b0:	63aa      	str	r2, [r5, #56]	; 0x38
 80082b2:	4620      	mov	r0, r4
 80082b4:	f000 f87a 	bl	80083ac <__gnu_Unwind_Restore_VFP>
 80082b8:	e77d      	b.n	80081b6 <_Unwind_VRS_Pop+0xa2>
 80082ba:	f023 0308 	bic.w	r3, r3, #8
 80082be:	602b      	str	r3, [r5, #0]
 80082c0:	f505 70a8 	add.w	r0, r5, #336	; 0x150
 80082c4:	f000 f8ac 	bl	8008420 <__gnu_Unwind_Save_WMMXD>
 80082c8:	e799      	b.n	80081fe <_Unwind_VRS_Pop+0xea>
 80082ca:	f1b8 0f10 	cmp.w	r8, #16
 80082ce:	682a      	ldr	r2, [r5, #0]
 80082d0:	d943      	bls.n	800835a <_Unwind_VRS_Pop+0x246>
 80082d2:	07d0      	lsls	r0, r2, #31
 80082d4:	f1a8 0810 	sub.w	r8, r8, #16
 80082d8:	d50b      	bpl.n	80082f2 <_Unwind_VRS_Pop+0x1de>
 80082da:	4628      	mov	r0, r5
 80082dc:	f022 0201 	bic.w	r2, r2, #1
 80082e0:	f042 0202 	orr.w	r2, r2, #2
 80082e4:	f840 2b48 	str.w	r2, [r0], #72
 80082e8:	9301      	str	r3, [sp, #4]
 80082ea:	f000 f86b 	bl	80083c4 <__gnu_Unwind_Save_VFP_D>
 80082ee:	682a      	ldr	r2, [r5, #0]
 80082f0:	9b01      	ldr	r3, [sp, #4]
 80082f2:	0751      	lsls	r1, r2, #29
 80082f4:	d425      	bmi.n	8008342 <_Unwind_VRS_Pop+0x22e>
 80082f6:	2e0f      	cmp	r6, #15
 80082f8:	d804      	bhi.n	8008304 <_Unwind_VRS_Pop+0x1f0>
 80082fa:	a822      	add	r0, sp, #136	; 0x88
 80082fc:	9301      	str	r3, [sp, #4]
 80082fe:	f000 f861 	bl	80083c4 <__gnu_Unwind_Save_VFP_D>
 8008302:	9b01      	ldr	r3, [sp, #4]
 8008304:	9301      	str	r3, [sp, #4]
 8008306:	ac02      	add	r4, sp, #8
 8008308:	4620      	mov	r0, r4
 800830a:	f000 f863 	bl	80083d4 <__gnu_Unwind_Save_VFP_D_16_to_31>
 800830e:	f1c6 0110 	rsb	r1, r6, #16
 8008312:	2900      	cmp	r1, #0
 8008314:	6baa      	ldr	r2, [r5, #56]	; 0x38
 8008316:	9b01      	ldr	r3, [sp, #4]
 8008318:	ddb6      	ble.n	8008288 <_Unwind_VRS_Pop+0x174>
 800831a:	ac22      	add	r4, sp, #136	; 0x88
 800831c:	004f      	lsls	r7, r1, #1
 800831e:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8008322:	4611      	mov	r1, r2
 8008324:	e7a3      	b.n	800826e <_Unwind_VRS_Pop+0x15a>
 8008326:	a822      	add	r0, sp, #136	; 0x88
 8008328:	f000 f848 	bl	80083bc <__gnu_Unwind_Restore_VFP_D>
 800832c:	e73d      	b.n	80081aa <_Unwind_VRS_Pop+0x96>
 800832e:	f023 0310 	bic.w	r3, r3, #16
 8008332:	602b      	str	r3, [r5, #0]
 8008334:	f505 70e8 	add.w	r0, r5, #464	; 0x1d0
 8008338:	9201      	str	r2, [sp, #4]
 800833a:	f000 f89d 	bl	8008478 <__gnu_Unwind_Save_WMMXC>
 800833e:	9a01      	ldr	r2, [sp, #4]
 8008340:	e701      	b.n	8008146 <_Unwind_VRS_Pop+0x32>
 8008342:	4628      	mov	r0, r5
 8008344:	f022 0204 	bic.w	r2, r2, #4
 8008348:	f840 2bd0 	str.w	r2, [r0], #208
 800834c:	9301      	str	r3, [sp, #4]
 800834e:	f000 f841 	bl	80083d4 <__gnu_Unwind_Save_VFP_D_16_to_31>
 8008352:	9b01      	ldr	r3, [sp, #4]
 8008354:	e7cf      	b.n	80082f6 <_Unwind_VRS_Pop+0x1e2>
 8008356:	682a      	ldr	r2, [r5, #0]
 8008358:	e7cb      	b.n	80082f2 <_Unwind_VRS_Pop+0x1de>
 800835a:	07d0      	lsls	r0, r2, #31
 800835c:	d50a      	bpl.n	8008374 <_Unwind_VRS_Pop+0x260>
 800835e:	4628      	mov	r0, r5
 8008360:	f022 0201 	bic.w	r2, r2, #1
 8008364:	f042 0202 	orr.w	r2, r2, #2
 8008368:	f840 2b48 	str.w	r2, [r0], #72
 800836c:	9301      	str	r3, [sp, #4]
 800836e:	f000 f829 	bl	80083c4 <__gnu_Unwind_Save_VFP_D>
 8008372:	9b01      	ldr	r3, [sp, #4]
 8008374:	9301      	str	r3, [sp, #4]
 8008376:	ac22      	add	r4, sp, #136	; 0x88
 8008378:	4620      	mov	r0, r4
 800837a:	f000 f823 	bl	80083c4 <__gnu_Unwind_Save_VFP_D>
 800837e:	46b8      	mov	r8, r7
 8008380:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 8008382:	9b01      	ldr	r3, [sp, #4]
 8008384:	2f00      	cmp	r7, #0
 8008386:	f47f af6d 	bne.w	8008264 <_Unwind_VRS_Pop+0x150>
 800838a:	460a      	mov	r2, r1
 800838c:	e709      	b.n	80081a2 <_Unwind_VRS_Pop+0x8e>
 800838e:	460a      	mov	r2, r1
 8008390:	e78d      	b.n	80082ae <_Unwind_VRS_Pop+0x19a>
 8008392:	bf00      	nop

08008394 <__restore_core_regs>:
 8008394:	f100 0134 	add.w	r1, r0, #52	; 0x34
 8008398:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
 800839c:	469c      	mov	ip, r3
 800839e:	46a6      	mov	lr, r4
 80083a0:	f84c 5d04 	str.w	r5, [ip, #-4]!
 80083a4:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
 80083a8:	46e5      	mov	sp, ip
 80083aa:	bd00      	pop	{pc}

080083ac <__gnu_Unwind_Restore_VFP>:
 80083ac:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
 80083b0:	4770      	bx	lr
 80083b2:	bf00      	nop

080083b4 <__gnu_Unwind_Save_VFP>:
 80083b4:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
 80083b8:	4770      	bx	lr
 80083ba:	bf00      	nop

080083bc <__gnu_Unwind_Restore_VFP_D>:
 80083bc:	ec90 0b20 	vldmia	r0, {d0-d15}
 80083c0:	4770      	bx	lr
 80083c2:	bf00      	nop

080083c4 <__gnu_Unwind_Save_VFP_D>:
 80083c4:	ec80 0b20 	vstmia	r0, {d0-d15}
 80083c8:	4770      	bx	lr
 80083ca:	bf00      	nop

080083cc <__gnu_Unwind_Restore_VFP_D_16_to_31>:
 80083cc:	ecd0 0b20 	vldmia	r0, {d16-d31}
 80083d0:	4770      	bx	lr
 80083d2:	bf00      	nop

080083d4 <__gnu_Unwind_Save_VFP_D_16_to_31>:
 80083d4:	ecc0 0b20 	vstmia	r0, {d16-d31}
 80083d8:	4770      	bx	lr
 80083da:	bf00      	nop

080083dc <__gnu_Unwind_Restore_WMMXD>:
 80083dc:	ecf0 0102 	ldfe	f0, [r0], #8
 80083e0:	ecf0 1102 	ldfe	f1, [r0], #8
 80083e4:	ecf0 2102 	ldfe	f2, [r0], #8
 80083e8:	ecf0 3102 	ldfe	f3, [r0], #8
 80083ec:	ecf0 4102 	ldfe	f4, [r0], #8
 80083f0:	ecf0 5102 	ldfe	f5, [r0], #8
 80083f4:	ecf0 6102 	ldfe	f6, [r0], #8
 80083f8:	ecf0 7102 	ldfe	f7, [r0], #8
 80083fc:	ecf0 8102 	ldfp	f0, [r0], #8
 8008400:	ecf0 9102 	ldfp	f1, [r0], #8
 8008404:	ecf0 a102 	ldfp	f2, [r0], #8
 8008408:	ecf0 b102 	ldfp	f3, [r0], #8
 800840c:	ecf0 c102 	ldfp	f4, [r0], #8
 8008410:	ecf0 d102 	ldfp	f5, [r0], #8
 8008414:	ecf0 e102 	ldfp	f6, [r0], #8
 8008418:	ecf0 f102 	ldfp	f7, [r0], #8
 800841c:	4770      	bx	lr
 800841e:	bf00      	nop

08008420 <__gnu_Unwind_Save_WMMXD>:
 8008420:	ece0 0102 	stfe	f0, [r0], #8
 8008424:	ece0 1102 	stfe	f1, [r0], #8
 8008428:	ece0 2102 	stfe	f2, [r0], #8
 800842c:	ece0 3102 	stfe	f3, [r0], #8
 8008430:	ece0 4102 	stfe	f4, [r0], #8
 8008434:	ece0 5102 	stfe	f5, [r0], #8
 8008438:	ece0 6102 	stfe	f6, [r0], #8
 800843c:	ece0 7102 	stfe	f7, [r0], #8
 8008440:	ece0 8102 	stfp	f0, [r0], #8
 8008444:	ece0 9102 	stfp	f1, [r0], #8
 8008448:	ece0 a102 	stfp	f2, [r0], #8
 800844c:	ece0 b102 	stfp	f3, [r0], #8
 8008450:	ece0 c102 	stfp	f4, [r0], #8
 8008454:	ece0 d102 	stfp	f5, [r0], #8
 8008458:	ece0 e102 	stfp	f6, [r0], #8
 800845c:	ece0 f102 	stfp	f7, [r0], #8
 8008460:	4770      	bx	lr
 8008462:	bf00      	nop

08008464 <__gnu_Unwind_Restore_WMMXC>:
 8008464:	fcb0 8101 	ldc2	1, cr8, [r0], #4
 8008468:	fcb0 9101 	ldc2	1, cr9, [r0], #4
 800846c:	fcb0 a101 	ldc2	1, cr10, [r0], #4
 8008470:	fcb0 b101 	ldc2	1, cr11, [r0], #4
 8008474:	4770      	bx	lr
 8008476:	bf00      	nop

08008478 <__gnu_Unwind_Save_WMMXC>:
 8008478:	fca0 8101 	stc2	1, cr8, [r0], #4
 800847c:	fca0 9101 	stc2	1, cr9, [r0], #4
 8008480:	fca0 a101 	stc2	1, cr10, [r0], #4
 8008484:	fca0 b101 	stc2	1, cr11, [r0], #4
 8008488:	4770      	bx	lr
 800848a:	bf00      	nop

0800848c <_Unwind_RaiseException>:
 800848c:	46ec      	mov	ip, sp
 800848e:	b500      	push	{lr}
 8008490:	e92d 5000 	stmdb	sp!, {ip, lr}
 8008494:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8008498:	f04f 0300 	mov.w	r3, #0
 800849c:	e92d 000c 	stmdb	sp!, {r2, r3}
 80084a0:	a901      	add	r1, sp, #4
 80084a2:	f7ff fbdd 	bl	8007c60 <__gnu_Unwind_RaiseException>
 80084a6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80084aa:	b012      	add	sp, #72	; 0x48
 80084ac:	4770      	bx	lr
 80084ae:	bf00      	nop

080084b0 <_Unwind_Resume>:
 80084b0:	46ec      	mov	ip, sp
 80084b2:	b500      	push	{lr}
 80084b4:	e92d 5000 	stmdb	sp!, {ip, lr}
 80084b8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80084bc:	f04f 0300 	mov.w	r3, #0
 80084c0:	e92d 000c 	stmdb	sp!, {r2, r3}
 80084c4:	a901      	add	r1, sp, #4
 80084c6:	f7ff fc05 	bl	8007cd4 <__gnu_Unwind_Resume>
 80084ca:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80084ce:	b012      	add	sp, #72	; 0x48
 80084d0:	4770      	bx	lr
 80084d2:	bf00      	nop

080084d4 <_Unwind_Resume_or_Rethrow>:
 80084d4:	46ec      	mov	ip, sp
 80084d6:	b500      	push	{lr}
 80084d8:	e92d 5000 	stmdb	sp!, {ip, lr}
 80084dc:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 80084e0:	f04f 0300 	mov.w	r3, #0
 80084e4:	e92d 000c 	stmdb	sp!, {r2, r3}
 80084e8:	a901      	add	r1, sp, #4
 80084ea:	f7ff fc15 	bl	8007d18 <__gnu_Unwind_Resume_or_Rethrow>
 80084ee:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 80084f2:	b012      	add	sp, #72	; 0x48
 80084f4:	4770      	bx	lr
 80084f6:	bf00      	nop

080084f8 <_Unwind_ForcedUnwind>:
 80084f8:	46ec      	mov	ip, sp
 80084fa:	b500      	push	{lr}
 80084fc:	e92d 5000 	stmdb	sp!, {ip, lr}
 8008500:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8008504:	f04f 0300 	mov.w	r3, #0
 8008508:	e92d 000c 	stmdb	sp!, {r2, r3}
 800850c:	ab01      	add	r3, sp, #4
 800850e:	f7ff fbd7 	bl	8007cc0 <__gnu_Unwind_ForcedUnwind>
 8008512:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 8008516:	b012      	add	sp, #72	; 0x48
 8008518:	4770      	bx	lr
 800851a:	bf00      	nop

0800851c <_Unwind_Backtrace>:
 800851c:	46ec      	mov	ip, sp
 800851e:	b500      	push	{lr}
 8008520:	e92d 5000 	stmdb	sp!, {ip, lr}
 8008524:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8008528:	f04f 0300 	mov.w	r3, #0
 800852c:	e92d 000c 	stmdb	sp!, {r2, r3}
 8008530:	aa01      	add	r2, sp, #4
 8008532:	f7ff fc47 	bl	8007dc4 <__gnu_Unwind_Backtrace>
 8008536:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
 800853a:	b012      	add	sp, #72	; 0x48
 800853c:	4770      	bx	lr
 800853e:	bf00      	nop

08008540 <next_unwind_byte>:
 8008540:	7a02      	ldrb	r2, [r0, #8]
 8008542:	b982      	cbnz	r2, 8008566 <next_unwind_byte+0x26>
 8008544:	7a43      	ldrb	r3, [r0, #9]
 8008546:	b1ab      	cbz	r3, 8008574 <next_unwind_byte+0x34>
 8008548:	6842      	ldr	r2, [r0, #4]
 800854a:	3b01      	subs	r3, #1
 800854c:	b410      	push	{r4}
 800854e:	7243      	strb	r3, [r0, #9]
 8008550:	6813      	ldr	r3, [r2, #0]
 8008552:	2103      	movs	r1, #3
 8008554:	1d14      	adds	r4, r2, #4
 8008556:	7201      	strb	r1, [r0, #8]
 8008558:	021a      	lsls	r2, r3, #8
 800855a:	6044      	str	r4, [r0, #4]
 800855c:	6002      	str	r2, [r0, #0]
 800855e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008562:	0e18      	lsrs	r0, r3, #24
 8008564:	4770      	bx	lr
 8008566:	6803      	ldr	r3, [r0, #0]
 8008568:	3a01      	subs	r2, #1
 800856a:	7202      	strb	r2, [r0, #8]
 800856c:	021a      	lsls	r2, r3, #8
 800856e:	6002      	str	r2, [r0, #0]
 8008570:	0e18      	lsrs	r0, r3, #24
 8008572:	4770      	bx	lr
 8008574:	20b0      	movs	r0, #176	; 0xb0
 8008576:	4770      	bx	lr

08008578 <_Unwind_GetGR.constprop.0>:
 8008578:	b500      	push	{lr}
 800857a:	b085      	sub	sp, #20
 800857c:	aa03      	add	r2, sp, #12
 800857e:	2300      	movs	r3, #0
 8008580:	9200      	str	r2, [sp, #0]
 8008582:	4619      	mov	r1, r3
 8008584:	220c      	movs	r2, #12
 8008586:	f7ff fbd7 	bl	8007d38 <_Unwind_VRS_Get>
 800858a:	9803      	ldr	r0, [sp, #12]
 800858c:	b005      	add	sp, #20
 800858e:	f85d fb04 	ldr.w	pc, [sp], #4
 8008592:	bf00      	nop

08008594 <unwind_UCB_from_context>:
 8008594:	e7f0      	b.n	8008578 <_Unwind_GetGR.constprop.0>
 8008596:	bf00      	nop

08008598 <__gnu_unwind_execute>:
 8008598:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800859c:	4605      	mov	r5, r0
 800859e:	b085      	sub	sp, #20
 80085a0:	460e      	mov	r6, r1
 80085a2:	f04f 0800 	mov.w	r8, #0
 80085a6:	4630      	mov	r0, r6
 80085a8:	f7ff ffca 	bl	8008540 <next_unwind_byte>
 80085ac:	28b0      	cmp	r0, #176	; 0xb0
 80085ae:	4604      	mov	r4, r0
 80085b0:	f000 80b1 	beq.w	8008716 <__gnu_unwind_execute+0x17e>
 80085b4:	0607      	lsls	r7, r0, #24
 80085b6:	d520      	bpl.n	80085fa <__gnu_unwind_execute+0x62>
 80085b8:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
 80085bc:	2b80      	cmp	r3, #128	; 0x80
 80085be:	d065      	beq.n	800868c <__gnu_unwind_execute+0xf4>
 80085c0:	2b90      	cmp	r3, #144	; 0x90
 80085c2:	d036      	beq.n	8008632 <__gnu_unwind_execute+0x9a>
 80085c4:	2ba0      	cmp	r3, #160	; 0xa0
 80085c6:	d078      	beq.n	80086ba <__gnu_unwind_execute+0x122>
 80085c8:	2bb0      	cmp	r3, #176	; 0xb0
 80085ca:	d047      	beq.n	800865c <__gnu_unwind_execute+0xc4>
 80085cc:	2bc0      	cmp	r3, #192	; 0xc0
 80085ce:	f000 808a 	beq.w	80086e6 <__gnu_unwind_execute+0x14e>
 80085d2:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 80085d6:	2bd0      	cmp	r3, #208	; 0xd0
 80085d8:	d10b      	bne.n	80085f2 <__gnu_unwind_execute+0x5a>
 80085da:	f000 0207 	and.w	r2, r0, #7
 80085de:	3201      	adds	r2, #1
 80085e0:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 80085e4:	2305      	movs	r3, #5
 80085e6:	2101      	movs	r1, #1
 80085e8:	4628      	mov	r0, r5
 80085ea:	f7ff fd93 	bl	8008114 <_Unwind_VRS_Pop>
 80085ee:	2800      	cmp	r0, #0
 80085f0:	d0d9      	beq.n	80085a6 <__gnu_unwind_execute+0xe>
 80085f2:	2009      	movs	r0, #9
 80085f4:	b005      	add	sp, #20
 80085f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80085fa:	f10d 090c 	add.w	r9, sp, #12
 80085fe:	2300      	movs	r3, #0
 8008600:	4619      	mov	r1, r3
 8008602:	0087      	lsls	r7, r0, #2
 8008604:	f8cd 9000 	str.w	r9, [sp]
 8008608:	220d      	movs	r2, #13
 800860a:	4628      	mov	r0, r5
 800860c:	f7ff fb94 	bl	8007d38 <_Unwind_VRS_Get>
 8008610:	b2ff      	uxtb	r7, r7
 8008612:	9b03      	ldr	r3, [sp, #12]
 8008614:	f8cd 9000 	str.w	r9, [sp]
 8008618:	3704      	adds	r7, #4
 800861a:	0660      	lsls	r0, r4, #25
 800861c:	bf4c      	ite	mi
 800861e:	1bdf      	submi	r7, r3, r7
 8008620:	18ff      	addpl	r7, r7, r3
 8008622:	2300      	movs	r3, #0
 8008624:	4619      	mov	r1, r3
 8008626:	220d      	movs	r2, #13
 8008628:	4628      	mov	r0, r5
 800862a:	9703      	str	r7, [sp, #12]
 800862c:	f7ff fba6 	bl	8007d7c <_Unwind_VRS_Set>
 8008630:	e7b9      	b.n	80085a6 <__gnu_unwind_execute+0xe>
 8008632:	f000 030d 	and.w	r3, r0, #13
 8008636:	2b0d      	cmp	r3, #13
 8008638:	d0db      	beq.n	80085f2 <__gnu_unwind_execute+0x5a>
 800863a:	af03      	add	r7, sp, #12
 800863c:	2300      	movs	r3, #0
 800863e:	f000 020f 	and.w	r2, r0, #15
 8008642:	4619      	mov	r1, r3
 8008644:	9700      	str	r7, [sp, #0]
 8008646:	4628      	mov	r0, r5
 8008648:	f7ff fb76 	bl	8007d38 <_Unwind_VRS_Get>
 800864c:	2300      	movs	r3, #0
 800864e:	9700      	str	r7, [sp, #0]
 8008650:	4619      	mov	r1, r3
 8008652:	220d      	movs	r2, #13
 8008654:	4628      	mov	r0, r5
 8008656:	f7ff fb91 	bl	8007d7c <_Unwind_VRS_Set>
 800865a:	e7a4      	b.n	80085a6 <__gnu_unwind_execute+0xe>
 800865c:	28b1      	cmp	r0, #177	; 0xb1
 800865e:	d05f      	beq.n	8008720 <__gnu_unwind_execute+0x188>
 8008660:	28b2      	cmp	r0, #178	; 0xb2
 8008662:	f000 80cc 	beq.w	80087fe <__gnu_unwind_execute+0x266>
 8008666:	28b3      	cmp	r0, #179	; 0xb3
 8008668:	d07e      	beq.n	8008768 <__gnu_unwind_execute+0x1d0>
 800866a:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
 800866e:	2bb4      	cmp	r3, #180	; 0xb4
 8008670:	d0bf      	beq.n	80085f2 <__gnu_unwind_execute+0x5a>
 8008672:	f000 0207 	and.w	r2, r0, #7
 8008676:	3201      	adds	r2, #1
 8008678:	2301      	movs	r3, #1
 800867a:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
 800867e:	4619      	mov	r1, r3
 8008680:	4628      	mov	r0, r5
 8008682:	f7ff fd47 	bl	8008114 <_Unwind_VRS_Pop>
 8008686:	2800      	cmp	r0, #0
 8008688:	d08d      	beq.n	80085a6 <__gnu_unwind_execute+0xe>
 800868a:	e7b2      	b.n	80085f2 <__gnu_unwind_execute+0x5a>
 800868c:	4630      	mov	r0, r6
 800868e:	f7ff ff57 	bl	8008540 <next_unwind_byte>
 8008692:	0224      	lsls	r4, r4, #8
 8008694:	4304      	orrs	r4, r0
 8008696:	f5b4 4f00 	cmp.w	r4, #32768	; 0x8000
 800869a:	d0aa      	beq.n	80085f2 <__gnu_unwind_execute+0x5a>
 800869c:	0124      	lsls	r4, r4, #4
 800869e:	2300      	movs	r3, #0
 80086a0:	b2a2      	uxth	r2, r4
 80086a2:	4619      	mov	r1, r3
 80086a4:	4628      	mov	r0, r5
 80086a6:	f7ff fd35 	bl	8008114 <_Unwind_VRS_Pop>
 80086aa:	2800      	cmp	r0, #0
 80086ac:	d1a1      	bne.n	80085f2 <__gnu_unwind_execute+0x5a>
 80086ae:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 80086b2:	bf18      	it	ne
 80086b4:	f04f 0801 	movne.w	r8, #1
 80086b8:	e775      	b.n	80085a6 <__gnu_unwind_execute+0xe>
 80086ba:	43c2      	mvns	r2, r0
 80086bc:	f002 0307 	and.w	r3, r2, #7
 80086c0:	f44f 627f 	mov.w	r2, #4080	; 0xff0
 80086c4:	411a      	asrs	r2, r3
 80086c6:	0701      	lsls	r1, r0, #28
 80086c8:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
 80086cc:	f04f 0300 	mov.w	r3, #0
 80086d0:	bf48      	it	mi
 80086d2:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
 80086d6:	4619      	mov	r1, r3
 80086d8:	4628      	mov	r0, r5
 80086da:	f7ff fd1b 	bl	8008114 <_Unwind_VRS_Pop>
 80086de:	2800      	cmp	r0, #0
 80086e0:	f43f af61 	beq.w	80085a6 <__gnu_unwind_execute+0xe>
 80086e4:	e785      	b.n	80085f2 <__gnu_unwind_execute+0x5a>
 80086e6:	28c6      	cmp	r0, #198	; 0xc6
 80086e8:	d051      	beq.n	800878e <__gnu_unwind_execute+0x1f6>
 80086ea:	28c7      	cmp	r0, #199	; 0xc7
 80086ec:	d05a      	beq.n	80087a4 <__gnu_unwind_execute+0x20c>
 80086ee:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
 80086f2:	2bc0      	cmp	r3, #192	; 0xc0
 80086f4:	d069      	beq.n	80087ca <__gnu_unwind_execute+0x232>
 80086f6:	28c8      	cmp	r0, #200	; 0xc8
 80086f8:	d075      	beq.n	80087e6 <__gnu_unwind_execute+0x24e>
 80086fa:	28c9      	cmp	r0, #201	; 0xc9
 80086fc:	f47f af79 	bne.w	80085f2 <__gnu_unwind_execute+0x5a>
 8008700:	4630      	mov	r0, r6
 8008702:	f7ff ff1d 	bl	8008540 <next_unwind_byte>
 8008706:	0302      	lsls	r2, r0, #12
 8008708:	f000 000f 	and.w	r0, r0, #15
 800870c:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
 8008710:	3001      	adds	r0, #1
 8008712:	4302      	orrs	r2, r0
 8008714:	e766      	b.n	80085e4 <__gnu_unwind_execute+0x4c>
 8008716:	f1b8 0f00 	cmp.w	r8, #0
 800871a:	d014      	beq.n	8008746 <__gnu_unwind_execute+0x1ae>
 800871c:	2000      	movs	r0, #0
 800871e:	e769      	b.n	80085f4 <__gnu_unwind_execute+0x5c>
 8008720:	4630      	mov	r0, r6
 8008722:	f7ff ff0d 	bl	8008540 <next_unwind_byte>
 8008726:	2800      	cmp	r0, #0
 8008728:	f43f af63 	beq.w	80085f2 <__gnu_unwind_execute+0x5a>
 800872c:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 8008730:	f47f af5f 	bne.w	80085f2 <__gnu_unwind_execute+0x5a>
 8008734:	4602      	mov	r2, r0
 8008736:	4619      	mov	r1, r3
 8008738:	4628      	mov	r0, r5
 800873a:	f7ff fceb 	bl	8008114 <_Unwind_VRS_Pop>
 800873e:	2800      	cmp	r0, #0
 8008740:	f43f af31 	beq.w	80085a6 <__gnu_unwind_execute+0xe>
 8008744:	e755      	b.n	80085f2 <__gnu_unwind_execute+0x5a>
 8008746:	ac03      	add	r4, sp, #12
 8008748:	4643      	mov	r3, r8
 800874a:	220e      	movs	r2, #14
 800874c:	4641      	mov	r1, r8
 800874e:	9400      	str	r4, [sp, #0]
 8008750:	4628      	mov	r0, r5
 8008752:	f7ff faf1 	bl	8007d38 <_Unwind_VRS_Get>
 8008756:	9400      	str	r4, [sp, #0]
 8008758:	4628      	mov	r0, r5
 800875a:	4643      	mov	r3, r8
 800875c:	220f      	movs	r2, #15
 800875e:	4641      	mov	r1, r8
 8008760:	f7ff fb0c 	bl	8007d7c <_Unwind_VRS_Set>
 8008764:	4640      	mov	r0, r8
 8008766:	e745      	b.n	80085f4 <__gnu_unwind_execute+0x5c>
 8008768:	4630      	mov	r0, r6
 800876a:	f7ff fee9 	bl	8008540 <next_unwind_byte>
 800876e:	0301      	lsls	r1, r0, #12
 8008770:	f000 000f 	and.w	r0, r0, #15
 8008774:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 8008778:	1c42      	adds	r2, r0, #1
 800877a:	2301      	movs	r3, #1
 800877c:	430a      	orrs	r2, r1
 800877e:	4628      	mov	r0, r5
 8008780:	4619      	mov	r1, r3
 8008782:	f7ff fcc7 	bl	8008114 <_Unwind_VRS_Pop>
 8008786:	2800      	cmp	r0, #0
 8008788:	f43f af0d 	beq.w	80085a6 <__gnu_unwind_execute+0xe>
 800878c:	e731      	b.n	80085f2 <__gnu_unwind_execute+0x5a>
 800878e:	4630      	mov	r0, r6
 8008790:	f7ff fed6 	bl	8008540 <next_unwind_byte>
 8008794:	0301      	lsls	r1, r0, #12
 8008796:	f000 000f 	and.w	r0, r0, #15
 800879a:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
 800879e:	1c42      	adds	r2, r0, #1
 80087a0:	2303      	movs	r3, #3
 80087a2:	e7eb      	b.n	800877c <__gnu_unwind_execute+0x1e4>
 80087a4:	4630      	mov	r0, r6
 80087a6:	f7ff fecb 	bl	8008540 <next_unwind_byte>
 80087aa:	4602      	mov	r2, r0
 80087ac:	2800      	cmp	r0, #0
 80087ae:	f43f af20 	beq.w	80085f2 <__gnu_unwind_execute+0x5a>
 80087b2:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
 80087b6:	f47f af1c 	bne.w	80085f2 <__gnu_unwind_execute+0x5a>
 80087ba:	2104      	movs	r1, #4
 80087bc:	4628      	mov	r0, r5
 80087be:	f7ff fca9 	bl	8008114 <_Unwind_VRS_Pop>
 80087c2:	2800      	cmp	r0, #0
 80087c4:	f43f aeef 	beq.w	80085a6 <__gnu_unwind_execute+0xe>
 80087c8:	e713      	b.n	80085f2 <__gnu_unwind_execute+0x5a>
 80087ca:	f000 020f 	and.w	r2, r0, #15
 80087ce:	3201      	adds	r2, #1
 80087d0:	2303      	movs	r3, #3
 80087d2:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
 80087d6:	4619      	mov	r1, r3
 80087d8:	4628      	mov	r0, r5
 80087da:	f7ff fc9b 	bl	8008114 <_Unwind_VRS_Pop>
 80087de:	2800      	cmp	r0, #0
 80087e0:	f43f aee1 	beq.w	80085a6 <__gnu_unwind_execute+0xe>
 80087e4:	e705      	b.n	80085f2 <__gnu_unwind_execute+0x5a>
 80087e6:	4630      	mov	r0, r6
 80087e8:	f7ff feaa 	bl	8008540 <next_unwind_byte>
 80087ec:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
 80087f0:	f000 030f 	and.w	r3, r0, #15
 80087f4:	3210      	adds	r2, #16
 80087f6:	3301      	adds	r3, #1
 80087f8:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
 80087fc:	e6f2      	b.n	80085e4 <__gnu_unwind_execute+0x4c>
 80087fe:	2300      	movs	r3, #0
 8008800:	f10d 090c 	add.w	r9, sp, #12
 8008804:	220d      	movs	r2, #13
 8008806:	4619      	mov	r1, r3
 8008808:	f8cd 9000 	str.w	r9, [sp]
 800880c:	4628      	mov	r0, r5
 800880e:	f7ff fa93 	bl	8007d38 <_Unwind_VRS_Get>
 8008812:	4630      	mov	r0, r6
 8008814:	f7ff fe94 	bl	8008540 <next_unwind_byte>
 8008818:	0602      	lsls	r2, r0, #24
 800881a:	f04f 0702 	mov.w	r7, #2
 800881e:	d50c      	bpl.n	800883a <__gnu_unwind_execute+0x2a2>
 8008820:	9b03      	ldr	r3, [sp, #12]
 8008822:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8008826:	40b8      	lsls	r0, r7
 8008828:	4403      	add	r3, r0
 800882a:	4630      	mov	r0, r6
 800882c:	9303      	str	r3, [sp, #12]
 800882e:	f7ff fe87 	bl	8008540 <next_unwind_byte>
 8008832:	0603      	lsls	r3, r0, #24
 8008834:	f107 0707 	add.w	r7, r7, #7
 8008838:	d4f2      	bmi.n	8008820 <__gnu_unwind_execute+0x288>
 800883a:	9b03      	ldr	r3, [sp, #12]
 800883c:	f8cd 9000 	str.w	r9, [sp]
 8008840:	f000 047f 	and.w	r4, r0, #127	; 0x7f
 8008844:	f503 7201 	add.w	r2, r3, #516	; 0x204
 8008848:	40bc      	lsls	r4, r7
 800884a:	2300      	movs	r3, #0
 800884c:	4414      	add	r4, r2
 800884e:	4619      	mov	r1, r3
 8008850:	220d      	movs	r2, #13
 8008852:	4628      	mov	r0, r5
 8008854:	9403      	str	r4, [sp, #12]
 8008856:	f7ff fa91 	bl	8007d7c <_Unwind_VRS_Set>
 800885a:	e6a4      	b.n	80085a6 <__gnu_unwind_execute+0xe>

0800885c <__gnu_unwind_frame>:
 800885c:	b510      	push	{r4, lr}
 800885e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008860:	b084      	sub	sp, #16
 8008862:	685a      	ldr	r2, [r3, #4]
 8008864:	2003      	movs	r0, #3
 8008866:	f88d 000c 	strb.w	r0, [sp, #12]
 800886a:	79dc      	ldrb	r4, [r3, #7]
 800886c:	f88d 400d 	strb.w	r4, [sp, #13]
 8008870:	0212      	lsls	r2, r2, #8
 8008872:	3308      	adds	r3, #8
 8008874:	4608      	mov	r0, r1
 8008876:	a901      	add	r1, sp, #4
 8008878:	9201      	str	r2, [sp, #4]
 800887a:	9302      	str	r3, [sp, #8]
 800887c:	f7ff fe8c 	bl	8008598 <__gnu_unwind_execute>
 8008880:	b004      	add	sp, #16
 8008882:	bd10      	pop	{r4, pc}

08008884 <_Unwind_GetRegionStart>:
 8008884:	b508      	push	{r3, lr}
 8008886:	f7ff fe85 	bl	8008594 <unwind_UCB_from_context>
 800888a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800888c:	bd08      	pop	{r3, pc}
 800888e:	bf00      	nop

08008890 <_Unwind_GetLanguageSpecificData>:
 8008890:	b508      	push	{r3, lr}
 8008892:	f7ff fe7f 	bl	8008594 <unwind_UCB_from_context>
 8008896:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008898:	79c3      	ldrb	r3, [r0, #7]
 800889a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800889e:	3008      	adds	r0, #8
 80088a0:	bd08      	pop	{r3, pc}
 80088a2:	bf00      	nop

080088a4 <_Unwind_GetDataRelBase>:
 80088a4:	b508      	push	{r3, lr}
 80088a6:	f004 fcc5 	bl	800d234 <abort>
 80088aa:	bf00      	nop

080088ac <_Unwind_GetTextRelBase>:
 80088ac:	b508      	push	{r3, lr}
 80088ae:	f7ff fff9 	bl	80088a4 <_Unwind_GetDataRelBase>
 80088b2:	bf00      	nop

080088b4 <__aeabi_idiv0>:
 80088b4:	4770      	bx	lr
 80088b6:	bf00      	nop

080088b8 <_ZN3I2CC1Ev>:
 */

#include "I2C.h"
#include "stm32f4xx_hal.h"

I2C::I2C() {
 80088b8:	b580      	push	{r7, lr}
 80088ba:	b082      	sub	sp, #8
 80088bc:	af00      	add	r7, sp, #0
 80088be:	6078      	str	r0, [r7, #4]
 80088c0:	4a18      	ldr	r2, [pc, #96]	; (8008924 <_ZN3I2CC1Ev+0x6c>)
 80088c2:	687b      	ldr	r3, [r7, #4]
 80088c4:	601a      	str	r2, [r3, #0]

	hi2c1.Instance = I2C1;
 80088c6:	687b      	ldr	r3, [r7, #4]
 80088c8:	4a17      	ldr	r2, [pc, #92]	; (8008928 <_ZN3I2CC1Ev+0x70>)
 80088ca:	605a      	str	r2, [r3, #4]
	hi2c1.Init.ClockSpeed = 100000;
 80088cc:	687b      	ldr	r3, [r7, #4]
 80088ce:	4a17      	ldr	r2, [pc, #92]	; (800892c <_ZN3I2CC1Ev+0x74>)
 80088d0:	609a      	str	r2, [r3, #8]
	hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80088d2:	687b      	ldr	r3, [r7, #4]
 80088d4:	2200      	movs	r2, #0
 80088d6:	60da      	str	r2, [r3, #12]
	hi2c1.Init.OwnAddress1 = 0;
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	2200      	movs	r2, #0
 80088dc:	611a      	str	r2, [r3, #16]
	hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80088de:	687b      	ldr	r3, [r7, #4]
 80088e0:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 80088e4:	615a      	str	r2, [r3, #20]
	hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80088e6:	687b      	ldr	r3, [r7, #4]
 80088e8:	2200      	movs	r2, #0
 80088ea:	619a      	str	r2, [r3, #24]
	hi2c1.Init.OwnAddress2 = 0;
 80088ec:	687b      	ldr	r3, [r7, #4]
 80088ee:	2200      	movs	r2, #0
 80088f0:	61da      	str	r2, [r3, #28]
	hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80088f2:	687b      	ldr	r3, [r7, #4]
 80088f4:	2200      	movs	r2, #0
 80088f6:	621a      	str	r2, [r3, #32]
	hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80088f8:	687b      	ldr	r3, [r7, #4]
 80088fa:	2200      	movs	r2, #0
 80088fc:	625a      	str	r2, [r3, #36]	; 0x24

	if (HAL_I2C_Init(&hi2c1) != HAL_OK) {
 80088fe:	687b      	ldr	r3, [r7, #4]
 8008900:	3304      	adds	r3, #4
 8008902:	4618      	mov	r0, r3
 8008904:	f001 ff32 	bl	800a76c <HAL_I2C_Init>
 8008908:	4603      	mov	r3, r0
 800890a:	2b00      	cmp	r3, #0
 800890c:	bf14      	ite	ne
 800890e:	2301      	movne	r3, #1
 8008910:	2300      	moveq	r3, #0
 8008912:	b2db      	uxtb	r3, r3
 8008914:	2b00      	cmp	r3, #0
 8008916:	d000      	beq.n	800891a <_ZN3I2CC1Ev+0x62>
		while(1);
 8008918:	e7fe      	b.n	8008918 <_ZN3I2CC1Ev+0x60>
	}
}
 800891a:	687b      	ldr	r3, [r7, #4]
 800891c:	4618      	mov	r0, r3
 800891e:	3708      	adds	r7, #8
 8008920:	46bd      	mov	sp, r7
 8008922:	bd80      	pop	{r7, pc}
 8008924:	08011a90 	.word	0x08011a90
 8008928:	40005400 	.word	0x40005400
 800892c:	000186a0 	.word	0x000186a0

08008930 <_ZN3I2CD1Ev>:

I2C::~I2C() {
 8008930:	b480      	push	{r7}
 8008932:	b083      	sub	sp, #12
 8008934:	af00      	add	r7, sp, #0
 8008936:	6078      	str	r0, [r7, #4]
 8008938:	4a04      	ldr	r2, [pc, #16]	; (800894c <_ZN3I2CD1Ev+0x1c>)
 800893a:	687b      	ldr	r3, [r7, #4]
 800893c:	601a      	str	r2, [r3, #0]

}
 800893e:	687b      	ldr	r3, [r7, #4]
 8008940:	4618      	mov	r0, r3
 8008942:	370c      	adds	r7, #12
 8008944:	46bd      	mov	sp, r7
 8008946:	f85d 7b04 	ldr.w	r7, [sp], #4
 800894a:	4770      	bx	lr
 800894c:	08011a90 	.word	0x08011a90

08008950 <_ZN3I2CD0Ev>:
I2C::~I2C() {
 8008950:	b580      	push	{r7, lr}
 8008952:	b082      	sub	sp, #8
 8008954:	af00      	add	r7, sp, #0
 8008956:	6078      	str	r0, [r7, #4]
}
 8008958:	6878      	ldr	r0, [r7, #4]
 800895a:	f7ff ffe9 	bl	8008930 <_ZN3I2CD1Ev>
 800895e:	2158      	movs	r1, #88	; 0x58
 8008960:	6878      	ldr	r0, [r7, #4]
 8008962:	f003 fb6f 	bl	800c044 <_ZdlPvj>
 8008966:	687b      	ldr	r3, [r7, #4]
 8008968:	4618      	mov	r0, r3
 800896a:	3708      	adds	r7, #8
 800896c:	46bd      	mov	sp, r7
 800896e:	bd80      	pop	{r7, pc}

08008970 <_ZN3I2C5writeEhPhh>:

void I2C::write(uint8_t address, uint8_t *data, uint8_t n) {
 8008970:	b580      	push	{r7, lr}
 8008972:	b086      	sub	sp, #24
 8008974:	af02      	add	r7, sp, #8
 8008976:	60f8      	str	r0, [r7, #12]
 8008978:	607a      	str	r2, [r7, #4]
 800897a:	461a      	mov	r2, r3
 800897c:	460b      	mov	r3, r1
 800897e:	72fb      	strb	r3, [r7, #11]
 8008980:	4613      	mov	r3, r2
 8008982:	72bb      	strb	r3, [r7, #10]
	HAL_I2C_Master_Transmit(&hi2c1, address, data, n, 1000);
 8008984:	68fb      	ldr	r3, [r7, #12]
 8008986:	1d18      	adds	r0, r3, #4
 8008988:	7afb      	ldrb	r3, [r7, #11]
 800898a:	b299      	uxth	r1, r3
 800898c:	7abb      	ldrb	r3, [r7, #10]
 800898e:	b29a      	uxth	r2, r3
 8008990:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8008994:	9300      	str	r3, [sp, #0]
 8008996:	4613      	mov	r3, r2
 8008998:	687a      	ldr	r2, [r7, #4]
 800899a:	f002 f81f 	bl	800a9dc <HAL_I2C_Master_Transmit>
}
 800899e:	bf00      	nop
 80089a0:	3710      	adds	r7, #16
 80089a2:	46bd      	mov	sp, r7
 80089a4:	bd80      	pop	{r7, pc}

080089a6 <_ZNSt9_Any_data9_M_accessEv>:
    void (_Undefined_class::*_M_member_pointer)();
  };

  union [[gnu::may_alias]] _Any_data
  {
    void*       _M_access()       { return &_M_pod_data[0]; }
 80089a6:	b480      	push	{r7}
 80089a8:	b083      	sub	sp, #12
 80089aa:	af00      	add	r7, sp, #0
 80089ac:	6078      	str	r0, [r7, #4]
 80089ae:	687b      	ldr	r3, [r7, #4]
 80089b0:	4618      	mov	r0, r3
 80089b2:	370c      	adds	r7, #12
 80089b4:	46bd      	mov	sp, r7
 80089b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089ba:	4770      	bx	lr

080089bc <_ZNKSt9_Any_data9_M_accessEv>:
    const void* _M_access() const { return &_M_pod_data[0]; }
 80089bc:	b480      	push	{r7}
 80089be:	b083      	sub	sp, #12
 80089c0:	af00      	add	r7, sp, #0
 80089c2:	6078      	str	r0, [r7, #4]
 80089c4:	687b      	ldr	r3, [r7, #4]
 80089c6:	4618      	mov	r0, r3
 80089c8:	370c      	adds	r7, #12
 80089ca:	46bd      	mov	sp, r7
 80089cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089d0:	4770      	bx	lr

080089d2 <_ZNSt14_Function_baseC1Ev>:
	static void
	_M_init_functor(_Any_data& __functor, _Functor&& __f, false_type)
	{ __functor._M_access<_Functor*>() = new _Functor(std::move(__f)); }
      };

    _Function_base() : _M_manager(nullptr) { }
 80089d2:	b480      	push	{r7}
 80089d4:	b083      	sub	sp, #12
 80089d6:	af00      	add	r7, sp, #0
 80089d8:	6078      	str	r0, [r7, #4]
 80089da:	687b      	ldr	r3, [r7, #4]
 80089dc:	2200      	movs	r2, #0
 80089de:	609a      	str	r2, [r3, #8]
 80089e0:	687b      	ldr	r3, [r7, #4]
 80089e2:	4618      	mov	r0, r3
 80089e4:	370c      	adds	r7, #12
 80089e6:	46bd      	mov	sp, r7
 80089e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089ec:	4770      	bx	lr

080089ee <_ZNSt14_Function_baseD1Ev>:

    ~_Function_base()
 80089ee:	b580      	push	{r7, lr}
 80089f0:	b082      	sub	sp, #8
 80089f2:	af00      	add	r7, sp, #0
 80089f4:	6078      	str	r0, [r7, #4]
    {
      if (_M_manager)
 80089f6:	687b      	ldr	r3, [r7, #4]
 80089f8:	689b      	ldr	r3, [r3, #8]
 80089fa:	2b00      	cmp	r3, #0
 80089fc:	d005      	beq.n	8008a0a <_ZNSt14_Function_baseD1Ev+0x1c>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
 80089fe:	687b      	ldr	r3, [r7, #4]
 8008a00:	689b      	ldr	r3, [r3, #8]
 8008a02:	6878      	ldr	r0, [r7, #4]
 8008a04:	6879      	ldr	r1, [r7, #4]
 8008a06:	2203      	movs	r2, #3
 8008a08:	4798      	blx	r3
    }
 8008a0a:	687b      	ldr	r3, [r7, #4]
 8008a0c:	4618      	mov	r0, r3
 8008a0e:	3708      	adds	r7, #8
 8008a10:	46bd      	mov	sp, r7
 8008a12:	bd80      	pop	{r7, pc}

08008a14 <_ZNSt8functionIFvhPhhEED1Ev>:
   *  @ingroup functors
   *
   *  Polymorphic function wrapper.
   */
  template<typename _Res, typename... _ArgTypes>
    class function<_Res(_ArgTypes...)>
 8008a14:	b580      	push	{r7, lr}
 8008a16:	b082      	sub	sp, #8
 8008a18:	af00      	add	r7, sp, #0
 8008a1a:	6078      	str	r0, [r7, #4]
 8008a1c:	687b      	ldr	r3, [r7, #4]
 8008a1e:	4618      	mov	r0, r3
 8008a20:	f7ff ffe5 	bl	80089ee <_ZNSt14_Function_baseD1Ev>
 8008a24:	687b      	ldr	r3, [r7, #4]
 8008a26:	4618      	mov	r0, r3
 8008a28:	3708      	adds	r7, #8
 8008a2a:	46bd      	mov	sp, r7
 8008a2c:	bd80      	pop	{r7, pc}
	...

08008a30 <main>:
static void MX_GPIO_Init(void);
static void MX_USART2_UART_Init(void);
static void MX_I2C1_Init(void);

int main(void)
{
 8008a30:	b580      	push	{r7, lr}
 8008a32:	b0ae      	sub	sp, #184	; 0xb8
 8008a34:	af02      	add	r7, sp, #8
	using namespace std::placeholders;

	uint8_t temp = 0;
 8008a36:	2300      	movs	r3, #0
 8008a38:	f887 30a7 	strb.w	r3, [r7, #167]	; 0xa7
  uint16_t counter = 0;
 8008a3c:	2300      	movs	r3, #0
 8008a3e:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
  HAL_Init();
 8008a42:	f001 fb85 	bl	800a150 <HAL_Init>

  SystemClock_Config();
 8008a46:	f000 f867 	bl	8008b18 <_Z18SystemClock_Configv>
  MX_GPIO_Init();
 8008a4a:	f000 f907 	bl	8008c5c <_ZL12MX_GPIO_Initv>
  MX_USART2_UART_Init();
 8008a4e:	f000 f8d7 	bl	8008c00 <_ZL19MX_USART2_UART_Initv>
  //MX_I2C1_Init();

  I2C i2c_ch;
 8008a52:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8008a56:	4618      	mov	r0, r3
 8008a58:	f7ff ff2e 	bl	80088b8 <_ZN3I2CC1Ev>

  auto a = std::bind<void>(&I2C::write,
			  	     &i2c_ch,
					 _1,
					 _2,
					 _3);
 8008a5c:	4b29      	ldr	r3, [pc, #164]	; (8008b04 <main+0xd4>)
 8008a5e:	67fb      	str	r3, [r7, #124]	; 0x7c
 8008a60:	2300      	movs	r3, #0
 8008a62:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
			  	     &i2c_ch,
 8008a66:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8008a6a:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
					 _3);
 8008a6e:	f107 0018 	add.w	r0, r7, #24
 8008a72:	f107 0284 	add.w	r2, r7, #132	; 0x84
 8008a76:	f107 017c 	add.w	r1, r7, #124	; 0x7c
 8008a7a:	4b23      	ldr	r3, [pc, #140]	; (8008b08 <main+0xd8>)
 8008a7c:	9301      	str	r3, [sp, #4]
 8008a7e:	4b23      	ldr	r3, [pc, #140]	; (8008b0c <main+0xdc>)
 8008a80:	9300      	str	r3, [sp, #0]
 8008a82:	4b23      	ldr	r3, [pc, #140]	; (8008b10 <main+0xe0>)
 8008a84:	f000 f998 	bl	8008db8 <_ZSt4bindIvM3I2CFvhPhhEJPS0_RKSt12_PlaceholderILi1EERKS5_ILi2EERKS5_ILi3EEEENSt15_Bindres_helperIT_T0_JDpT1_EE4typeEOSH_DpOSI_>

  MCP4725 adc(a,
		  	  MCP4725::i2c_addr_0x0,
			  MCP4725::pwrd_md_1k_ohm,
			  0x0000,
			  0x0000);
 8008a88:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8008a8c:	f107 0218 	add.w	r2, r7, #24
 8008a90:	ca07      	ldmia	r2, {r0, r1, r2}
 8008a92:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008a96:	f107 0298 	add.w	r2, r7, #152	; 0x98
 8008a9a:	f107 0388 	add.w	r3, r7, #136	; 0x88
 8008a9e:	4611      	mov	r1, r2
 8008aa0:	4618      	mov	r0, r3
 8008aa2:	f000 fae5 	bl	8009070 <_ZNSt8functionIFvhPhhEEC1ISt12_Bind_resultIvFM3I2CFvhS0_hEPS5_St12_PlaceholderILi1EES9_ILi2EES9_ILi3EEEEvvEET_>
 8008aa6:	f107 0188 	add.w	r1, r7, #136	; 0x88
 8008aaa:	4638      	mov	r0, r7
 8008aac:	2300      	movs	r3, #0
 8008aae:	9301      	str	r3, [sp, #4]
 8008ab0:	2300      	movs	r3, #0
 8008ab2:	9300      	str	r3, [sp, #0]
 8008ab4:	2301      	movs	r3, #1
 8008ab6:	2260      	movs	r2, #96	; 0x60
 8008ab8:	f001 f89e 	bl	8009bf8 <_ZN7MCP4725C1ESt8functionIFvhPhhEENS_10i2c_addr_tENS_9pwrd_md_tEtt>
 8008abc:	f107 0388 	add.w	r3, r7, #136	; 0x88
 8008ac0:	4618      	mov	r0, r3
 8008ac2:	f7ff ffa7 	bl	8008a14 <_ZNSt8functionIFvhPhhEED1Ev>


#endif
  while (1)
  {
	  HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
 8008ac6:	2120      	movs	r1, #32
 8008ac8:	4812      	ldr	r0, [pc, #72]	; (8008b14 <main+0xe4>)
 8008aca:	f001 fe34 	bl	800a736 <HAL_GPIO_TogglePin>

	  adc.set_DAC(counter);
 8008ace:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8008ad2:	463b      	mov	r3, r7
 8008ad4:	4611      	mov	r1, r2
 8008ad6:	4618      	mov	r0, r3
 8008ad8:	f001 f8ce 	bl	8009c78 <_ZN7MCP47257set_DACEt>
	  counter += 128;
 8008adc:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8008ae0:	3380      	adds	r3, #128	; 0x80
 8008ae2:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
	  for(uint32_t i = 0; i<50000;i++);
 8008ae6:	2300      	movs	r3, #0
 8008ae8:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8008aec:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8008af0:	f24c 324f 	movw	r2, #49999	; 0xc34f
 8008af4:	4293      	cmp	r3, r2
 8008af6:	d8e6      	bhi.n	8008ac6 <main+0x96>
 8008af8:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8008afc:	3301      	adds	r3, #1
 8008afe:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8008b02:	e7f3      	b.n	8008aec <main+0xbc>
 8008b04:	08008971 	.word	0x08008971
 8008b08:	08011b04 	.word	0x08011b04
 8008b0c:	08011b00 	.word	0x08011b00
 8008b10:	08011afc 	.word	0x08011afc
 8008b14:	40020000 	.word	0x40020000

08008b18 <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8008b18:	b580      	push	{r7, lr}
 8008b1a:	b094      	sub	sp, #80	; 0x50
 8008b1c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8008b1e:	f107 0320 	add.w	r3, r7, #32
 8008b22:	2230      	movs	r2, #48	; 0x30
 8008b24:	2100      	movs	r1, #0
 8008b26:	4618      	mov	r0, r3
 8008b28:	f005 f847 	bl	800dbba <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8008b2c:	f107 030c 	add.w	r3, r7, #12
 8008b30:	2200      	movs	r2, #0
 8008b32:	601a      	str	r2, [r3, #0]
 8008b34:	605a      	str	r2, [r3, #4]
 8008b36:	609a      	str	r2, [r3, #8]
 8008b38:	60da      	str	r2, [r3, #12]
 8008b3a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage 
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8008b3c:	2300      	movs	r3, #0
 8008b3e:	60bb      	str	r3, [r7, #8]
 8008b40:	4b2d      	ldr	r3, [pc, #180]	; (8008bf8 <_Z18SystemClock_Configv+0xe0>)
 8008b42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008b44:	4a2c      	ldr	r2, [pc, #176]	; (8008bf8 <_Z18SystemClock_Configv+0xe0>)
 8008b46:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008b4a:	6413      	str	r3, [r2, #64]	; 0x40
 8008b4c:	4b2a      	ldr	r3, [pc, #168]	; (8008bf8 <_Z18SystemClock_Configv+0xe0>)
 8008b4e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008b50:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008b54:	60bb      	str	r3, [r7, #8]
 8008b56:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8008b58:	2300      	movs	r3, #0
 8008b5a:	607b      	str	r3, [r7, #4]
 8008b5c:	4b27      	ldr	r3, [pc, #156]	; (8008bfc <_Z18SystemClock_Configv+0xe4>)
 8008b5e:	681b      	ldr	r3, [r3, #0]
 8008b60:	4a26      	ldr	r2, [pc, #152]	; (8008bfc <_Z18SystemClock_Configv+0xe4>)
 8008b62:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8008b66:	6013      	str	r3, [r2, #0]
 8008b68:	4b24      	ldr	r3, [pc, #144]	; (8008bfc <_Z18SystemClock_Configv+0xe4>)
 8008b6a:	681b      	ldr	r3, [r3, #0]
 8008b6c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8008b70:	607b      	str	r3, [r7, #4]
 8008b72:	687b      	ldr	r3, [r7, #4]
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8008b74:	2302      	movs	r3, #2
 8008b76:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8008b78:	2301      	movs	r3, #1
 8008b7a:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8008b7c:	2310      	movs	r3, #16
 8008b7e:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8008b80:	2302      	movs	r3, #2
 8008b82:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8008b84:	2300      	movs	r3, #0
 8008b86:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 16;
 8008b88:	2310      	movs	r3, #16
 8008b8a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 8008b8c:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8008b90:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 8008b92:	2304      	movs	r3, #4
 8008b94:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8008b96:	2304      	movs	r3, #4
 8008b98:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8008b9a:	f107 0320 	add.w	r3, r7, #32
 8008b9e:	4618      	mov	r0, r3
 8008ba0:	f002 fa24 	bl	800afec <HAL_RCC_OscConfig>
 8008ba4:	4603      	mov	r3, r0
 8008ba6:	2b00      	cmp	r3, #0
 8008ba8:	bf14      	ite	ne
 8008baa:	2301      	movne	r3, #1
 8008bac:	2300      	moveq	r3, #0
 8008bae:	b2db      	uxtb	r3, r3
 8008bb0:	2b00      	cmp	r3, #0
 8008bb2:	d001      	beq.n	8008bb8 <_Z18SystemClock_Configv+0xa0>
  {
    Error_Handler();
 8008bb4:	f000 f8c2 	bl	8008d3c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8008bb8:	230f      	movs	r3, #15
 8008bba:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8008bbc:	2302      	movs	r3, #2
 8008bbe:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8008bc0:	2300      	movs	r3, #0
 8008bc2:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8008bc4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8008bc8:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8008bca:	2300      	movs	r3, #0
 8008bcc:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8008bce:	f107 030c 	add.w	r3, r7, #12
 8008bd2:	2102      	movs	r1, #2
 8008bd4:	4618      	mov	r0, r3
 8008bd6:	f002 fc79 	bl	800b4cc <HAL_RCC_ClockConfig>
 8008bda:	4603      	mov	r3, r0
 8008bdc:	2b00      	cmp	r3, #0
 8008bde:	bf14      	ite	ne
 8008be0:	2301      	movne	r3, #1
 8008be2:	2300      	moveq	r3, #0
 8008be4:	b2db      	uxtb	r3, r3
 8008be6:	2b00      	cmp	r3, #0
 8008be8:	d001      	beq.n	8008bee <_Z18SystemClock_Configv+0xd6>
  {
    Error_Handler();
 8008bea:	f000 f8a7 	bl	8008d3c <Error_Handler>
  }
}
 8008bee:	bf00      	nop
 8008bf0:	3750      	adds	r7, #80	; 0x50
 8008bf2:	46bd      	mov	sp, r7
 8008bf4:	bd80      	pop	{r7, pc}
 8008bf6:	bf00      	nop
 8008bf8:	40023800 	.word	0x40023800
 8008bfc:	40007000 	.word	0x40007000

08008c00 <_ZL19MX_USART2_UART_Initv>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8008c00:	b580      	push	{r7, lr}
 8008c02:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8008c04:	4b13      	ldr	r3, [pc, #76]	; (8008c54 <_ZL19MX_USART2_UART_Initv+0x54>)
 8008c06:	4a14      	ldr	r2, [pc, #80]	; (8008c58 <_ZL19MX_USART2_UART_Initv+0x58>)
 8008c08:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8008c0a:	4b12      	ldr	r3, [pc, #72]	; (8008c54 <_ZL19MX_USART2_UART_Initv+0x54>)
 8008c0c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8008c10:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8008c12:	4b10      	ldr	r3, [pc, #64]	; (8008c54 <_ZL19MX_USART2_UART_Initv+0x54>)
 8008c14:	2200      	movs	r2, #0
 8008c16:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8008c18:	4b0e      	ldr	r3, [pc, #56]	; (8008c54 <_ZL19MX_USART2_UART_Initv+0x54>)
 8008c1a:	2200      	movs	r2, #0
 8008c1c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8008c1e:	4b0d      	ldr	r3, [pc, #52]	; (8008c54 <_ZL19MX_USART2_UART_Initv+0x54>)
 8008c20:	2200      	movs	r2, #0
 8008c22:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8008c24:	4b0b      	ldr	r3, [pc, #44]	; (8008c54 <_ZL19MX_USART2_UART_Initv+0x54>)
 8008c26:	220c      	movs	r2, #12
 8008c28:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8008c2a:	4b0a      	ldr	r3, [pc, #40]	; (8008c54 <_ZL19MX_USART2_UART_Initv+0x54>)
 8008c2c:	2200      	movs	r2, #0
 8008c2e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8008c30:	4b08      	ldr	r3, [pc, #32]	; (8008c54 <_ZL19MX_USART2_UART_Initv+0x54>)
 8008c32:	2200      	movs	r2, #0
 8008c34:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8008c36:	4807      	ldr	r0, [pc, #28]	; (8008c54 <_ZL19MX_USART2_UART_Initv+0x54>)
 8008c38:	f002 fe3a 	bl	800b8b0 <HAL_UART_Init>
 8008c3c:	4603      	mov	r3, r0
 8008c3e:	2b00      	cmp	r3, #0
 8008c40:	bf14      	ite	ne
 8008c42:	2301      	movne	r3, #1
 8008c44:	2300      	moveq	r3, #0
 8008c46:	b2db      	uxtb	r3, r3
 8008c48:	2b00      	cmp	r3, #0
 8008c4a:	d001      	beq.n	8008c50 <_ZL19MX_USART2_UART_Initv+0x50>
  {
    Error_Handler();
 8008c4c:	f000 f876 	bl	8008d3c <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8008c50:	bf00      	nop
 8008c52:	bd80      	pop	{r7, pc}
 8008c54:	200009dc 	.word	0x200009dc
 8008c58:	40004400 	.word	0x40004400

08008c5c <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8008c5c:	b580      	push	{r7, lr}
 8008c5e:	b08a      	sub	sp, #40	; 0x28
 8008c60:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8008c62:	f107 0314 	add.w	r3, r7, #20
 8008c66:	2200      	movs	r2, #0
 8008c68:	601a      	str	r2, [r3, #0]
 8008c6a:	605a      	str	r2, [r3, #4]
 8008c6c:	609a      	str	r2, [r3, #8]
 8008c6e:	60da      	str	r2, [r3, #12]
 8008c70:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8008c72:	2300      	movs	r3, #0
 8008c74:	613b      	str	r3, [r7, #16]
 8008c76:	4b2d      	ldr	r3, [pc, #180]	; (8008d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8008c78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008c7a:	4a2c      	ldr	r2, [pc, #176]	; (8008d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8008c7c:	f043 0304 	orr.w	r3, r3, #4
 8008c80:	6313      	str	r3, [r2, #48]	; 0x30
 8008c82:	4b2a      	ldr	r3, [pc, #168]	; (8008d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8008c84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008c86:	f003 0304 	and.w	r3, r3, #4
 8008c8a:	613b      	str	r3, [r7, #16]
 8008c8c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8008c8e:	2300      	movs	r3, #0
 8008c90:	60fb      	str	r3, [r7, #12]
 8008c92:	4b26      	ldr	r3, [pc, #152]	; (8008d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8008c94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008c96:	4a25      	ldr	r2, [pc, #148]	; (8008d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8008c98:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008c9c:	6313      	str	r3, [r2, #48]	; 0x30
 8008c9e:	4b23      	ldr	r3, [pc, #140]	; (8008d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8008ca0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008ca2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008ca6:	60fb      	str	r3, [r7, #12]
 8008ca8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8008caa:	2300      	movs	r3, #0
 8008cac:	60bb      	str	r3, [r7, #8]
 8008cae:	4b1f      	ldr	r3, [pc, #124]	; (8008d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8008cb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008cb2:	4a1e      	ldr	r2, [pc, #120]	; (8008d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8008cb4:	f043 0301 	orr.w	r3, r3, #1
 8008cb8:	6313      	str	r3, [r2, #48]	; 0x30
 8008cba:	4b1c      	ldr	r3, [pc, #112]	; (8008d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8008cbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008cbe:	f003 0301 	and.w	r3, r3, #1
 8008cc2:	60bb      	str	r3, [r7, #8]
 8008cc4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8008cc6:	2300      	movs	r3, #0
 8008cc8:	607b      	str	r3, [r7, #4]
 8008cca:	4b18      	ldr	r3, [pc, #96]	; (8008d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8008ccc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008cce:	4a17      	ldr	r2, [pc, #92]	; (8008d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8008cd0:	f043 0302 	orr.w	r3, r3, #2
 8008cd4:	6313      	str	r3, [r2, #48]	; 0x30
 8008cd6:	4b15      	ldr	r3, [pc, #84]	; (8008d2c <_ZL12MX_GPIO_Initv+0xd0>)
 8008cd8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008cda:	f003 0302 	and.w	r3, r3, #2
 8008cde:	607b      	str	r3, [r7, #4]
 8008ce0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8008ce2:	2200      	movs	r2, #0
 8008ce4:	2120      	movs	r1, #32
 8008ce6:	4812      	ldr	r0, [pc, #72]	; (8008d30 <_ZL12MX_GPIO_Initv+0xd4>)
 8008ce8:	f001 fd0c 	bl	800a704 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8008cec:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8008cf0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8008cf2:	4b10      	ldr	r3, [pc, #64]	; (8008d34 <_ZL12MX_GPIO_Initv+0xd8>)
 8008cf4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8008cf6:	2300      	movs	r3, #0
 8008cf8:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8008cfa:	f107 0314 	add.w	r3, r7, #20
 8008cfe:	4619      	mov	r1, r3
 8008d00:	480d      	ldr	r0, [pc, #52]	; (8008d38 <_ZL12MX_GPIO_Initv+0xdc>)
 8008d02:	f001 fb7d 	bl	800a400 <HAL_GPIO_Init>

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
 8008d06:	2320      	movs	r3, #32
 8008d08:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8008d0a:	2301      	movs	r3, #1
 8008d0c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8008d0e:	2300      	movs	r3, #0
 8008d10:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8008d12:	2300      	movs	r3, #0
 8008d14:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8008d16:	f107 0314 	add.w	r3, r7, #20
 8008d1a:	4619      	mov	r1, r3
 8008d1c:	4804      	ldr	r0, [pc, #16]	; (8008d30 <_ZL12MX_GPIO_Initv+0xd4>)
 8008d1e:	f001 fb6f 	bl	800a400 <HAL_GPIO_Init>

}
 8008d22:	bf00      	nop
 8008d24:	3728      	adds	r7, #40	; 0x28
 8008d26:	46bd      	mov	sp, r7
 8008d28:	bd80      	pop	{r7, pc}
 8008d2a:	bf00      	nop
 8008d2c:	40023800 	.word	0x40023800
 8008d30:	40020000 	.word	0x40020000
 8008d34:	10210000 	.word	0x10210000
 8008d38:	40020800 	.word	0x40020800

08008d3c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8008d3c:	b480      	push	{r7}
 8008d3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8008d40:	bf00      	nop
 8008d42:	46bd      	mov	sp, r7
 8008d44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d48:	4770      	bx	lr

08008d4a <_ZSt7forwardIM3I2CFvhPhhEEOT_RNSt16remove_referenceIS4_E4typeE>:
   *
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008d4a:	b480      	push	{r7}
 8008d4c:	b083      	sub	sp, #12
 8008d4e:	af00      	add	r7, sp, #0
 8008d50:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008d52:	687b      	ldr	r3, [r7, #4]
 8008d54:	4618      	mov	r0, r3
 8008d56:	370c      	adds	r7, #12
 8008d58:	46bd      	mov	sp, r7
 8008d5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d5e:	4770      	bx	lr

08008d60 <_ZSt7forwardIP3I2CEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008d60:	b480      	push	{r7}
 8008d62:	b083      	sub	sp, #12
 8008d64:	af00      	add	r7, sp, #0
 8008d66:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008d68:	687b      	ldr	r3, [r7, #4]
 8008d6a:	4618      	mov	r0, r3
 8008d6c:	370c      	adds	r7, #12
 8008d6e:	46bd      	mov	sp, r7
 8008d70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d74:	4770      	bx	lr

08008d76 <_ZSt7forwardIRKSt12_PlaceholderILi1EEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008d76:	b480      	push	{r7}
 8008d78:	b083      	sub	sp, #12
 8008d7a:	af00      	add	r7, sp, #0
 8008d7c:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008d7e:	687b      	ldr	r3, [r7, #4]
 8008d80:	4618      	mov	r0, r3
 8008d82:	370c      	adds	r7, #12
 8008d84:	46bd      	mov	sp, r7
 8008d86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d8a:	4770      	bx	lr

08008d8c <_ZSt7forwardIRKSt12_PlaceholderILi2EEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008d8c:	b480      	push	{r7}
 8008d8e:	b083      	sub	sp, #12
 8008d90:	af00      	add	r7, sp, #0
 8008d92:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008d94:	687b      	ldr	r3, [r7, #4]
 8008d96:	4618      	mov	r0, r3
 8008d98:	370c      	adds	r7, #12
 8008d9a:	46bd      	mov	sp, r7
 8008d9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008da0:	4770      	bx	lr

08008da2 <_ZSt7forwardIRKSt12_PlaceholderILi3EEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008da2:	b480      	push	{r7}
 8008da4:	b083      	sub	sp, #12
 8008da6:	af00      	add	r7, sp, #0
 8008da8:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008daa:	687b      	ldr	r3, [r7, #4]
 8008dac:	4618      	mov	r0, r3
 8008dae:	370c      	adds	r7, #12
 8008db0:	46bd      	mov	sp, r7
 8008db2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008db6:	4770      	bx	lr

08008db8 <_ZSt4bindIvM3I2CFvhPhhEJPS0_RKSt12_PlaceholderILi1EERKS5_ILi2EERKS5_ILi3EEEENSt15_Bindres_helperIT_T0_JDpT1_EE4typeEOSH_DpOSI_>:
   *  @ingroup binders
   */
  template<typename _Result, typename _Func, typename... _BoundArgs>
    inline
    typename _Bindres_helper<_Result, _Func, _BoundArgs...>::type
    bind(_Func&& __f, _BoundArgs&&... __args)
 8008db8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008dbc:	b086      	sub	sp, #24
 8008dbe:	af02      	add	r7, sp, #8
 8008dc0:	60f8      	str	r0, [r7, #12]
 8008dc2:	60b9      	str	r1, [r7, #8]
 8008dc4:	607a      	str	r2, [r7, #4]
 8008dc6:	603b      	str	r3, [r7, #0]
    {
      typedef _Bindres_helper<_Result, _Func, _BoundArgs...> __helper_type;
      return typename __helper_type::type(std::forward<_Func>(__f),
					  std::forward<_BoundArgs>(__args)...);
 8008dc8:	68b8      	ldr	r0, [r7, #8]
 8008dca:	f7ff ffbe 	bl	8008d4a <_ZSt7forwardIM3I2CFvhPhhEEOT_RNSt16remove_referenceIS4_E4typeE>
 8008dce:	4605      	mov	r5, r0
 8008dd0:	6878      	ldr	r0, [r7, #4]
 8008dd2:	f7ff ffc5 	bl	8008d60 <_ZSt7forwardIP3I2CEOT_RNSt16remove_referenceIS2_E4typeE>
 8008dd6:	4606      	mov	r6, r0
 8008dd8:	6838      	ldr	r0, [r7, #0]
 8008dda:	f7ff ffcc 	bl	8008d76 <_ZSt7forwardIRKSt12_PlaceholderILi1EEEOT_RNSt16remove_referenceIS4_E4typeE>
 8008dde:	4680      	mov	r8, r0
 8008de0:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8008de2:	f7ff ffd3 	bl	8008d8c <_ZSt7forwardIRKSt12_PlaceholderILi2EEEOT_RNSt16remove_referenceIS4_E4typeE>
 8008de6:	4604      	mov	r4, r0
 8008de8:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8008dea:	f7ff ffda 	bl	8008da2 <_ZSt7forwardIRKSt12_PlaceholderILi3EEEOT_RNSt16remove_referenceIS4_E4typeE>
 8008dee:	4603      	mov	r3, r0
 8008df0:	9301      	str	r3, [sp, #4]
 8008df2:	9400      	str	r4, [sp, #0]
 8008df4:	4643      	mov	r3, r8
 8008df6:	4632      	mov	r2, r6
 8008df8:	4629      	mov	r1, r5
 8008dfa:	68f8      	ldr	r0, [r7, #12]
 8008dfc:	f000 f960 	bl	80090c0 <_ZNSt12_Bind_resultIvFM3I2CFvhPhhEPS0_St12_PlaceholderILi1EES5_ILi2EES5_ILi3EEEEC1IJS4_RKS6_RKS7_RKS8_EEEOS3_DpOT_>
    }
 8008e00:	68f8      	ldr	r0, [r7, #12]
 8008e02:	3710      	adds	r7, #16
 8008e04:	46bd      	mov	sp, r7
 8008e06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008e0a <_ZSt4moveIRSt5tupleIJP3I2CSt12_PlaceholderILi1EES3_ILi2EES3_ILi3EEEEEONSt16remove_referenceIT_E4typeEOSA_>:
   *  @param  __t  A thing of arbitrary type.
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
 8008e0a:	b480      	push	{r7}
 8008e0c:	b083      	sub	sp, #12
 8008e0e:	af00      	add	r7, sp, #0
 8008e10:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8008e12:	687b      	ldr	r3, [r7, #4]
 8008e14:	4618      	mov	r0, r3
 8008e16:	370c      	adds	r7, #12
 8008e18:	46bd      	mov	sp, r7
 8008e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e1e:	4770      	bx	lr

08008e20 <_ZNSt11_Tuple_implILj3EJSt12_PlaceholderILi3EEEE7_M_headERS2_>:
      template<std::size_t, typename...> friend class _Tuple_impl;

      typedef _Head_base<_Idx, _Head> _Base;

      static constexpr _Head&
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 8008e20:	b580      	push	{r7, lr}
 8008e22:	b082      	sub	sp, #8
 8008e24:	af00      	add	r7, sp, #0
 8008e26:	6078      	str	r0, [r7, #4]
 8008e28:	6878      	ldr	r0, [r7, #4]
 8008e2a:	f000 f805 	bl	8008e38 <_ZNSt10_Head_baseILj3ESt12_PlaceholderILi3EELb1EE7_M_headERS2_>
 8008e2e:	4603      	mov	r3, r0
 8008e30:	4618      	mov	r0, r3
 8008e32:	3708      	adds	r7, #8
 8008e34:	46bd      	mov	sp, r7
 8008e36:	bd80      	pop	{r7, pc}

08008e38 <_ZNSt10_Head_baseILj3ESt12_PlaceholderILi3EELb1EE7_M_headERS2_>:
      _M_head(_Head_base& __b) noexcept { return __b; }
 8008e38:	b480      	push	{r7}
 8008e3a:	b083      	sub	sp, #12
 8008e3c:	af00      	add	r7, sp, #0
 8008e3e:	6078      	str	r0, [r7, #4]
 8008e40:	687b      	ldr	r3, [r7, #4]
 8008e42:	4618      	mov	r0, r3
 8008e44:	370c      	adds	r7, #12
 8008e46:	46bd      	mov	sp, r7
 8008e48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e4c:	4770      	bx	lr

08008e4e <_ZSt7forwardISt12_PlaceholderILi3EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008e4e:	b480      	push	{r7}
 8008e50:	b083      	sub	sp, #12
 8008e52:	af00      	add	r7, sp, #0
 8008e54:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008e56:	687b      	ldr	r3, [r7, #4]
 8008e58:	4618      	mov	r0, r3
 8008e5a:	370c      	adds	r7, #12
 8008e5c:	46bd      	mov	sp, r7
 8008e5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e62:	4770      	bx	lr

08008e64 <_ZNSt11_Tuple_implILj3EJSt12_PlaceholderILi3EEEEC1EOS2_>:
	: _Base(std::forward<_UHead>(__head)) { }

      constexpr _Tuple_impl(const _Tuple_impl&) = default;

      constexpr
      _Tuple_impl(_Tuple_impl&& __in)
 8008e64:	b580      	push	{r7, lr}
 8008e66:	b082      	sub	sp, #8
 8008e68:	af00      	add	r7, sp, #0
 8008e6a:	6078      	str	r0, [r7, #4]
 8008e6c:	6039      	str	r1, [r7, #0]
      noexcept(is_nothrow_move_constructible<_Head>::value)
      : _Base(std::forward<_Head>(_M_head(__in))) { }
 8008e6e:	6838      	ldr	r0, [r7, #0]
 8008e70:	f7ff ffd6 	bl	8008e20 <_ZNSt11_Tuple_implILj3EJSt12_PlaceholderILi3EEEE7_M_headERS2_>
 8008e74:	4603      	mov	r3, r0
 8008e76:	4618      	mov	r0, r3
 8008e78:	f7ff ffe9 	bl	8008e4e <_ZSt7forwardISt12_PlaceholderILi3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8008e7c:	4603      	mov	r3, r0
 8008e7e:	4619      	mov	r1, r3
 8008e80:	6878      	ldr	r0, [r7, #4]
 8008e82:	f000 f959 	bl	8009138 <_ZNSt10_Head_baseILj3ESt12_PlaceholderILi3EELb1EEC1IS1_EEOT_>
 8008e86:	687b      	ldr	r3, [r7, #4]
 8008e88:	4618      	mov	r0, r3
 8008e8a:	3708      	adds	r7, #8
 8008e8c:	46bd      	mov	sp, r7
 8008e8e:	bd80      	pop	{r7, pc}

08008e90 <_ZNSt11_Tuple_implILj2EJSt12_PlaceholderILi2EES0_ILi3EEEE7_M_tailERS3_>:
      _M_tail(_Tuple_impl& __t) noexcept { return __t; }
 8008e90:	b480      	push	{r7}
 8008e92:	b083      	sub	sp, #12
 8008e94:	af00      	add	r7, sp, #0
 8008e96:	6078      	str	r0, [r7, #4]
 8008e98:	687b      	ldr	r3, [r7, #4]
 8008e9a:	4618      	mov	r0, r3
 8008e9c:	370c      	adds	r7, #12
 8008e9e:	46bd      	mov	sp, r7
 8008ea0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ea4:	4770      	bx	lr

08008ea6 <_ZNSt11_Tuple_implILj2EJSt12_PlaceholderILi2EES0_ILi3EEEE7_M_headERS3_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 8008ea6:	b580      	push	{r7, lr}
 8008ea8:	b082      	sub	sp, #8
 8008eaa:	af00      	add	r7, sp, #0
 8008eac:	6078      	str	r0, [r7, #4]
 8008eae:	6878      	ldr	r0, [r7, #4]
 8008eb0:	f000 f805 	bl	8008ebe <_ZNSt10_Head_baseILj2ESt12_PlaceholderILi2EELb1EE7_M_headERS2_>
 8008eb4:	4603      	mov	r3, r0
 8008eb6:	4618      	mov	r0, r3
 8008eb8:	3708      	adds	r7, #8
 8008eba:	46bd      	mov	sp, r7
 8008ebc:	bd80      	pop	{r7, pc}

08008ebe <_ZNSt10_Head_baseILj2ESt12_PlaceholderILi2EELb1EE7_M_headERS2_>:
      _M_head(_Head_base& __b) noexcept { return __b; }
 8008ebe:	b480      	push	{r7}
 8008ec0:	b083      	sub	sp, #12
 8008ec2:	af00      	add	r7, sp, #0
 8008ec4:	6078      	str	r0, [r7, #4]
 8008ec6:	687b      	ldr	r3, [r7, #4]
 8008ec8:	4618      	mov	r0, r3
 8008eca:	370c      	adds	r7, #12
 8008ecc:	46bd      	mov	sp, r7
 8008ece:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ed2:	4770      	bx	lr

08008ed4 <_ZSt4moveIRSt11_Tuple_implILj3EJSt12_PlaceholderILi3EEEEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
 8008ed4:	b480      	push	{r7}
 8008ed6:	b083      	sub	sp, #12
 8008ed8:	af00      	add	r7, sp, #0
 8008eda:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8008edc:	687b      	ldr	r3, [r7, #4]
 8008ede:	4618      	mov	r0, r3
 8008ee0:	370c      	adds	r7, #12
 8008ee2:	46bd      	mov	sp, r7
 8008ee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ee8:	4770      	bx	lr

08008eea <_ZSt7forwardISt12_PlaceholderILi2EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008eea:	b480      	push	{r7}
 8008eec:	b083      	sub	sp, #12
 8008eee:	af00      	add	r7, sp, #0
 8008ef0:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008ef2:	687b      	ldr	r3, [r7, #4]
 8008ef4:	4618      	mov	r0, r3
 8008ef6:	370c      	adds	r7, #12
 8008ef8:	46bd      	mov	sp, r7
 8008efa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008efe:	4770      	bx	lr

08008f00 <_ZNSt11_Tuple_implILj2EJSt12_PlaceholderILi2EES0_ILi3EEEEC1EOS3_>:
      _Tuple_impl(_Tuple_impl&& __in)
 8008f00:	b580      	push	{r7, lr}
 8008f02:	b082      	sub	sp, #8
 8008f04:	af00      	add	r7, sp, #0
 8008f06:	6078      	str	r0, [r7, #4]
 8008f08:	6039      	str	r1, [r7, #0]
      : _Inherited(std::move(_M_tail(__in))),
 8008f0a:	6838      	ldr	r0, [r7, #0]
 8008f0c:	f7ff ffc0 	bl	8008e90 <_ZNSt11_Tuple_implILj2EJSt12_PlaceholderILi2EES0_ILi3EEEE7_M_tailERS3_>
 8008f10:	4603      	mov	r3, r0
 8008f12:	4618      	mov	r0, r3
 8008f14:	f7ff ffde 	bl	8008ed4 <_ZSt4moveIRSt11_Tuple_implILj3EJSt12_PlaceholderILi3EEEEEONSt16remove_referenceIT_E4typeEOS6_>
 8008f18:	4603      	mov	r3, r0
	_Base(std::forward<_Head>(_M_head(__in))) { }
 8008f1a:	4619      	mov	r1, r3
 8008f1c:	6878      	ldr	r0, [r7, #4]
 8008f1e:	f7ff ffa1 	bl	8008e64 <_ZNSt11_Tuple_implILj3EJSt12_PlaceholderILi3EEEEC1EOS2_>
 8008f22:	6838      	ldr	r0, [r7, #0]
 8008f24:	f7ff ffbf 	bl	8008ea6 <_ZNSt11_Tuple_implILj2EJSt12_PlaceholderILi2EES0_ILi3EEEE7_M_headERS3_>
 8008f28:	4603      	mov	r3, r0
 8008f2a:	4618      	mov	r0, r3
 8008f2c:	f7ff ffdd 	bl	8008eea <_ZSt7forwardISt12_PlaceholderILi2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8008f30:	4603      	mov	r3, r0
 8008f32:	4619      	mov	r1, r3
 8008f34:	6878      	ldr	r0, [r7, #4]
 8008f36:	f000 f90c 	bl	8009152 <_ZNSt10_Head_baseILj2ESt12_PlaceholderILi2EELb1EEC1IS1_EEOT_>
 8008f3a:	687b      	ldr	r3, [r7, #4]
 8008f3c:	4618      	mov	r0, r3
 8008f3e:	3708      	adds	r7, #8
 8008f40:	46bd      	mov	sp, r7
 8008f42:	bd80      	pop	{r7, pc}

08008f44 <_ZNSt11_Tuple_implILj1EJSt12_PlaceholderILi1EES0_ILi2EES0_ILi3EEEE7_M_tailERS4_>:
      _M_tail(_Tuple_impl& __t) noexcept { return __t; }
 8008f44:	b480      	push	{r7}
 8008f46:	b083      	sub	sp, #12
 8008f48:	af00      	add	r7, sp, #0
 8008f4a:	6078      	str	r0, [r7, #4]
 8008f4c:	687b      	ldr	r3, [r7, #4]
 8008f4e:	4618      	mov	r0, r3
 8008f50:	370c      	adds	r7, #12
 8008f52:	46bd      	mov	sp, r7
 8008f54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f58:	4770      	bx	lr

08008f5a <_ZNSt11_Tuple_implILj1EJSt12_PlaceholderILi1EES0_ILi2EES0_ILi3EEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 8008f5a:	b580      	push	{r7, lr}
 8008f5c:	b082      	sub	sp, #8
 8008f5e:	af00      	add	r7, sp, #0
 8008f60:	6078      	str	r0, [r7, #4]
 8008f62:	6878      	ldr	r0, [r7, #4]
 8008f64:	f000 f805 	bl	8008f72 <_ZNSt10_Head_baseILj1ESt12_PlaceholderILi1EELb1EE7_M_headERS2_>
 8008f68:	4603      	mov	r3, r0
 8008f6a:	4618      	mov	r0, r3
 8008f6c:	3708      	adds	r7, #8
 8008f6e:	46bd      	mov	sp, r7
 8008f70:	bd80      	pop	{r7, pc}

08008f72 <_ZNSt10_Head_baseILj1ESt12_PlaceholderILi1EELb1EE7_M_headERS2_>:
      _M_head(_Head_base& __b) noexcept { return __b; }
 8008f72:	b480      	push	{r7}
 8008f74:	b083      	sub	sp, #12
 8008f76:	af00      	add	r7, sp, #0
 8008f78:	6078      	str	r0, [r7, #4]
 8008f7a:	687b      	ldr	r3, [r7, #4]
 8008f7c:	4618      	mov	r0, r3
 8008f7e:	370c      	adds	r7, #12
 8008f80:	46bd      	mov	sp, r7
 8008f82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f86:	4770      	bx	lr

08008f88 <_ZSt4moveIRSt11_Tuple_implILj2EJSt12_PlaceholderILi2EES1_ILi3EEEEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
 8008f88:	b480      	push	{r7}
 8008f8a:	b083      	sub	sp, #12
 8008f8c:	af00      	add	r7, sp, #0
 8008f8e:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8008f90:	687b      	ldr	r3, [r7, #4]
 8008f92:	4618      	mov	r0, r3
 8008f94:	370c      	adds	r7, #12
 8008f96:	46bd      	mov	sp, r7
 8008f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f9c:	4770      	bx	lr

08008f9e <_ZSt7forwardISt12_PlaceholderILi1EEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8008f9e:	b480      	push	{r7}
 8008fa0:	b083      	sub	sp, #12
 8008fa2:	af00      	add	r7, sp, #0
 8008fa4:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8008fa6:	687b      	ldr	r3, [r7, #4]
 8008fa8:	4618      	mov	r0, r3
 8008faa:	370c      	adds	r7, #12
 8008fac:	46bd      	mov	sp, r7
 8008fae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fb2:	4770      	bx	lr

08008fb4 <_ZNSt11_Tuple_implILj1EJSt12_PlaceholderILi1EES0_ILi2EES0_ILi3EEEEC1EOS4_>:
      _Tuple_impl(_Tuple_impl&& __in)
 8008fb4:	b580      	push	{r7, lr}
 8008fb6:	b082      	sub	sp, #8
 8008fb8:	af00      	add	r7, sp, #0
 8008fba:	6078      	str	r0, [r7, #4]
 8008fbc:	6039      	str	r1, [r7, #0]
      : _Inherited(std::move(_M_tail(__in))),
 8008fbe:	6838      	ldr	r0, [r7, #0]
 8008fc0:	f7ff ffc0 	bl	8008f44 <_ZNSt11_Tuple_implILj1EJSt12_PlaceholderILi1EES0_ILi2EES0_ILi3EEEE7_M_tailERS4_>
 8008fc4:	4603      	mov	r3, r0
 8008fc6:	4618      	mov	r0, r3
 8008fc8:	f7ff ffde 	bl	8008f88 <_ZSt4moveIRSt11_Tuple_implILj2EJSt12_PlaceholderILi2EES1_ILi3EEEEEONSt16remove_referenceIT_E4typeEOS7_>
 8008fcc:	4603      	mov	r3, r0
	_Base(std::forward<_Head>(_M_head(__in))) { }
 8008fce:	4619      	mov	r1, r3
 8008fd0:	6878      	ldr	r0, [r7, #4]
 8008fd2:	f7ff ff95 	bl	8008f00 <_ZNSt11_Tuple_implILj2EJSt12_PlaceholderILi2EES0_ILi3EEEEC1EOS3_>
 8008fd6:	6838      	ldr	r0, [r7, #0]
 8008fd8:	f7ff ffbf 	bl	8008f5a <_ZNSt11_Tuple_implILj1EJSt12_PlaceholderILi1EES0_ILi2EES0_ILi3EEEE7_M_headERS4_>
 8008fdc:	4603      	mov	r3, r0
 8008fde:	4618      	mov	r0, r3
 8008fe0:	f7ff ffdd 	bl	8008f9e <_ZSt7forwardISt12_PlaceholderILi1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8008fe4:	4603      	mov	r3, r0
 8008fe6:	4619      	mov	r1, r3
 8008fe8:	6878      	ldr	r0, [r7, #4]
 8008fea:	f000 f8bf 	bl	800916c <_ZNSt10_Head_baseILj1ESt12_PlaceholderILi1EELb1EEC1IS1_EEOT_>
 8008fee:	687b      	ldr	r3, [r7, #4]
 8008ff0:	4618      	mov	r0, r3
 8008ff2:	3708      	adds	r7, #8
 8008ff4:	46bd      	mov	sp, r7
 8008ff6:	bd80      	pop	{r7, pc}

08008ff8 <_ZNSt5tupleIJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEEC1EOS6_>:
        explicit constexpr tuple(_UElements&&... __elements)
	: _Inherited(std::forward<_UElements>(__elements)...) {	}

      constexpr tuple(const tuple&) = default;

      constexpr tuple(tuple&&) = default;
 8008ff8:	b580      	push	{r7, lr}
 8008ffa:	b082      	sub	sp, #8
 8008ffc:	af00      	add	r7, sp, #0
 8008ffe:	6078      	str	r0, [r7, #4]
 8009000:	6039      	str	r1, [r7, #0]
 8009002:	687b      	ldr	r3, [r7, #4]
 8009004:	683a      	ldr	r2, [r7, #0]
 8009006:	4611      	mov	r1, r2
 8009008:	4618      	mov	r0, r3
 800900a:	f000 f8ea 	bl	80091e2 <_ZNSt11_Tuple_implILj0EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEEC1EOS6_>
 800900e:	687b      	ldr	r3, [r7, #4]
 8009010:	4618      	mov	r0, r3
 8009012:	3708      	adds	r7, #8
 8009014:	46bd      	mov	sp, r7
 8009016:	bd80      	pop	{r7, pc}

08009018 <_ZNSt12_Bind_resultIvFM3I2CFvhPhhEPS0_St12_PlaceholderILi1EES5_ILi2EES5_ILi3EEEEC1EOSA_>:
      _Bind_result(_Bind_result&& __b)
 8009018:	b590      	push	{r4, r7, lr}
 800901a:	b083      	sub	sp, #12
 800901c:	af00      	add	r7, sp, #0
 800901e:	6078      	str	r0, [r7, #4]
 8009020:	6039      	str	r1, [r7, #0]
      : _M_f(std::move(__b._M_f)), _M_bound_args(std::move(__b._M_bound_args))
 8009022:	683b      	ldr	r3, [r7, #0]
 8009024:	4618      	mov	r0, r3
 8009026:	f000 f87c 	bl	8009122 <_ZSt4moveIRM3I2CFvhPhhEEONSt16remove_referenceIT_E4typeEOS6_>
 800902a:	4602      	mov	r2, r0
 800902c:	687b      	ldr	r3, [r7, #4]
 800902e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8009032:	e883 0003 	stmia.w	r3, {r0, r1}
 8009036:	687b      	ldr	r3, [r7, #4]
 8009038:	f103 0408 	add.w	r4, r3, #8
 800903c:	683b      	ldr	r3, [r7, #0]
 800903e:	3308      	adds	r3, #8
 8009040:	4618      	mov	r0, r3
 8009042:	f7ff fee2 	bl	8008e0a <_ZSt4moveIRSt5tupleIJP3I2CSt12_PlaceholderILi1EES3_ILi2EES3_ILi3EEEEEONSt16remove_referenceIT_E4typeEOSA_>
 8009046:	4603      	mov	r3, r0
 8009048:	4619      	mov	r1, r3
 800904a:	4620      	mov	r0, r4
 800904c:	f7ff ffd4 	bl	8008ff8 <_ZNSt5tupleIJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEEC1EOS6_>
      { }
 8009050:	687b      	ldr	r3, [r7, #4]
 8009052:	4618      	mov	r0, r3
 8009054:	370c      	adds	r7, #12
 8009056:	46bd      	mov	sp, r7
 8009058:	bd90      	pop	{r4, r7, pc}

0800905a <_ZSt4moveIRSt12_Bind_resultIvFM3I2CFvhPhhEPS1_St12_PlaceholderILi1EES6_ILi2EES6_ILi3EEEEEONSt16remove_referenceIT_E4typeEOSE_>:
    move(_Tp&& __t) noexcept
 800905a:	b480      	push	{r7}
 800905c:	b083      	sub	sp, #12
 800905e:	af00      	add	r7, sp, #0
 8009060:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 8009062:	687b      	ldr	r3, [r7, #4]
 8009064:	4618      	mov	r0, r3
 8009066:	370c      	adds	r7, #12
 8009068:	46bd      	mov	sp, r7
 800906a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800906e:	4770      	bx	lr

08009070 <_ZNSt8functionIFvhPhhEEC1ISt12_Bind_resultIvFM3I2CFvhS0_hEPS5_St12_PlaceholderILi1EES9_ILi2EES9_ILi3EEEEvvEET_>:
	}
    }

  template<typename _Res, typename... _ArgTypes>
    template<typename _Functor, typename, typename>
      function<_Res(_ArgTypes...)>::
 8009070:	b590      	push	{r4, r7, lr}
 8009072:	b083      	sub	sp, #12
 8009074:	af00      	add	r7, sp, #0
 8009076:	6078      	str	r0, [r7, #4]
 8009078:	6039      	str	r1, [r7, #0]
      function(_Functor __f)
      : _Function_base()
 800907a:	687b      	ldr	r3, [r7, #4]
 800907c:	4618      	mov	r0, r3
 800907e:	f7ff fca8 	bl	80089d2 <_ZNSt14_Function_baseC1Ev>
      {
	typedef _Function_handler<_Res(_ArgTypes...), _Functor> _My_handler;

	if (_My_handler::_M_not_empty_function(__f))
 8009082:	6838      	ldr	r0, [r7, #0]
 8009084:	f000 f8d0 	bl	8009228 <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE21_M_not_empty_functionISC_EEbRKT_>
 8009088:	4603      	mov	r3, r0
 800908a:	2b00      	cmp	r3, #0
 800908c:	d00e      	beq.n	80090ac <_ZNSt8functionIFvhPhhEEC1ISt12_Bind_resultIvFM3I2CFvhS0_hEPS5_St12_PlaceholderILi1EES9_ILi2EES9_ILi3EEEEvvEET_+0x3c>
	  {
	    _My_handler::_M_init_functor(_M_functor, std::move(__f));
 800908e:	687c      	ldr	r4, [r7, #4]
 8009090:	6838      	ldr	r0, [r7, #0]
 8009092:	f7ff ffe2 	bl	800905a <_ZSt4moveIRSt12_Bind_resultIvFM3I2CFvhPhhEPS1_St12_PlaceholderILi1EES6_ILi2EES6_ILi3EEEEEONSt16remove_referenceIT_E4typeEOSE_>
 8009096:	4603      	mov	r3, r0
 8009098:	4619      	mov	r1, r3
 800909a:	4620      	mov	r0, r4
 800909c:	f000 f8cf 	bl	800923e <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE15_M_init_functorERSt9_Any_dataOSC_>
	    _M_invoker = &_My_handler::_M_invoke;
 80090a0:	687b      	ldr	r3, [r7, #4]
 80090a2:	4a05      	ldr	r2, [pc, #20]	; (80090b8 <_ZNSt8functionIFvhPhhEEC1ISt12_Bind_resultIvFM3I2CFvhS0_hEPS5_St12_PlaceholderILi1EES9_ILi2EES9_ILi3EEEEvvEET_+0x48>)
 80090a4:	60da      	str	r2, [r3, #12]
	    _M_manager = &_My_handler::_M_manager;
 80090a6:	687b      	ldr	r3, [r7, #4]
 80090a8:	4a04      	ldr	r2, [pc, #16]	; (80090bc <_ZNSt8functionIFvhPhhEEC1ISt12_Bind_resultIvFM3I2CFvhS0_hEPS5_St12_PlaceholderILi1EES9_ILi2EES9_ILi3EEEEvvEET_+0x4c>)
 80090aa:	609a      	str	r2, [r3, #8]
	  }
      }
 80090ac:	687b      	ldr	r3, [r7, #4]
 80090ae:	4618      	mov	r0, r3
 80090b0:	370c      	adds	r7, #12
 80090b2:	46bd      	mov	sp, r7
 80090b4:	bd90      	pop	{r4, r7, pc}
 80090b6:	bf00      	nop
 80090b8:	0800928f 	.word	0x0800928f
 80090bc:	080092cf 	.word	0x080092cf

080090c0 <_ZNSt12_Bind_resultIvFM3I2CFvhPhhEPS0_St12_PlaceholderILi1EES5_ILi2EES5_ILi3EEEEC1IJS4_RKS6_RKS7_RKS8_EEEOS3_DpOT_>:
	explicit _Bind_result(_Functor&& __f, _Args&&... __args)
 80090c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80090c4:	b086      	sub	sp, #24
 80090c6:	af02      	add	r7, sp, #8
 80090c8:	60f8      	str	r0, [r7, #12]
 80090ca:	60b9      	str	r1, [r7, #8]
 80090cc:	607a      	str	r2, [r7, #4]
 80090ce:	603b      	str	r3, [r7, #0]
	: _M_f(std::move(__f)), _M_bound_args(std::forward<_Args>(__args)...)
 80090d0:	68b8      	ldr	r0, [r7, #8]
 80090d2:	f000 f826 	bl	8009122 <_ZSt4moveIRM3I2CFvhPhhEEONSt16remove_referenceIT_E4typeEOS6_>
 80090d6:	4602      	mov	r2, r0
 80090d8:	68fb      	ldr	r3, [r7, #12]
 80090da:	e892 0003 	ldmia.w	r2, {r0, r1}
 80090de:	e883 0003 	stmia.w	r3, {r0, r1}
 80090e2:	68fb      	ldr	r3, [r7, #12]
 80090e4:	f103 0408 	add.w	r4, r3, #8
 80090e8:	6878      	ldr	r0, [r7, #4]
 80090ea:	f7ff fe39 	bl	8008d60 <_ZSt7forwardIP3I2CEOT_RNSt16remove_referenceIS2_E4typeE>
 80090ee:	4605      	mov	r5, r0
 80090f0:	6838      	ldr	r0, [r7, #0]
 80090f2:	f7ff fe40 	bl	8008d76 <_ZSt7forwardIRKSt12_PlaceholderILi1EEEOT_RNSt16remove_referenceIS4_E4typeE>
 80090f6:	4606      	mov	r6, r0
 80090f8:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80090fa:	f7ff fe47 	bl	8008d8c <_ZSt7forwardIRKSt12_PlaceholderILi2EEEOT_RNSt16remove_referenceIS4_E4typeE>
 80090fe:	4680      	mov	r8, r0
 8009100:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 8009102:	f7ff fe4e 	bl	8008da2 <_ZSt7forwardIRKSt12_PlaceholderILi3EEEOT_RNSt16remove_referenceIS4_E4typeE>
 8009106:	4603      	mov	r3, r0
 8009108:	9300      	str	r3, [sp, #0]
 800910a:	4643      	mov	r3, r8
 800910c:	4632      	mov	r2, r6
 800910e:	4629      	mov	r1, r5
 8009110:	4620      	mov	r0, r4
 8009112:	f000 f904 	bl	800931e <_ZNSt5tupleIJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEEC1IJS1_RKS3_RKS4_RKS5_ELb1EEEDpOT_>
	{ }
 8009116:	68fb      	ldr	r3, [r7, #12]
 8009118:	4618      	mov	r0, r3
 800911a:	3710      	adds	r7, #16
 800911c:	46bd      	mov	sp, r7
 800911e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009122 <_ZSt4moveIRM3I2CFvhPhhEEONSt16remove_referenceIT_E4typeEOS6_>:
    move(_Tp&& __t) noexcept
 8009122:	b480      	push	{r7}
 8009124:	b083      	sub	sp, #12
 8009126:	af00      	add	r7, sp, #0
 8009128:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800912a:	687b      	ldr	r3, [r7, #4]
 800912c:	4618      	mov	r0, r3
 800912e:	370c      	adds	r7, #12
 8009130:	46bd      	mov	sp, r7
 8009132:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009136:	4770      	bx	lr

08009138 <_ZNSt10_Head_baseILj3ESt12_PlaceholderILi3EELb1EEC1IS1_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
 8009138:	b580      	push	{r7, lr}
 800913a:	b082      	sub	sp, #8
 800913c:	af00      	add	r7, sp, #0
 800913e:	6078      	str	r0, [r7, #4]
 8009140:	6039      	str	r1, [r7, #0]
	: _Head(std::forward<_UHead>(__h)) { }
 8009142:	6838      	ldr	r0, [r7, #0]
 8009144:	f7ff fe83 	bl	8008e4e <_ZSt7forwardISt12_PlaceholderILi3EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8009148:	687b      	ldr	r3, [r7, #4]
 800914a:	4618      	mov	r0, r3
 800914c:	3708      	adds	r7, #8
 800914e:	46bd      	mov	sp, r7
 8009150:	bd80      	pop	{r7, pc}

08009152 <_ZNSt10_Head_baseILj2ESt12_PlaceholderILi2EELb1EEC1IS1_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
 8009152:	b580      	push	{r7, lr}
 8009154:	b082      	sub	sp, #8
 8009156:	af00      	add	r7, sp, #0
 8009158:	6078      	str	r0, [r7, #4]
 800915a:	6039      	str	r1, [r7, #0]
	: _Head(std::forward<_UHead>(__h)) { }
 800915c:	6838      	ldr	r0, [r7, #0]
 800915e:	f7ff fec4 	bl	8008eea <_ZSt7forwardISt12_PlaceholderILi2EEEOT_RNSt16remove_referenceIS2_E4typeE>
 8009162:	687b      	ldr	r3, [r7, #4]
 8009164:	4618      	mov	r0, r3
 8009166:	3708      	adds	r7, #8
 8009168:	46bd      	mov	sp, r7
 800916a:	bd80      	pop	{r7, pc}

0800916c <_ZNSt10_Head_baseILj1ESt12_PlaceholderILi1EELb1EEC1IS1_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
 800916c:	b580      	push	{r7, lr}
 800916e:	b082      	sub	sp, #8
 8009170:	af00      	add	r7, sp, #0
 8009172:	6078      	str	r0, [r7, #4]
 8009174:	6039      	str	r1, [r7, #0]
	: _Head(std::forward<_UHead>(__h)) { }
 8009176:	6838      	ldr	r0, [r7, #0]
 8009178:	f7ff ff11 	bl	8008f9e <_ZSt7forwardISt12_PlaceholderILi1EEEOT_RNSt16remove_referenceIS2_E4typeE>
 800917c:	687b      	ldr	r3, [r7, #4]
 800917e:	4618      	mov	r0, r3
 8009180:	3708      	adds	r7, #8
 8009182:	46bd      	mov	sp, r7
 8009184:	bd80      	pop	{r7, pc}

08009186 <_ZNSt11_Tuple_implILj0EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEE7_M_tailERS6_>:
      _M_tail(_Tuple_impl& __t) noexcept { return __t; }
 8009186:	b480      	push	{r7}
 8009188:	b083      	sub	sp, #12
 800918a:	af00      	add	r7, sp, #0
 800918c:	6078      	str	r0, [r7, #4]
 800918e:	687b      	ldr	r3, [r7, #4]
 8009190:	4618      	mov	r0, r3
 8009192:	370c      	adds	r7, #12
 8009194:	46bd      	mov	sp, r7
 8009196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800919a:	4770      	bx	lr

0800919c <_ZNSt11_Tuple_implILj0EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEE7_M_headERS6_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 800919c:	b580      	push	{r7, lr}
 800919e:	b082      	sub	sp, #8
 80091a0:	af00      	add	r7, sp, #0
 80091a2:	6078      	str	r0, [r7, #4]
 80091a4:	687b      	ldr	r3, [r7, #4]
 80091a6:	4618      	mov	r0, r3
 80091a8:	f000 f805 	bl	80091b6 <_ZNSt10_Head_baseILj0EP3I2CLb0EE7_M_headERS2_>
 80091ac:	4603      	mov	r3, r0
 80091ae:	4618      	mov	r0, r3
 80091b0:	3708      	adds	r7, #8
 80091b2:	46bd      	mov	sp, r7
 80091b4:	bd80      	pop	{r7, pc}

080091b6 <_ZNSt10_Head_baseILj0EP3I2CLb0EE7_M_headERS2_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 80091b6:	b480      	push	{r7}
 80091b8:	b083      	sub	sp, #12
 80091ba:	af00      	add	r7, sp, #0
 80091bc:	6078      	str	r0, [r7, #4]
 80091be:	687b      	ldr	r3, [r7, #4]
 80091c0:	4618      	mov	r0, r3
 80091c2:	370c      	adds	r7, #12
 80091c4:	46bd      	mov	sp, r7
 80091c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091ca:	4770      	bx	lr

080091cc <_ZSt4moveIRSt11_Tuple_implILj1EJSt12_PlaceholderILi1EES1_ILi2EES1_ILi3EEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
 80091cc:	b480      	push	{r7}
 80091ce:	b083      	sub	sp, #12
 80091d0:	af00      	add	r7, sp, #0
 80091d2:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 80091d4:	687b      	ldr	r3, [r7, #4]
 80091d6:	4618      	mov	r0, r3
 80091d8:	370c      	adds	r7, #12
 80091da:	46bd      	mov	sp, r7
 80091dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091e0:	4770      	bx	lr

080091e2 <_ZNSt11_Tuple_implILj0EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEEC1EOS6_>:
      _Tuple_impl(_Tuple_impl&& __in)
 80091e2:	b590      	push	{r4, r7, lr}
 80091e4:	b083      	sub	sp, #12
 80091e6:	af00      	add	r7, sp, #0
 80091e8:	6078      	str	r0, [r7, #4]
 80091ea:	6039      	str	r1, [r7, #0]
      : _Inherited(std::move(_M_tail(__in))),
 80091ec:	6838      	ldr	r0, [r7, #0]
 80091ee:	f7ff ffca 	bl	8009186 <_ZNSt11_Tuple_implILj0EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEE7_M_tailERS6_>
 80091f2:	4603      	mov	r3, r0
 80091f4:	4618      	mov	r0, r3
 80091f6:	f7ff ffe9 	bl	80091cc <_ZSt4moveIRSt11_Tuple_implILj1EJSt12_PlaceholderILi1EES1_ILi2EES1_ILi3EEEEEONSt16remove_referenceIT_E4typeEOS8_>
 80091fa:	4603      	mov	r3, r0
	_Base(std::forward<_Head>(_M_head(__in))) { }
 80091fc:	4619      	mov	r1, r3
 80091fe:	6878      	ldr	r0, [r7, #4]
 8009200:	f7ff fed8 	bl	8008fb4 <_ZNSt11_Tuple_implILj1EJSt12_PlaceholderILi1EES0_ILi2EES0_ILi3EEEEC1EOS4_>
 8009204:	687c      	ldr	r4, [r7, #4]
 8009206:	6838      	ldr	r0, [r7, #0]
 8009208:	f7ff ffc8 	bl	800919c <_ZNSt11_Tuple_implILj0EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEE7_M_headERS6_>
 800920c:	4603      	mov	r3, r0
 800920e:	4618      	mov	r0, r3
 8009210:	f7ff fda6 	bl	8008d60 <_ZSt7forwardIP3I2CEOT_RNSt16remove_referenceIS2_E4typeE>
 8009214:	4603      	mov	r3, r0
 8009216:	4619      	mov	r1, r3
 8009218:	4620      	mov	r0, r4
 800921a:	f000 f8a6 	bl	800936a <_ZNSt10_Head_baseILj0EP3I2CLb0EEC1IS1_EEOT_>
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	4618      	mov	r0, r3
 8009222:	370c      	adds	r7, #12
 8009224:	46bd      	mov	sp, r7
 8009226:	bd90      	pop	{r4, r7, pc}

08009228 <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE21_M_not_empty_functionISC_EEbRKT_>:
	  _M_not_empty_function(const _Tp&)
 8009228:	b480      	push	{r7}
 800922a:	b083      	sub	sp, #12
 800922c:	af00      	add	r7, sp, #0
 800922e:	6078      	str	r0, [r7, #4]
	  { return true; }
 8009230:	2301      	movs	r3, #1
 8009232:	4618      	mov	r0, r3
 8009234:	370c      	adds	r7, #12
 8009236:	46bd      	mov	sp, r7
 8009238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800923c:	4770      	bx	lr

0800923e <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE15_M_init_functorERSt9_Any_dataOSC_>:
	_M_init_functor(_Any_data& __functor, _Functor&& __f)
 800923e:	b590      	push	{r4, r7, lr}
 8009240:	b085      	sub	sp, #20
 8009242:	af00      	add	r7, sp, #0
 8009244:	6078      	str	r0, [r7, #4]
 8009246:	6039      	str	r1, [r7, #0]
	{ _M_init_functor(__functor, std::move(__f), _Local_storage()); }
 8009248:	6838      	ldr	r0, [r7, #0]
 800924a:	f7ff ff06 	bl	800905a <_ZSt4moveIRSt12_Bind_resultIvFM3I2CFvhPhhEPS1_St12_PlaceholderILi1EES6_ILi2EES6_ILi3EEEEEONSt16remove_referenceIT_E4typeEOSE_>
 800924e:	4603      	mov	r3, r0
 8009250:	4622      	mov	r2, r4
 8009252:	4619      	mov	r1, r3
 8009254:	6878      	ldr	r0, [r7, #4]
 8009256:	f000 f899 	bl	800938c <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE15_M_init_functorERSt9_Any_dataOSC_St17integral_constantIbLb0EE>
 800925a:	bf00      	nop
 800925c:	3714      	adds	r7, #20
 800925e:	46bd      	mov	sp, r7
 8009260:	bd90      	pop	{r4, r7, pc}

08009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009262:	b480      	push	{r7}
 8009264:	b083      	sub	sp, #12
 8009266:	af00      	add	r7, sp, #0
 8009268:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800926a:	687b      	ldr	r3, [r7, #4]
 800926c:	4618      	mov	r0, r3
 800926e:	370c      	adds	r7, #12
 8009270:	46bd      	mov	sp, r7
 8009272:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009276:	4770      	bx	lr

08009278 <_ZSt7forwardIPhEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009278:	b480      	push	{r7}
 800927a:	b083      	sub	sp, #12
 800927c:	af00      	add	r7, sp, #0
 800927e:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009280:	687b      	ldr	r3, [r7, #4]
 8009282:	4618      	mov	r0, r3
 8009284:	370c      	adds	r7, #12
 8009286:	46bd      	mov	sp, r7
 8009288:	f85d 7b04 	ldr.w	r7, [sp], #4
 800928c:	4770      	bx	lr

0800928e <_ZNSt17_Function_handlerIFvhPhhESt12_Bind_resultIvFM3I2CFvhS0_hEPS3_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE9_M_invokeERKSt9_Any_dataOhOS0_SH_>:
      _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
 800928e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009290:	b085      	sub	sp, #20
 8009292:	af00      	add	r7, sp, #0
 8009294:	60f8      	str	r0, [r7, #12]
 8009296:	60b9      	str	r1, [r7, #8]
 8009298:	607a      	str	r2, [r7, #4]
 800929a:	603b      	str	r3, [r7, #0]
	(*_Base::_M_get_pointer(__functor))(
 800929c:	68f8      	ldr	r0, [r7, #12]
 800929e:	f000 f891 	bl	80093c4 <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE14_M_get_pointerERKSt9_Any_data>
 80092a2:	4604      	mov	r4, r0
 80092a4:	68b8      	ldr	r0, [r7, #8]
 80092a6:	f7ff ffdc 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 80092aa:	4605      	mov	r5, r0
 80092ac:	6878      	ldr	r0, [r7, #4]
 80092ae:	f7ff ffe3 	bl	8009278 <_ZSt7forwardIPhEOT_RNSt16remove_referenceIS1_E4typeE>
 80092b2:	4606      	mov	r6, r0
 80092b4:	6838      	ldr	r0, [r7, #0]
 80092b6:	f7ff ffd4 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 80092ba:	4603      	mov	r3, r0
 80092bc:	4632      	mov	r2, r6
 80092be:	4629      	mov	r1, r5
 80092c0:	4620      	mov	r0, r4
 80092c2:	f000 f997 	bl	80095f4 <_ZNSt12_Bind_resultIvFM3I2CFvhPhhEPS0_St12_PlaceholderILi1EES5_ILi2EES5_ILi3EEEEclIJhS1_hEEEvDpOT_>
      }
 80092c6:	bf00      	nop
 80092c8:	3714      	adds	r7, #20
 80092ca:	46bd      	mov	sp, r7
 80092cc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080092ce <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation>:
	_M_manager(_Any_data& __dest, const _Any_data& __source,
 80092ce:	b5b0      	push	{r4, r5, r7, lr}
 80092d0:	b086      	sub	sp, #24
 80092d2:	af00      	add	r7, sp, #0
 80092d4:	60f8      	str	r0, [r7, #12]
 80092d6:	60b9      	str	r1, [r7, #8]
 80092d8:	4613      	mov	r3, r2
 80092da:	71fb      	strb	r3, [r7, #7]
	  switch (__op)
 80092dc:	79fb      	ldrb	r3, [r7, #7]
 80092de:	2b02      	cmp	r3, #2
 80092e0:	d00d      	beq.n	80092fe <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation+0x30>
 80092e2:	2b03      	cmp	r3, #3
 80092e4:	d011      	beq.n	800930a <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation+0x3c>
 80092e6:	2b01      	cmp	r3, #1
 80092e8:	d114      	bne.n	8009314 <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation+0x46>
	      __dest._M_access<_Functor*>() = _M_get_pointer(__source);
 80092ea:	68f8      	ldr	r0, [r7, #12]
 80092ec:	f000 f9a5 	bl	800963a <_ZNSt9_Any_data9_M_accessIPSt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEEERT_v>
 80092f0:	4604      	mov	r4, r0
 80092f2:	68b8      	ldr	r0, [r7, #8]
 80092f4:	f000 f866 	bl	80093c4 <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE14_M_get_pointerERKSt9_Any_data>
 80092f8:	4603      	mov	r3, r0
 80092fa:	6023      	str	r3, [r4, #0]
	      break;
 80092fc:	e00a      	b.n	8009314 <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation+0x46>
	      _M_clone(__dest, __source, _Local_storage());
 80092fe:	462a      	mov	r2, r5
 8009300:	68b9      	ldr	r1, [r7, #8]
 8009302:	68f8      	ldr	r0, [r7, #12]
 8009304:	f000 f9a5 	bl	8009652 <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE8_M_cloneERSt9_Any_dataRKSE_St17integral_constantIbLb0EE>
	      break;
 8009308:	e004      	b.n	8009314 <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation+0x46>
	      _M_destroy(__dest, _Local_storage());
 800930a:	4621      	mov	r1, r4
 800930c:	68f8      	ldr	r0, [r7, #12]
 800930e:	f000 f9be 	bl	800968e <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE>
	      break;
 8009312:	bf00      	nop
	  return false;
 8009314:	2300      	movs	r3, #0
	}
 8009316:	4618      	mov	r0, r3
 8009318:	3718      	adds	r7, #24
 800931a:	46bd      	mov	sp, r7
 800931c:	bdb0      	pop	{r4, r5, r7, pc}

0800931e <_ZNSt5tupleIJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEEC1IJS1_RKS3_RKS4_RKS5_ELb1EEEDpOT_>:
        constexpr tuple(_UElements&&... __elements)
 800931e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009322:	b086      	sub	sp, #24
 8009324:	af02      	add	r7, sp, #8
 8009326:	60f8      	str	r0, [r7, #12]
 8009328:	60b9      	str	r1, [r7, #8]
 800932a:	607a      	str	r2, [r7, #4]
 800932c:	603b      	str	r3, [r7, #0]
        : _Inherited(std::forward<_UElements>(__elements)...) { }
 800932e:	68fc      	ldr	r4, [r7, #12]
 8009330:	68b8      	ldr	r0, [r7, #8]
 8009332:	f7ff fd15 	bl	8008d60 <_ZSt7forwardIP3I2CEOT_RNSt16remove_referenceIS2_E4typeE>
 8009336:	4605      	mov	r5, r0
 8009338:	6878      	ldr	r0, [r7, #4]
 800933a:	f7ff fd1c 	bl	8008d76 <_ZSt7forwardIRKSt12_PlaceholderILi1EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800933e:	4606      	mov	r6, r0
 8009340:	6838      	ldr	r0, [r7, #0]
 8009342:	f7ff fd23 	bl	8008d8c <_ZSt7forwardIRKSt12_PlaceholderILi2EEEOT_RNSt16remove_referenceIS4_E4typeE>
 8009346:	4680      	mov	r8, r0
 8009348:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800934a:	f7ff fd2a 	bl	8008da2 <_ZSt7forwardIRKSt12_PlaceholderILi3EEEOT_RNSt16remove_referenceIS4_E4typeE>
 800934e:	4603      	mov	r3, r0
 8009350:	9300      	str	r3, [sp, #0]
 8009352:	4643      	mov	r3, r8
 8009354:	4632      	mov	r2, r6
 8009356:	4629      	mov	r1, r5
 8009358:	4620      	mov	r0, r4
 800935a:	f000 f9aa 	bl	80096b2 <_ZNSt11_Tuple_implILj0EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEEC1IS1_JRKS3_RKS4_RKS5_EvEEOT_DpOT0_>
 800935e:	68fb      	ldr	r3, [r7, #12]
 8009360:	4618      	mov	r0, r3
 8009362:	3710      	adds	r7, #16
 8009364:	46bd      	mov	sp, r7
 8009366:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800936a <_ZNSt10_Head_baseILj0EP3I2CLb0EEC1IS1_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
 800936a:	b580      	push	{r7, lr}
 800936c:	b082      	sub	sp, #8
 800936e:	af00      	add	r7, sp, #0
 8009370:	6078      	str	r0, [r7, #4]
 8009372:	6039      	str	r1, [r7, #0]
	: _M_head_impl(std::forward<_UHead>(__h)) { }
 8009374:	6838      	ldr	r0, [r7, #0]
 8009376:	f7ff fcf3 	bl	8008d60 <_ZSt7forwardIP3I2CEOT_RNSt16remove_referenceIS2_E4typeE>
 800937a:	4603      	mov	r3, r0
 800937c:	681a      	ldr	r2, [r3, #0]
 800937e:	687b      	ldr	r3, [r7, #4]
 8009380:	601a      	str	r2, [r3, #0]
 8009382:	687b      	ldr	r3, [r7, #4]
 8009384:	4618      	mov	r0, r3
 8009386:	3708      	adds	r7, #8
 8009388:	46bd      	mov	sp, r7
 800938a:	bd80      	pop	{r7, pc}

0800938c <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE15_M_init_functorERSt9_Any_dataOSC_St17integral_constantIbLb0EE>:
	_M_init_functor(_Any_data& __functor, _Functor&& __f, false_type)
 800938c:	b5b0      	push	{r4, r5, r7, lr}
 800938e:	b084      	sub	sp, #16
 8009390:	af00      	add	r7, sp, #0
 8009392:	60f8      	str	r0, [r7, #12]
 8009394:	60b9      	str	r1, [r7, #8]
 8009396:	713a      	strb	r2, [r7, #4]
	{ __functor._M_access<_Functor*>() = new _Functor(std::move(__f)); }
 8009398:	68b8      	ldr	r0, [r7, #8]
 800939a:	f7ff fe5e 	bl	800905a <_ZSt4moveIRSt12_Bind_resultIvFM3I2CFvhPhhEPS1_St12_PlaceholderILi1EES6_ILi2EES6_ILi3EEEEEONSt16remove_referenceIT_E4typeEOSE_>
 800939e:	4605      	mov	r5, r0
 80093a0:	200c      	movs	r0, #12
 80093a2:	f002 fe51 	bl	800c048 <_Znwj>
 80093a6:	4603      	mov	r3, r0
 80093a8:	461c      	mov	r4, r3
 80093aa:	4629      	mov	r1, r5
 80093ac:	4620      	mov	r0, r4
 80093ae:	f7ff fe33 	bl	8009018 <_ZNSt12_Bind_resultIvFM3I2CFvhPhhEPS0_St12_PlaceholderILi1EES5_ILi2EES5_ILi3EEEEC1EOSA_>
 80093b2:	68f8      	ldr	r0, [r7, #12]
 80093b4:	f000 f941 	bl	800963a <_ZNSt9_Any_data9_M_accessIPSt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEEERT_v>
 80093b8:	4603      	mov	r3, r0
 80093ba:	601c      	str	r4, [r3, #0]
 80093bc:	bf00      	nop
 80093be:	3710      	adds	r7, #16
 80093c0:	46bd      	mov	sp, r7
 80093c2:	bdb0      	pop	{r4, r5, r7, pc}

080093c4 <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE14_M_get_pointerERKSt9_Any_data>:
	_M_get_pointer(const _Any_data& __source)
 80093c4:	b580      	push	{r7, lr}
 80093c6:	b084      	sub	sp, #16
 80093c8:	af00      	add	r7, sp, #0
 80093ca:	6078      	str	r0, [r7, #4]
	    __stored_locally? std::__addressof(__source._M_access<_Functor>())
 80093cc:	6878      	ldr	r0, [r7, #4]
 80093ce:	f000 f996 	bl	80096fe <_ZNKSt9_Any_data9_M_accessIPSt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEEERKT_v>
 80093d2:	4603      	mov	r3, r0
	  const _Functor* __ptr =
 80093d4:	681b      	ldr	r3, [r3, #0]
 80093d6:	60fb      	str	r3, [r7, #12]
	  return const_cast<_Functor*>(__ptr);
 80093d8:	68fb      	ldr	r3, [r7, #12]
	}
 80093da:	4618      	mov	r0, r3
 80093dc:	3710      	adds	r7, #16
 80093de:	46bd      	mov	sp, r7
 80093e0:	bd80      	pop	{r7, pc}

080093e2 <_ZNSt5tupleIJOhOPhS0_EEC1IJhS1_hELb1EEEDpOT_>:
        constexpr tuple(_UElements&&... __elements)
 80093e2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80093e4:	b085      	sub	sp, #20
 80093e6:	af00      	add	r7, sp, #0
 80093e8:	60f8      	str	r0, [r7, #12]
 80093ea:	60b9      	str	r1, [r7, #8]
 80093ec:	607a      	str	r2, [r7, #4]
 80093ee:	603b      	str	r3, [r7, #0]
        : _Inherited(std::forward<_UElements>(__elements)...) { }
 80093f0:	68fc      	ldr	r4, [r7, #12]
 80093f2:	68b8      	ldr	r0, [r7, #8]
 80093f4:	f7ff ff35 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 80093f8:	4605      	mov	r5, r0
 80093fa:	6878      	ldr	r0, [r7, #4]
 80093fc:	f7ff ff3c 	bl	8009278 <_ZSt7forwardIPhEOT_RNSt16remove_referenceIS1_E4typeE>
 8009400:	4606      	mov	r6, r0
 8009402:	6838      	ldr	r0, [r7, #0]
 8009404:	f7ff ff2d 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 8009408:	4603      	mov	r3, r0
 800940a:	4632      	mov	r2, r6
 800940c:	4629      	mov	r1, r5
 800940e:	4620      	mov	r0, r4
 8009410:	f000 f805 	bl	800941e <_ZNSt11_Tuple_implILj0EJOhOPhS0_EEC1IhJS1_hEvEEOT_DpOT0_>
 8009414:	68fb      	ldr	r3, [r7, #12]
 8009416:	4618      	mov	r0, r3
 8009418:	3714      	adds	r7, #20
 800941a:	46bd      	mov	sp, r7
 800941c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800941e <_ZNSt11_Tuple_implILj0EJOhOPhS0_EEC1IhJS1_hEvEEOT_DpOT0_>:
        constexpr _Tuple_impl(_UHead&& __head, _UTail&&... __tail)
 800941e:	b5b0      	push	{r4, r5, r7, lr}
 8009420:	b084      	sub	sp, #16
 8009422:	af00      	add	r7, sp, #0
 8009424:	60f8      	str	r0, [r7, #12]
 8009426:	60b9      	str	r1, [r7, #8]
 8009428:	607a      	str	r2, [r7, #4]
 800942a:	603b      	str	r3, [r7, #0]
	  _Base(std::forward<_UHead>(__head)) { }
 800942c:	68fc      	ldr	r4, [r7, #12]
 800942e:	6878      	ldr	r0, [r7, #4]
 8009430:	f7ff ff22 	bl	8009278 <_ZSt7forwardIPhEOT_RNSt16remove_referenceIS1_E4typeE>
 8009434:	4605      	mov	r5, r0
 8009436:	6838      	ldr	r0, [r7, #0]
 8009438:	f7ff ff13 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 800943c:	4603      	mov	r3, r0
 800943e:	461a      	mov	r2, r3
 8009440:	4629      	mov	r1, r5
 8009442:	4620      	mov	r0, r4
 8009444:	f000 f810 	bl	8009468 <_ZNSt11_Tuple_implILj1EJOPhOhEEC1IS0_JhEvEEOT_DpOT0_>
 8009448:	68fb      	ldr	r3, [r7, #12]
 800944a:	f103 0408 	add.w	r4, r3, #8
 800944e:	68b8      	ldr	r0, [r7, #8]
 8009450:	f7ff ff07 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 8009454:	4603      	mov	r3, r0
 8009456:	4619      	mov	r1, r3
 8009458:	4620      	mov	r0, r4
 800945a:	f000 f856 	bl	800950a <_ZNSt10_Head_baseILj0EOhLb0EEC1IhEEOT_>
 800945e:	68fb      	ldr	r3, [r7, #12]
 8009460:	4618      	mov	r0, r3
 8009462:	3710      	adds	r7, #16
 8009464:	46bd      	mov	sp, r7
 8009466:	bdb0      	pop	{r4, r5, r7, pc}

08009468 <_ZNSt11_Tuple_implILj1EJOPhOhEEC1IS0_JhEvEEOT_DpOT0_>:
        constexpr _Tuple_impl(_UHead&& __head, _UTail&&... __tail)
 8009468:	b590      	push	{r4, r7, lr}
 800946a:	b085      	sub	sp, #20
 800946c:	af00      	add	r7, sp, #0
 800946e:	60f8      	str	r0, [r7, #12]
 8009470:	60b9      	str	r1, [r7, #8]
 8009472:	607a      	str	r2, [r7, #4]
	  _Base(std::forward<_UHead>(__head)) { }
 8009474:	68fc      	ldr	r4, [r7, #12]
 8009476:	6878      	ldr	r0, [r7, #4]
 8009478:	f7ff fef3 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 800947c:	4603      	mov	r3, r0
 800947e:	4619      	mov	r1, r3
 8009480:	4620      	mov	r0, r4
 8009482:	f000 f80f 	bl	80094a4 <_ZNSt11_Tuple_implILj2EJOhEEC1IhEEOT_>
 8009486:	68fb      	ldr	r3, [r7, #12]
 8009488:	1d1c      	adds	r4, r3, #4
 800948a:	68b8      	ldr	r0, [r7, #8]
 800948c:	f7ff fef4 	bl	8009278 <_ZSt7forwardIPhEOT_RNSt16remove_referenceIS1_E4typeE>
 8009490:	4603      	mov	r3, r0
 8009492:	4619      	mov	r1, r3
 8009494:	4620      	mov	r0, r4
 8009496:	f000 f828 	bl	80094ea <_ZNSt10_Head_baseILj1EOPhLb0EEC1IS0_EEOT_>
 800949a:	68fb      	ldr	r3, [r7, #12]
 800949c:	4618      	mov	r0, r3
 800949e:	3714      	adds	r7, #20
 80094a0:	46bd      	mov	sp, r7
 80094a2:	bd90      	pop	{r4, r7, pc}

080094a4 <_ZNSt11_Tuple_implILj2EJOhEEC1IhEEOT_>:
        constexpr _Tuple_impl(_UHead&& __head)
 80094a4:	b590      	push	{r4, r7, lr}
 80094a6:	b083      	sub	sp, #12
 80094a8:	af00      	add	r7, sp, #0
 80094aa:	6078      	str	r0, [r7, #4]
 80094ac:	6039      	str	r1, [r7, #0]
	: _Base(std::forward<_UHead>(__head)) { }
 80094ae:	687c      	ldr	r4, [r7, #4]
 80094b0:	6838      	ldr	r0, [r7, #0]
 80094b2:	f7ff fed6 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 80094b6:	4603      	mov	r3, r0
 80094b8:	4619      	mov	r1, r3
 80094ba:	4620      	mov	r0, r4
 80094bc:	f000 f805 	bl	80094ca <_ZNSt10_Head_baseILj2EOhLb0EEC1IhEEOT_>
 80094c0:	687b      	ldr	r3, [r7, #4]
 80094c2:	4618      	mov	r0, r3
 80094c4:	370c      	adds	r7, #12
 80094c6:	46bd      	mov	sp, r7
 80094c8:	bd90      	pop	{r4, r7, pc}

080094ca <_ZNSt10_Head_baseILj2EOhLb0EEC1IhEEOT_>:
        constexpr _Head_base(_UHead&& __h)
 80094ca:	b580      	push	{r7, lr}
 80094cc:	b082      	sub	sp, #8
 80094ce:	af00      	add	r7, sp, #0
 80094d0:	6078      	str	r0, [r7, #4]
 80094d2:	6039      	str	r1, [r7, #0]
	: _M_head_impl(std::forward<_UHead>(__h)) { }
 80094d4:	6838      	ldr	r0, [r7, #0]
 80094d6:	f7ff fec4 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 80094da:	4602      	mov	r2, r0
 80094dc:	687b      	ldr	r3, [r7, #4]
 80094de:	601a      	str	r2, [r3, #0]
 80094e0:	687b      	ldr	r3, [r7, #4]
 80094e2:	4618      	mov	r0, r3
 80094e4:	3708      	adds	r7, #8
 80094e6:	46bd      	mov	sp, r7
 80094e8:	bd80      	pop	{r7, pc}

080094ea <_ZNSt10_Head_baseILj1EOPhLb0EEC1IS0_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
 80094ea:	b580      	push	{r7, lr}
 80094ec:	b082      	sub	sp, #8
 80094ee:	af00      	add	r7, sp, #0
 80094f0:	6078      	str	r0, [r7, #4]
 80094f2:	6039      	str	r1, [r7, #0]
	: _M_head_impl(std::forward<_UHead>(__h)) { }
 80094f4:	6838      	ldr	r0, [r7, #0]
 80094f6:	f7ff febf 	bl	8009278 <_ZSt7forwardIPhEOT_RNSt16remove_referenceIS1_E4typeE>
 80094fa:	4602      	mov	r2, r0
 80094fc:	687b      	ldr	r3, [r7, #4]
 80094fe:	601a      	str	r2, [r3, #0]
 8009500:	687b      	ldr	r3, [r7, #4]
 8009502:	4618      	mov	r0, r3
 8009504:	3708      	adds	r7, #8
 8009506:	46bd      	mov	sp, r7
 8009508:	bd80      	pop	{r7, pc}

0800950a <_ZNSt10_Head_baseILj0EOhLb0EEC1IhEEOT_>:
        constexpr _Head_base(_UHead&& __h)
 800950a:	b580      	push	{r7, lr}
 800950c:	b082      	sub	sp, #8
 800950e:	af00      	add	r7, sp, #0
 8009510:	6078      	str	r0, [r7, #4]
 8009512:	6039      	str	r1, [r7, #0]
	: _M_head_impl(std::forward<_UHead>(__h)) { }
 8009514:	6838      	ldr	r0, [r7, #0]
 8009516:	f7ff fea4 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 800951a:	4602      	mov	r2, r0
 800951c:	687b      	ldr	r3, [r7, #4]
 800951e:	601a      	str	r2, [r3, #0]
 8009520:	687b      	ldr	r3, [r7, #4]
 8009522:	4618      	mov	r0, r3
 8009524:	3708      	adds	r7, #8
 8009526:	46bd      	mov	sp, r7
 8009528:	bd80      	pop	{r7, pc}

0800952a <_ZNSt11_Tuple_implILj2EJOhEE7_M_headERS1_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 800952a:	b580      	push	{r7, lr}
 800952c:	b082      	sub	sp, #8
 800952e:	af00      	add	r7, sp, #0
 8009530:	6078      	str	r0, [r7, #4]
 8009532:	687b      	ldr	r3, [r7, #4]
 8009534:	4618      	mov	r0, r3
 8009536:	f000 f805 	bl	8009544 <_ZNSt10_Head_baseILj2EOhLb0EE7_M_headERS1_>
 800953a:	4603      	mov	r3, r0
 800953c:	4618      	mov	r0, r3
 800953e:	3708      	adds	r7, #8
 8009540:	46bd      	mov	sp, r7
 8009542:	bd80      	pop	{r7, pc}

08009544 <_ZNSt10_Head_baseILj2EOhLb0EE7_M_headERS1_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 8009544:	b480      	push	{r7}
 8009546:	b083      	sub	sp, #12
 8009548:	af00      	add	r7, sp, #0
 800954a:	6078      	str	r0, [r7, #4]
 800954c:	687b      	ldr	r3, [r7, #4]
 800954e:	681b      	ldr	r3, [r3, #0]
 8009550:	4618      	mov	r0, r3
 8009552:	370c      	adds	r7, #12
 8009554:	46bd      	mov	sp, r7
 8009556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800955a:	4770      	bx	lr

0800955c <_ZSt7forwardIOhEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800955c:	b480      	push	{r7}
 800955e:	b083      	sub	sp, #12
 8009560:	af00      	add	r7, sp, #0
 8009562:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009564:	687b      	ldr	r3, [r7, #4]
 8009566:	4618      	mov	r0, r3
 8009568:	370c      	adds	r7, #12
 800956a:	46bd      	mov	sp, r7
 800956c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009570:	4770      	bx	lr

08009572 <_ZNSt11_Tuple_implILj1EJOPhOhEE7_M_headERS3_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 8009572:	b580      	push	{r7, lr}
 8009574:	b082      	sub	sp, #8
 8009576:	af00      	add	r7, sp, #0
 8009578:	6078      	str	r0, [r7, #4]
 800957a:	687b      	ldr	r3, [r7, #4]
 800957c:	3304      	adds	r3, #4
 800957e:	4618      	mov	r0, r3
 8009580:	f000 f805 	bl	800958e <_ZNSt10_Head_baseILj1EOPhLb0EE7_M_headERS2_>
 8009584:	4603      	mov	r3, r0
 8009586:	4618      	mov	r0, r3
 8009588:	3708      	adds	r7, #8
 800958a:	46bd      	mov	sp, r7
 800958c:	bd80      	pop	{r7, pc}

0800958e <_ZNSt10_Head_baseILj1EOPhLb0EE7_M_headERS2_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 800958e:	b480      	push	{r7}
 8009590:	b083      	sub	sp, #12
 8009592:	af00      	add	r7, sp, #0
 8009594:	6078      	str	r0, [r7, #4]
 8009596:	687b      	ldr	r3, [r7, #4]
 8009598:	681b      	ldr	r3, [r3, #0]
 800959a:	4618      	mov	r0, r3
 800959c:	370c      	adds	r7, #12
 800959e:	46bd      	mov	sp, r7
 80095a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095a4:	4770      	bx	lr

080095a6 <_ZSt7forwardIOPhEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 80095a6:	b480      	push	{r7}
 80095a8:	b083      	sub	sp, #12
 80095aa:	af00      	add	r7, sp, #0
 80095ac:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 80095ae:	687b      	ldr	r3, [r7, #4]
 80095b0:	4618      	mov	r0, r3
 80095b2:	370c      	adds	r7, #12
 80095b4:	46bd      	mov	sp, r7
 80095b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095ba:	4770      	bx	lr

080095bc <_ZSt16forward_as_tupleIJhPhhEESt5tupleIJDpOT_EES4_>:

  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
 80095bc:	b5b0      	push	{r4, r5, r7, lr}
 80095be:	b084      	sub	sp, #16
 80095c0:	af00      	add	r7, sp, #0
 80095c2:	60f8      	str	r0, [r7, #12]
 80095c4:	60b9      	str	r1, [r7, #8]
 80095c6:	607a      	str	r2, [r7, #4]
 80095c8:	603b      	str	r3, [r7, #0]
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
 80095ca:	68b8      	ldr	r0, [r7, #8]
 80095cc:	f7ff fe49 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 80095d0:	4604      	mov	r4, r0
 80095d2:	6878      	ldr	r0, [r7, #4]
 80095d4:	f7ff fe50 	bl	8009278 <_ZSt7forwardIPhEOT_RNSt16remove_referenceIS1_E4typeE>
 80095d8:	4605      	mov	r5, r0
 80095da:	6838      	ldr	r0, [r7, #0]
 80095dc:	f7ff fe41 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 80095e0:	4603      	mov	r3, r0
 80095e2:	462a      	mov	r2, r5
 80095e4:	4621      	mov	r1, r4
 80095e6:	68f8      	ldr	r0, [r7, #12]
 80095e8:	f7ff fefb 	bl	80093e2 <_ZNSt5tupleIJOhOPhS0_EEC1IJhS1_hELb1EEEDpOT_>
 80095ec:	68f8      	ldr	r0, [r7, #12]
 80095ee:	3710      	adds	r7, #16
 80095f0:	46bd      	mov	sp, r7
 80095f2:	bdb0      	pop	{r4, r5, r7, pc}

080095f4 <_ZNSt12_Bind_resultIvFM3I2CFvhPhhEPS0_St12_PlaceholderILi1EES5_ILi2EES5_ILi3EEEEclIJhS1_hEEEvDpOT_>:
	operator()(_Args&&... __args)
 80095f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80095f6:	b089      	sub	sp, #36	; 0x24
 80095f8:	af00      	add	r7, sp, #0
 80095fa:	60f8      	str	r0, [r7, #12]
 80095fc:	60b9      	str	r1, [r7, #8]
 80095fe:	607a      	str	r2, [r7, #4]
 8009600:	603b      	str	r3, [r7, #0]
	      _Bound_indexes());
 8009602:	68b8      	ldr	r0, [r7, #8]
 8009604:	f7ff fe2d 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 8009608:	4604      	mov	r4, r0
 800960a:	6878      	ldr	r0, [r7, #4]
 800960c:	f7ff fe34 	bl	8009278 <_ZSt7forwardIPhEOT_RNSt16remove_referenceIS1_E4typeE>
 8009610:	4605      	mov	r5, r0
 8009612:	6838      	ldr	r0, [r7, #0]
 8009614:	f7ff fe25 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 8009618:	4603      	mov	r3, r0
 800961a:	f107 0010 	add.w	r0, r7, #16
 800961e:	462a      	mov	r2, r5
 8009620:	4621      	mov	r1, r4
 8009622:	f7ff ffcb 	bl	80095bc <_ZSt16forward_as_tupleIJhPhhEESt5tupleIJDpOT_EES4_>
 8009626:	f107 0310 	add.w	r3, r7, #16
 800962a:	4632      	mov	r2, r6
 800962c:	4619      	mov	r1, r3
 800962e:	68f8      	ldr	r0, [r7, #12]
 8009630:	f000 f88b 	bl	800974a <_ZNSt12_Bind_resultIvFM3I2CFvhPhhEPS0_St12_PlaceholderILi1EES5_ILi2EES5_ILi3EEEE6__callIvJOhOS1_SC_EJLj0ELj1ELj2ELj3EEEENSt9enable_ifIXtlSt7is_voidIT_EEEvE4typeEOSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE>
	}
 8009634:	3724      	adds	r7, #36	; 0x24
 8009636:	46bd      	mov	sp, r7
 8009638:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800963a <_ZNSt9_Any_data9_M_accessIPSt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEEERT_v>:
      _M_access()
 800963a:	b580      	push	{r7, lr}
 800963c:	b082      	sub	sp, #8
 800963e:	af00      	add	r7, sp, #0
 8009640:	6078      	str	r0, [r7, #4]
      { return *static_cast<_Tp*>(_M_access()); }
 8009642:	6878      	ldr	r0, [r7, #4]
 8009644:	f7ff f9af 	bl	80089a6 <_ZNSt9_Any_data9_M_accessEv>
 8009648:	4603      	mov	r3, r0
 800964a:	4618      	mov	r0, r3
 800964c:	3708      	adds	r7, #8
 800964e:	46bd      	mov	sp, r7
 8009650:	bd80      	pop	{r7, pc}

08009652 <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE8_M_cloneERSt9_Any_dataRKSE_St17integral_constantIbLb0EE>:
	_M_clone(_Any_data& __dest, const _Any_data& __source, false_type)
 8009652:	b5b0      	push	{r4, r5, r7, lr}
 8009654:	b084      	sub	sp, #16
 8009656:	af00      	add	r7, sp, #0
 8009658:	60f8      	str	r0, [r7, #12]
 800965a:	60b9      	str	r1, [r7, #8]
 800965c:	713a      	strb	r2, [r7, #4]
	    new _Functor(*__source._M_access<_Functor*>());
 800965e:	68b8      	ldr	r0, [r7, #8]
 8009660:	f000 f84d 	bl	80096fe <_ZNKSt9_Any_data9_M_accessIPSt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEEERKT_v>
 8009664:	4603      	mov	r3, r0
	  __dest._M_access<_Functor*>() =
 8009666:	681d      	ldr	r5, [r3, #0]
	    new _Functor(*__source._M_access<_Functor*>());
 8009668:	200c      	movs	r0, #12
 800966a:	f002 fced 	bl	800c048 <_Znwj>
 800966e:	4603      	mov	r3, r0
 8009670:	461c      	mov	r4, r3
	  __dest._M_access<_Functor*>() =
 8009672:	4623      	mov	r3, r4
 8009674:	462a      	mov	r2, r5
 8009676:	ca07      	ldmia	r2, {r0, r1, r2}
 8009678:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800967c:	68f8      	ldr	r0, [r7, #12]
 800967e:	f7ff ffdc 	bl	800963a <_ZNSt9_Any_data9_M_accessIPSt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEEERT_v>
 8009682:	4603      	mov	r3, r0
 8009684:	601c      	str	r4, [r3, #0]
	}
 8009686:	bf00      	nop
 8009688:	3710      	adds	r7, #16
 800968a:	46bd      	mov	sp, r7
 800968c:	bdb0      	pop	{r4, r5, r7, pc}

0800968e <_ZNSt14_Function_base13_Base_managerISt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEE10_M_destroyERSt9_Any_dataSt17integral_constantIbLb0EE>:
	_M_destroy(_Any_data& __victim, false_type)
 800968e:	b580      	push	{r7, lr}
 8009690:	b082      	sub	sp, #8
 8009692:	af00      	add	r7, sp, #0
 8009694:	6078      	str	r0, [r7, #4]
 8009696:	7039      	strb	r1, [r7, #0]
	  delete __victim._M_access<_Functor*>();
 8009698:	6878      	ldr	r0, [r7, #4]
 800969a:	f7ff ffce 	bl	800963a <_ZNSt9_Any_data9_M_accessIPSt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEEERT_v>
 800969e:	4603      	mov	r3, r0
 80096a0:	681b      	ldr	r3, [r3, #0]
 80096a2:	210c      	movs	r1, #12
 80096a4:	4618      	mov	r0, r3
 80096a6:	f002 fccd 	bl	800c044 <_ZdlPvj>
	}
 80096aa:	bf00      	nop
 80096ac:	3708      	adds	r7, #8
 80096ae:	46bd      	mov	sp, r7
 80096b0:	bd80      	pop	{r7, pc}

080096b2 <_ZNSt11_Tuple_implILj0EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEEC1IS1_JRKS3_RKS4_RKS5_EvEEOT_DpOT0_>:
        constexpr _Tuple_impl(_UHead&& __head, _UTail&&... __tail)
 80096b2:	b5b0      	push	{r4, r5, r7, lr}
 80096b4:	b084      	sub	sp, #16
 80096b6:	af00      	add	r7, sp, #0
 80096b8:	60f8      	str	r0, [r7, #12]
 80096ba:	60b9      	str	r1, [r7, #8]
 80096bc:	607a      	str	r2, [r7, #4]
 80096be:	603b      	str	r3, [r7, #0]
	  _Base(std::forward<_UHead>(__head)) { }
 80096c0:	6878      	ldr	r0, [r7, #4]
 80096c2:	f7ff fb58 	bl	8008d76 <_ZSt7forwardIRKSt12_PlaceholderILi1EEEOT_RNSt16remove_referenceIS4_E4typeE>
 80096c6:	4604      	mov	r4, r0
 80096c8:	6838      	ldr	r0, [r7, #0]
 80096ca:	f7ff fb5f 	bl	8008d8c <_ZSt7forwardIRKSt12_PlaceholderILi2EEEOT_RNSt16remove_referenceIS4_E4typeE>
 80096ce:	4605      	mov	r5, r0
 80096d0:	6a38      	ldr	r0, [r7, #32]
 80096d2:	f7ff fb66 	bl	8008da2 <_ZSt7forwardIRKSt12_PlaceholderILi3EEEOT_RNSt16remove_referenceIS4_E4typeE>
 80096d6:	4603      	mov	r3, r0
 80096d8:	462a      	mov	r2, r5
 80096da:	4621      	mov	r1, r4
 80096dc:	68f8      	ldr	r0, [r7, #12]
 80096de:	f000 f87c 	bl	80097da <_ZNSt11_Tuple_implILj1EJSt12_PlaceholderILi1EES0_ILi2EES0_ILi3EEEEC1ERKS1_RKS2_RKS3_>
 80096e2:	68fc      	ldr	r4, [r7, #12]
 80096e4:	68b8      	ldr	r0, [r7, #8]
 80096e6:	f7ff fb3b 	bl	8008d60 <_ZSt7forwardIP3I2CEOT_RNSt16remove_referenceIS2_E4typeE>
 80096ea:	4603      	mov	r3, r0
 80096ec:	4619      	mov	r1, r3
 80096ee:	4620      	mov	r0, r4
 80096f0:	f7ff fe3b 	bl	800936a <_ZNSt10_Head_baseILj0EP3I2CLb0EEC1IS1_EEOT_>
 80096f4:	68fb      	ldr	r3, [r7, #12]
 80096f6:	4618      	mov	r0, r3
 80096f8:	3710      	adds	r7, #16
 80096fa:	46bd      	mov	sp, r7
 80096fc:	bdb0      	pop	{r4, r5, r7, pc}

080096fe <_ZNKSt9_Any_data9_M_accessIPSt12_Bind_resultIvFM3I2CFvhPhhEPS2_St12_PlaceholderILi1EES7_ILi2EES7_ILi3EEEEEERKT_v>:
      _M_access() const
 80096fe:	b580      	push	{r7, lr}
 8009700:	b082      	sub	sp, #8
 8009702:	af00      	add	r7, sp, #0
 8009704:	6078      	str	r0, [r7, #4]
      { return *static_cast<const _Tp*>(_M_access()); }
 8009706:	6878      	ldr	r0, [r7, #4]
 8009708:	f7ff f958 	bl	80089bc <_ZNKSt9_Any_data9_M_accessEv>
 800970c:	4603      	mov	r3, r0
 800970e:	4618      	mov	r0, r3
 8009710:	3708      	adds	r7, #8
 8009712:	46bd      	mov	sp, r7
 8009714:	bd80      	pop	{r7, pc}

08009716 <_ZNSt11_Tuple_implILj0EJOhOPhS0_EE7_M_headERS3_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
 8009716:	b580      	push	{r7, lr}
 8009718:	b082      	sub	sp, #8
 800971a:	af00      	add	r7, sp, #0
 800971c:	6078      	str	r0, [r7, #4]
 800971e:	687b      	ldr	r3, [r7, #4]
 8009720:	3308      	adds	r3, #8
 8009722:	4618      	mov	r0, r3
 8009724:	f000 f805 	bl	8009732 <_ZNSt10_Head_baseILj0EOhLb0EE7_M_headERS1_>
 8009728:	4603      	mov	r3, r0
 800972a:	4618      	mov	r0, r3
 800972c:	3708      	adds	r7, #8
 800972e:	46bd      	mov	sp, r7
 8009730:	bd80      	pop	{r7, pc}

08009732 <_ZNSt10_Head_baseILj0EOhLb0EE7_M_headERS1_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
 8009732:	b480      	push	{r7}
 8009734:	b083      	sub	sp, #12
 8009736:	af00      	add	r7, sp, #0
 8009738:	6078      	str	r0, [r7, #4]
 800973a:	687b      	ldr	r3, [r7, #4]
 800973c:	681b      	ldr	r3, [r3, #0]
 800973e:	4618      	mov	r0, r3
 8009740:	370c      	adds	r7, #12
 8009742:	46bd      	mov	sp, r7
 8009744:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009748:	4770      	bx	lr

0800974a <_ZNSt12_Bind_resultIvFM3I2CFvhPhhEPS0_St12_PlaceholderILi1EES5_ILi2EES5_ILi3EEEE6__callIvJOhOS1_SC_EJLj0ELj1ELj2ELj3EEEENSt9enable_ifIXtlSt7is_voidIT_EEEvE4typeEOSt5tupleIJDpT0_EESt12_Index_tupleIJXspT1_EEE>:
	__call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
 800974a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800974e:	b08a      	sub	sp, #40	; 0x28
 8009750:	af02      	add	r7, sp, #8
 8009752:	60f8      	str	r0, [r7, #12]
 8009754:	60b9      	str	r1, [r7, #8]
 8009756:	713a      	strb	r2, [r7, #4]
	  std::__invoke(_M_f, _Mu<_Bound_args>()
 8009758:	68fc      	ldr	r4, [r7, #12]
	       (std::get<_Indexes>(_M_bound_args), __args)...);
 800975a:	68fb      	ldr	r3, [r7, #12]
 800975c:	3308      	adds	r3, #8
 800975e:	4618      	mov	r0, r3
 8009760:	f000 f850 	bl	8009804 <_ZSt3getILj0EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
 8009764:	4601      	mov	r1, r0
	  std::__invoke(_M_f, _Mu<_Bound_args>()
 8009766:	f107 0310 	add.w	r3, r7, #16
 800976a:	68ba      	ldr	r2, [r7, #8]
 800976c:	4618      	mov	r0, r3
 800976e:	f000 f856 	bl	800981e <_ZNVKSt3_MuIP3I2CLb0ELb0EEclIRS1_St5tupleIJOhOPhS6_EEEEOT_SB_RT0_>
 8009772:	4605      	mov	r5, r0
	       (std::get<_Indexes>(_M_bound_args), __args)...);
 8009774:	68fb      	ldr	r3, [r7, #12]
 8009776:	3308      	adds	r3, #8
 8009778:	4618      	mov	r0, r3
 800977a:	f000 f85e 	bl	800983a <_ZSt3getILj1EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
 800977e:	4601      	mov	r1, r0
	  std::__invoke(_M_f, _Mu<_Bound_args>()
 8009780:	f107 0314 	add.w	r3, r7, #20
 8009784:	68ba      	ldr	r2, [r7, #8]
 8009786:	4618      	mov	r0, r3
 8009788:	f000 f86e 	bl	8009868 <_ZNVKSt3_MuISt12_PlaceholderILi1EELb0ELb1EEclISt5tupleIJOhOPhS5_EEEEONSt9enable_ifIXltLj0EsrSt10tuple_sizeIT_E5valueESt13tuple_elementILj0ESB_EE4type4typeERVKS1_RSB_>
 800978c:	4606      	mov	r6, r0
	       (std::get<_Indexes>(_M_bound_args), __args)...);
 800978e:	68fb      	ldr	r3, [r7, #12]
 8009790:	3308      	adds	r3, #8
 8009792:	4618      	mov	r0, r3
 8009794:	f000 f87a 	bl	800988c <_ZSt3getILj2EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
 8009798:	4601      	mov	r1, r0
	  std::__invoke(_M_f, _Mu<_Bound_args>()
 800979a:	f107 0318 	add.w	r3, r7, #24
 800979e:	68ba      	ldr	r2, [r7, #8]
 80097a0:	4618      	mov	r0, r3
 80097a2:	f000 f87f 	bl	80098a4 <_ZNVKSt3_MuISt12_PlaceholderILi2EELb0ELb1EEclISt5tupleIJOhOPhS5_EEEEONSt9enable_ifIXltLj1EsrSt10tuple_sizeIT_E5valueESt13tuple_elementILj1ESB_EE4type4typeERVKS1_RSB_>
 80097a6:	4680      	mov	r8, r0
	       (std::get<_Indexes>(_M_bound_args), __args)...);
 80097a8:	68fb      	ldr	r3, [r7, #12]
 80097aa:	3308      	adds	r3, #8
 80097ac:	4618      	mov	r0, r3
 80097ae:	f000 f88b 	bl	80098c8 <_ZSt3getILj3EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>
 80097b2:	4601      	mov	r1, r0
	  std::__invoke(_M_f, _Mu<_Bound_args>()
 80097b4:	f107 031c 	add.w	r3, r7, #28
 80097b8:	68ba      	ldr	r2, [r7, #8]
 80097ba:	4618      	mov	r0, r3
 80097bc:	f000 f890 	bl	80098e0 <_ZNVKSt3_MuISt12_PlaceholderILi3EELb0ELb1EEclISt5tupleIJOhOPhS5_EEEEONSt9enable_ifIXltLj2EsrSt10tuple_sizeIT_E5valueESt13tuple_elementILj2ESB_EE4type4typeERVKS1_RSB_>
 80097c0:	4603      	mov	r3, r0
 80097c2:	9300      	str	r3, [sp, #0]
 80097c4:	4643      	mov	r3, r8
 80097c6:	4632      	mov	r2, r6
 80097c8:	4629      	mov	r1, r5
 80097ca:	4620      	mov	r0, r4
 80097cc:	f000 f8b0 	bl	8009930 <_ZSt8__invokeIRM3I2CFvhPhhEJRPS0_hS1_hEENSt15__invoke_resultIT_JDpT0_EE4typeEOS8_DpOS9_>
	}
 80097d0:	bf00      	nop
 80097d2:	3720      	adds	r7, #32
 80097d4:	46bd      	mov	sp, r7
 80097d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080097da <_ZNSt11_Tuple_implILj1EJSt12_PlaceholderILi1EES0_ILi2EES0_ILi3EEEEC1ERKS1_RKS2_RKS3_>:
      constexpr _Tuple_impl(const _Head& __head, const _Tail&... __tail)
 80097da:	b580      	push	{r7, lr}
 80097dc:	b084      	sub	sp, #16
 80097de:	af00      	add	r7, sp, #0
 80097e0:	60f8      	str	r0, [r7, #12]
 80097e2:	60b9      	str	r1, [r7, #8]
 80097e4:	607a      	str	r2, [r7, #4]
 80097e6:	603b      	str	r3, [r7, #0]
      : _Inherited(__tail...), _Base(__head) { }
 80097e8:	683a      	ldr	r2, [r7, #0]
 80097ea:	6879      	ldr	r1, [r7, #4]
 80097ec:	68f8      	ldr	r0, [r7, #12]
 80097ee:	f000 f8c8 	bl	8009982 <_ZNSt11_Tuple_implILj2EJSt12_PlaceholderILi2EES0_ILi3EEEEC1ERKS1_RKS2_>
 80097f2:	68b9      	ldr	r1, [r7, #8]
 80097f4:	68f8      	ldr	r0, [r7, #12]
 80097f6:	f000 f8d7 	bl	80099a8 <_ZNSt10_Head_baseILj1ESt12_PlaceholderILi1EELb1EEC1ERKS1_>
 80097fa:	68fb      	ldr	r3, [r7, #12]
 80097fc:	4618      	mov	r0, r3
 80097fe:	3710      	adds	r7, #16
 8009800:	46bd      	mov	sp, r7
 8009802:	bd80      	pop	{r7, pc}

08009804 <_ZSt3getILj0EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
 8009804:	b580      	push	{r7, lr}
 8009806:	b082      	sub	sp, #8
 8009808:	af00      	add	r7, sp, #0
 800980a:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 800980c:	687b      	ldr	r3, [r7, #4]
 800980e:	4618      	mov	r0, r3
 8009810:	f000 f8d6 	bl	80099c0 <_ZSt12__get_helperILj0EP3I2CJSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>
 8009814:	4603      	mov	r3, r0
 8009816:	4618      	mov	r0, r3
 8009818:	3708      	adds	r7, #8
 800981a:	46bd      	mov	sp, r7
 800981c:	bd80      	pop	{r7, pc}

0800981e <_ZNVKSt3_MuIP3I2CLb0ELb0EEclIRS1_St5tupleIJOhOPhS6_EEEEOT_SB_RT0_>:
	operator()(_CVArg&& __arg, _Tuple&) const volatile
 800981e:	b580      	push	{r7, lr}
 8009820:	b084      	sub	sp, #16
 8009822:	af00      	add	r7, sp, #0
 8009824:	60f8      	str	r0, [r7, #12]
 8009826:	60b9      	str	r1, [r7, #8]
 8009828:	607a      	str	r2, [r7, #4]
	{ return std::forward<_CVArg>(__arg); }
 800982a:	68b8      	ldr	r0, [r7, #8]
 800982c:	f000 f875 	bl	800991a <_ZSt7forwardIRP3I2CEOT_RNSt16remove_referenceIS3_E4typeE>
 8009830:	4603      	mov	r3, r0
 8009832:	4618      	mov	r0, r3
 8009834:	3710      	adds	r7, #16
 8009836:	46bd      	mov	sp, r7
 8009838:	bd80      	pop	{r7, pc}

0800983a <_ZSt3getILj1EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
 800983a:	b580      	push	{r7, lr}
 800983c:	b082      	sub	sp, #8
 800983e:	af00      	add	r7, sp, #0
 8009840:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 8009842:	6878      	ldr	r0, [r7, #4]
 8009844:	f000 f8c8 	bl	80099d8 <_ZSt12__get_helperILj1ESt12_PlaceholderILi1EEJS0_ILi2EES0_ILi3EEEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
 8009848:	4603      	mov	r3, r0
 800984a:	4618      	mov	r0, r3
 800984c:	3708      	adds	r7, #8
 800984e:	46bd      	mov	sp, r7
 8009850:	bd80      	pop	{r7, pc}

08009852 <_ZSt4moveIRSt5tupleIJOhOPhS1_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
 8009852:	b480      	push	{r7}
 8009854:	b083      	sub	sp, #12
 8009856:	af00      	add	r7, sp, #0
 8009858:	6078      	str	r0, [r7, #4]
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
 800985a:	687b      	ldr	r3, [r7, #4]
 800985c:	4618      	mov	r0, r3
 800985e:	370c      	adds	r7, #12
 8009860:	46bd      	mov	sp, r7
 8009862:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009866:	4770      	bx	lr

08009868 <_ZNVKSt3_MuISt12_PlaceholderILi1EELb0ELb1EEclISt5tupleIJOhOPhS5_EEEEONSt9enable_ifIXltLj0EsrSt10tuple_sizeIT_E5valueESt13tuple_elementILj0ESB_EE4type4typeERVKS1_RSB_>:
	operator()(const volatile _Arg&, _Tuple& __tuple) const volatile
 8009868:	b580      	push	{r7, lr}
 800986a:	b084      	sub	sp, #16
 800986c:	af00      	add	r7, sp, #0
 800986e:	60f8      	str	r0, [r7, #12]
 8009870:	60b9      	str	r1, [r7, #8]
 8009872:	607a      	str	r2, [r7, #4]
	    ::std::get<(is_placeholder<_Arg>::value - 1)>(std::move(__tuple));
 8009874:	6878      	ldr	r0, [r7, #4]
 8009876:	f7ff ffec 	bl	8009852 <_ZSt4moveIRSt5tupleIJOhOPhS1_EEEONSt16remove_referenceIT_E4typeEOS7_>
 800987a:	4603      	mov	r3, r0
 800987c:	4618      	mov	r0, r3
 800987e:	f000 f8d0 	bl	8009a22 <_ZSt3getILj0EJOhOPhS0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS7_>
 8009882:	4603      	mov	r3, r0
	}
 8009884:	4618      	mov	r0, r3
 8009886:	3710      	adds	r7, #16
 8009888:	46bd      	mov	sp, r7
 800988a:	bd80      	pop	{r7, pc}

0800988c <_ZSt3getILj2EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
 800988c:	b580      	push	{r7, lr}
 800988e:	b082      	sub	sp, #8
 8009890:	af00      	add	r7, sp, #0
 8009892:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 8009894:	6878      	ldr	r0, [r7, #4]
 8009896:	f000 f8d4 	bl	8009a42 <_ZSt12__get_helperILj2ESt12_PlaceholderILi2EEJS0_ILi3EEEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>
 800989a:	4603      	mov	r3, r0
 800989c:	4618      	mov	r0, r3
 800989e:	3708      	adds	r7, #8
 80098a0:	46bd      	mov	sp, r7
 80098a2:	bd80      	pop	{r7, pc}

080098a4 <_ZNVKSt3_MuISt12_PlaceholderILi2EELb0ELb1EEclISt5tupleIJOhOPhS5_EEEEONSt9enable_ifIXltLj1EsrSt10tuple_sizeIT_E5valueESt13tuple_elementILj1ESB_EE4type4typeERVKS1_RSB_>:
	operator()(const volatile _Arg&, _Tuple& __tuple) const volatile
 80098a4:	b580      	push	{r7, lr}
 80098a6:	b084      	sub	sp, #16
 80098a8:	af00      	add	r7, sp, #0
 80098aa:	60f8      	str	r0, [r7, #12]
 80098ac:	60b9      	str	r1, [r7, #8]
 80098ae:	607a      	str	r2, [r7, #4]
	    ::std::get<(is_placeholder<_Arg>::value - 1)>(std::move(__tuple));
 80098b0:	6878      	ldr	r0, [r7, #4]
 80098b2:	f7ff ffce 	bl	8009852 <_ZSt4moveIRSt5tupleIJOhOPhS1_EEEONSt16remove_referenceIT_E4typeEOS7_>
 80098b6:	4603      	mov	r3, r0
 80098b8:	4618      	mov	r0, r3
 80098ba:	f000 f8e7 	bl	8009a8c <_ZSt3getILj1EJOhOPhS0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS7_>
 80098be:	4603      	mov	r3, r0
	}
 80098c0:	4618      	mov	r0, r3
 80098c2:	3710      	adds	r7, #16
 80098c4:	46bd      	mov	sp, r7
 80098c6:	bd80      	pop	{r7, pc}

080098c8 <_ZSt3getILj3EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSA_>:
    get(tuple<_Elements...>& __t) noexcept
 80098c8:	b580      	push	{r7, lr}
 80098ca:	b082      	sub	sp, #8
 80098cc:	af00      	add	r7, sp, #0
 80098ce:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 80098d0:	6878      	ldr	r0, [r7, #4]
 80098d2:	f000 f8eb 	bl	8009aac <_ZSt12__get_helperILj3ESt12_PlaceholderILi3EEJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE>
 80098d6:	4603      	mov	r3, r0
 80098d8:	4618      	mov	r0, r3
 80098da:	3708      	adds	r7, #8
 80098dc:	46bd      	mov	sp, r7
 80098de:	bd80      	pop	{r7, pc}

080098e0 <_ZNVKSt3_MuISt12_PlaceholderILi3EELb0ELb1EEclISt5tupleIJOhOPhS5_EEEEONSt9enable_ifIXltLj2EsrSt10tuple_sizeIT_E5valueESt13tuple_elementILj2ESB_EE4type4typeERVKS1_RSB_>:
	operator()(const volatile _Arg&, _Tuple& __tuple) const volatile
 80098e0:	b580      	push	{r7, lr}
 80098e2:	b084      	sub	sp, #16
 80098e4:	af00      	add	r7, sp, #0
 80098e6:	60f8      	str	r0, [r7, #12]
 80098e8:	60b9      	str	r1, [r7, #8]
 80098ea:	607a      	str	r2, [r7, #4]
	    ::std::get<(is_placeholder<_Arg>::value - 1)>(std::move(__tuple));
 80098ec:	6878      	ldr	r0, [r7, #4]
 80098ee:	f7ff ffb0 	bl	8009852 <_ZSt4moveIRSt5tupleIJOhOPhS1_EEEONSt16remove_referenceIT_E4typeEOS7_>
 80098f2:	4603      	mov	r3, r0
 80098f4:	4618      	mov	r0, r3
 80098f6:	f000 f8fe 	bl	8009af6 <_ZSt3getILj2EJOhOPhS0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS7_>
 80098fa:	4603      	mov	r3, r0
	}
 80098fc:	4618      	mov	r0, r3
 80098fe:	3710      	adds	r7, #16
 8009900:	46bd      	mov	sp, r7
 8009902:	bd80      	pop	{r7, pc}

08009904 <_ZSt7forwardIRM3I2CFvhPhhEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 8009904:	b480      	push	{r7}
 8009906:	b083      	sub	sp, #12
 8009908:	af00      	add	r7, sp, #0
 800990a:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 800990c:	687b      	ldr	r3, [r7, #4]
 800990e:	4618      	mov	r0, r3
 8009910:	370c      	adds	r7, #12
 8009912:	46bd      	mov	sp, r7
 8009914:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009918:	4770      	bx	lr

0800991a <_ZSt7forwardIRP3I2CEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
 800991a:	b480      	push	{r7}
 800991c:	b083      	sub	sp, #12
 800991e:	af00      	add	r7, sp, #0
 8009920:	6078      	str	r0, [r7, #4]
    { return static_cast<_Tp&&>(__t); }
 8009922:	687b      	ldr	r3, [r7, #4]
 8009924:	4618      	mov	r0, r3
 8009926:	370c      	adds	r7, #12
 8009928:	46bd      	mov	sp, r7
 800992a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800992e:	4770      	bx	lr

08009930 <_ZSt8__invokeIRM3I2CFvhPhhEJRPS0_hS1_hEENSt15__invoke_resultIT_JDpT0_EE4typeEOS8_DpOS9_>:
    { return (*std::forward<_Tp>(__t)).*__f; }

  /// Invoke a callable object.
  template<typename _Callable, typename... _Args>
    constexpr typename __invoke_result<_Callable, _Args...>::type
    __invoke(_Callable&& __fn, _Args&&... __args)
 8009930:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009934:	b089      	sub	sp, #36	; 0x24
 8009936:	af02      	add	r7, sp, #8
 8009938:	60f8      	str	r0, [r7, #12]
 800993a:	60b9      	str	r1, [r7, #8]
 800993c:	607a      	str	r2, [r7, #4]
 800993e:	603b      	str	r3, [r7, #0]
    noexcept(__is_nothrow_invocable<_Callable, _Args...>::value)
    {
      using __result = __invoke_result<_Callable, _Args...>;
      using __type = typename __result::type;
      using __tag = typename __result::__invoke_type;
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
 8009940:	68f8      	ldr	r0, [r7, #12]
 8009942:	f7ff ffdf 	bl	8009904 <_ZSt7forwardIRM3I2CFvhPhhEEOT_RNSt16remove_referenceIS5_E4typeE>
 8009946:	4605      	mov	r5, r0
 8009948:	68b8      	ldr	r0, [r7, #8]
 800994a:	f7ff ffe6 	bl	800991a <_ZSt7forwardIRP3I2CEOT_RNSt16remove_referenceIS3_E4typeE>
 800994e:	4606      	mov	r6, r0
 8009950:	6878      	ldr	r0, [r7, #4]
 8009952:	f7ff fc86 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 8009956:	4680      	mov	r8, r0
 8009958:	6838      	ldr	r0, [r7, #0]
 800995a:	f7ff fc8d 	bl	8009278 <_ZSt7forwardIPhEOT_RNSt16remove_referenceIS1_E4typeE>
 800995e:	4604      	mov	r4, r0
 8009960:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 8009962:	f7ff fc7e 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 8009966:	4603      	mov	r3, r0
 8009968:	9301      	str	r3, [sp, #4]
 800996a:	9400      	str	r4, [sp, #0]
 800996c:	4643      	mov	r3, r8
 800996e:	4632      	mov	r2, r6
 8009970:	4629      	mov	r1, r5
 8009972:	4648      	mov	r0, r9
 8009974:	f000 f8cf 	bl	8009b16 <_ZSt13__invoke_implIvRM3I2CFvhPhhERPS0_JhS1_hEET_St21__invoke_memfun_derefOT0_OT1_DpOT2_>
					std::forward<_Args>(__args)...);
 8009978:	bf00      	nop
    }
 800997a:	371c      	adds	r7, #28
 800997c:	46bd      	mov	sp, r7
 800997e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08009982 <_ZNSt11_Tuple_implILj2EJSt12_PlaceholderILi2EES0_ILi3EEEEC1ERKS1_RKS2_>:
      constexpr _Tuple_impl(const _Head& __head, const _Tail&... __tail)
 8009982:	b580      	push	{r7, lr}
 8009984:	b084      	sub	sp, #16
 8009986:	af00      	add	r7, sp, #0
 8009988:	60f8      	str	r0, [r7, #12]
 800998a:	60b9      	str	r1, [r7, #8]
 800998c:	607a      	str	r2, [r7, #4]
      : _Inherited(__tail...), _Base(__head) { }
 800998e:	6879      	ldr	r1, [r7, #4]
 8009990:	68f8      	ldr	r0, [r7, #12]
 8009992:	f000 f8fa 	bl	8009b8a <_ZNSt11_Tuple_implILj3EJSt12_PlaceholderILi3EEEEC1ERKS1_>
 8009996:	68b9      	ldr	r1, [r7, #8]
 8009998:	68f8      	ldr	r0, [r7, #12]
 800999a:	f000 f904 	bl	8009ba6 <_ZNSt10_Head_baseILj2ESt12_PlaceholderILi2EELb1EEC1ERKS1_>
 800999e:	68fb      	ldr	r3, [r7, #12]
 80099a0:	4618      	mov	r0, r3
 80099a2:	3710      	adds	r7, #16
 80099a4:	46bd      	mov	sp, r7
 80099a6:	bd80      	pop	{r7, pc}

080099a8 <_ZNSt10_Head_baseILj1ESt12_PlaceholderILi1EELb1EEC1ERKS1_>:
      constexpr _Head_base(const _Head& __h)
 80099a8:	b480      	push	{r7}
 80099aa:	b083      	sub	sp, #12
 80099ac:	af00      	add	r7, sp, #0
 80099ae:	6078      	str	r0, [r7, #4]
 80099b0:	6039      	str	r1, [r7, #0]
      : _Head(__h) { }
 80099b2:	687b      	ldr	r3, [r7, #4]
 80099b4:	4618      	mov	r0, r3
 80099b6:	370c      	adds	r7, #12
 80099b8:	46bd      	mov	sp, r7
 80099ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099be:	4770      	bx	lr

080099c0 <_ZSt12__get_helperILj0EP3I2CJSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEERT0_RSt11_Tuple_implIXT_EJS6_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 80099c0:	b580      	push	{r7, lr}
 80099c2:	b082      	sub	sp, #8
 80099c4:	af00      	add	r7, sp, #0
 80099c6:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 80099c8:	6878      	ldr	r0, [r7, #4]
 80099ca:	f7ff fbe7 	bl	800919c <_ZNSt11_Tuple_implILj0EJP3I2CSt12_PlaceholderILi1EES2_ILi2EES2_ILi3EEEE7_M_headERS6_>
 80099ce:	4603      	mov	r3, r0
 80099d0:	4618      	mov	r0, r3
 80099d2:	3708      	adds	r7, #8
 80099d4:	46bd      	mov	sp, r7
 80099d6:	bd80      	pop	{r7, pc}

080099d8 <_ZSt12__get_helperILj1ESt12_PlaceholderILi1EEJS0_ILi2EES0_ILi3EEEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 80099d8:	b580      	push	{r7, lr}
 80099da:	b082      	sub	sp, #8
 80099dc:	af00      	add	r7, sp, #0
 80099de:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 80099e0:	6878      	ldr	r0, [r7, #4]
 80099e2:	f7ff faba 	bl	8008f5a <_ZNSt11_Tuple_implILj1EJSt12_PlaceholderILi1EES0_ILi2EES0_ILi3EEEE7_M_headERS4_>
 80099e6:	4603      	mov	r3, r0
 80099e8:	4618      	mov	r0, r3
 80099ea:	3708      	adds	r7, #8
 80099ec:	46bd      	mov	sp, r7
 80099ee:	bd80      	pop	{r7, pc}

080099f0 <_ZSt3getILj0EJOhOPhS0_EERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>:
    get(tuple<_Elements...>& __t) noexcept
 80099f0:	b580      	push	{r7, lr}
 80099f2:	b082      	sub	sp, #8
 80099f4:	af00      	add	r7, sp, #0
 80099f6:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 80099f8:	687b      	ldr	r3, [r7, #4]
 80099fa:	4618      	mov	r0, r3
 80099fc:	f000 f805 	bl	8009a0a <_ZSt12__get_helperILj0EOhJOPhS0_EERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>
 8009a00:	4603      	mov	r3, r0
 8009a02:	4618      	mov	r0, r3
 8009a04:	3708      	adds	r7, #8
 8009a06:	46bd      	mov	sp, r7
 8009a08:	bd80      	pop	{r7, pc}

08009a0a <_ZSt12__get_helperILj0EOhJOPhS0_EERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 8009a0a:	b580      	push	{r7, lr}
 8009a0c:	b082      	sub	sp, #8
 8009a0e:	af00      	add	r7, sp, #0
 8009a10:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 8009a12:	6878      	ldr	r0, [r7, #4]
 8009a14:	f7ff fe7f 	bl	8009716 <_ZNSt11_Tuple_implILj0EJOhOPhS0_EE7_M_headERS3_>
 8009a18:	4603      	mov	r3, r0
 8009a1a:	4618      	mov	r0, r3
 8009a1c:	3708      	adds	r7, #8
 8009a1e:	46bd      	mov	sp, r7
 8009a20:	bd80      	pop	{r7, pc}

08009a22 <_ZSt3getILj0EJOhOPhS0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS7_>:
    get(tuple<_Elements...>&& __t) noexcept
 8009a22:	b580      	push	{r7, lr}
 8009a24:	b082      	sub	sp, #8
 8009a26:	af00      	add	r7, sp, #0
 8009a28:	6078      	str	r0, [r7, #4]
      return std::forward<__element_type&&>(std::get<__i>(__t));
 8009a2a:	6878      	ldr	r0, [r7, #4]
 8009a2c:	f7ff ffe0 	bl	80099f0 <_ZSt3getILj0EJOhOPhS0_EERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>
 8009a30:	4603      	mov	r3, r0
 8009a32:	4618      	mov	r0, r3
 8009a34:	f7ff fd92 	bl	800955c <_ZSt7forwardIOhEOT_RNSt16remove_referenceIS1_E4typeE>
 8009a38:	4603      	mov	r3, r0
    }
 8009a3a:	4618      	mov	r0, r3
 8009a3c:	3708      	adds	r7, #8
 8009a3e:	46bd      	mov	sp, r7
 8009a40:	bd80      	pop	{r7, pc}

08009a42 <_ZSt12__get_helperILj2ESt12_PlaceholderILi2EEJS0_ILi3EEEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 8009a42:	b580      	push	{r7, lr}
 8009a44:	b082      	sub	sp, #8
 8009a46:	af00      	add	r7, sp, #0
 8009a48:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 8009a4a:	6878      	ldr	r0, [r7, #4]
 8009a4c:	f7ff fa2b 	bl	8008ea6 <_ZNSt11_Tuple_implILj2EJSt12_PlaceholderILi2EES0_ILi3EEEE7_M_headERS3_>
 8009a50:	4603      	mov	r3, r0
 8009a52:	4618      	mov	r0, r3
 8009a54:	3708      	adds	r7, #8
 8009a56:	46bd      	mov	sp, r7
 8009a58:	bd80      	pop	{r7, pc}

08009a5a <_ZSt3getILj1EJOhOPhS0_EERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>:
    get(tuple<_Elements...>& __t) noexcept
 8009a5a:	b580      	push	{r7, lr}
 8009a5c:	b082      	sub	sp, #8
 8009a5e:	af00      	add	r7, sp, #0
 8009a60:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 8009a62:	687b      	ldr	r3, [r7, #4]
 8009a64:	4618      	mov	r0, r3
 8009a66:	f000 f805 	bl	8009a74 <_ZSt12__get_helperILj1EOPhJOhEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>
 8009a6a:	4603      	mov	r3, r0
 8009a6c:	4618      	mov	r0, r3
 8009a6e:	3708      	adds	r7, #8
 8009a70:	46bd      	mov	sp, r7
 8009a72:	bd80      	pop	{r7, pc}

08009a74 <_ZSt12__get_helperILj1EOPhJOhEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 8009a74:	b580      	push	{r7, lr}
 8009a76:	b082      	sub	sp, #8
 8009a78:	af00      	add	r7, sp, #0
 8009a7a:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 8009a7c:	6878      	ldr	r0, [r7, #4]
 8009a7e:	f7ff fd78 	bl	8009572 <_ZNSt11_Tuple_implILj1EJOPhOhEE7_M_headERS3_>
 8009a82:	4603      	mov	r3, r0
 8009a84:	4618      	mov	r0, r3
 8009a86:	3708      	adds	r7, #8
 8009a88:	46bd      	mov	sp, r7
 8009a8a:	bd80      	pop	{r7, pc}

08009a8c <_ZSt3getILj1EJOhOPhS0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS7_>:
    get(tuple<_Elements...>&& __t) noexcept
 8009a8c:	b580      	push	{r7, lr}
 8009a8e:	b082      	sub	sp, #8
 8009a90:	af00      	add	r7, sp, #0
 8009a92:	6078      	str	r0, [r7, #4]
      return std::forward<__element_type&&>(std::get<__i>(__t));
 8009a94:	6878      	ldr	r0, [r7, #4]
 8009a96:	f7ff ffe0 	bl	8009a5a <_ZSt3getILj1EJOhOPhS0_EERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>
 8009a9a:	4603      	mov	r3, r0
 8009a9c:	4618      	mov	r0, r3
 8009a9e:	f7ff fd82 	bl	80095a6 <_ZSt7forwardIOPhEOT_RNSt16remove_referenceIS2_E4typeE>
 8009aa2:	4603      	mov	r3, r0
    }
 8009aa4:	4618      	mov	r0, r3
 8009aa6:	3708      	adds	r7, #8
 8009aa8:	46bd      	mov	sp, r7
 8009aaa:	bd80      	pop	{r7, pc}

08009aac <_ZSt12__get_helperILj3ESt12_PlaceholderILi3EEJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 8009aac:	b580      	push	{r7, lr}
 8009aae:	b082      	sub	sp, #8
 8009ab0:	af00      	add	r7, sp, #0
 8009ab2:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 8009ab4:	6878      	ldr	r0, [r7, #4]
 8009ab6:	f7ff f9b3 	bl	8008e20 <_ZNSt11_Tuple_implILj3EJSt12_PlaceholderILi3EEEE7_M_headERS2_>
 8009aba:	4603      	mov	r3, r0
 8009abc:	4618      	mov	r0, r3
 8009abe:	3708      	adds	r7, #8
 8009ac0:	46bd      	mov	sp, r7
 8009ac2:	bd80      	pop	{r7, pc}

08009ac4 <_ZSt3getILj2EJOhOPhS0_EERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>:
    get(tuple<_Elements...>& __t) noexcept
 8009ac4:	b580      	push	{r7, lr}
 8009ac6:	b082      	sub	sp, #8
 8009ac8:	af00      	add	r7, sp, #0
 8009aca:	6078      	str	r0, [r7, #4]
    { return std::__get_helper<__i>(__t); }
 8009acc:	687b      	ldr	r3, [r7, #4]
 8009ace:	4618      	mov	r0, r3
 8009ad0:	f000 f805 	bl	8009ade <_ZSt12__get_helperILj2EOhJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE>
 8009ad4:	4603      	mov	r3, r0
 8009ad6:	4618      	mov	r0, r3
 8009ad8:	3708      	adds	r7, #8
 8009ada:	46bd      	mov	sp, r7
 8009adc:	bd80      	pop	{r7, pc}

08009ade <_ZSt12__get_helperILj2EOhJEERT0_RSt11_Tuple_implIXT_EJS1_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
 8009ade:	b580      	push	{r7, lr}
 8009ae0:	b082      	sub	sp, #8
 8009ae2:	af00      	add	r7, sp, #0
 8009ae4:	6078      	str	r0, [r7, #4]
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
 8009ae6:	6878      	ldr	r0, [r7, #4]
 8009ae8:	f7ff fd1f 	bl	800952a <_ZNSt11_Tuple_implILj2EJOhEE7_M_headERS1_>
 8009aec:	4603      	mov	r3, r0
 8009aee:	4618      	mov	r0, r3
 8009af0:	3708      	adds	r7, #8
 8009af2:	46bd      	mov	sp, r7
 8009af4:	bd80      	pop	{r7, pc}

08009af6 <_ZSt3getILj2EJOhOPhS0_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS7_>:
    get(tuple<_Elements...>&& __t) noexcept
 8009af6:	b580      	push	{r7, lr}
 8009af8:	b082      	sub	sp, #8
 8009afa:	af00      	add	r7, sp, #0
 8009afc:	6078      	str	r0, [r7, #4]
      return std::forward<__element_type&&>(std::get<__i>(__t));
 8009afe:	6878      	ldr	r0, [r7, #4]
 8009b00:	f7ff ffe0 	bl	8009ac4 <_ZSt3getILj2EJOhOPhS0_EERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>
 8009b04:	4603      	mov	r3, r0
 8009b06:	4618      	mov	r0, r3
 8009b08:	f7ff fd28 	bl	800955c <_ZSt7forwardIOhEOT_RNSt16remove_referenceIS1_E4typeE>
 8009b0c:	4603      	mov	r3, r0
    }
 8009b0e:	4618      	mov	r0, r3
 8009b10:	3708      	adds	r7, #8
 8009b12:	46bd      	mov	sp, r7
 8009b14:	bd80      	pop	{r7, pc}

08009b16 <_ZSt13__invoke_implIvRM3I2CFvhPhhERPS0_JhS1_hEET_St21__invoke_memfun_derefOT0_OT1_DpOT2_>:
    __invoke_impl(__invoke_memfun_deref, _MemFun&& __f, _Tp&& __t,
 8009b16:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009b18:	b087      	sub	sp, #28
 8009b1a:	af00      	add	r7, sp, #0
 8009b1c:	7538      	strb	r0, [r7, #20]
 8009b1e:	6139      	str	r1, [r7, #16]
 8009b20:	60fa      	str	r2, [r7, #12]
 8009b22:	60bb      	str	r3, [r7, #8]
      return ((*std::forward<_Tp>(__t)).*__f)(std::forward<_Args>(__args)...);
 8009b24:	68f8      	ldr	r0, [r7, #12]
 8009b26:	f7ff fef8 	bl	800991a <_ZSt7forwardIRP3I2CEOT_RNSt16remove_referenceIS3_E4typeE>
 8009b2a:	4603      	mov	r3, r0
 8009b2c:	681b      	ldr	r3, [r3, #0]
 8009b2e:	693a      	ldr	r2, [r7, #16]
 8009b30:	6852      	ldr	r2, [r2, #4]
 8009b32:	1052      	asrs	r2, r2, #1
 8009b34:	189d      	adds	r5, r3, r2
 8009b36:	693a      	ldr	r2, [r7, #16]
 8009b38:	6852      	ldr	r2, [r2, #4]
 8009b3a:	f002 0201 	and.w	r2, r2, #1
 8009b3e:	2a00      	cmp	r2, #0
 8009b40:	d102      	bne.n	8009b48 <_ZSt13__invoke_implIvRM3I2CFvhPhhERPS0_JhS1_hEET_St21__invoke_memfun_derefOT0_OT1_DpOT2_+0x32>
 8009b42:	693b      	ldr	r3, [r7, #16]
 8009b44:	681c      	ldr	r4, [r3, #0]
 8009b46:	e008      	b.n	8009b5a <_ZSt13__invoke_implIvRM3I2CFvhPhhERPS0_JhS1_hEET_St21__invoke_memfun_derefOT0_OT1_DpOT2_+0x44>
 8009b48:	693a      	ldr	r2, [r7, #16]
 8009b4a:	6852      	ldr	r2, [r2, #4]
 8009b4c:	1052      	asrs	r2, r2, #1
 8009b4e:	4413      	add	r3, r2
 8009b50:	681b      	ldr	r3, [r3, #0]
 8009b52:	693a      	ldr	r2, [r7, #16]
 8009b54:	6812      	ldr	r2, [r2, #0]
 8009b56:	4413      	add	r3, r2
 8009b58:	681c      	ldr	r4, [r3, #0]
 8009b5a:	68b8      	ldr	r0, [r7, #8]
 8009b5c:	f7ff fb81 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 8009b60:	4603      	mov	r3, r0
 8009b62:	781e      	ldrb	r6, [r3, #0]
 8009b64:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8009b66:	f7ff fb87 	bl	8009278 <_ZSt7forwardIPhEOT_RNSt16remove_referenceIS1_E4typeE>
 8009b6a:	4603      	mov	r3, r0
 8009b6c:	681b      	ldr	r3, [r3, #0]
 8009b6e:	607b      	str	r3, [r7, #4]
 8009b70:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8009b72:	f7ff fb76 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 8009b76:	4603      	mov	r3, r0
 8009b78:	781b      	ldrb	r3, [r3, #0]
 8009b7a:	687a      	ldr	r2, [r7, #4]
 8009b7c:	4631      	mov	r1, r6
 8009b7e:	4628      	mov	r0, r5
 8009b80:	47a0      	blx	r4
 8009b82:	bf00      	nop
    }
 8009b84:	371c      	adds	r7, #28
 8009b86:	46bd      	mov	sp, r7
 8009b88:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009b8a <_ZNSt11_Tuple_implILj3EJSt12_PlaceholderILi3EEEEC1ERKS1_>:
      constexpr _Tuple_impl(const _Head& __head)
 8009b8a:	b580      	push	{r7, lr}
 8009b8c:	b082      	sub	sp, #8
 8009b8e:	af00      	add	r7, sp, #0
 8009b90:	6078      	str	r0, [r7, #4]
 8009b92:	6039      	str	r1, [r7, #0]
      : _Base(__head) { }
 8009b94:	6839      	ldr	r1, [r7, #0]
 8009b96:	6878      	ldr	r0, [r7, #4]
 8009b98:	f000 f811 	bl	8009bbe <_ZNSt10_Head_baseILj3ESt12_PlaceholderILi3EELb1EEC1ERKS1_>
 8009b9c:	687b      	ldr	r3, [r7, #4]
 8009b9e:	4618      	mov	r0, r3
 8009ba0:	3708      	adds	r7, #8
 8009ba2:	46bd      	mov	sp, r7
 8009ba4:	bd80      	pop	{r7, pc}

08009ba6 <_ZNSt10_Head_baseILj2ESt12_PlaceholderILi2EELb1EEC1ERKS1_>:
      constexpr _Head_base(const _Head& __h)
 8009ba6:	b480      	push	{r7}
 8009ba8:	b083      	sub	sp, #12
 8009baa:	af00      	add	r7, sp, #0
 8009bac:	6078      	str	r0, [r7, #4]
 8009bae:	6039      	str	r1, [r7, #0]
      : _Head(__h) { }
 8009bb0:	687b      	ldr	r3, [r7, #4]
 8009bb2:	4618      	mov	r0, r3
 8009bb4:	370c      	adds	r7, #12
 8009bb6:	46bd      	mov	sp, r7
 8009bb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bbc:	4770      	bx	lr

08009bbe <_ZNSt10_Head_baseILj3ESt12_PlaceholderILi3EELb1EEC1ERKS1_>:
      constexpr _Head_base(const _Head& __h)
 8009bbe:	b480      	push	{r7}
 8009bc0:	b083      	sub	sp, #12
 8009bc2:	af00      	add	r7, sp, #0
 8009bc4:	6078      	str	r0, [r7, #4]
 8009bc6:	6039      	str	r1, [r7, #0]
      : _Head(__h) { }
 8009bc8:	687b      	ldr	r3, [r7, #4]
 8009bca:	4618      	mov	r0, r3
 8009bcc:	370c      	adds	r7, #12
 8009bce:	46bd      	mov	sp, r7
 8009bd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bd4:	4770      	bx	lr

08009bd6 <_ZNKSt14_Function_base8_M_emptyEv>:
    bool _M_empty() const { return !_M_manager; }
 8009bd6:	b480      	push	{r7}
 8009bd8:	b083      	sub	sp, #12
 8009bda:	af00      	add	r7, sp, #0
 8009bdc:	6078      	str	r0, [r7, #4]
 8009bde:	687b      	ldr	r3, [r7, #4]
 8009be0:	689b      	ldr	r3, [r3, #8]
 8009be2:	2b00      	cmp	r3, #0
 8009be4:	bf0c      	ite	eq
 8009be6:	2301      	moveq	r3, #1
 8009be8:	2300      	movne	r3, #0
 8009bea:	b2db      	uxtb	r3, r3
 8009bec:	4618      	mov	r0, r3
 8009bee:	370c      	adds	r7, #12
 8009bf0:	46bd      	mov	sp, r7
 8009bf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bf6:	4770      	bx	lr

08009bf8 <_ZN7MCP4725C1ESt8functionIFvhPhhEENS_10i2c_addr_tENS_9pwrd_md_tEtt>:
#include "mcp4725.h"
#include <stdint.h>

MCP4725::MCP4725(i2c_write_t i2c_write,
 8009bf8:	b580      	push	{r7, lr}
 8009bfa:	b086      	sub	sp, #24
 8009bfc:	af00      	add	r7, sp, #0
 8009bfe:	60f8      	str	r0, [r7, #12]
 8009c00:	60b9      	str	r1, [r7, #8]
 8009c02:	4611      	mov	r1, r2
 8009c04:	461a      	mov	r2, r3
 8009c06:	460b      	mov	r3, r1
 8009c08:	71fb      	strb	r3, [r7, #7]
 8009c0a:	4613      	mov	r3, r2
 8009c0c:	71bb      	strb	r3, [r7, #6]
                 uint16_t eemprom_value) :
                 i2c_write(i2c_write),
                 address(address),
                 power_down_mode(power_down_mode),
                 dac_value(dac_value),
                 eeprom_value(eeprom_value)
 8009c0e:	68fb      	ldr	r3, [r7, #12]
 8009c10:	68b9      	ldr	r1, [r7, #8]
 8009c12:	4618      	mov	r0, r3
 8009c14:	f000 f857 	bl	8009cc6 <_ZNSt8functionIFvhPhhEEC1ERKS2_>
 8009c18:	68fb      	ldr	r3, [r7, #12]
 8009c1a:	79fa      	ldrb	r2, [r7, #7]
 8009c1c:	741a      	strb	r2, [r3, #16]
 8009c1e:	68fb      	ldr	r3, [r7, #12]
 8009c20:	79ba      	ldrb	r2, [r7, #6]
 8009c22:	745a      	strb	r2, [r3, #17]
 8009c24:	68fb      	ldr	r3, [r7, #12]
 8009c26:	8c3a      	ldrh	r2, [r7, #32]
 8009c28:	825a      	strh	r2, [r3, #18]
 8009c2a:	68fb      	ldr	r3, [r7, #12]
 8009c2c:	8a9a      	ldrh	r2, [r3, #20]
 8009c2e:	68fb      	ldr	r3, [r7, #12]
 8009c30:	829a      	strh	r2, [r3, #20]
{
    uint8_t temp[5];

    temp[0] = mcp4725_cmd_WRITE_DAC_AND_EEPROM | (power_down_mode << 1);
 8009c32:	79bb      	ldrb	r3, [r7, #6]
 8009c34:	005b      	lsls	r3, r3, #1
 8009c36:	b25b      	sxtb	r3, r3
 8009c38:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8009c3c:	b25b      	sxtb	r3, r3
 8009c3e:	b2db      	uxtb	r3, r3
 8009c40:	743b      	strb	r3, [r7, #16]
    temp[1] = (uint8_t)(dac_value >> 4);
 8009c42:	8c3b      	ldrh	r3, [r7, #32]
 8009c44:	111b      	asrs	r3, r3, #4
 8009c46:	b2db      	uxtb	r3, r3
 8009c48:	747b      	strb	r3, [r7, #17]
    temp[2] = (uint8_t)(dac_value << 4);
 8009c4a:	8c3b      	ldrh	r3, [r7, #32]
 8009c4c:	b2db      	uxtb	r3, r3
 8009c4e:	011b      	lsls	r3, r3, #4
 8009c50:	b2db      	uxtb	r3, r3
 8009c52:	74bb      	strb	r3, [r7, #18]
    temp[3] = temp[0];
 8009c54:	7c3b      	ldrb	r3, [r7, #16]
 8009c56:	74fb      	strb	r3, [r7, #19]
    temp[4] = temp[1];
 8009c58:	7c7b      	ldrb	r3, [r7, #17]
 8009c5a:	753b      	strb	r3, [r7, #20]
    temp[5] = temp[2];
 8009c5c:	7cbb      	ldrb	r3, [r7, #18]
 8009c5e:	757b      	strb	r3, [r7, #21]

    // writing to device
    i2c_write(address, temp, 6);
 8009c60:	f107 0210 	add.w	r2, r7, #16
 8009c64:	79f9      	ldrb	r1, [r7, #7]
 8009c66:	2306      	movs	r3, #6
 8009c68:	68b8      	ldr	r0, [r7, #8]
 8009c6a:	f000 f84e 	bl	8009d0a <_ZNKSt8functionIFvhPhhEEclEhS0_h>
}
 8009c6e:	68fb      	ldr	r3, [r7, #12]
 8009c70:	4618      	mov	r0, r3
 8009c72:	3718      	adds	r7, #24
 8009c74:	46bd      	mov	sp, r7
 8009c76:	bd80      	pop	{r7, pc}

08009c78 <_ZN7MCP47257set_DACEt>:

void MCP4725::set_DAC(uint16_t value)
{
 8009c78:	b580      	push	{r7, lr}
 8009c7a:	b084      	sub	sp, #16
 8009c7c:	af00      	add	r7, sp, #0
 8009c7e:	6078      	str	r0, [r7, #4]
 8009c80:	460b      	mov	r3, r1
 8009c82:	807b      	strh	r3, [r7, #2]
    uint8_t temp[3];

    dac_value = value;
 8009c84:	687b      	ldr	r3, [r7, #4]
 8009c86:	887a      	ldrh	r2, [r7, #2]
 8009c88:	825a      	strh	r2, [r3, #18]

    // setting up data set
    temp[0] = mcp4725_cmd_WRITE_DAC | (power_down_mode << 1);
 8009c8a:	687b      	ldr	r3, [r7, #4]
 8009c8c:	7c5b      	ldrb	r3, [r3, #17]
 8009c8e:	005b      	lsls	r3, r3, #1
 8009c90:	b25b      	sxtb	r3, r3
 8009c92:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8009c96:	b25b      	sxtb	r3, r3
 8009c98:	b2db      	uxtb	r3, r3
 8009c9a:	733b      	strb	r3, [r7, #12]
    temp[1] = (uint8_t)(value >> 4);
 8009c9c:	887b      	ldrh	r3, [r7, #2]
 8009c9e:	111b      	asrs	r3, r3, #4
 8009ca0:	b2db      	uxtb	r3, r3
 8009ca2:	737b      	strb	r3, [r7, #13]
    temp[2] = (uint8_t)(value << 4);
 8009ca4:	887b      	ldrh	r3, [r7, #2]
 8009ca6:	b2db      	uxtb	r3, r3
 8009ca8:	011b      	lsls	r3, r3, #4
 8009caa:	b2db      	uxtb	r3, r3
 8009cac:	73bb      	strb	r3, [r7, #14]

    i2c_write(address, temp, 3);
 8009cae:	6878      	ldr	r0, [r7, #4]
 8009cb0:	687b      	ldr	r3, [r7, #4]
 8009cb2:	7c19      	ldrb	r1, [r3, #16]
 8009cb4:	f107 020c 	add.w	r2, r7, #12
 8009cb8:	2303      	movs	r3, #3
 8009cba:	f000 f826 	bl	8009d0a <_ZNKSt8functionIFvhPhhEEclEhS0_h>
}
 8009cbe:	bf00      	nop
 8009cc0:	3710      	adds	r7, #16
 8009cc2:	46bd      	mov	sp, r7
 8009cc4:	bd80      	pop	{r7, pc}

08009cc6 <_ZNSt8functionIFvhPhhEEC1ERKS2_>:
    function<_Res(_ArgTypes...)>::
 8009cc6:	b580      	push	{r7, lr}
 8009cc8:	b082      	sub	sp, #8
 8009cca:	af00      	add	r7, sp, #0
 8009ccc:	6078      	str	r0, [r7, #4]
 8009cce:	6039      	str	r1, [r7, #0]
    : _Function_base()
 8009cd0:	687b      	ldr	r3, [r7, #4]
 8009cd2:	4618      	mov	r0, r3
 8009cd4:	f7fe fe7d 	bl	80089d2 <_ZNSt14_Function_baseC1Ev>
      if (static_cast<bool>(__x))
 8009cd8:	6838      	ldr	r0, [r7, #0]
 8009cda:	f000 f847 	bl	8009d6c <_ZNKSt8functionIFvhPhhEEcvbEv>
 8009cde:	4603      	mov	r3, r0
 8009ce0:	2b00      	cmp	r3, #0
 8009ce2:	d00d      	beq.n	8009d00 <_ZNSt8functionIFvhPhhEEC1ERKS2_+0x3a>
	  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
 8009ce4:	683b      	ldr	r3, [r7, #0]
 8009ce6:	689b      	ldr	r3, [r3, #8]
 8009ce8:	6878      	ldr	r0, [r7, #4]
 8009cea:	6839      	ldr	r1, [r7, #0]
 8009cec:	2202      	movs	r2, #2
 8009cee:	4798      	blx	r3
	  _M_invoker = __x._M_invoker;
 8009cf0:	683b      	ldr	r3, [r7, #0]
 8009cf2:	68da      	ldr	r2, [r3, #12]
 8009cf4:	687b      	ldr	r3, [r7, #4]
 8009cf6:	60da      	str	r2, [r3, #12]
	  _M_manager = __x._M_manager;
 8009cf8:	683b      	ldr	r3, [r7, #0]
 8009cfa:	689a      	ldr	r2, [r3, #8]
 8009cfc:	687b      	ldr	r3, [r7, #4]
 8009cfe:	609a      	str	r2, [r3, #8]
    }
 8009d00:	687b      	ldr	r3, [r7, #4]
 8009d02:	4618      	mov	r0, r3
 8009d04:	3708      	adds	r7, #8
 8009d06:	46bd      	mov	sp, r7
 8009d08:	bd80      	pop	{r7, pc}

08009d0a <_ZNKSt8functionIFvhPhhEEclEhS0_h>:

  template<typename _Res, typename... _ArgTypes>
    _Res
    function<_Res(_ArgTypes...)>::
 8009d0a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009d0e:	b084      	sub	sp, #16
 8009d10:	af00      	add	r7, sp, #0
 8009d12:	60f8      	str	r0, [r7, #12]
 8009d14:	607a      	str	r2, [r7, #4]
 8009d16:	461a      	mov	r2, r3
 8009d18:	460b      	mov	r3, r1
 8009d1a:	72fb      	strb	r3, [r7, #11]
 8009d1c:	4613      	mov	r3, r2
 8009d1e:	72bb      	strb	r3, [r7, #10]
    operator()(_ArgTypes... __args) const
    {
      if (_M_empty())
 8009d20:	68fb      	ldr	r3, [r7, #12]
 8009d22:	4618      	mov	r0, r3
 8009d24:	f7ff ff57 	bl	8009bd6 <_ZNKSt14_Function_base8_M_emptyEv>
 8009d28:	4603      	mov	r3, r0
 8009d2a:	2b00      	cmp	r3, #0
 8009d2c:	d001      	beq.n	8009d32 <_ZNKSt8functionIFvhPhhEEclEhS0_h+0x28>
	__throw_bad_function_call();
 8009d2e:	f002 fa85 	bl	800c23c <_ZSt25__throw_bad_function_callv>
      return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
 8009d32:	68fb      	ldr	r3, [r7, #12]
 8009d34:	68dc      	ldr	r4, [r3, #12]
 8009d36:	68fd      	ldr	r5, [r7, #12]
 8009d38:	f107 030b 	add.w	r3, r7, #11
 8009d3c:	4618      	mov	r0, r3
 8009d3e:	f7ff fa90 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 8009d42:	4606      	mov	r6, r0
 8009d44:	1d3b      	adds	r3, r7, #4
 8009d46:	4618      	mov	r0, r3
 8009d48:	f7ff fa96 	bl	8009278 <_ZSt7forwardIPhEOT_RNSt16remove_referenceIS1_E4typeE>
 8009d4c:	4680      	mov	r8, r0
 8009d4e:	f107 030a 	add.w	r3, r7, #10
 8009d52:	4618      	mov	r0, r3
 8009d54:	f7ff fa85 	bl	8009262 <_ZSt7forwardIhEOT_RNSt16remove_referenceIS0_E4typeE>
 8009d58:	4603      	mov	r3, r0
 8009d5a:	4642      	mov	r2, r8
 8009d5c:	4631      	mov	r1, r6
 8009d5e:	4628      	mov	r0, r5
 8009d60:	47a0      	blx	r4
 8009d62:	bf00      	nop
    }
 8009d64:	3710      	adds	r7, #16
 8009d66:	46bd      	mov	sp, r7
 8009d68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08009d6c <_ZNKSt8functionIFvhPhhEEcvbEv>:
      explicit operator bool() const noexcept
 8009d6c:	b580      	push	{r7, lr}
 8009d6e:	b082      	sub	sp, #8
 8009d70:	af00      	add	r7, sp, #0
 8009d72:	6078      	str	r0, [r7, #4]
      { return !_M_empty(); }
 8009d74:	687b      	ldr	r3, [r7, #4]
 8009d76:	4618      	mov	r0, r3
 8009d78:	f7ff ff2d 	bl	8009bd6 <_ZNKSt14_Function_base8_M_emptyEv>
 8009d7c:	4603      	mov	r3, r0
 8009d7e:	f083 0301 	eor.w	r3, r3, #1
 8009d82:	b2db      	uxtb	r3, r3
 8009d84:	4618      	mov	r0, r3
 8009d86:	3708      	adds	r7, #8
 8009d88:	46bd      	mov	sp, r7
 8009d8a:	bd80      	pop	{r7, pc}

08009d8c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8009d8c:	b480      	push	{r7}
 8009d8e:	b083      	sub	sp, #12
 8009d90:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009d92:	2300      	movs	r3, #0
 8009d94:	607b      	str	r3, [r7, #4]
 8009d96:	4b10      	ldr	r3, [pc, #64]	; (8009dd8 <HAL_MspInit+0x4c>)
 8009d98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009d9a:	4a0f      	ldr	r2, [pc, #60]	; (8009dd8 <HAL_MspInit+0x4c>)
 8009d9c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8009da0:	6453      	str	r3, [r2, #68]	; 0x44
 8009da2:	4b0d      	ldr	r3, [pc, #52]	; (8009dd8 <HAL_MspInit+0x4c>)
 8009da4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009da6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8009daa:	607b      	str	r3, [r7, #4]
 8009dac:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8009dae:	2300      	movs	r3, #0
 8009db0:	603b      	str	r3, [r7, #0]
 8009db2:	4b09      	ldr	r3, [pc, #36]	; (8009dd8 <HAL_MspInit+0x4c>)
 8009db4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009db6:	4a08      	ldr	r2, [pc, #32]	; (8009dd8 <HAL_MspInit+0x4c>)
 8009db8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009dbc:	6413      	str	r3, [r2, #64]	; 0x40
 8009dbe:	4b06      	ldr	r3, [pc, #24]	; (8009dd8 <HAL_MspInit+0x4c>)
 8009dc0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009dc2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009dc6:	603b      	str	r3, [r7, #0]
 8009dc8:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8009dca:	bf00      	nop
 8009dcc:	370c      	adds	r7, #12
 8009dce:	46bd      	mov	sp, r7
 8009dd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dd4:	4770      	bx	lr
 8009dd6:	bf00      	nop
 8009dd8:	40023800 	.word	0x40023800

08009ddc <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8009ddc:	b580      	push	{r7, lr}
 8009dde:	b08a      	sub	sp, #40	; 0x28
 8009de0:	af00      	add	r7, sp, #0
 8009de2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8009de4:	f107 0314 	add.w	r3, r7, #20
 8009de8:	2200      	movs	r2, #0
 8009dea:	601a      	str	r2, [r3, #0]
 8009dec:	605a      	str	r2, [r3, #4]
 8009dee:	609a      	str	r2, [r3, #8]
 8009df0:	60da      	str	r2, [r3, #12]
 8009df2:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8009df4:	687b      	ldr	r3, [r7, #4]
 8009df6:	681b      	ldr	r3, [r3, #0]
 8009df8:	4a19      	ldr	r2, [pc, #100]	; (8009e60 <HAL_I2C_MspInit+0x84>)
 8009dfa:	4293      	cmp	r3, r2
 8009dfc:	d12b      	bne.n	8009e56 <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */
  
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8009dfe:	2300      	movs	r3, #0
 8009e00:	613b      	str	r3, [r7, #16]
 8009e02:	4b18      	ldr	r3, [pc, #96]	; (8009e64 <HAL_I2C_MspInit+0x88>)
 8009e04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009e06:	4a17      	ldr	r2, [pc, #92]	; (8009e64 <HAL_I2C_MspInit+0x88>)
 8009e08:	f043 0302 	orr.w	r3, r3, #2
 8009e0c:	6313      	str	r3, [r2, #48]	; 0x30
 8009e0e:	4b15      	ldr	r3, [pc, #84]	; (8009e64 <HAL_I2C_MspInit+0x88>)
 8009e10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009e12:	f003 0302 	and.w	r3, r3, #2
 8009e16:	613b      	str	r3, [r7, #16]
 8009e18:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration    
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8009e1a:	23c0      	movs	r3, #192	; 0xc0
 8009e1c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8009e1e:	2312      	movs	r3, #18
 8009e20:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8009e22:	2301      	movs	r3, #1
 8009e24:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8009e26:	2303      	movs	r3, #3
 8009e28:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8009e2a:	2304      	movs	r3, #4
 8009e2c:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8009e2e:	f107 0314 	add.w	r3, r7, #20
 8009e32:	4619      	mov	r1, r3
 8009e34:	480c      	ldr	r0, [pc, #48]	; (8009e68 <HAL_I2C_MspInit+0x8c>)
 8009e36:	f000 fae3 	bl	800a400 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8009e3a:	2300      	movs	r3, #0
 8009e3c:	60fb      	str	r3, [r7, #12]
 8009e3e:	4b09      	ldr	r3, [pc, #36]	; (8009e64 <HAL_I2C_MspInit+0x88>)
 8009e40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009e42:	4a08      	ldr	r2, [pc, #32]	; (8009e64 <HAL_I2C_MspInit+0x88>)
 8009e44:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8009e48:	6413      	str	r3, [r2, #64]	; 0x40
 8009e4a:	4b06      	ldr	r3, [pc, #24]	; (8009e64 <HAL_I2C_MspInit+0x88>)
 8009e4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009e4e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8009e52:	60fb      	str	r3, [r7, #12]
 8009e54:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8009e56:	bf00      	nop
 8009e58:	3728      	adds	r7, #40	; 0x28
 8009e5a:	46bd      	mov	sp, r7
 8009e5c:	bd80      	pop	{r7, pc}
 8009e5e:	bf00      	nop
 8009e60:	40005400 	.word	0x40005400
 8009e64:	40023800 	.word	0x40023800
 8009e68:	40020400 	.word	0x40020400

08009e6c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8009e6c:	b580      	push	{r7, lr}
 8009e6e:	b08a      	sub	sp, #40	; 0x28
 8009e70:	af00      	add	r7, sp, #0
 8009e72:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8009e74:	f107 0314 	add.w	r3, r7, #20
 8009e78:	2200      	movs	r2, #0
 8009e7a:	601a      	str	r2, [r3, #0]
 8009e7c:	605a      	str	r2, [r3, #4]
 8009e7e:	609a      	str	r2, [r3, #8]
 8009e80:	60da      	str	r2, [r3, #12]
 8009e82:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 8009e84:	687b      	ldr	r3, [r7, #4]
 8009e86:	681b      	ldr	r3, [r3, #0]
 8009e88:	4a19      	ldr	r2, [pc, #100]	; (8009ef0 <HAL_UART_MspInit+0x84>)
 8009e8a:	4293      	cmp	r3, r2
 8009e8c:	d12b      	bne.n	8009ee6 <HAL_UART_MspInit+0x7a>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8009e8e:	2300      	movs	r3, #0
 8009e90:	613b      	str	r3, [r7, #16]
 8009e92:	4b18      	ldr	r3, [pc, #96]	; (8009ef4 <HAL_UART_MspInit+0x88>)
 8009e94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009e96:	4a17      	ldr	r2, [pc, #92]	; (8009ef4 <HAL_UART_MspInit+0x88>)
 8009e98:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009e9c:	6413      	str	r3, [r2, #64]	; 0x40
 8009e9e:	4b15      	ldr	r3, [pc, #84]	; (8009ef4 <HAL_UART_MspInit+0x88>)
 8009ea0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009ea2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009ea6:	613b      	str	r3, [r7, #16]
 8009ea8:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8009eaa:	2300      	movs	r3, #0
 8009eac:	60fb      	str	r3, [r7, #12]
 8009eae:	4b11      	ldr	r3, [pc, #68]	; (8009ef4 <HAL_UART_MspInit+0x88>)
 8009eb0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009eb2:	4a10      	ldr	r2, [pc, #64]	; (8009ef4 <HAL_UART_MspInit+0x88>)
 8009eb4:	f043 0301 	orr.w	r3, r3, #1
 8009eb8:	6313      	str	r3, [r2, #48]	; 0x30
 8009eba:	4b0e      	ldr	r3, [pc, #56]	; (8009ef4 <HAL_UART_MspInit+0x88>)
 8009ebc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009ebe:	f003 0301 	and.w	r3, r3, #1
 8009ec2:	60fb      	str	r3, [r7, #12]
 8009ec4:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration    
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX 
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8009ec6:	230c      	movs	r3, #12
 8009ec8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8009eca:	2302      	movs	r3, #2
 8009ecc:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8009ece:	2300      	movs	r3, #0
 8009ed0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8009ed2:	2303      	movs	r3, #3
 8009ed4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8009ed6:	2307      	movs	r3, #7
 8009ed8:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8009eda:	f107 0314 	add.w	r3, r7, #20
 8009ede:	4619      	mov	r1, r3
 8009ee0:	4805      	ldr	r0, [pc, #20]	; (8009ef8 <HAL_UART_MspInit+0x8c>)
 8009ee2:	f000 fa8d 	bl	800a400 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8009ee6:	bf00      	nop
 8009ee8:	3728      	adds	r7, #40	; 0x28
 8009eea:	46bd      	mov	sp, r7
 8009eec:	bd80      	pop	{r7, pc}
 8009eee:	bf00      	nop
 8009ef0:	40004400 	.word	0x40004400
 8009ef4:	40023800 	.word	0x40023800
 8009ef8:	40020000 	.word	0x40020000

08009efc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8009efc:	b480      	push	{r7}
 8009efe:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8009f00:	bf00      	nop
 8009f02:	46bd      	mov	sp, r7
 8009f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f08:	4770      	bx	lr

08009f0a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8009f0a:	b480      	push	{r7}
 8009f0c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8009f0e:	e7fe      	b.n	8009f0e <HardFault_Handler+0x4>

08009f10 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8009f10:	b480      	push	{r7}
 8009f12:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8009f14:	e7fe      	b.n	8009f14 <MemManage_Handler+0x4>

08009f16 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8009f16:	b480      	push	{r7}
 8009f18:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8009f1a:	e7fe      	b.n	8009f1a <BusFault_Handler+0x4>

08009f1c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8009f1c:	b480      	push	{r7}
 8009f1e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8009f20:	e7fe      	b.n	8009f20 <UsageFault_Handler+0x4>

08009f22 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8009f22:	b480      	push	{r7}
 8009f24:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8009f26:	bf00      	nop
 8009f28:	46bd      	mov	sp, r7
 8009f2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f2e:	4770      	bx	lr

08009f30 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8009f30:	b480      	push	{r7}
 8009f32:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8009f34:	bf00      	nop
 8009f36:	46bd      	mov	sp, r7
 8009f38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f3c:	4770      	bx	lr

08009f3e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8009f3e:	b480      	push	{r7}
 8009f40:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8009f42:	bf00      	nop
 8009f44:	46bd      	mov	sp, r7
 8009f46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f4a:	4770      	bx	lr

08009f4c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8009f4c:	b580      	push	{r7, lr}
 8009f4e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8009f50:	f000 f950 	bl	800a1f4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8009f54:	bf00      	nop
 8009f56:	bd80      	pop	{r7, pc}

08009f58 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8009f58:	b480      	push	{r7}
 8009f5a:	af00      	add	r7, sp, #0
	return 1;
 8009f5c:	2301      	movs	r3, #1
}
 8009f5e:	4618      	mov	r0, r3
 8009f60:	46bd      	mov	sp, r7
 8009f62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f66:	4770      	bx	lr

08009f68 <_kill>:

int _kill(int pid, int sig)
{
 8009f68:	b580      	push	{r7, lr}
 8009f6a:	b082      	sub	sp, #8
 8009f6c:	af00      	add	r7, sp, #0
 8009f6e:	6078      	str	r0, [r7, #4]
 8009f70:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8009f72:	f003 f967 	bl	800d244 <__errno>
 8009f76:	4602      	mov	r2, r0
 8009f78:	2316      	movs	r3, #22
 8009f7a:	6013      	str	r3, [r2, #0]
	return -1;
 8009f7c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8009f80:	4618      	mov	r0, r3
 8009f82:	3708      	adds	r7, #8
 8009f84:	46bd      	mov	sp, r7
 8009f86:	bd80      	pop	{r7, pc}

08009f88 <_exit>:

void _exit (int status)
{
 8009f88:	b580      	push	{r7, lr}
 8009f8a:	b082      	sub	sp, #8
 8009f8c:	af00      	add	r7, sp, #0
 8009f8e:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8009f90:	f04f 31ff 	mov.w	r1, #4294967295
 8009f94:	6878      	ldr	r0, [r7, #4]
 8009f96:	f7ff ffe7 	bl	8009f68 <_kill>
	while (1) {}		/* Make sure we hang here */
 8009f9a:	e7fe      	b.n	8009f9a <_exit+0x12>

08009f9c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8009f9c:	b580      	push	{r7, lr}
 8009f9e:	b086      	sub	sp, #24
 8009fa0:	af00      	add	r7, sp, #0
 8009fa2:	60f8      	str	r0, [r7, #12]
 8009fa4:	60b9      	str	r1, [r7, #8]
 8009fa6:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8009fa8:	2300      	movs	r3, #0
 8009faa:	617b      	str	r3, [r7, #20]
 8009fac:	e00a      	b.n	8009fc4 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8009fae:	f3af 8000 	nop.w
 8009fb2:	4601      	mov	r1, r0
 8009fb4:	68bb      	ldr	r3, [r7, #8]
 8009fb6:	1c5a      	adds	r2, r3, #1
 8009fb8:	60ba      	str	r2, [r7, #8]
 8009fba:	b2ca      	uxtb	r2, r1
 8009fbc:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8009fbe:	697b      	ldr	r3, [r7, #20]
 8009fc0:	3301      	adds	r3, #1
 8009fc2:	617b      	str	r3, [r7, #20]
 8009fc4:	697a      	ldr	r2, [r7, #20]
 8009fc6:	687b      	ldr	r3, [r7, #4]
 8009fc8:	429a      	cmp	r2, r3
 8009fca:	dbf0      	blt.n	8009fae <_read+0x12>
	}

return len;
 8009fcc:	687b      	ldr	r3, [r7, #4]
}
 8009fce:	4618      	mov	r0, r3
 8009fd0:	3718      	adds	r7, #24
 8009fd2:	46bd      	mov	sp, r7
 8009fd4:	bd80      	pop	{r7, pc}

08009fd6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8009fd6:	b580      	push	{r7, lr}
 8009fd8:	b086      	sub	sp, #24
 8009fda:	af00      	add	r7, sp, #0
 8009fdc:	60f8      	str	r0, [r7, #12]
 8009fde:	60b9      	str	r1, [r7, #8]
 8009fe0:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8009fe2:	2300      	movs	r3, #0
 8009fe4:	617b      	str	r3, [r7, #20]
 8009fe6:	e009      	b.n	8009ffc <_write+0x26>
	{
		__io_putchar(*ptr++);
 8009fe8:	68bb      	ldr	r3, [r7, #8]
 8009fea:	1c5a      	adds	r2, r3, #1
 8009fec:	60ba      	str	r2, [r7, #8]
 8009fee:	781b      	ldrb	r3, [r3, #0]
 8009ff0:	4618      	mov	r0, r3
 8009ff2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8009ff6:	697b      	ldr	r3, [r7, #20]
 8009ff8:	3301      	adds	r3, #1
 8009ffa:	617b      	str	r3, [r7, #20]
 8009ffc:	697a      	ldr	r2, [r7, #20]
 8009ffe:	687b      	ldr	r3, [r7, #4]
 800a000:	429a      	cmp	r2, r3
 800a002:	dbf1      	blt.n	8009fe8 <_write+0x12>
	}
	return len;
 800a004:	687b      	ldr	r3, [r7, #4]
}
 800a006:	4618      	mov	r0, r3
 800a008:	3718      	adds	r7, #24
 800a00a:	46bd      	mov	sp, r7
 800a00c:	bd80      	pop	{r7, pc}

0800a00e <_close>:

int _close(int file)
{
 800a00e:	b480      	push	{r7}
 800a010:	b083      	sub	sp, #12
 800a012:	af00      	add	r7, sp, #0
 800a014:	6078      	str	r0, [r7, #4]
	return -1;
 800a016:	f04f 33ff 	mov.w	r3, #4294967295
}
 800a01a:	4618      	mov	r0, r3
 800a01c:	370c      	adds	r7, #12
 800a01e:	46bd      	mov	sp, r7
 800a020:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a024:	4770      	bx	lr

0800a026 <_fstat>:


int _fstat(int file, struct stat *st)
{
 800a026:	b480      	push	{r7}
 800a028:	b083      	sub	sp, #12
 800a02a:	af00      	add	r7, sp, #0
 800a02c:	6078      	str	r0, [r7, #4]
 800a02e:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800a030:	683b      	ldr	r3, [r7, #0]
 800a032:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800a036:	605a      	str	r2, [r3, #4]
	return 0;
 800a038:	2300      	movs	r3, #0
}
 800a03a:	4618      	mov	r0, r3
 800a03c:	370c      	adds	r7, #12
 800a03e:	46bd      	mov	sp, r7
 800a040:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a044:	4770      	bx	lr

0800a046 <_isatty>:

int _isatty(int file)
{
 800a046:	b480      	push	{r7}
 800a048:	b083      	sub	sp, #12
 800a04a:	af00      	add	r7, sp, #0
 800a04c:	6078      	str	r0, [r7, #4]
	return 1;
 800a04e:	2301      	movs	r3, #1
}
 800a050:	4618      	mov	r0, r3
 800a052:	370c      	adds	r7, #12
 800a054:	46bd      	mov	sp, r7
 800a056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a05a:	4770      	bx	lr

0800a05c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800a05c:	b480      	push	{r7}
 800a05e:	b085      	sub	sp, #20
 800a060:	af00      	add	r7, sp, #0
 800a062:	60f8      	str	r0, [r7, #12]
 800a064:	60b9      	str	r1, [r7, #8]
 800a066:	607a      	str	r2, [r7, #4]
	return 0;
 800a068:	2300      	movs	r3, #0
}
 800a06a:	4618      	mov	r0, r3
 800a06c:	3714      	adds	r7, #20
 800a06e:	46bd      	mov	sp, r7
 800a070:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a074:	4770      	bx	lr
	...

0800a078 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 800a078:	b580      	push	{r7, lr}
 800a07a:	b084      	sub	sp, #16
 800a07c:	af00      	add	r7, sp, #0
 800a07e:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800a080:	4b11      	ldr	r3, [pc, #68]	; (800a0c8 <_sbrk+0x50>)
 800a082:	681b      	ldr	r3, [r3, #0]
 800a084:	2b00      	cmp	r3, #0
 800a086:	d102      	bne.n	800a08e <_sbrk+0x16>
		heap_end = &end;
 800a088:	4b0f      	ldr	r3, [pc, #60]	; (800a0c8 <_sbrk+0x50>)
 800a08a:	4a10      	ldr	r2, [pc, #64]	; (800a0cc <_sbrk+0x54>)
 800a08c:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800a08e:	4b0e      	ldr	r3, [pc, #56]	; (800a0c8 <_sbrk+0x50>)
 800a090:	681b      	ldr	r3, [r3, #0]
 800a092:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 800a094:	4b0c      	ldr	r3, [pc, #48]	; (800a0c8 <_sbrk+0x50>)
 800a096:	681a      	ldr	r2, [r3, #0]
 800a098:	687b      	ldr	r3, [r7, #4]
 800a09a:	4413      	add	r3, r2
 800a09c:	466a      	mov	r2, sp
 800a09e:	4293      	cmp	r3, r2
 800a0a0:	d907      	bls.n	800a0b2 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800a0a2:	f003 f8cf 	bl	800d244 <__errno>
 800a0a6:	4602      	mov	r2, r0
 800a0a8:	230c      	movs	r3, #12
 800a0aa:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 800a0ac:	f04f 33ff 	mov.w	r3, #4294967295
 800a0b0:	e006      	b.n	800a0c0 <_sbrk+0x48>
	}

	heap_end += incr;
 800a0b2:	4b05      	ldr	r3, [pc, #20]	; (800a0c8 <_sbrk+0x50>)
 800a0b4:	681a      	ldr	r2, [r3, #0]
 800a0b6:	687b      	ldr	r3, [r7, #4]
 800a0b8:	4413      	add	r3, r2
 800a0ba:	4a03      	ldr	r2, [pc, #12]	; (800a0c8 <_sbrk+0x50>)
 800a0bc:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800a0be:	68fb      	ldr	r3, [r7, #12]
}
 800a0c0:	4618      	mov	r0, r3
 800a0c2:	3710      	adds	r7, #16
 800a0c4:	46bd      	mov	sp, r7
 800a0c6:	bd80      	pop	{r7, pc}
 800a0c8:	20000a1c 	.word	0x20000a1c
 800a0cc:	20000a90 	.word	0x20000a90

0800a0d0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800a0d0:	b480      	push	{r7}
 800a0d2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800a0d4:	4b08      	ldr	r3, [pc, #32]	; (800a0f8 <SystemInit+0x28>)
 800a0d6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a0da:	4a07      	ldr	r2, [pc, #28]	; (800a0f8 <SystemInit+0x28>)
 800a0dc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800a0e0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800a0e4:	4b04      	ldr	r3, [pc, #16]	; (800a0f8 <SystemInit+0x28>)
 800a0e6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800a0ea:	609a      	str	r2, [r3, #8]
#endif
}
 800a0ec:	bf00      	nop
 800a0ee:	46bd      	mov	sp, r7
 800a0f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0f4:	4770      	bx	lr
 800a0f6:	bf00      	nop
 800a0f8:	e000ed00 	.word	0xe000ed00

0800a0fc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 800a0fc:	f8df d034 	ldr.w	sp, [pc, #52]	; 800a134 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800a100:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800a102:	e003      	b.n	800a10c <LoopCopyDataInit>

0800a104 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800a104:	4b0c      	ldr	r3, [pc, #48]	; (800a138 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800a106:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800a108:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800a10a:	3104      	adds	r1, #4

0800a10c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800a10c:	480b      	ldr	r0, [pc, #44]	; (800a13c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800a10e:	4b0c      	ldr	r3, [pc, #48]	; (800a140 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 800a110:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800a112:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 800a114:	d3f6      	bcc.n	800a104 <CopyDataInit>
  ldr  r2, =_sbss
 800a116:	4a0b      	ldr	r2, [pc, #44]	; (800a144 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 800a118:	e002      	b.n	800a120 <LoopFillZerobss>

0800a11a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800a11a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800a11c:	f842 3b04 	str.w	r3, [r2], #4

0800a120 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800a120:	4b09      	ldr	r3, [pc, #36]	; (800a148 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800a122:	429a      	cmp	r2, r3
  bcc  FillZerobss
 800a124:	d3f9      	bcc.n	800a11a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 800a126:	f7ff ffd3 	bl	800a0d0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800a12a:	f003 faa5 	bl	800d678 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800a12e:	f7fe fc7f 	bl	8008a30 <main>
  bx  lr    
 800a132:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 800a134:	20020000 	.word	0x20020000
  ldr  r3, =_sidata
 800a138:	08012ae0 	.word	0x08012ae0
  ldr  r0, =_sdata
 800a13c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 800a140:	200009c0 	.word	0x200009c0
  ldr  r2, =_sbss
 800a144:	200009c0 	.word	0x200009c0
  ldr  r3, = _ebss
 800a148:	20000a8c 	.word	0x20000a8c

0800a14c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800a14c:	e7fe      	b.n	800a14c <ADC_IRQHandler>
	...

0800a150 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800a150:	b580      	push	{r7, lr}
 800a152:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800a154:	4b0e      	ldr	r3, [pc, #56]	; (800a190 <HAL_Init+0x40>)
 800a156:	681b      	ldr	r3, [r3, #0]
 800a158:	4a0d      	ldr	r2, [pc, #52]	; (800a190 <HAL_Init+0x40>)
 800a15a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a15e:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800a160:	4b0b      	ldr	r3, [pc, #44]	; (800a190 <HAL_Init+0x40>)
 800a162:	681b      	ldr	r3, [r3, #0]
 800a164:	4a0a      	ldr	r2, [pc, #40]	; (800a190 <HAL_Init+0x40>)
 800a166:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a16a:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800a16c:	4b08      	ldr	r3, [pc, #32]	; (800a190 <HAL_Init+0x40>)
 800a16e:	681b      	ldr	r3, [r3, #0]
 800a170:	4a07      	ldr	r2, [pc, #28]	; (800a190 <HAL_Init+0x40>)
 800a172:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a176:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800a178:	2003      	movs	r0, #3
 800a17a:	f000 f90d 	bl	800a398 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800a17e:	2000      	movs	r0, #0
 800a180:	f000 f808 	bl	800a194 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800a184:	f7ff fe02 	bl	8009d8c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 800a188:	2300      	movs	r3, #0
}
 800a18a:	4618      	mov	r0, r3
 800a18c:	bd80      	pop	{r7, pc}
 800a18e:	bf00      	nop
 800a190:	40023c00 	.word	0x40023c00

0800a194 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800a194:	b580      	push	{r7, lr}
 800a196:	b082      	sub	sp, #8
 800a198:	af00      	add	r7, sp, #0
 800a19a:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800a19c:	4b12      	ldr	r3, [pc, #72]	; (800a1e8 <HAL_InitTick+0x54>)
 800a19e:	681a      	ldr	r2, [r3, #0]
 800a1a0:	4b12      	ldr	r3, [pc, #72]	; (800a1ec <HAL_InitTick+0x58>)
 800a1a2:	781b      	ldrb	r3, [r3, #0]
 800a1a4:	4619      	mov	r1, r3
 800a1a6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a1aa:	fbb3 f3f1 	udiv	r3, r3, r1
 800a1ae:	fbb2 f3f3 	udiv	r3, r2, r3
 800a1b2:	4618      	mov	r0, r3
 800a1b4:	f000 f917 	bl	800a3e6 <HAL_SYSTICK_Config>
 800a1b8:	4603      	mov	r3, r0
 800a1ba:	2b00      	cmp	r3, #0
 800a1bc:	d001      	beq.n	800a1c2 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 800a1be:	2301      	movs	r3, #1
 800a1c0:	e00e      	b.n	800a1e0 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800a1c2:	687b      	ldr	r3, [r7, #4]
 800a1c4:	2b0f      	cmp	r3, #15
 800a1c6:	d80a      	bhi.n	800a1de <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800a1c8:	2200      	movs	r2, #0
 800a1ca:	6879      	ldr	r1, [r7, #4]
 800a1cc:	f04f 30ff 	mov.w	r0, #4294967295
 800a1d0:	f000 f8ed 	bl	800a3ae <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 800a1d4:	4a06      	ldr	r2, [pc, #24]	; (800a1f0 <HAL_InitTick+0x5c>)
 800a1d6:	687b      	ldr	r3, [r7, #4]
 800a1d8:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800a1da:	2300      	movs	r3, #0
 800a1dc:	e000      	b.n	800a1e0 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 800a1de:	2301      	movs	r3, #1
}
 800a1e0:	4618      	mov	r0, r3
 800a1e2:	3708      	adds	r7, #8
 800a1e4:	46bd      	mov	sp, r7
 800a1e6:	bd80      	pop	{r7, pc}
 800a1e8:	20000000 	.word	0x20000000
 800a1ec:	20000008 	.word	0x20000008
 800a1f0:	20000004 	.word	0x20000004

0800a1f4 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 800a1f4:	b480      	push	{r7}
 800a1f6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 800a1f8:	4b06      	ldr	r3, [pc, #24]	; (800a214 <HAL_IncTick+0x20>)
 800a1fa:	781b      	ldrb	r3, [r3, #0]
 800a1fc:	461a      	mov	r2, r3
 800a1fe:	4b06      	ldr	r3, [pc, #24]	; (800a218 <HAL_IncTick+0x24>)
 800a200:	681b      	ldr	r3, [r3, #0]
 800a202:	4413      	add	r3, r2
 800a204:	4a04      	ldr	r2, [pc, #16]	; (800a218 <HAL_IncTick+0x24>)
 800a206:	6013      	str	r3, [r2, #0]
}
 800a208:	bf00      	nop
 800a20a:	46bd      	mov	sp, r7
 800a20c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a210:	4770      	bx	lr
 800a212:	bf00      	nop
 800a214:	20000008 	.word	0x20000008
 800a218:	20000a78 	.word	0x20000a78

0800a21c <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 800a21c:	b480      	push	{r7}
 800a21e:	af00      	add	r7, sp, #0
  return uwTick;
 800a220:	4b03      	ldr	r3, [pc, #12]	; (800a230 <HAL_GetTick+0x14>)
 800a222:	681b      	ldr	r3, [r3, #0]
}
 800a224:	4618      	mov	r0, r3
 800a226:	46bd      	mov	sp, r7
 800a228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a22c:	4770      	bx	lr
 800a22e:	bf00      	nop
 800a230:	20000a78 	.word	0x20000a78

0800a234 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800a234:	b480      	push	{r7}
 800a236:	b085      	sub	sp, #20
 800a238:	af00      	add	r7, sp, #0
 800a23a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 800a23c:	687b      	ldr	r3, [r7, #4]
 800a23e:	f003 0307 	and.w	r3, r3, #7
 800a242:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800a244:	4b0c      	ldr	r3, [pc, #48]	; (800a278 <__NVIC_SetPriorityGrouping+0x44>)
 800a246:	68db      	ldr	r3, [r3, #12]
 800a248:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800a24a:	68ba      	ldr	r2, [r7, #8]
 800a24c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800a250:	4013      	ands	r3, r2
 800a252:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800a254:	68fb      	ldr	r3, [r7, #12]
 800a256:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 800a258:	68bb      	ldr	r3, [r7, #8]
 800a25a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800a25c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800a260:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800a264:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800a266:	4a04      	ldr	r2, [pc, #16]	; (800a278 <__NVIC_SetPriorityGrouping+0x44>)
 800a268:	68bb      	ldr	r3, [r7, #8]
 800a26a:	60d3      	str	r3, [r2, #12]
}
 800a26c:	bf00      	nop
 800a26e:	3714      	adds	r7, #20
 800a270:	46bd      	mov	sp, r7
 800a272:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a276:	4770      	bx	lr
 800a278:	e000ed00 	.word	0xe000ed00

0800a27c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 800a27c:	b480      	push	{r7}
 800a27e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800a280:	4b04      	ldr	r3, [pc, #16]	; (800a294 <__NVIC_GetPriorityGrouping+0x18>)
 800a282:	68db      	ldr	r3, [r3, #12]
 800a284:	0a1b      	lsrs	r3, r3, #8
 800a286:	f003 0307 	and.w	r3, r3, #7
}
 800a28a:	4618      	mov	r0, r3
 800a28c:	46bd      	mov	sp, r7
 800a28e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a292:	4770      	bx	lr
 800a294:	e000ed00 	.word	0xe000ed00

0800a298 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800a298:	b480      	push	{r7}
 800a29a:	b083      	sub	sp, #12
 800a29c:	af00      	add	r7, sp, #0
 800a29e:	4603      	mov	r3, r0
 800a2a0:	6039      	str	r1, [r7, #0]
 800a2a2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800a2a4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a2a8:	2b00      	cmp	r3, #0
 800a2aa:	db0a      	blt.n	800a2c2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a2ac:	683b      	ldr	r3, [r7, #0]
 800a2ae:	b2da      	uxtb	r2, r3
 800a2b0:	490c      	ldr	r1, [pc, #48]	; (800a2e4 <__NVIC_SetPriority+0x4c>)
 800a2b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800a2b6:	0112      	lsls	r2, r2, #4
 800a2b8:	b2d2      	uxtb	r2, r2
 800a2ba:	440b      	add	r3, r1
 800a2bc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800a2c0:	e00a      	b.n	800a2d8 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800a2c2:	683b      	ldr	r3, [r7, #0]
 800a2c4:	b2da      	uxtb	r2, r3
 800a2c6:	4908      	ldr	r1, [pc, #32]	; (800a2e8 <__NVIC_SetPriority+0x50>)
 800a2c8:	79fb      	ldrb	r3, [r7, #7]
 800a2ca:	f003 030f 	and.w	r3, r3, #15
 800a2ce:	3b04      	subs	r3, #4
 800a2d0:	0112      	lsls	r2, r2, #4
 800a2d2:	b2d2      	uxtb	r2, r2
 800a2d4:	440b      	add	r3, r1
 800a2d6:	761a      	strb	r2, [r3, #24]
}
 800a2d8:	bf00      	nop
 800a2da:	370c      	adds	r7, #12
 800a2dc:	46bd      	mov	sp, r7
 800a2de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2e2:	4770      	bx	lr
 800a2e4:	e000e100 	.word	0xe000e100
 800a2e8:	e000ed00 	.word	0xe000ed00

0800a2ec <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 800a2ec:	b480      	push	{r7}
 800a2ee:	b089      	sub	sp, #36	; 0x24
 800a2f0:	af00      	add	r7, sp, #0
 800a2f2:	60f8      	str	r0, [r7, #12]
 800a2f4:	60b9      	str	r1, [r7, #8]
 800a2f6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 800a2f8:	68fb      	ldr	r3, [r7, #12]
 800a2fa:	f003 0307 	and.w	r3, r3, #7
 800a2fe:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800a300:	69fb      	ldr	r3, [r7, #28]
 800a302:	f1c3 0307 	rsb	r3, r3, #7
 800a306:	2b04      	cmp	r3, #4
 800a308:	bf28      	it	cs
 800a30a:	2304      	movcs	r3, #4
 800a30c:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800a30e:	69fb      	ldr	r3, [r7, #28]
 800a310:	3304      	adds	r3, #4
 800a312:	2b06      	cmp	r3, #6
 800a314:	d902      	bls.n	800a31c <NVIC_EncodePriority+0x30>
 800a316:	69fb      	ldr	r3, [r7, #28]
 800a318:	3b03      	subs	r3, #3
 800a31a:	e000      	b.n	800a31e <NVIC_EncodePriority+0x32>
 800a31c:	2300      	movs	r3, #0
 800a31e:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a320:	f04f 32ff 	mov.w	r2, #4294967295
 800a324:	69bb      	ldr	r3, [r7, #24]
 800a326:	fa02 f303 	lsl.w	r3, r2, r3
 800a32a:	43da      	mvns	r2, r3
 800a32c:	68bb      	ldr	r3, [r7, #8]
 800a32e:	401a      	ands	r2, r3
 800a330:	697b      	ldr	r3, [r7, #20]
 800a332:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800a334:	f04f 31ff 	mov.w	r1, #4294967295
 800a338:	697b      	ldr	r3, [r7, #20]
 800a33a:	fa01 f303 	lsl.w	r3, r1, r3
 800a33e:	43d9      	mvns	r1, r3
 800a340:	687b      	ldr	r3, [r7, #4]
 800a342:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800a344:	4313      	orrs	r3, r2
         );
}
 800a346:	4618      	mov	r0, r3
 800a348:	3724      	adds	r7, #36	; 0x24
 800a34a:	46bd      	mov	sp, r7
 800a34c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a350:	4770      	bx	lr
	...

0800a354 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800a354:	b580      	push	{r7, lr}
 800a356:	b082      	sub	sp, #8
 800a358:	af00      	add	r7, sp, #0
 800a35a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800a35c:	687b      	ldr	r3, [r7, #4]
 800a35e:	3b01      	subs	r3, #1
 800a360:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800a364:	d301      	bcc.n	800a36a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800a366:	2301      	movs	r3, #1
 800a368:	e00f      	b.n	800a38a <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800a36a:	4a0a      	ldr	r2, [pc, #40]	; (800a394 <SysTick_Config+0x40>)
 800a36c:	687b      	ldr	r3, [r7, #4]
 800a36e:	3b01      	subs	r3, #1
 800a370:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800a372:	210f      	movs	r1, #15
 800a374:	f04f 30ff 	mov.w	r0, #4294967295
 800a378:	f7ff ff8e 	bl	800a298 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800a37c:	4b05      	ldr	r3, [pc, #20]	; (800a394 <SysTick_Config+0x40>)
 800a37e:	2200      	movs	r2, #0
 800a380:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800a382:	4b04      	ldr	r3, [pc, #16]	; (800a394 <SysTick_Config+0x40>)
 800a384:	2207      	movs	r2, #7
 800a386:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800a388:	2300      	movs	r3, #0
}
 800a38a:	4618      	mov	r0, r3
 800a38c:	3708      	adds	r7, #8
 800a38e:	46bd      	mov	sp, r7
 800a390:	bd80      	pop	{r7, pc}
 800a392:	bf00      	nop
 800a394:	e000e010 	.word	0xe000e010

0800a398 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800a398:	b580      	push	{r7, lr}
 800a39a:	b082      	sub	sp, #8
 800a39c:	af00      	add	r7, sp, #0
 800a39e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800a3a0:	6878      	ldr	r0, [r7, #4]
 800a3a2:	f7ff ff47 	bl	800a234 <__NVIC_SetPriorityGrouping>
}
 800a3a6:	bf00      	nop
 800a3a8:	3708      	adds	r7, #8
 800a3aa:	46bd      	mov	sp, r7
 800a3ac:	bd80      	pop	{r7, pc}

0800a3ae <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800a3ae:	b580      	push	{r7, lr}
 800a3b0:	b086      	sub	sp, #24
 800a3b2:	af00      	add	r7, sp, #0
 800a3b4:	4603      	mov	r3, r0
 800a3b6:	60b9      	str	r1, [r7, #8]
 800a3b8:	607a      	str	r2, [r7, #4]
 800a3ba:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 800a3bc:	2300      	movs	r3, #0
 800a3be:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 800a3c0:	f7ff ff5c 	bl	800a27c <__NVIC_GetPriorityGrouping>
 800a3c4:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 800a3c6:	687a      	ldr	r2, [r7, #4]
 800a3c8:	68b9      	ldr	r1, [r7, #8]
 800a3ca:	6978      	ldr	r0, [r7, #20]
 800a3cc:	f7ff ff8e 	bl	800a2ec <NVIC_EncodePriority>
 800a3d0:	4602      	mov	r2, r0
 800a3d2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800a3d6:	4611      	mov	r1, r2
 800a3d8:	4618      	mov	r0, r3
 800a3da:	f7ff ff5d 	bl	800a298 <__NVIC_SetPriority>
}
 800a3de:	bf00      	nop
 800a3e0:	3718      	adds	r7, #24
 800a3e2:	46bd      	mov	sp, r7
 800a3e4:	bd80      	pop	{r7, pc}

0800a3e6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800a3e6:	b580      	push	{r7, lr}
 800a3e8:	b082      	sub	sp, #8
 800a3ea:	af00      	add	r7, sp, #0
 800a3ec:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 800a3ee:	6878      	ldr	r0, [r7, #4]
 800a3f0:	f7ff ffb0 	bl	800a354 <SysTick_Config>
 800a3f4:	4603      	mov	r3, r0
}
 800a3f6:	4618      	mov	r0, r3
 800a3f8:	3708      	adds	r7, #8
 800a3fa:	46bd      	mov	sp, r7
 800a3fc:	bd80      	pop	{r7, pc}
	...

0800a400 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800a400:	b480      	push	{r7}
 800a402:	b089      	sub	sp, #36	; 0x24
 800a404:	af00      	add	r7, sp, #0
 800a406:	6078      	str	r0, [r7, #4]
 800a408:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 800a40a:	2300      	movs	r3, #0
 800a40c:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 800a40e:	2300      	movs	r3, #0
 800a410:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 800a412:	2300      	movs	r3, #0
 800a414:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a416:	2300      	movs	r3, #0
 800a418:	61fb      	str	r3, [r7, #28]
 800a41a:	e159      	b.n	800a6d0 <HAL_GPIO_Init+0x2d0>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 800a41c:	2201      	movs	r2, #1
 800a41e:	69fb      	ldr	r3, [r7, #28]
 800a420:	fa02 f303 	lsl.w	r3, r2, r3
 800a424:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a426:	683b      	ldr	r3, [r7, #0]
 800a428:	681b      	ldr	r3, [r3, #0]
 800a42a:	697a      	ldr	r2, [r7, #20]
 800a42c:	4013      	ands	r3, r2
 800a42e:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 800a430:	693a      	ldr	r2, [r7, #16]
 800a432:	697b      	ldr	r3, [r7, #20]
 800a434:	429a      	cmp	r2, r3
 800a436:	f040 8148 	bne.w	800a6ca <HAL_GPIO_Init+0x2ca>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800a43a:	683b      	ldr	r3, [r7, #0]
 800a43c:	685b      	ldr	r3, [r3, #4]
 800a43e:	2b01      	cmp	r3, #1
 800a440:	d00b      	beq.n	800a45a <HAL_GPIO_Init+0x5a>
 800a442:	683b      	ldr	r3, [r7, #0]
 800a444:	685b      	ldr	r3, [r3, #4]
 800a446:	2b02      	cmp	r3, #2
 800a448:	d007      	beq.n	800a45a <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800a44a:	683b      	ldr	r3, [r7, #0]
 800a44c:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800a44e:	2b11      	cmp	r3, #17
 800a450:	d003      	beq.n	800a45a <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800a452:	683b      	ldr	r3, [r7, #0]
 800a454:	685b      	ldr	r3, [r3, #4]
 800a456:	2b12      	cmp	r3, #18
 800a458:	d130      	bne.n	800a4bc <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 800a45a:	687b      	ldr	r3, [r7, #4]
 800a45c:	689b      	ldr	r3, [r3, #8]
 800a45e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a460:	69fb      	ldr	r3, [r7, #28]
 800a462:	005b      	lsls	r3, r3, #1
 800a464:	2203      	movs	r2, #3
 800a466:	fa02 f303 	lsl.w	r3, r2, r3
 800a46a:	43db      	mvns	r3, r3
 800a46c:	69ba      	ldr	r2, [r7, #24]
 800a46e:	4013      	ands	r3, r2
 800a470:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a472:	683b      	ldr	r3, [r7, #0]
 800a474:	68da      	ldr	r2, [r3, #12]
 800a476:	69fb      	ldr	r3, [r7, #28]
 800a478:	005b      	lsls	r3, r3, #1
 800a47a:	fa02 f303 	lsl.w	r3, r2, r3
 800a47e:	69ba      	ldr	r2, [r7, #24]
 800a480:	4313      	orrs	r3, r2
 800a482:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 800a484:	687b      	ldr	r3, [r7, #4]
 800a486:	69ba      	ldr	r2, [r7, #24]
 800a488:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 800a48a:	687b      	ldr	r3, [r7, #4]
 800a48c:	685b      	ldr	r3, [r3, #4]
 800a48e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a490:	2201      	movs	r2, #1
 800a492:	69fb      	ldr	r3, [r7, #28]
 800a494:	fa02 f303 	lsl.w	r3, r2, r3
 800a498:	43db      	mvns	r3, r3
 800a49a:	69ba      	ldr	r2, [r7, #24]
 800a49c:	4013      	ands	r3, r2
 800a49e:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800a4a0:	683b      	ldr	r3, [r7, #0]
 800a4a2:	685b      	ldr	r3, [r3, #4]
 800a4a4:	091b      	lsrs	r3, r3, #4
 800a4a6:	f003 0201 	and.w	r2, r3, #1
 800a4aa:	69fb      	ldr	r3, [r7, #28]
 800a4ac:	fa02 f303 	lsl.w	r3, r2, r3
 800a4b0:	69ba      	ldr	r2, [r7, #24]
 800a4b2:	4313      	orrs	r3, r2
 800a4b4:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 800a4b6:	687b      	ldr	r3, [r7, #4]
 800a4b8:	69ba      	ldr	r2, [r7, #24]
 800a4ba:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 800a4bc:	687b      	ldr	r3, [r7, #4]
 800a4be:	68db      	ldr	r3, [r3, #12]
 800a4c0:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a4c2:	69fb      	ldr	r3, [r7, #28]
 800a4c4:	005b      	lsls	r3, r3, #1
 800a4c6:	2203      	movs	r2, #3
 800a4c8:	fa02 f303 	lsl.w	r3, r2, r3
 800a4cc:	43db      	mvns	r3, r3
 800a4ce:	69ba      	ldr	r2, [r7, #24]
 800a4d0:	4013      	ands	r3, r2
 800a4d2:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a4d4:	683b      	ldr	r3, [r7, #0]
 800a4d6:	689a      	ldr	r2, [r3, #8]
 800a4d8:	69fb      	ldr	r3, [r7, #28]
 800a4da:	005b      	lsls	r3, r3, #1
 800a4dc:	fa02 f303 	lsl.w	r3, r2, r3
 800a4e0:	69ba      	ldr	r2, [r7, #24]
 800a4e2:	4313      	orrs	r3, r2
 800a4e4:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 800a4e6:	687b      	ldr	r3, [r7, #4]
 800a4e8:	69ba      	ldr	r2, [r7, #24]
 800a4ea:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800a4ec:	683b      	ldr	r3, [r7, #0]
 800a4ee:	685b      	ldr	r3, [r3, #4]
 800a4f0:	2b02      	cmp	r3, #2
 800a4f2:	d003      	beq.n	800a4fc <HAL_GPIO_Init+0xfc>
 800a4f4:	683b      	ldr	r3, [r7, #0]
 800a4f6:	685b      	ldr	r3, [r3, #4]
 800a4f8:	2b12      	cmp	r3, #18
 800a4fa:	d123      	bne.n	800a544 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 800a4fc:	69fb      	ldr	r3, [r7, #28]
 800a4fe:	08da      	lsrs	r2, r3, #3
 800a500:	687b      	ldr	r3, [r7, #4]
 800a502:	3208      	adds	r2, #8
 800a504:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800a508:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a50a:	69fb      	ldr	r3, [r7, #28]
 800a50c:	f003 0307 	and.w	r3, r3, #7
 800a510:	009b      	lsls	r3, r3, #2
 800a512:	220f      	movs	r2, #15
 800a514:	fa02 f303 	lsl.w	r3, r2, r3
 800a518:	43db      	mvns	r3, r3
 800a51a:	69ba      	ldr	r2, [r7, #24]
 800a51c:	4013      	ands	r3, r2
 800a51e:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a520:	683b      	ldr	r3, [r7, #0]
 800a522:	691a      	ldr	r2, [r3, #16]
 800a524:	69fb      	ldr	r3, [r7, #28]
 800a526:	f003 0307 	and.w	r3, r3, #7
 800a52a:	009b      	lsls	r3, r3, #2
 800a52c:	fa02 f303 	lsl.w	r3, r2, r3
 800a530:	69ba      	ldr	r2, [r7, #24]
 800a532:	4313      	orrs	r3, r2
 800a534:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 800a536:	69fb      	ldr	r3, [r7, #28]
 800a538:	08da      	lsrs	r2, r3, #3
 800a53a:	687b      	ldr	r3, [r7, #4]
 800a53c:	3208      	adds	r2, #8
 800a53e:	69b9      	ldr	r1, [r7, #24]
 800a540:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 800a544:	687b      	ldr	r3, [r7, #4]
 800a546:	681b      	ldr	r3, [r3, #0]
 800a548:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800a54a:	69fb      	ldr	r3, [r7, #28]
 800a54c:	005b      	lsls	r3, r3, #1
 800a54e:	2203      	movs	r2, #3
 800a550:	fa02 f303 	lsl.w	r3, r2, r3
 800a554:	43db      	mvns	r3, r3
 800a556:	69ba      	ldr	r2, [r7, #24]
 800a558:	4013      	ands	r3, r2
 800a55a:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800a55c:	683b      	ldr	r3, [r7, #0]
 800a55e:	685b      	ldr	r3, [r3, #4]
 800a560:	f003 0203 	and.w	r2, r3, #3
 800a564:	69fb      	ldr	r3, [r7, #28]
 800a566:	005b      	lsls	r3, r3, #1
 800a568:	fa02 f303 	lsl.w	r3, r2, r3
 800a56c:	69ba      	ldr	r2, [r7, #24]
 800a56e:	4313      	orrs	r3, r2
 800a570:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 800a572:	687b      	ldr	r3, [r7, #4]
 800a574:	69ba      	ldr	r2, [r7, #24]
 800a576:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800a578:	683b      	ldr	r3, [r7, #0]
 800a57a:	685b      	ldr	r3, [r3, #4]
 800a57c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a580:	2b00      	cmp	r3, #0
 800a582:	f000 80a2 	beq.w	800a6ca <HAL_GPIO_Init+0x2ca>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a586:	2300      	movs	r3, #0
 800a588:	60fb      	str	r3, [r7, #12]
 800a58a:	4b56      	ldr	r3, [pc, #344]	; (800a6e4 <HAL_GPIO_Init+0x2e4>)
 800a58c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a58e:	4a55      	ldr	r2, [pc, #340]	; (800a6e4 <HAL_GPIO_Init+0x2e4>)
 800a590:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800a594:	6453      	str	r3, [r2, #68]	; 0x44
 800a596:	4b53      	ldr	r3, [pc, #332]	; (800a6e4 <HAL_GPIO_Init+0x2e4>)
 800a598:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a59a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800a59e:	60fb      	str	r3, [r7, #12]
 800a5a0:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 800a5a2:	4a51      	ldr	r2, [pc, #324]	; (800a6e8 <HAL_GPIO_Init+0x2e8>)
 800a5a4:	69fb      	ldr	r3, [r7, #28]
 800a5a6:	089b      	lsrs	r3, r3, #2
 800a5a8:	3302      	adds	r3, #2
 800a5aa:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a5ae:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a5b0:	69fb      	ldr	r3, [r7, #28]
 800a5b2:	f003 0303 	and.w	r3, r3, #3
 800a5b6:	009b      	lsls	r3, r3, #2
 800a5b8:	220f      	movs	r2, #15
 800a5ba:	fa02 f303 	lsl.w	r3, r2, r3
 800a5be:	43db      	mvns	r3, r3
 800a5c0:	69ba      	ldr	r2, [r7, #24]
 800a5c2:	4013      	ands	r3, r2
 800a5c4:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a5c6:	687b      	ldr	r3, [r7, #4]
 800a5c8:	4a48      	ldr	r2, [pc, #288]	; (800a6ec <HAL_GPIO_Init+0x2ec>)
 800a5ca:	4293      	cmp	r3, r2
 800a5cc:	d019      	beq.n	800a602 <HAL_GPIO_Init+0x202>
 800a5ce:	687b      	ldr	r3, [r7, #4]
 800a5d0:	4a47      	ldr	r2, [pc, #284]	; (800a6f0 <HAL_GPIO_Init+0x2f0>)
 800a5d2:	4293      	cmp	r3, r2
 800a5d4:	d013      	beq.n	800a5fe <HAL_GPIO_Init+0x1fe>
 800a5d6:	687b      	ldr	r3, [r7, #4]
 800a5d8:	4a46      	ldr	r2, [pc, #280]	; (800a6f4 <HAL_GPIO_Init+0x2f4>)
 800a5da:	4293      	cmp	r3, r2
 800a5dc:	d00d      	beq.n	800a5fa <HAL_GPIO_Init+0x1fa>
 800a5de:	687b      	ldr	r3, [r7, #4]
 800a5e0:	4a45      	ldr	r2, [pc, #276]	; (800a6f8 <HAL_GPIO_Init+0x2f8>)
 800a5e2:	4293      	cmp	r3, r2
 800a5e4:	d007      	beq.n	800a5f6 <HAL_GPIO_Init+0x1f6>
 800a5e6:	687b      	ldr	r3, [r7, #4]
 800a5e8:	4a44      	ldr	r2, [pc, #272]	; (800a6fc <HAL_GPIO_Init+0x2fc>)
 800a5ea:	4293      	cmp	r3, r2
 800a5ec:	d101      	bne.n	800a5f2 <HAL_GPIO_Init+0x1f2>
 800a5ee:	2304      	movs	r3, #4
 800a5f0:	e008      	b.n	800a604 <HAL_GPIO_Init+0x204>
 800a5f2:	2307      	movs	r3, #7
 800a5f4:	e006      	b.n	800a604 <HAL_GPIO_Init+0x204>
 800a5f6:	2303      	movs	r3, #3
 800a5f8:	e004      	b.n	800a604 <HAL_GPIO_Init+0x204>
 800a5fa:	2302      	movs	r3, #2
 800a5fc:	e002      	b.n	800a604 <HAL_GPIO_Init+0x204>
 800a5fe:	2301      	movs	r3, #1
 800a600:	e000      	b.n	800a604 <HAL_GPIO_Init+0x204>
 800a602:	2300      	movs	r3, #0
 800a604:	69fa      	ldr	r2, [r7, #28]
 800a606:	f002 0203 	and.w	r2, r2, #3
 800a60a:	0092      	lsls	r2, r2, #2
 800a60c:	4093      	lsls	r3, r2
 800a60e:	69ba      	ldr	r2, [r7, #24]
 800a610:	4313      	orrs	r3, r2
 800a612:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 800a614:	4934      	ldr	r1, [pc, #208]	; (800a6e8 <HAL_GPIO_Init+0x2e8>)
 800a616:	69fb      	ldr	r3, [r7, #28]
 800a618:	089b      	lsrs	r3, r3, #2
 800a61a:	3302      	adds	r3, #2
 800a61c:	69ba      	ldr	r2, [r7, #24]
 800a61e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800a622:	4b37      	ldr	r3, [pc, #220]	; (800a700 <HAL_GPIO_Init+0x300>)
 800a624:	681b      	ldr	r3, [r3, #0]
 800a626:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800a628:	693b      	ldr	r3, [r7, #16]
 800a62a:	43db      	mvns	r3, r3
 800a62c:	69ba      	ldr	r2, [r7, #24]
 800a62e:	4013      	ands	r3, r2
 800a630:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800a632:	683b      	ldr	r3, [r7, #0]
 800a634:	685b      	ldr	r3, [r3, #4]
 800a636:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800a63a:	2b00      	cmp	r3, #0
 800a63c:	d003      	beq.n	800a646 <HAL_GPIO_Init+0x246>
        {
          temp |= iocurrent;
 800a63e:	69ba      	ldr	r2, [r7, #24]
 800a640:	693b      	ldr	r3, [r7, #16]
 800a642:	4313      	orrs	r3, r2
 800a644:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 800a646:	4a2e      	ldr	r2, [pc, #184]	; (800a700 <HAL_GPIO_Init+0x300>)
 800a648:	69bb      	ldr	r3, [r7, #24]
 800a64a:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 800a64c:	4b2c      	ldr	r3, [pc, #176]	; (800a700 <HAL_GPIO_Init+0x300>)
 800a64e:	685b      	ldr	r3, [r3, #4]
 800a650:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800a652:	693b      	ldr	r3, [r7, #16]
 800a654:	43db      	mvns	r3, r3
 800a656:	69ba      	ldr	r2, [r7, #24]
 800a658:	4013      	ands	r3, r2
 800a65a:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800a65c:	683b      	ldr	r3, [r7, #0]
 800a65e:	685b      	ldr	r3, [r3, #4]
 800a660:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800a664:	2b00      	cmp	r3, #0
 800a666:	d003      	beq.n	800a670 <HAL_GPIO_Init+0x270>
        {
          temp |= iocurrent;
 800a668:	69ba      	ldr	r2, [r7, #24]
 800a66a:	693b      	ldr	r3, [r7, #16]
 800a66c:	4313      	orrs	r3, r2
 800a66e:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 800a670:	4a23      	ldr	r2, [pc, #140]	; (800a700 <HAL_GPIO_Init+0x300>)
 800a672:	69bb      	ldr	r3, [r7, #24]
 800a674:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800a676:	4b22      	ldr	r3, [pc, #136]	; (800a700 <HAL_GPIO_Init+0x300>)
 800a678:	689b      	ldr	r3, [r3, #8]
 800a67a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800a67c:	693b      	ldr	r3, [r7, #16]
 800a67e:	43db      	mvns	r3, r3
 800a680:	69ba      	ldr	r2, [r7, #24]
 800a682:	4013      	ands	r3, r2
 800a684:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800a686:	683b      	ldr	r3, [r7, #0]
 800a688:	685b      	ldr	r3, [r3, #4]
 800a68a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800a68e:	2b00      	cmp	r3, #0
 800a690:	d003      	beq.n	800a69a <HAL_GPIO_Init+0x29a>
        {
          temp |= iocurrent;
 800a692:	69ba      	ldr	r2, [r7, #24]
 800a694:	693b      	ldr	r3, [r7, #16]
 800a696:	4313      	orrs	r3, r2
 800a698:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 800a69a:	4a19      	ldr	r2, [pc, #100]	; (800a700 <HAL_GPIO_Init+0x300>)
 800a69c:	69bb      	ldr	r3, [r7, #24]
 800a69e:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 800a6a0:	4b17      	ldr	r3, [pc, #92]	; (800a700 <HAL_GPIO_Init+0x300>)
 800a6a2:	68db      	ldr	r3, [r3, #12]
 800a6a4:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800a6a6:	693b      	ldr	r3, [r7, #16]
 800a6a8:	43db      	mvns	r3, r3
 800a6aa:	69ba      	ldr	r2, [r7, #24]
 800a6ac:	4013      	ands	r3, r2
 800a6ae:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800a6b0:	683b      	ldr	r3, [r7, #0]
 800a6b2:	685b      	ldr	r3, [r3, #4]
 800a6b4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800a6b8:	2b00      	cmp	r3, #0
 800a6ba:	d003      	beq.n	800a6c4 <HAL_GPIO_Init+0x2c4>
        {
          temp |= iocurrent;
 800a6bc:	69ba      	ldr	r2, [r7, #24]
 800a6be:	693b      	ldr	r3, [r7, #16]
 800a6c0:	4313      	orrs	r3, r2
 800a6c2:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 800a6c4:	4a0e      	ldr	r2, [pc, #56]	; (800a700 <HAL_GPIO_Init+0x300>)
 800a6c6:	69bb      	ldr	r3, [r7, #24]
 800a6c8:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a6ca:	69fb      	ldr	r3, [r7, #28]
 800a6cc:	3301      	adds	r3, #1
 800a6ce:	61fb      	str	r3, [r7, #28]
 800a6d0:	69fb      	ldr	r3, [r7, #28]
 800a6d2:	2b0f      	cmp	r3, #15
 800a6d4:	f67f aea2 	bls.w	800a41c <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 800a6d8:	bf00      	nop
 800a6da:	3724      	adds	r7, #36	; 0x24
 800a6dc:	46bd      	mov	sp, r7
 800a6de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6e2:	4770      	bx	lr
 800a6e4:	40023800 	.word	0x40023800
 800a6e8:	40013800 	.word	0x40013800
 800a6ec:	40020000 	.word	0x40020000
 800a6f0:	40020400 	.word	0x40020400
 800a6f4:	40020800 	.word	0x40020800
 800a6f8:	40020c00 	.word	0x40020c00
 800a6fc:	40021000 	.word	0x40021000
 800a700:	40013c00 	.word	0x40013c00

0800a704 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 800a704:	b480      	push	{r7}
 800a706:	b083      	sub	sp, #12
 800a708:	af00      	add	r7, sp, #0
 800a70a:	6078      	str	r0, [r7, #4]
 800a70c:	460b      	mov	r3, r1
 800a70e:	807b      	strh	r3, [r7, #2]
 800a710:	4613      	mov	r3, r2
 800a712:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a714:	787b      	ldrb	r3, [r7, #1]
 800a716:	2b00      	cmp	r3, #0
 800a718:	d003      	beq.n	800a722 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 800a71a:	887a      	ldrh	r2, [r7, #2]
 800a71c:	687b      	ldr	r3, [r7, #4]
 800a71e:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 800a720:	e003      	b.n	800a72a <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a722:	887b      	ldrh	r3, [r7, #2]
 800a724:	041a      	lsls	r2, r3, #16
 800a726:	687b      	ldr	r3, [r7, #4]
 800a728:	619a      	str	r2, [r3, #24]
}
 800a72a:	bf00      	nop
 800a72c:	370c      	adds	r7, #12
 800a72e:	46bd      	mov	sp, r7
 800a730:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a734:	4770      	bx	lr

0800a736 <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 800a736:	b480      	push	{r7}
 800a738:	b083      	sub	sp, #12
 800a73a:	af00      	add	r7, sp, #0
 800a73c:	6078      	str	r0, [r7, #4]
 800a73e:	460b      	mov	r3, r1
 800a740:	807b      	strh	r3, [r7, #2]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->ODR & GPIO_Pin) == GPIO_Pin)
 800a742:	687b      	ldr	r3, [r7, #4]
 800a744:	695a      	ldr	r2, [r3, #20]
 800a746:	887b      	ldrh	r3, [r7, #2]
 800a748:	401a      	ands	r2, r3
 800a74a:	887b      	ldrh	r3, [r7, #2]
 800a74c:	429a      	cmp	r2, r3
 800a74e:	d104      	bne.n	800a75a <HAL_GPIO_TogglePin+0x24>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 800a750:	887b      	ldrh	r3, [r7, #2]
 800a752:	041a      	lsls	r2, r3, #16
 800a754:	687b      	ldr	r3, [r7, #4]
 800a756:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = GPIO_Pin;
  }
}
 800a758:	e002      	b.n	800a760 <HAL_GPIO_TogglePin+0x2a>
    GPIOx->BSRR = GPIO_Pin;
 800a75a:	887a      	ldrh	r2, [r7, #2]
 800a75c:	687b      	ldr	r3, [r7, #4]
 800a75e:	619a      	str	r2, [r3, #24]
}
 800a760:	bf00      	nop
 800a762:	370c      	adds	r7, #12
 800a764:	46bd      	mov	sp, r7
 800a766:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a76a:	4770      	bx	lr

0800a76c <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 800a76c:	b580      	push	{r7, lr}
 800a76e:	b084      	sub	sp, #16
 800a770:	af00      	add	r7, sp, #0
 800a772:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 800a774:	687b      	ldr	r3, [r7, #4]
 800a776:	2b00      	cmp	r3, #0
 800a778:	d101      	bne.n	800a77e <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 800a77a:	2301      	movs	r3, #1
 800a77c:	e11f      	b.n	800a9be <HAL_I2C_Init+0x252>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a77e:	687b      	ldr	r3, [r7, #4]
 800a780:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a784:	b2db      	uxtb	r3, r3
 800a786:	2b00      	cmp	r3, #0
 800a788:	d106      	bne.n	800a798 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 800a78a:	687b      	ldr	r3, [r7, #4]
 800a78c:	2200      	movs	r2, #0
 800a78e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 800a792:	6878      	ldr	r0, [r7, #4]
 800a794:	f7ff fb22 	bl	8009ddc <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 800a798:	687b      	ldr	r3, [r7, #4]
 800a79a:	2224      	movs	r2, #36	; 0x24
 800a79c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 800a7a0:	687b      	ldr	r3, [r7, #4]
 800a7a2:	681b      	ldr	r3, [r3, #0]
 800a7a4:	681a      	ldr	r2, [r3, #0]
 800a7a6:	687b      	ldr	r3, [r7, #4]
 800a7a8:	681b      	ldr	r3, [r3, #0]
 800a7aa:	f022 0201 	bic.w	r2, r2, #1
 800a7ae:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a7b0:	687b      	ldr	r3, [r7, #4]
 800a7b2:	681b      	ldr	r3, [r3, #0]
 800a7b4:	681a      	ldr	r2, [r3, #0]
 800a7b6:	687b      	ldr	r3, [r7, #4]
 800a7b8:	681b      	ldr	r3, [r3, #0]
 800a7ba:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a7be:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a7c0:	687b      	ldr	r3, [r7, #4]
 800a7c2:	681b      	ldr	r3, [r3, #0]
 800a7c4:	681a      	ldr	r2, [r3, #0]
 800a7c6:	687b      	ldr	r3, [r7, #4]
 800a7c8:	681b      	ldr	r3, [r3, #0]
 800a7ca:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a7ce:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a7d0:	f001 f846 	bl	800b860 <HAL_RCC_GetPCLK1Freq>
 800a7d4:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a7d6:	687b      	ldr	r3, [r7, #4]
 800a7d8:	685b      	ldr	r3, [r3, #4]
 800a7da:	4a7b      	ldr	r2, [pc, #492]	; (800a9c8 <HAL_I2C_Init+0x25c>)
 800a7dc:	4293      	cmp	r3, r2
 800a7de:	d807      	bhi.n	800a7f0 <HAL_I2C_Init+0x84>
 800a7e0:	68fb      	ldr	r3, [r7, #12]
 800a7e2:	4a7a      	ldr	r2, [pc, #488]	; (800a9cc <HAL_I2C_Init+0x260>)
 800a7e4:	4293      	cmp	r3, r2
 800a7e6:	bf94      	ite	ls
 800a7e8:	2301      	movls	r3, #1
 800a7ea:	2300      	movhi	r3, #0
 800a7ec:	b2db      	uxtb	r3, r3
 800a7ee:	e006      	b.n	800a7fe <HAL_I2C_Init+0x92>
 800a7f0:	68fb      	ldr	r3, [r7, #12]
 800a7f2:	4a77      	ldr	r2, [pc, #476]	; (800a9d0 <HAL_I2C_Init+0x264>)
 800a7f4:	4293      	cmp	r3, r2
 800a7f6:	bf94      	ite	ls
 800a7f8:	2301      	movls	r3, #1
 800a7fa:	2300      	movhi	r3, #0
 800a7fc:	b2db      	uxtb	r3, r3
 800a7fe:	2b00      	cmp	r3, #0
 800a800:	d001      	beq.n	800a806 <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 800a802:	2301      	movs	r3, #1
 800a804:	e0db      	b.n	800a9be <HAL_I2C_Init+0x252>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 800a806:	68fb      	ldr	r3, [r7, #12]
 800a808:	4a72      	ldr	r2, [pc, #456]	; (800a9d4 <HAL_I2C_Init+0x268>)
 800a80a:	fba2 2303 	umull	r2, r3, r2, r3
 800a80e:	0c9b      	lsrs	r3, r3, #18
 800a810:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a812:	687b      	ldr	r3, [r7, #4]
 800a814:	681b      	ldr	r3, [r3, #0]
 800a816:	685b      	ldr	r3, [r3, #4]
 800a818:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 800a81c:	687b      	ldr	r3, [r7, #4]
 800a81e:	681b      	ldr	r3, [r3, #0]
 800a820:	68ba      	ldr	r2, [r7, #8]
 800a822:	430a      	orrs	r2, r1
 800a824:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a826:	687b      	ldr	r3, [r7, #4]
 800a828:	681b      	ldr	r3, [r3, #0]
 800a82a:	6a1b      	ldr	r3, [r3, #32]
 800a82c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 800a830:	687b      	ldr	r3, [r7, #4]
 800a832:	685b      	ldr	r3, [r3, #4]
 800a834:	4a64      	ldr	r2, [pc, #400]	; (800a9c8 <HAL_I2C_Init+0x25c>)
 800a836:	4293      	cmp	r3, r2
 800a838:	d802      	bhi.n	800a840 <HAL_I2C_Init+0xd4>
 800a83a:	68bb      	ldr	r3, [r7, #8]
 800a83c:	3301      	adds	r3, #1
 800a83e:	e009      	b.n	800a854 <HAL_I2C_Init+0xe8>
 800a840:	68bb      	ldr	r3, [r7, #8]
 800a842:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800a846:	fb02 f303 	mul.w	r3, r2, r3
 800a84a:	4a63      	ldr	r2, [pc, #396]	; (800a9d8 <HAL_I2C_Init+0x26c>)
 800a84c:	fba2 2303 	umull	r2, r3, r2, r3
 800a850:	099b      	lsrs	r3, r3, #6
 800a852:	3301      	adds	r3, #1
 800a854:	687a      	ldr	r2, [r7, #4]
 800a856:	6812      	ldr	r2, [r2, #0]
 800a858:	430b      	orrs	r3, r1
 800a85a:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a85c:	687b      	ldr	r3, [r7, #4]
 800a85e:	681b      	ldr	r3, [r3, #0]
 800a860:	69db      	ldr	r3, [r3, #28]
 800a862:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 800a866:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800a86a:	687b      	ldr	r3, [r7, #4]
 800a86c:	685b      	ldr	r3, [r3, #4]
 800a86e:	4956      	ldr	r1, [pc, #344]	; (800a9c8 <HAL_I2C_Init+0x25c>)
 800a870:	428b      	cmp	r3, r1
 800a872:	d80d      	bhi.n	800a890 <HAL_I2C_Init+0x124>
 800a874:	68fb      	ldr	r3, [r7, #12]
 800a876:	1e59      	subs	r1, r3, #1
 800a878:	687b      	ldr	r3, [r7, #4]
 800a87a:	685b      	ldr	r3, [r3, #4]
 800a87c:	005b      	lsls	r3, r3, #1
 800a87e:	fbb1 f3f3 	udiv	r3, r1, r3
 800a882:	3301      	adds	r3, #1
 800a884:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a888:	2b04      	cmp	r3, #4
 800a88a:	bf38      	it	cc
 800a88c:	2304      	movcc	r3, #4
 800a88e:	e04f      	b.n	800a930 <HAL_I2C_Init+0x1c4>
 800a890:	687b      	ldr	r3, [r7, #4]
 800a892:	689b      	ldr	r3, [r3, #8]
 800a894:	2b00      	cmp	r3, #0
 800a896:	d111      	bne.n	800a8bc <HAL_I2C_Init+0x150>
 800a898:	68fb      	ldr	r3, [r7, #12]
 800a89a:	1e58      	subs	r0, r3, #1
 800a89c:	687b      	ldr	r3, [r7, #4]
 800a89e:	6859      	ldr	r1, [r3, #4]
 800a8a0:	460b      	mov	r3, r1
 800a8a2:	005b      	lsls	r3, r3, #1
 800a8a4:	440b      	add	r3, r1
 800a8a6:	fbb0 f3f3 	udiv	r3, r0, r3
 800a8aa:	3301      	adds	r3, #1
 800a8ac:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a8b0:	2b00      	cmp	r3, #0
 800a8b2:	bf0c      	ite	eq
 800a8b4:	2301      	moveq	r3, #1
 800a8b6:	2300      	movne	r3, #0
 800a8b8:	b2db      	uxtb	r3, r3
 800a8ba:	e012      	b.n	800a8e2 <HAL_I2C_Init+0x176>
 800a8bc:	68fb      	ldr	r3, [r7, #12]
 800a8be:	1e58      	subs	r0, r3, #1
 800a8c0:	687b      	ldr	r3, [r7, #4]
 800a8c2:	6859      	ldr	r1, [r3, #4]
 800a8c4:	460b      	mov	r3, r1
 800a8c6:	009b      	lsls	r3, r3, #2
 800a8c8:	440b      	add	r3, r1
 800a8ca:	0099      	lsls	r1, r3, #2
 800a8cc:	440b      	add	r3, r1
 800a8ce:	fbb0 f3f3 	udiv	r3, r0, r3
 800a8d2:	3301      	adds	r3, #1
 800a8d4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a8d8:	2b00      	cmp	r3, #0
 800a8da:	bf0c      	ite	eq
 800a8dc:	2301      	moveq	r3, #1
 800a8de:	2300      	movne	r3, #0
 800a8e0:	b2db      	uxtb	r3, r3
 800a8e2:	2b00      	cmp	r3, #0
 800a8e4:	d001      	beq.n	800a8ea <HAL_I2C_Init+0x17e>
 800a8e6:	2301      	movs	r3, #1
 800a8e8:	e022      	b.n	800a930 <HAL_I2C_Init+0x1c4>
 800a8ea:	687b      	ldr	r3, [r7, #4]
 800a8ec:	689b      	ldr	r3, [r3, #8]
 800a8ee:	2b00      	cmp	r3, #0
 800a8f0:	d10e      	bne.n	800a910 <HAL_I2C_Init+0x1a4>
 800a8f2:	68fb      	ldr	r3, [r7, #12]
 800a8f4:	1e58      	subs	r0, r3, #1
 800a8f6:	687b      	ldr	r3, [r7, #4]
 800a8f8:	6859      	ldr	r1, [r3, #4]
 800a8fa:	460b      	mov	r3, r1
 800a8fc:	005b      	lsls	r3, r3, #1
 800a8fe:	440b      	add	r3, r1
 800a900:	fbb0 f3f3 	udiv	r3, r0, r3
 800a904:	3301      	adds	r3, #1
 800a906:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a90a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800a90e:	e00f      	b.n	800a930 <HAL_I2C_Init+0x1c4>
 800a910:	68fb      	ldr	r3, [r7, #12]
 800a912:	1e58      	subs	r0, r3, #1
 800a914:	687b      	ldr	r3, [r7, #4]
 800a916:	6859      	ldr	r1, [r3, #4]
 800a918:	460b      	mov	r3, r1
 800a91a:	009b      	lsls	r3, r3, #2
 800a91c:	440b      	add	r3, r1
 800a91e:	0099      	lsls	r1, r3, #2
 800a920:	440b      	add	r3, r1
 800a922:	fbb0 f3f3 	udiv	r3, r0, r3
 800a926:	3301      	adds	r3, #1
 800a928:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a92c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800a930:	6879      	ldr	r1, [r7, #4]
 800a932:	6809      	ldr	r1, [r1, #0]
 800a934:	4313      	orrs	r3, r2
 800a936:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a938:	687b      	ldr	r3, [r7, #4]
 800a93a:	681b      	ldr	r3, [r3, #0]
 800a93c:	681b      	ldr	r3, [r3, #0]
 800a93e:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 800a942:	687b      	ldr	r3, [r7, #4]
 800a944:	69da      	ldr	r2, [r3, #28]
 800a946:	687b      	ldr	r3, [r7, #4]
 800a948:	6a1b      	ldr	r3, [r3, #32]
 800a94a:	431a      	orrs	r2, r3
 800a94c:	687b      	ldr	r3, [r7, #4]
 800a94e:	681b      	ldr	r3, [r3, #0]
 800a950:	430a      	orrs	r2, r1
 800a952:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a954:	687b      	ldr	r3, [r7, #4]
 800a956:	681b      	ldr	r3, [r3, #0]
 800a958:	689b      	ldr	r3, [r3, #8]
 800a95a:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 800a95e:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800a962:	687a      	ldr	r2, [r7, #4]
 800a964:	6911      	ldr	r1, [r2, #16]
 800a966:	687a      	ldr	r2, [r7, #4]
 800a968:	68d2      	ldr	r2, [r2, #12]
 800a96a:	4311      	orrs	r1, r2
 800a96c:	687a      	ldr	r2, [r7, #4]
 800a96e:	6812      	ldr	r2, [r2, #0]
 800a970:	430b      	orrs	r3, r1
 800a972:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800a974:	687b      	ldr	r3, [r7, #4]
 800a976:	681b      	ldr	r3, [r3, #0]
 800a978:	68db      	ldr	r3, [r3, #12]
 800a97a:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 800a97e:	687b      	ldr	r3, [r7, #4]
 800a980:	695a      	ldr	r2, [r3, #20]
 800a982:	687b      	ldr	r3, [r7, #4]
 800a984:	699b      	ldr	r3, [r3, #24]
 800a986:	431a      	orrs	r2, r3
 800a988:	687b      	ldr	r3, [r7, #4]
 800a98a:	681b      	ldr	r3, [r3, #0]
 800a98c:	430a      	orrs	r2, r1
 800a98e:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 800a990:	687b      	ldr	r3, [r7, #4]
 800a992:	681b      	ldr	r3, [r3, #0]
 800a994:	681a      	ldr	r2, [r3, #0]
 800a996:	687b      	ldr	r3, [r7, #4]
 800a998:	681b      	ldr	r3, [r3, #0]
 800a99a:	f042 0201 	orr.w	r2, r2, #1
 800a99e:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a9a0:	687b      	ldr	r3, [r7, #4]
 800a9a2:	2200      	movs	r2, #0
 800a9a4:	641a      	str	r2, [r3, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800a9a6:	687b      	ldr	r3, [r7, #4]
 800a9a8:	2220      	movs	r2, #32
 800a9aa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800a9ae:	687b      	ldr	r3, [r7, #4]
 800a9b0:	2200      	movs	r2, #0
 800a9b2:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800a9b4:	687b      	ldr	r3, [r7, #4]
 800a9b6:	2200      	movs	r2, #0
 800a9b8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 800a9bc:	2300      	movs	r3, #0
}
 800a9be:	4618      	mov	r0, r3
 800a9c0:	3710      	adds	r7, #16
 800a9c2:	46bd      	mov	sp, r7
 800a9c4:	bd80      	pop	{r7, pc}
 800a9c6:	bf00      	nop
 800a9c8:	000186a0 	.word	0x000186a0
 800a9cc:	001e847f 	.word	0x001e847f
 800a9d0:	003d08ff 	.word	0x003d08ff
 800a9d4:	431bde83 	.word	0x431bde83
 800a9d8:	10624dd3 	.word	0x10624dd3

0800a9dc <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800a9dc:	b580      	push	{r7, lr}
 800a9de:	b088      	sub	sp, #32
 800a9e0:	af02      	add	r7, sp, #8
 800a9e2:	60f8      	str	r0, [r7, #12]
 800a9e4:	607a      	str	r2, [r7, #4]
 800a9e6:	461a      	mov	r2, r3
 800a9e8:	460b      	mov	r3, r1
 800a9ea:	817b      	strh	r3, [r7, #10]
 800a9ec:	4613      	mov	r3, r2
 800a9ee:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 800a9f0:	f7ff fc14 	bl	800a21c <HAL_GetTick>
 800a9f4:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 800a9f6:	68fb      	ldr	r3, [r7, #12]
 800a9f8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a9fc:	b2db      	uxtb	r3, r3
 800a9fe:	2b20      	cmp	r3, #32
 800aa00:	f040 80e0 	bne.w	800abc4 <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800aa04:	697b      	ldr	r3, [r7, #20]
 800aa06:	9300      	str	r3, [sp, #0]
 800aa08:	2319      	movs	r3, #25
 800aa0a:	2201      	movs	r2, #1
 800aa0c:	4970      	ldr	r1, [pc, #448]	; (800abd0 <HAL_I2C_Master_Transmit+0x1f4>)
 800aa0e:	68f8      	ldr	r0, [r7, #12]
 800aa10:	f000 f964 	bl	800acdc <I2C_WaitOnFlagUntilTimeout>
 800aa14:	4603      	mov	r3, r0
 800aa16:	2b00      	cmp	r3, #0
 800aa18:	d001      	beq.n	800aa1e <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 800aa1a:	2302      	movs	r3, #2
 800aa1c:	e0d3      	b.n	800abc6 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800aa1e:	68fb      	ldr	r3, [r7, #12]
 800aa20:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800aa24:	2b01      	cmp	r3, #1
 800aa26:	d101      	bne.n	800aa2c <HAL_I2C_Master_Transmit+0x50>
 800aa28:	2302      	movs	r3, #2
 800aa2a:	e0cc      	b.n	800abc6 <HAL_I2C_Master_Transmit+0x1ea>
 800aa2c:	68fb      	ldr	r3, [r7, #12]
 800aa2e:	2201      	movs	r2, #1
 800aa30:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800aa34:	68fb      	ldr	r3, [r7, #12]
 800aa36:	681b      	ldr	r3, [r3, #0]
 800aa38:	681b      	ldr	r3, [r3, #0]
 800aa3a:	f003 0301 	and.w	r3, r3, #1
 800aa3e:	2b01      	cmp	r3, #1
 800aa40:	d007      	beq.n	800aa52 <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800aa42:	68fb      	ldr	r3, [r7, #12]
 800aa44:	681b      	ldr	r3, [r3, #0]
 800aa46:	681a      	ldr	r2, [r3, #0]
 800aa48:	68fb      	ldr	r3, [r7, #12]
 800aa4a:	681b      	ldr	r3, [r3, #0]
 800aa4c:	f042 0201 	orr.w	r2, r2, #1
 800aa50:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800aa52:	68fb      	ldr	r3, [r7, #12]
 800aa54:	681b      	ldr	r3, [r3, #0]
 800aa56:	681a      	ldr	r2, [r3, #0]
 800aa58:	68fb      	ldr	r3, [r7, #12]
 800aa5a:	681b      	ldr	r3, [r3, #0]
 800aa5c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800aa60:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 800aa62:	68fb      	ldr	r3, [r7, #12]
 800aa64:	2221      	movs	r2, #33	; 0x21
 800aa66:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 800aa6a:	68fb      	ldr	r3, [r7, #12]
 800aa6c:	2210      	movs	r2, #16
 800aa6e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 800aa72:	68fb      	ldr	r3, [r7, #12]
 800aa74:	2200      	movs	r2, #0
 800aa76:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 800aa78:	68fb      	ldr	r3, [r7, #12]
 800aa7a:	687a      	ldr	r2, [r7, #4]
 800aa7c:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 800aa7e:	68fb      	ldr	r3, [r7, #12]
 800aa80:	893a      	ldrh	r2, [r7, #8]
 800aa82:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800aa84:	68fb      	ldr	r3, [r7, #12]
 800aa86:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800aa88:	b29a      	uxth	r2, r3
 800aa8a:	68fb      	ldr	r3, [r7, #12]
 800aa8c:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800aa8e:	68fb      	ldr	r3, [r7, #12]
 800aa90:	4a50      	ldr	r2, [pc, #320]	; (800abd4 <HAL_I2C_Master_Transmit+0x1f8>)
 800aa92:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 800aa94:	8979      	ldrh	r1, [r7, #10]
 800aa96:	697b      	ldr	r3, [r7, #20]
 800aa98:	6a3a      	ldr	r2, [r7, #32]
 800aa9a:	68f8      	ldr	r0, [r7, #12]
 800aa9c:	f000 f89c 	bl	800abd8 <I2C_MasterRequestWrite>
 800aaa0:	4603      	mov	r3, r0
 800aaa2:	2b00      	cmp	r3, #0
 800aaa4:	d001      	beq.n	800aaaa <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 800aaa6:	2301      	movs	r3, #1
 800aaa8:	e08d      	b.n	800abc6 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aaaa:	2300      	movs	r3, #0
 800aaac:	613b      	str	r3, [r7, #16]
 800aaae:	68fb      	ldr	r3, [r7, #12]
 800aab0:	681b      	ldr	r3, [r3, #0]
 800aab2:	695b      	ldr	r3, [r3, #20]
 800aab4:	613b      	str	r3, [r7, #16]
 800aab6:	68fb      	ldr	r3, [r7, #12]
 800aab8:	681b      	ldr	r3, [r3, #0]
 800aaba:	699b      	ldr	r3, [r3, #24]
 800aabc:	613b      	str	r3, [r7, #16]
 800aabe:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 800aac0:	e066      	b.n	800ab90 <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800aac2:	697a      	ldr	r2, [r7, #20]
 800aac4:	6a39      	ldr	r1, [r7, #32]
 800aac6:	68f8      	ldr	r0, [r7, #12]
 800aac8:	f000 f9de 	bl	800ae88 <I2C_WaitOnTXEFlagUntilTimeout>
 800aacc:	4603      	mov	r3, r0
 800aace:	2b00      	cmp	r3, #0
 800aad0:	d00d      	beq.n	800aaee <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800aad2:	68fb      	ldr	r3, [r7, #12]
 800aad4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800aad6:	2b04      	cmp	r3, #4
 800aad8:	d107      	bne.n	800aaea <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aada:	68fb      	ldr	r3, [r7, #12]
 800aadc:	681b      	ldr	r3, [r3, #0]
 800aade:	681a      	ldr	r2, [r3, #0]
 800aae0:	68fb      	ldr	r3, [r7, #12]
 800aae2:	681b      	ldr	r3, [r3, #0]
 800aae4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aae8:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 800aaea:	2301      	movs	r3, #1
 800aaec:	e06b      	b.n	800abc6 <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800aaee:	68fb      	ldr	r3, [r7, #12]
 800aaf0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aaf2:	781a      	ldrb	r2, [r3, #0]
 800aaf4:	68fb      	ldr	r3, [r7, #12]
 800aaf6:	681b      	ldr	r3, [r3, #0]
 800aaf8:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 800aafa:	68fb      	ldr	r3, [r7, #12]
 800aafc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aafe:	1c5a      	adds	r2, r3, #1
 800ab00:	68fb      	ldr	r3, [r7, #12]
 800ab02:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferCount--;
 800ab04:	68fb      	ldr	r3, [r7, #12]
 800ab06:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800ab08:	b29b      	uxth	r3, r3
 800ab0a:	3b01      	subs	r3, #1
 800ab0c:	b29a      	uxth	r2, r3
 800ab0e:	68fb      	ldr	r3, [r7, #12]
 800ab10:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 800ab12:	68fb      	ldr	r3, [r7, #12]
 800ab14:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800ab16:	3b01      	subs	r3, #1
 800ab18:	b29a      	uxth	r2, r3
 800ab1a:	68fb      	ldr	r3, [r7, #12]
 800ab1c:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800ab1e:	68fb      	ldr	r3, [r7, #12]
 800ab20:	681b      	ldr	r3, [r3, #0]
 800ab22:	695b      	ldr	r3, [r3, #20]
 800ab24:	f003 0304 	and.w	r3, r3, #4
 800ab28:	2b04      	cmp	r3, #4
 800ab2a:	d11b      	bne.n	800ab64 <HAL_I2C_Master_Transmit+0x188>
 800ab2c:	68fb      	ldr	r3, [r7, #12]
 800ab2e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800ab30:	2b00      	cmp	r3, #0
 800ab32:	d017      	beq.n	800ab64 <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800ab34:	68fb      	ldr	r3, [r7, #12]
 800ab36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab38:	781a      	ldrb	r2, [r3, #0]
 800ab3a:	68fb      	ldr	r3, [r7, #12]
 800ab3c:	681b      	ldr	r3, [r3, #0]
 800ab3e:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 800ab40:	68fb      	ldr	r3, [r7, #12]
 800ab42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab44:	1c5a      	adds	r2, r3, #1
 800ab46:	68fb      	ldr	r3, [r7, #12]
 800ab48:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferCount--;
 800ab4a:	68fb      	ldr	r3, [r7, #12]
 800ab4c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800ab4e:	b29b      	uxth	r3, r3
 800ab50:	3b01      	subs	r3, #1
 800ab52:	b29a      	uxth	r2, r3
 800ab54:	68fb      	ldr	r3, [r7, #12]
 800ab56:	855a      	strh	r2, [r3, #42]	; 0x2a
        hi2c->XferSize--;
 800ab58:	68fb      	ldr	r3, [r7, #12]
 800ab5a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800ab5c:	3b01      	subs	r3, #1
 800ab5e:	b29a      	uxth	r2, r3
 800ab60:	68fb      	ldr	r3, [r7, #12]
 800ab62:	851a      	strh	r2, [r3, #40]	; 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800ab64:	697a      	ldr	r2, [r7, #20]
 800ab66:	6a39      	ldr	r1, [r7, #32]
 800ab68:	68f8      	ldr	r0, [r7, #12]
 800ab6a:	f000 f9ce 	bl	800af0a <I2C_WaitOnBTFFlagUntilTimeout>
 800ab6e:	4603      	mov	r3, r0
 800ab70:	2b00      	cmp	r3, #0
 800ab72:	d00d      	beq.n	800ab90 <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800ab74:	68fb      	ldr	r3, [r7, #12]
 800ab76:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ab78:	2b04      	cmp	r3, #4
 800ab7a:	d107      	bne.n	800ab8c <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab7c:	68fb      	ldr	r3, [r7, #12]
 800ab7e:	681b      	ldr	r3, [r3, #0]
 800ab80:	681a      	ldr	r2, [r3, #0]
 800ab82:	68fb      	ldr	r3, [r7, #12]
 800ab84:	681b      	ldr	r3, [r3, #0]
 800ab86:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ab8a:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 800ab8c:	2301      	movs	r3, #1
 800ab8e:	e01a      	b.n	800abc6 <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 800ab90:	68fb      	ldr	r3, [r7, #12]
 800ab92:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800ab94:	2b00      	cmp	r3, #0
 800ab96:	d194      	bne.n	800aac2 <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ab98:	68fb      	ldr	r3, [r7, #12]
 800ab9a:	681b      	ldr	r3, [r3, #0]
 800ab9c:	681a      	ldr	r2, [r3, #0]
 800ab9e:	68fb      	ldr	r3, [r7, #12]
 800aba0:	681b      	ldr	r3, [r3, #0]
 800aba2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aba6:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800aba8:	68fb      	ldr	r3, [r7, #12]
 800abaa:	2220      	movs	r2, #32
 800abac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800abb0:	68fb      	ldr	r3, [r7, #12]
 800abb2:	2200      	movs	r2, #0
 800abb4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800abb8:	68fb      	ldr	r3, [r7, #12]
 800abba:	2200      	movs	r2, #0
 800abbc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 800abc0:	2300      	movs	r3, #0
 800abc2:	e000      	b.n	800abc6 <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 800abc4:	2302      	movs	r3, #2
  }
}
 800abc6:	4618      	mov	r0, r3
 800abc8:	3718      	adds	r7, #24
 800abca:	46bd      	mov	sp, r7
 800abcc:	bd80      	pop	{r7, pc}
 800abce:	bf00      	nop
 800abd0:	00100002 	.word	0x00100002
 800abd4:	ffff0000 	.word	0xffff0000

0800abd8 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 800abd8:	b580      	push	{r7, lr}
 800abda:	b088      	sub	sp, #32
 800abdc:	af02      	add	r7, sp, #8
 800abde:	60f8      	str	r0, [r7, #12]
 800abe0:	607a      	str	r2, [r7, #4]
 800abe2:	603b      	str	r3, [r7, #0]
 800abe4:	460b      	mov	r3, r1
 800abe6:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800abe8:	68fb      	ldr	r3, [r7, #12]
 800abea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800abec:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 800abee:	697b      	ldr	r3, [r7, #20]
 800abf0:	2b08      	cmp	r3, #8
 800abf2:	d006      	beq.n	800ac02 <I2C_MasterRequestWrite+0x2a>
 800abf4:	697b      	ldr	r3, [r7, #20]
 800abf6:	2b01      	cmp	r3, #1
 800abf8:	d003      	beq.n	800ac02 <I2C_MasterRequestWrite+0x2a>
 800abfa:	697b      	ldr	r3, [r7, #20]
 800abfc:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800ac00:	d108      	bne.n	800ac14 <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ac02:	68fb      	ldr	r3, [r7, #12]
 800ac04:	681b      	ldr	r3, [r3, #0]
 800ac06:	681a      	ldr	r2, [r3, #0]
 800ac08:	68fb      	ldr	r3, [r7, #12]
 800ac0a:	681b      	ldr	r3, [r3, #0]
 800ac0c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ac10:	601a      	str	r2, [r3, #0]
 800ac12:	e00b      	b.n	800ac2c <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 800ac14:	68fb      	ldr	r3, [r7, #12]
 800ac16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ac18:	2b12      	cmp	r3, #18
 800ac1a:	d107      	bne.n	800ac2c <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800ac1c:	68fb      	ldr	r3, [r7, #12]
 800ac1e:	681b      	ldr	r3, [r3, #0]
 800ac20:	681a      	ldr	r2, [r3, #0]
 800ac22:	68fb      	ldr	r3, [r7, #12]
 800ac24:	681b      	ldr	r3, [r3, #0]
 800ac26:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800ac2a:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800ac2c:	683b      	ldr	r3, [r7, #0]
 800ac2e:	9300      	str	r3, [sp, #0]
 800ac30:	687b      	ldr	r3, [r7, #4]
 800ac32:	2200      	movs	r2, #0
 800ac34:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800ac38:	68f8      	ldr	r0, [r7, #12]
 800ac3a:	f000 f84f 	bl	800acdc <I2C_WaitOnFlagUntilTimeout>
 800ac3e:	4603      	mov	r3, r0
 800ac40:	2b00      	cmp	r3, #0
 800ac42:	d00c      	beq.n	800ac5e <I2C_MasterRequestWrite+0x86>
  {
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 800ac44:	68fb      	ldr	r3, [r7, #12]
 800ac46:	681b      	ldr	r3, [r3, #0]
 800ac48:	681b      	ldr	r3, [r3, #0]
 800ac4a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ac4e:	2b00      	cmp	r3, #0
 800ac50:	d003      	beq.n	800ac5a <I2C_MasterRequestWrite+0x82>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800ac52:	68fb      	ldr	r3, [r7, #12]
 800ac54:	f44f 7200 	mov.w	r2, #512	; 0x200
 800ac58:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 800ac5a:	2303      	movs	r3, #3
 800ac5c:	e035      	b.n	800acca <I2C_MasterRequestWrite+0xf2>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800ac5e:	68fb      	ldr	r3, [r7, #12]
 800ac60:	691b      	ldr	r3, [r3, #16]
 800ac62:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800ac66:	d108      	bne.n	800ac7a <I2C_MasterRequestWrite+0xa2>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800ac68:	897b      	ldrh	r3, [r7, #10]
 800ac6a:	b2db      	uxtb	r3, r3
 800ac6c:	461a      	mov	r2, r3
 800ac6e:	68fb      	ldr	r3, [r7, #12]
 800ac70:	681b      	ldr	r3, [r3, #0]
 800ac72:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800ac76:	611a      	str	r2, [r3, #16]
 800ac78:	e01b      	b.n	800acb2 <I2C_MasterRequestWrite+0xda>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 800ac7a:	897b      	ldrh	r3, [r7, #10]
 800ac7c:	11db      	asrs	r3, r3, #7
 800ac7e:	b2db      	uxtb	r3, r3
 800ac80:	f003 0306 	and.w	r3, r3, #6
 800ac84:	b2db      	uxtb	r3, r3
 800ac86:	f063 030f 	orn	r3, r3, #15
 800ac8a:	b2da      	uxtb	r2, r3
 800ac8c:	68fb      	ldr	r3, [r7, #12]
 800ac8e:	681b      	ldr	r3, [r3, #0]
 800ac90:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 800ac92:	683b      	ldr	r3, [r7, #0]
 800ac94:	687a      	ldr	r2, [r7, #4]
 800ac96:	490f      	ldr	r1, [pc, #60]	; (800acd4 <I2C_MasterRequestWrite+0xfc>)
 800ac98:	68f8      	ldr	r0, [r7, #12]
 800ac9a:	f000 f876 	bl	800ad8a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800ac9e:	4603      	mov	r3, r0
 800aca0:	2b00      	cmp	r3, #0
 800aca2:	d001      	beq.n	800aca8 <I2C_MasterRequestWrite+0xd0>
    {
      return HAL_ERROR;
 800aca4:	2301      	movs	r3, #1
 800aca6:	e010      	b.n	800acca <I2C_MasterRequestWrite+0xf2>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 800aca8:	897b      	ldrh	r3, [r7, #10]
 800acaa:	b2da      	uxtb	r2, r3
 800acac:	68fb      	ldr	r3, [r7, #12]
 800acae:	681b      	ldr	r3, [r3, #0]
 800acb0:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800acb2:	683b      	ldr	r3, [r7, #0]
 800acb4:	687a      	ldr	r2, [r7, #4]
 800acb6:	4908      	ldr	r1, [pc, #32]	; (800acd8 <I2C_MasterRequestWrite+0x100>)
 800acb8:	68f8      	ldr	r0, [r7, #12]
 800acba:	f000 f866 	bl	800ad8a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800acbe:	4603      	mov	r3, r0
 800acc0:	2b00      	cmp	r3, #0
 800acc2:	d001      	beq.n	800acc8 <I2C_MasterRequestWrite+0xf0>
  {
    return HAL_ERROR;
 800acc4:	2301      	movs	r3, #1
 800acc6:	e000      	b.n	800acca <I2C_MasterRequestWrite+0xf2>
  }

  return HAL_OK;
 800acc8:	2300      	movs	r3, #0
}
 800acca:	4618      	mov	r0, r3
 800accc:	3718      	adds	r7, #24
 800acce:	46bd      	mov	sp, r7
 800acd0:	bd80      	pop	{r7, pc}
 800acd2:	bf00      	nop
 800acd4:	00010008 	.word	0x00010008
 800acd8:	00010002 	.word	0x00010002

0800acdc <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 800acdc:	b580      	push	{r7, lr}
 800acde:	b084      	sub	sp, #16
 800ace0:	af00      	add	r7, sp, #0
 800ace2:	60f8      	str	r0, [r7, #12]
 800ace4:	60b9      	str	r1, [r7, #8]
 800ace6:	603b      	str	r3, [r7, #0]
 800ace8:	4613      	mov	r3, r2
 800acea:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800acec:	e025      	b.n	800ad3a <I2C_WaitOnFlagUntilTimeout+0x5e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800acee:	683b      	ldr	r3, [r7, #0]
 800acf0:	f1b3 3fff 	cmp.w	r3, #4294967295
 800acf4:	d021      	beq.n	800ad3a <I2C_WaitOnFlagUntilTimeout+0x5e>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800acf6:	f7ff fa91 	bl	800a21c <HAL_GetTick>
 800acfa:	4602      	mov	r2, r0
 800acfc:	69bb      	ldr	r3, [r7, #24]
 800acfe:	1ad3      	subs	r3, r2, r3
 800ad00:	683a      	ldr	r2, [r7, #0]
 800ad02:	429a      	cmp	r2, r3
 800ad04:	d302      	bcc.n	800ad0c <I2C_WaitOnFlagUntilTimeout+0x30>
 800ad06:	683b      	ldr	r3, [r7, #0]
 800ad08:	2b00      	cmp	r3, #0
 800ad0a:	d116      	bne.n	800ad3a <I2C_WaitOnFlagUntilTimeout+0x5e>
      {
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ad0c:	68fb      	ldr	r3, [r7, #12]
 800ad0e:	2200      	movs	r2, #0
 800ad10:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ad12:	68fb      	ldr	r3, [r7, #12]
 800ad14:	2220      	movs	r2, #32
 800ad16:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ad1a:	68fb      	ldr	r3, [r7, #12]
 800ad1c:	2200      	movs	r2, #0
 800ad1e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ad22:	68fb      	ldr	r3, [r7, #12]
 800ad24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ad26:	f043 0220 	orr.w	r2, r3, #32
 800ad2a:	68fb      	ldr	r3, [r7, #12]
 800ad2c:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800ad2e:	68fb      	ldr	r3, [r7, #12]
 800ad30:	2200      	movs	r2, #0
 800ad32:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 800ad36:	2301      	movs	r3, #1
 800ad38:	e023      	b.n	800ad82 <I2C_WaitOnFlagUntilTimeout+0xa6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ad3a:	68bb      	ldr	r3, [r7, #8]
 800ad3c:	0c1b      	lsrs	r3, r3, #16
 800ad3e:	b2db      	uxtb	r3, r3
 800ad40:	2b01      	cmp	r3, #1
 800ad42:	d10d      	bne.n	800ad60 <I2C_WaitOnFlagUntilTimeout+0x84>
 800ad44:	68fb      	ldr	r3, [r7, #12]
 800ad46:	681b      	ldr	r3, [r3, #0]
 800ad48:	695b      	ldr	r3, [r3, #20]
 800ad4a:	43da      	mvns	r2, r3
 800ad4c:	68bb      	ldr	r3, [r7, #8]
 800ad4e:	4013      	ands	r3, r2
 800ad50:	b29b      	uxth	r3, r3
 800ad52:	2b00      	cmp	r3, #0
 800ad54:	bf0c      	ite	eq
 800ad56:	2301      	moveq	r3, #1
 800ad58:	2300      	movne	r3, #0
 800ad5a:	b2db      	uxtb	r3, r3
 800ad5c:	461a      	mov	r2, r3
 800ad5e:	e00c      	b.n	800ad7a <I2C_WaitOnFlagUntilTimeout+0x9e>
 800ad60:	68fb      	ldr	r3, [r7, #12]
 800ad62:	681b      	ldr	r3, [r3, #0]
 800ad64:	699b      	ldr	r3, [r3, #24]
 800ad66:	43da      	mvns	r2, r3
 800ad68:	68bb      	ldr	r3, [r7, #8]
 800ad6a:	4013      	ands	r3, r2
 800ad6c:	b29b      	uxth	r3, r3
 800ad6e:	2b00      	cmp	r3, #0
 800ad70:	bf0c      	ite	eq
 800ad72:	2301      	moveq	r3, #1
 800ad74:	2300      	movne	r3, #0
 800ad76:	b2db      	uxtb	r3, r3
 800ad78:	461a      	mov	r2, r3
 800ad7a:	79fb      	ldrb	r3, [r7, #7]
 800ad7c:	429a      	cmp	r2, r3
 800ad7e:	d0b6      	beq.n	800acee <I2C_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 800ad80:	2300      	movs	r3, #0
}
 800ad82:	4618      	mov	r0, r3
 800ad84:	3710      	adds	r7, #16
 800ad86:	46bd      	mov	sp, r7
 800ad88:	bd80      	pop	{r7, pc}

0800ad8a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 800ad8a:	b580      	push	{r7, lr}
 800ad8c:	b084      	sub	sp, #16
 800ad8e:	af00      	add	r7, sp, #0
 800ad90:	60f8      	str	r0, [r7, #12]
 800ad92:	60b9      	str	r1, [r7, #8]
 800ad94:	607a      	str	r2, [r7, #4]
 800ad96:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800ad98:	e051      	b.n	800ae3e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ad9a:	68fb      	ldr	r3, [r7, #12]
 800ad9c:	681b      	ldr	r3, [r3, #0]
 800ad9e:	695b      	ldr	r3, [r3, #20]
 800ada0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800ada4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800ada8:	d123      	bne.n	800adf2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800adaa:	68fb      	ldr	r3, [r7, #12]
 800adac:	681b      	ldr	r3, [r3, #0]
 800adae:	681a      	ldr	r2, [r3, #0]
 800adb0:	68fb      	ldr	r3, [r7, #12]
 800adb2:	681b      	ldr	r3, [r3, #0]
 800adb4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800adb8:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800adba:	68fb      	ldr	r3, [r7, #12]
 800adbc:	681b      	ldr	r3, [r3, #0]
 800adbe:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800adc2:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 800adc4:	68fb      	ldr	r3, [r7, #12]
 800adc6:	2200      	movs	r2, #0
 800adc8:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800adca:	68fb      	ldr	r3, [r7, #12]
 800adcc:	2220      	movs	r2, #32
 800adce:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800add2:	68fb      	ldr	r3, [r7, #12]
 800add4:	2200      	movs	r2, #0
 800add6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800adda:	68fb      	ldr	r3, [r7, #12]
 800addc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800adde:	f043 0204 	orr.w	r2, r3, #4
 800ade2:	68fb      	ldr	r3, [r7, #12]
 800ade4:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 800ade6:	68fb      	ldr	r3, [r7, #12]
 800ade8:	2200      	movs	r2, #0
 800adea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 800adee:	2301      	movs	r3, #1
 800adf0:	e046      	b.n	800ae80 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800adf2:	687b      	ldr	r3, [r7, #4]
 800adf4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800adf8:	d021      	beq.n	800ae3e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800adfa:	f7ff fa0f 	bl	800a21c <HAL_GetTick>
 800adfe:	4602      	mov	r2, r0
 800ae00:	683b      	ldr	r3, [r7, #0]
 800ae02:	1ad3      	subs	r3, r2, r3
 800ae04:	687a      	ldr	r2, [r7, #4]
 800ae06:	429a      	cmp	r2, r3
 800ae08:	d302      	bcc.n	800ae10 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 800ae0a:	687b      	ldr	r3, [r7, #4]
 800ae0c:	2b00      	cmp	r3, #0
 800ae0e:	d116      	bne.n	800ae3e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 800ae10:	68fb      	ldr	r3, [r7, #12]
 800ae12:	2200      	movs	r2, #0
 800ae14:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800ae16:	68fb      	ldr	r3, [r7, #12]
 800ae18:	2220      	movs	r2, #32
 800ae1a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ae1e:	68fb      	ldr	r3, [r7, #12]
 800ae20:	2200      	movs	r2, #0
 800ae22:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ae26:	68fb      	ldr	r3, [r7, #12]
 800ae28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ae2a:	f043 0220 	orr.w	r2, r3, #32
 800ae2e:	68fb      	ldr	r3, [r7, #12]
 800ae30:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800ae32:	68fb      	ldr	r3, [r7, #12]
 800ae34:	2200      	movs	r2, #0
 800ae36:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 800ae3a:	2301      	movs	r3, #1
 800ae3c:	e020      	b.n	800ae80 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800ae3e:	68bb      	ldr	r3, [r7, #8]
 800ae40:	0c1b      	lsrs	r3, r3, #16
 800ae42:	b2db      	uxtb	r3, r3
 800ae44:	2b01      	cmp	r3, #1
 800ae46:	d10c      	bne.n	800ae62 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 800ae48:	68fb      	ldr	r3, [r7, #12]
 800ae4a:	681b      	ldr	r3, [r3, #0]
 800ae4c:	695b      	ldr	r3, [r3, #20]
 800ae4e:	43da      	mvns	r2, r3
 800ae50:	68bb      	ldr	r3, [r7, #8]
 800ae52:	4013      	ands	r3, r2
 800ae54:	b29b      	uxth	r3, r3
 800ae56:	2b00      	cmp	r3, #0
 800ae58:	bf14      	ite	ne
 800ae5a:	2301      	movne	r3, #1
 800ae5c:	2300      	moveq	r3, #0
 800ae5e:	b2db      	uxtb	r3, r3
 800ae60:	e00b      	b.n	800ae7a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 800ae62:	68fb      	ldr	r3, [r7, #12]
 800ae64:	681b      	ldr	r3, [r3, #0]
 800ae66:	699b      	ldr	r3, [r3, #24]
 800ae68:	43da      	mvns	r2, r3
 800ae6a:	68bb      	ldr	r3, [r7, #8]
 800ae6c:	4013      	ands	r3, r2
 800ae6e:	b29b      	uxth	r3, r3
 800ae70:	2b00      	cmp	r3, #0
 800ae72:	bf14      	ite	ne
 800ae74:	2301      	movne	r3, #1
 800ae76:	2300      	moveq	r3, #0
 800ae78:	b2db      	uxtb	r3, r3
 800ae7a:	2b00      	cmp	r3, #0
 800ae7c:	d18d      	bne.n	800ad9a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
      }
    }
  }
  return HAL_OK;
 800ae7e:	2300      	movs	r3, #0
}
 800ae80:	4618      	mov	r0, r3
 800ae82:	3710      	adds	r7, #16
 800ae84:	46bd      	mov	sp, r7
 800ae86:	bd80      	pop	{r7, pc}

0800ae88 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800ae88:	b580      	push	{r7, lr}
 800ae8a:	b084      	sub	sp, #16
 800ae8c:	af00      	add	r7, sp, #0
 800ae8e:	60f8      	str	r0, [r7, #12]
 800ae90:	60b9      	str	r1, [r7, #8]
 800ae92:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800ae94:	e02d      	b.n	800aef2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800ae96:	68f8      	ldr	r0, [r7, #12]
 800ae98:	f000 f878 	bl	800af8c <I2C_IsAcknowledgeFailed>
 800ae9c:	4603      	mov	r3, r0
 800ae9e:	2b00      	cmp	r3, #0
 800aea0:	d001      	beq.n	800aea6 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 800aea2:	2301      	movs	r3, #1
 800aea4:	e02d      	b.n	800af02 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800aea6:	68bb      	ldr	r3, [r7, #8]
 800aea8:	f1b3 3fff 	cmp.w	r3, #4294967295
 800aeac:	d021      	beq.n	800aef2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aeae:	f7ff f9b5 	bl	800a21c <HAL_GetTick>
 800aeb2:	4602      	mov	r2, r0
 800aeb4:	687b      	ldr	r3, [r7, #4]
 800aeb6:	1ad3      	subs	r3, r2, r3
 800aeb8:	68ba      	ldr	r2, [r7, #8]
 800aeba:	429a      	cmp	r2, r3
 800aebc:	d302      	bcc.n	800aec4 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800aebe:	68bb      	ldr	r3, [r7, #8]
 800aec0:	2b00      	cmp	r3, #0
 800aec2:	d116      	bne.n	800aef2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 800aec4:	68fb      	ldr	r3, [r7, #12]
 800aec6:	2200      	movs	r2, #0
 800aec8:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800aeca:	68fb      	ldr	r3, [r7, #12]
 800aecc:	2220      	movs	r2, #32
 800aece:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800aed2:	68fb      	ldr	r3, [r7, #12]
 800aed4:	2200      	movs	r2, #0
 800aed6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800aeda:	68fb      	ldr	r3, [r7, #12]
 800aedc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800aede:	f043 0220 	orr.w	r2, r3, #32
 800aee2:	68fb      	ldr	r3, [r7, #12]
 800aee4:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800aee6:	68fb      	ldr	r3, [r7, #12]
 800aee8:	2200      	movs	r2, #0
 800aeea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 800aeee:	2301      	movs	r3, #1
 800aef0:	e007      	b.n	800af02 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800aef2:	68fb      	ldr	r3, [r7, #12]
 800aef4:	681b      	ldr	r3, [r3, #0]
 800aef6:	695b      	ldr	r3, [r3, #20]
 800aef8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800aefc:	2b80      	cmp	r3, #128	; 0x80
 800aefe:	d1ca      	bne.n	800ae96 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 800af00:	2300      	movs	r3, #0
}
 800af02:	4618      	mov	r0, r3
 800af04:	3710      	adds	r7, #16
 800af06:	46bd      	mov	sp, r7
 800af08:	bd80      	pop	{r7, pc}

0800af0a <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800af0a:	b580      	push	{r7, lr}
 800af0c:	b084      	sub	sp, #16
 800af0e:	af00      	add	r7, sp, #0
 800af10:	60f8      	str	r0, [r7, #12]
 800af12:	60b9      	str	r1, [r7, #8]
 800af14:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800af16:	e02d      	b.n	800af74 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800af18:	68f8      	ldr	r0, [r7, #12]
 800af1a:	f000 f837 	bl	800af8c <I2C_IsAcknowledgeFailed>
 800af1e:	4603      	mov	r3, r0
 800af20:	2b00      	cmp	r3, #0
 800af22:	d001      	beq.n	800af28 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 800af24:	2301      	movs	r3, #1
 800af26:	e02d      	b.n	800af84 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800af28:	68bb      	ldr	r3, [r7, #8]
 800af2a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800af2e:	d021      	beq.n	800af74 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800af30:	f7ff f974 	bl	800a21c <HAL_GetTick>
 800af34:	4602      	mov	r2, r0
 800af36:	687b      	ldr	r3, [r7, #4]
 800af38:	1ad3      	subs	r3, r2, r3
 800af3a:	68ba      	ldr	r2, [r7, #8]
 800af3c:	429a      	cmp	r2, r3
 800af3e:	d302      	bcc.n	800af46 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 800af40:	68bb      	ldr	r3, [r7, #8]
 800af42:	2b00      	cmp	r3, #0
 800af44:	d116      	bne.n	800af74 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 800af46:	68fb      	ldr	r3, [r7, #12]
 800af48:	2200      	movs	r2, #0
 800af4a:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800af4c:	68fb      	ldr	r3, [r7, #12]
 800af4e:	2220      	movs	r2, #32
 800af50:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800af54:	68fb      	ldr	r3, [r7, #12]
 800af56:	2200      	movs	r2, #0
 800af58:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800af5c:	68fb      	ldr	r3, [r7, #12]
 800af5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800af60:	f043 0220 	orr.w	r2, r3, #32
 800af64:	68fb      	ldr	r3, [r7, #12]
 800af66:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800af68:	68fb      	ldr	r3, [r7, #12]
 800af6a:	2200      	movs	r2, #0
 800af6c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 800af70:	2301      	movs	r3, #1
 800af72:	e007      	b.n	800af84 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800af74:	68fb      	ldr	r3, [r7, #12]
 800af76:	681b      	ldr	r3, [r3, #0]
 800af78:	695b      	ldr	r3, [r3, #20]
 800af7a:	f003 0304 	and.w	r3, r3, #4
 800af7e:	2b04      	cmp	r3, #4
 800af80:	d1ca      	bne.n	800af18 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 800af82:	2300      	movs	r3, #0
}
 800af84:	4618      	mov	r0, r3
 800af86:	3710      	adds	r7, #16
 800af88:	46bd      	mov	sp, r7
 800af8a:	bd80      	pop	{r7, pc}

0800af8c <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 800af8c:	b480      	push	{r7}
 800af8e:	b083      	sub	sp, #12
 800af90:	af00      	add	r7, sp, #0
 800af92:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800af94:	687b      	ldr	r3, [r7, #4]
 800af96:	681b      	ldr	r3, [r3, #0]
 800af98:	695b      	ldr	r3, [r3, #20]
 800af9a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800af9e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800afa2:	d11b      	bne.n	800afdc <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800afa4:	687b      	ldr	r3, [r7, #4]
 800afa6:	681b      	ldr	r3, [r3, #0]
 800afa8:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800afac:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 800afae:	687b      	ldr	r3, [r7, #4]
 800afb0:	2200      	movs	r2, #0
 800afb2:	631a      	str	r2, [r3, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800afb4:	687b      	ldr	r3, [r7, #4]
 800afb6:	2220      	movs	r2, #32
 800afb8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800afbc:	687b      	ldr	r3, [r7, #4]
 800afbe:	2200      	movs	r2, #0
 800afc0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800afc4:	687b      	ldr	r3, [r7, #4]
 800afc6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800afc8:	f043 0204 	orr.w	r2, r3, #4
 800afcc:	687b      	ldr	r3, [r7, #4]
 800afce:	641a      	str	r2, [r3, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800afd0:	687b      	ldr	r3, [r7, #4]
 800afd2:	2200      	movs	r2, #0
 800afd4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 800afd8:	2301      	movs	r3, #1
 800afda:	e000      	b.n	800afde <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 800afdc:	2300      	movs	r3, #0
}
 800afde:	4618      	mov	r0, r3
 800afe0:	370c      	adds	r7, #12
 800afe2:	46bd      	mov	sp, r7
 800afe4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afe8:	4770      	bx	lr
	...

0800afec <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800afec:	b580      	push	{r7, lr}
 800afee:	b086      	sub	sp, #24
 800aff0:	af00      	add	r7, sp, #0
 800aff2:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800aff4:	687b      	ldr	r3, [r7, #4]
 800aff6:	2b00      	cmp	r3, #0
 800aff8:	d101      	bne.n	800affe <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 800affa:	2301      	movs	r3, #1
 800affc:	e25b      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800affe:	687b      	ldr	r3, [r7, #4]
 800b000:	681b      	ldr	r3, [r3, #0]
 800b002:	f003 0301 	and.w	r3, r3, #1
 800b006:	2b00      	cmp	r3, #0
 800b008:	d075      	beq.n	800b0f6 <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b00a:	4ba3      	ldr	r3, [pc, #652]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b00c:	689b      	ldr	r3, [r3, #8]
 800b00e:	f003 030c 	and.w	r3, r3, #12
 800b012:	2b04      	cmp	r3, #4
 800b014:	d00c      	beq.n	800b030 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b016:	4ba0      	ldr	r3, [pc, #640]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b018:	689b      	ldr	r3, [r3, #8]
 800b01a:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b01e:	2b08      	cmp	r3, #8
 800b020:	d112      	bne.n	800b048 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b022:	4b9d      	ldr	r3, [pc, #628]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b024:	685b      	ldr	r3, [r3, #4]
 800b026:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800b02a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800b02e:	d10b      	bne.n	800b048 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b030:	4b99      	ldr	r3, [pc, #612]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b032:	681b      	ldr	r3, [r3, #0]
 800b034:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800b038:	2b00      	cmp	r3, #0
 800b03a:	d05b      	beq.n	800b0f4 <HAL_RCC_OscConfig+0x108>
 800b03c:	687b      	ldr	r3, [r7, #4]
 800b03e:	685b      	ldr	r3, [r3, #4]
 800b040:	2b00      	cmp	r3, #0
 800b042:	d157      	bne.n	800b0f4 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 800b044:	2301      	movs	r3, #1
 800b046:	e236      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b048:	687b      	ldr	r3, [r7, #4]
 800b04a:	685b      	ldr	r3, [r3, #4]
 800b04c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b050:	d106      	bne.n	800b060 <HAL_RCC_OscConfig+0x74>
 800b052:	4b91      	ldr	r3, [pc, #580]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b054:	681b      	ldr	r3, [r3, #0]
 800b056:	4a90      	ldr	r2, [pc, #576]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b058:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b05c:	6013      	str	r3, [r2, #0]
 800b05e:	e01d      	b.n	800b09c <HAL_RCC_OscConfig+0xb0>
 800b060:	687b      	ldr	r3, [r7, #4]
 800b062:	685b      	ldr	r3, [r3, #4]
 800b064:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b068:	d10c      	bne.n	800b084 <HAL_RCC_OscConfig+0x98>
 800b06a:	4b8b      	ldr	r3, [pc, #556]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b06c:	681b      	ldr	r3, [r3, #0]
 800b06e:	4a8a      	ldr	r2, [pc, #552]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b070:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800b074:	6013      	str	r3, [r2, #0]
 800b076:	4b88      	ldr	r3, [pc, #544]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b078:	681b      	ldr	r3, [r3, #0]
 800b07a:	4a87      	ldr	r2, [pc, #540]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b07c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b080:	6013      	str	r3, [r2, #0]
 800b082:	e00b      	b.n	800b09c <HAL_RCC_OscConfig+0xb0>
 800b084:	4b84      	ldr	r3, [pc, #528]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b086:	681b      	ldr	r3, [r3, #0]
 800b088:	4a83      	ldr	r2, [pc, #524]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b08a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b08e:	6013      	str	r3, [r2, #0]
 800b090:	4b81      	ldr	r3, [pc, #516]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b092:	681b      	ldr	r3, [r3, #0]
 800b094:	4a80      	ldr	r2, [pc, #512]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b096:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800b09a:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b09c:	687b      	ldr	r3, [r7, #4]
 800b09e:	685b      	ldr	r3, [r3, #4]
 800b0a0:	2b00      	cmp	r3, #0
 800b0a2:	d013      	beq.n	800b0cc <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b0a4:	f7ff f8ba 	bl	800a21c <HAL_GetTick>
 800b0a8:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b0aa:	e008      	b.n	800b0be <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b0ac:	f7ff f8b6 	bl	800a21c <HAL_GetTick>
 800b0b0:	4602      	mov	r2, r0
 800b0b2:	693b      	ldr	r3, [r7, #16]
 800b0b4:	1ad3      	subs	r3, r2, r3
 800b0b6:	2b64      	cmp	r3, #100	; 0x64
 800b0b8:	d901      	bls.n	800b0be <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 800b0ba:	2303      	movs	r3, #3
 800b0bc:	e1fb      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b0be:	4b76      	ldr	r3, [pc, #472]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b0c0:	681b      	ldr	r3, [r3, #0]
 800b0c2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800b0c6:	2b00      	cmp	r3, #0
 800b0c8:	d0f0      	beq.n	800b0ac <HAL_RCC_OscConfig+0xc0>
 800b0ca:	e014      	b.n	800b0f6 <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b0cc:	f7ff f8a6 	bl	800a21c <HAL_GetTick>
 800b0d0:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b0d2:	e008      	b.n	800b0e6 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b0d4:	f7ff f8a2 	bl	800a21c <HAL_GetTick>
 800b0d8:	4602      	mov	r2, r0
 800b0da:	693b      	ldr	r3, [r7, #16]
 800b0dc:	1ad3      	subs	r3, r2, r3
 800b0de:	2b64      	cmp	r3, #100	; 0x64
 800b0e0:	d901      	bls.n	800b0e6 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 800b0e2:	2303      	movs	r3, #3
 800b0e4:	e1e7      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b0e6:	4b6c      	ldr	r3, [pc, #432]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b0e8:	681b      	ldr	r3, [r3, #0]
 800b0ea:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800b0ee:	2b00      	cmp	r3, #0
 800b0f0:	d1f0      	bne.n	800b0d4 <HAL_RCC_OscConfig+0xe8>
 800b0f2:	e000      	b.n	800b0f6 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b0f4:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b0f6:	687b      	ldr	r3, [r7, #4]
 800b0f8:	681b      	ldr	r3, [r3, #0]
 800b0fa:	f003 0302 	and.w	r3, r3, #2
 800b0fe:	2b00      	cmp	r3, #0
 800b100:	d063      	beq.n	800b1ca <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b102:	4b65      	ldr	r3, [pc, #404]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b104:	689b      	ldr	r3, [r3, #8]
 800b106:	f003 030c 	and.w	r3, r3, #12
 800b10a:	2b00      	cmp	r3, #0
 800b10c:	d00b      	beq.n	800b126 <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b10e:	4b62      	ldr	r3, [pc, #392]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b110:	689b      	ldr	r3, [r3, #8]
 800b112:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b116:	2b08      	cmp	r3, #8
 800b118:	d11c      	bne.n	800b154 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b11a:	4b5f      	ldr	r3, [pc, #380]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b11c:	685b      	ldr	r3, [r3, #4]
 800b11e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800b122:	2b00      	cmp	r3, #0
 800b124:	d116      	bne.n	800b154 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b126:	4b5c      	ldr	r3, [pc, #368]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b128:	681b      	ldr	r3, [r3, #0]
 800b12a:	f003 0302 	and.w	r3, r3, #2
 800b12e:	2b00      	cmp	r3, #0
 800b130:	d005      	beq.n	800b13e <HAL_RCC_OscConfig+0x152>
 800b132:	687b      	ldr	r3, [r7, #4]
 800b134:	68db      	ldr	r3, [r3, #12]
 800b136:	2b01      	cmp	r3, #1
 800b138:	d001      	beq.n	800b13e <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 800b13a:	2301      	movs	r3, #1
 800b13c:	e1bb      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b13e:	4b56      	ldr	r3, [pc, #344]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b140:	681b      	ldr	r3, [r3, #0]
 800b142:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800b146:	687b      	ldr	r3, [r7, #4]
 800b148:	691b      	ldr	r3, [r3, #16]
 800b14a:	00db      	lsls	r3, r3, #3
 800b14c:	4952      	ldr	r1, [pc, #328]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b14e:	4313      	orrs	r3, r2
 800b150:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b152:	e03a      	b.n	800b1ca <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b154:	687b      	ldr	r3, [r7, #4]
 800b156:	68db      	ldr	r3, [r3, #12]
 800b158:	2b00      	cmp	r3, #0
 800b15a:	d020      	beq.n	800b19e <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b15c:	4b4f      	ldr	r3, [pc, #316]	; (800b29c <HAL_RCC_OscConfig+0x2b0>)
 800b15e:	2201      	movs	r2, #1
 800b160:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800b162:	f7ff f85b 	bl	800a21c <HAL_GetTick>
 800b166:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b168:	e008      	b.n	800b17c <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b16a:	f7ff f857 	bl	800a21c <HAL_GetTick>
 800b16e:	4602      	mov	r2, r0
 800b170:	693b      	ldr	r3, [r7, #16]
 800b172:	1ad3      	subs	r3, r2, r3
 800b174:	2b02      	cmp	r3, #2
 800b176:	d901      	bls.n	800b17c <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 800b178:	2303      	movs	r3, #3
 800b17a:	e19c      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b17c:	4b46      	ldr	r3, [pc, #280]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b17e:	681b      	ldr	r3, [r3, #0]
 800b180:	f003 0302 	and.w	r3, r3, #2
 800b184:	2b00      	cmp	r3, #0
 800b186:	d0f0      	beq.n	800b16a <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b188:	4b43      	ldr	r3, [pc, #268]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b18a:	681b      	ldr	r3, [r3, #0]
 800b18c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800b190:	687b      	ldr	r3, [r7, #4]
 800b192:	691b      	ldr	r3, [r3, #16]
 800b194:	00db      	lsls	r3, r3, #3
 800b196:	4940      	ldr	r1, [pc, #256]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b198:	4313      	orrs	r3, r2
 800b19a:	600b      	str	r3, [r1, #0]
 800b19c:	e015      	b.n	800b1ca <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 800b19e:	4b3f      	ldr	r3, [pc, #252]	; (800b29c <HAL_RCC_OscConfig+0x2b0>)
 800b1a0:	2200      	movs	r2, #0
 800b1a2:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800b1a4:	f7ff f83a 	bl	800a21c <HAL_GetTick>
 800b1a8:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b1aa:	e008      	b.n	800b1be <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b1ac:	f7ff f836 	bl	800a21c <HAL_GetTick>
 800b1b0:	4602      	mov	r2, r0
 800b1b2:	693b      	ldr	r3, [r7, #16]
 800b1b4:	1ad3      	subs	r3, r2, r3
 800b1b6:	2b02      	cmp	r3, #2
 800b1b8:	d901      	bls.n	800b1be <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 800b1ba:	2303      	movs	r3, #3
 800b1bc:	e17b      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b1be:	4b36      	ldr	r3, [pc, #216]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b1c0:	681b      	ldr	r3, [r3, #0]
 800b1c2:	f003 0302 	and.w	r3, r3, #2
 800b1c6:	2b00      	cmp	r3, #0
 800b1c8:	d1f0      	bne.n	800b1ac <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b1ca:	687b      	ldr	r3, [r7, #4]
 800b1cc:	681b      	ldr	r3, [r3, #0]
 800b1ce:	f003 0308 	and.w	r3, r3, #8
 800b1d2:	2b00      	cmp	r3, #0
 800b1d4:	d030      	beq.n	800b238 <HAL_RCC_OscConfig+0x24c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b1d6:	687b      	ldr	r3, [r7, #4]
 800b1d8:	695b      	ldr	r3, [r3, #20]
 800b1da:	2b00      	cmp	r3, #0
 800b1dc:	d016      	beq.n	800b20c <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800b1de:	4b30      	ldr	r3, [pc, #192]	; (800b2a0 <HAL_RCC_OscConfig+0x2b4>)
 800b1e0:	2201      	movs	r2, #1
 800b1e2:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800b1e4:	f7ff f81a 	bl	800a21c <HAL_GetTick>
 800b1e8:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b1ea:	e008      	b.n	800b1fe <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b1ec:	f7ff f816 	bl	800a21c <HAL_GetTick>
 800b1f0:	4602      	mov	r2, r0
 800b1f2:	693b      	ldr	r3, [r7, #16]
 800b1f4:	1ad3      	subs	r3, r2, r3
 800b1f6:	2b02      	cmp	r3, #2
 800b1f8:	d901      	bls.n	800b1fe <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 800b1fa:	2303      	movs	r3, #3
 800b1fc:	e15b      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b1fe:	4b26      	ldr	r3, [pc, #152]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b200:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b202:	f003 0302 	and.w	r3, r3, #2
 800b206:	2b00      	cmp	r3, #0
 800b208:	d0f0      	beq.n	800b1ec <HAL_RCC_OscConfig+0x200>
 800b20a:	e015      	b.n	800b238 <HAL_RCC_OscConfig+0x24c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 800b20c:	4b24      	ldr	r3, [pc, #144]	; (800b2a0 <HAL_RCC_OscConfig+0x2b4>)
 800b20e:	2200      	movs	r2, #0
 800b210:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b212:	f7ff f803 	bl	800a21c <HAL_GetTick>
 800b216:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b218:	e008      	b.n	800b22c <HAL_RCC_OscConfig+0x240>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b21a:	f7fe ffff 	bl	800a21c <HAL_GetTick>
 800b21e:	4602      	mov	r2, r0
 800b220:	693b      	ldr	r3, [r7, #16]
 800b222:	1ad3      	subs	r3, r2, r3
 800b224:	2b02      	cmp	r3, #2
 800b226:	d901      	bls.n	800b22c <HAL_RCC_OscConfig+0x240>
        {
          return HAL_TIMEOUT;
 800b228:	2303      	movs	r3, #3
 800b22a:	e144      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b22c:	4b1a      	ldr	r3, [pc, #104]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b22e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b230:	f003 0302 	and.w	r3, r3, #2
 800b234:	2b00      	cmp	r3, #0
 800b236:	d1f0      	bne.n	800b21a <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b238:	687b      	ldr	r3, [r7, #4]
 800b23a:	681b      	ldr	r3, [r3, #0]
 800b23c:	f003 0304 	and.w	r3, r3, #4
 800b240:	2b00      	cmp	r3, #0
 800b242:	f000 80a0 	beq.w	800b386 <HAL_RCC_OscConfig+0x39a>
  {
    FlagStatus       pwrclkchanged = RESET;
 800b246:	2300      	movs	r3, #0
 800b248:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b24a:	4b13      	ldr	r3, [pc, #76]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b24c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b24e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b252:	2b00      	cmp	r3, #0
 800b254:	d10f      	bne.n	800b276 <HAL_RCC_OscConfig+0x28a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 800b256:	2300      	movs	r3, #0
 800b258:	60bb      	str	r3, [r7, #8]
 800b25a:	4b0f      	ldr	r3, [pc, #60]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b25c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b25e:	4a0e      	ldr	r2, [pc, #56]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b260:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b264:	6413      	str	r3, [r2, #64]	; 0x40
 800b266:	4b0c      	ldr	r3, [pc, #48]	; (800b298 <HAL_RCC_OscConfig+0x2ac>)
 800b268:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b26a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b26e:	60bb      	str	r3, [r7, #8]
 800b270:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 800b272:	2301      	movs	r3, #1
 800b274:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b276:	4b0b      	ldr	r3, [pc, #44]	; (800b2a4 <HAL_RCC_OscConfig+0x2b8>)
 800b278:	681b      	ldr	r3, [r3, #0]
 800b27a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b27e:	2b00      	cmp	r3, #0
 800b280:	d121      	bne.n	800b2c6 <HAL_RCC_OscConfig+0x2da>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b282:	4b08      	ldr	r3, [pc, #32]	; (800b2a4 <HAL_RCC_OscConfig+0x2b8>)
 800b284:	681b      	ldr	r3, [r3, #0]
 800b286:	4a07      	ldr	r2, [pc, #28]	; (800b2a4 <HAL_RCC_OscConfig+0x2b8>)
 800b288:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b28c:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 800b28e:	f7fe ffc5 	bl	800a21c <HAL_GetTick>
 800b292:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b294:	e011      	b.n	800b2ba <HAL_RCC_OscConfig+0x2ce>
 800b296:	bf00      	nop
 800b298:	40023800 	.word	0x40023800
 800b29c:	42470000 	.word	0x42470000
 800b2a0:	42470e80 	.word	0x42470e80
 800b2a4:	40007000 	.word	0x40007000
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b2a8:	f7fe ffb8 	bl	800a21c <HAL_GetTick>
 800b2ac:	4602      	mov	r2, r0
 800b2ae:	693b      	ldr	r3, [r7, #16]
 800b2b0:	1ad3      	subs	r3, r2, r3
 800b2b2:	2b02      	cmp	r3, #2
 800b2b4:	d901      	bls.n	800b2ba <HAL_RCC_OscConfig+0x2ce>
        {
          return HAL_TIMEOUT;
 800b2b6:	2303      	movs	r3, #3
 800b2b8:	e0fd      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b2ba:	4b81      	ldr	r3, [pc, #516]	; (800b4c0 <HAL_RCC_OscConfig+0x4d4>)
 800b2bc:	681b      	ldr	r3, [r3, #0]
 800b2be:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800b2c2:	2b00      	cmp	r3, #0
 800b2c4:	d0f0      	beq.n	800b2a8 <HAL_RCC_OscConfig+0x2bc>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b2c6:	687b      	ldr	r3, [r7, #4]
 800b2c8:	689b      	ldr	r3, [r3, #8]
 800b2ca:	2b01      	cmp	r3, #1
 800b2cc:	d106      	bne.n	800b2dc <HAL_RCC_OscConfig+0x2f0>
 800b2ce:	4b7d      	ldr	r3, [pc, #500]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b2d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b2d2:	4a7c      	ldr	r2, [pc, #496]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b2d4:	f043 0301 	orr.w	r3, r3, #1
 800b2d8:	6713      	str	r3, [r2, #112]	; 0x70
 800b2da:	e01c      	b.n	800b316 <HAL_RCC_OscConfig+0x32a>
 800b2dc:	687b      	ldr	r3, [r7, #4]
 800b2de:	689b      	ldr	r3, [r3, #8]
 800b2e0:	2b05      	cmp	r3, #5
 800b2e2:	d10c      	bne.n	800b2fe <HAL_RCC_OscConfig+0x312>
 800b2e4:	4b77      	ldr	r3, [pc, #476]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b2e6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b2e8:	4a76      	ldr	r2, [pc, #472]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b2ea:	f043 0304 	orr.w	r3, r3, #4
 800b2ee:	6713      	str	r3, [r2, #112]	; 0x70
 800b2f0:	4b74      	ldr	r3, [pc, #464]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b2f2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b2f4:	4a73      	ldr	r2, [pc, #460]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b2f6:	f043 0301 	orr.w	r3, r3, #1
 800b2fa:	6713      	str	r3, [r2, #112]	; 0x70
 800b2fc:	e00b      	b.n	800b316 <HAL_RCC_OscConfig+0x32a>
 800b2fe:	4b71      	ldr	r3, [pc, #452]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b300:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b302:	4a70      	ldr	r2, [pc, #448]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b304:	f023 0301 	bic.w	r3, r3, #1
 800b308:	6713      	str	r3, [r2, #112]	; 0x70
 800b30a:	4b6e      	ldr	r3, [pc, #440]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b30c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b30e:	4a6d      	ldr	r2, [pc, #436]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b310:	f023 0304 	bic.w	r3, r3, #4
 800b314:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b316:	687b      	ldr	r3, [r7, #4]
 800b318:	689b      	ldr	r3, [r3, #8]
 800b31a:	2b00      	cmp	r3, #0
 800b31c:	d015      	beq.n	800b34a <HAL_RCC_OscConfig+0x35e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800b31e:	f7fe ff7d 	bl	800a21c <HAL_GetTick>
 800b322:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b324:	e00a      	b.n	800b33c <HAL_RCC_OscConfig+0x350>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b326:	f7fe ff79 	bl	800a21c <HAL_GetTick>
 800b32a:	4602      	mov	r2, r0
 800b32c:	693b      	ldr	r3, [r7, #16]
 800b32e:	1ad3      	subs	r3, r2, r3
 800b330:	f241 3288 	movw	r2, #5000	; 0x1388
 800b334:	4293      	cmp	r3, r2
 800b336:	d901      	bls.n	800b33c <HAL_RCC_OscConfig+0x350>
        {
          return HAL_TIMEOUT;
 800b338:	2303      	movs	r3, #3
 800b33a:	e0bc      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b33c:	4b61      	ldr	r3, [pc, #388]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b33e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b340:	f003 0302 	and.w	r3, r3, #2
 800b344:	2b00      	cmp	r3, #0
 800b346:	d0ee      	beq.n	800b326 <HAL_RCC_OscConfig+0x33a>
 800b348:	e014      	b.n	800b374 <HAL_RCC_OscConfig+0x388>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b34a:	f7fe ff67 	bl	800a21c <HAL_GetTick>
 800b34e:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b350:	e00a      	b.n	800b368 <HAL_RCC_OscConfig+0x37c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b352:	f7fe ff63 	bl	800a21c <HAL_GetTick>
 800b356:	4602      	mov	r2, r0
 800b358:	693b      	ldr	r3, [r7, #16]
 800b35a:	1ad3      	subs	r3, r2, r3
 800b35c:	f241 3288 	movw	r2, #5000	; 0x1388
 800b360:	4293      	cmp	r3, r2
 800b362:	d901      	bls.n	800b368 <HAL_RCC_OscConfig+0x37c>
        {
          return HAL_TIMEOUT;
 800b364:	2303      	movs	r3, #3
 800b366:	e0a6      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b368:	4b56      	ldr	r3, [pc, #344]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b36a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800b36c:	f003 0302 	and.w	r3, r3, #2
 800b370:	2b00      	cmp	r3, #0
 800b372:	d1ee      	bne.n	800b352 <HAL_RCC_OscConfig+0x366>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b374:	7dfb      	ldrb	r3, [r7, #23]
 800b376:	2b01      	cmp	r3, #1
 800b378:	d105      	bne.n	800b386 <HAL_RCC_OscConfig+0x39a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800b37a:	4b52      	ldr	r3, [pc, #328]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b37c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b37e:	4a51      	ldr	r2, [pc, #324]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b380:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b384:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b386:	687b      	ldr	r3, [r7, #4]
 800b388:	699b      	ldr	r3, [r3, #24]
 800b38a:	2b00      	cmp	r3, #0
 800b38c:	f000 8092 	beq.w	800b4b4 <HAL_RCC_OscConfig+0x4c8>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b390:	4b4c      	ldr	r3, [pc, #304]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b392:	689b      	ldr	r3, [r3, #8]
 800b394:	f003 030c 	and.w	r3, r3, #12
 800b398:	2b08      	cmp	r3, #8
 800b39a:	d05c      	beq.n	800b456 <HAL_RCC_OscConfig+0x46a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b39c:	687b      	ldr	r3, [r7, #4]
 800b39e:	699b      	ldr	r3, [r3, #24]
 800b3a0:	2b02      	cmp	r3, #2
 800b3a2:	d141      	bne.n	800b428 <HAL_RCC_OscConfig+0x43c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b3a4:	4b48      	ldr	r3, [pc, #288]	; (800b4c8 <HAL_RCC_OscConfig+0x4dc>)
 800b3a6:	2200      	movs	r2, #0
 800b3a8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b3aa:	f7fe ff37 	bl	800a21c <HAL_GetTick>
 800b3ae:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b3b0:	e008      	b.n	800b3c4 <HAL_RCC_OscConfig+0x3d8>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b3b2:	f7fe ff33 	bl	800a21c <HAL_GetTick>
 800b3b6:	4602      	mov	r2, r0
 800b3b8:	693b      	ldr	r3, [r7, #16]
 800b3ba:	1ad3      	subs	r3, r2, r3
 800b3bc:	2b02      	cmp	r3, #2
 800b3be:	d901      	bls.n	800b3c4 <HAL_RCC_OscConfig+0x3d8>
          {
            return HAL_TIMEOUT;
 800b3c0:	2303      	movs	r3, #3
 800b3c2:	e078      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b3c4:	4b3f      	ldr	r3, [pc, #252]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b3c6:	681b      	ldr	r3, [r3, #0]
 800b3c8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800b3cc:	2b00      	cmp	r3, #0
 800b3ce:	d1f0      	bne.n	800b3b2 <HAL_RCC_OscConfig+0x3c6>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b3d0:	687b      	ldr	r3, [r7, #4]
 800b3d2:	69da      	ldr	r2, [r3, #28]
 800b3d4:	687b      	ldr	r3, [r7, #4]
 800b3d6:	6a1b      	ldr	r3, [r3, #32]
 800b3d8:	431a      	orrs	r2, r3
 800b3da:	687b      	ldr	r3, [r7, #4]
 800b3dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b3de:	019b      	lsls	r3, r3, #6
 800b3e0:	431a      	orrs	r2, r3
 800b3e2:	687b      	ldr	r3, [r7, #4]
 800b3e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b3e6:	085b      	lsrs	r3, r3, #1
 800b3e8:	3b01      	subs	r3, #1
 800b3ea:	041b      	lsls	r3, r3, #16
 800b3ec:	431a      	orrs	r2, r3
 800b3ee:	687b      	ldr	r3, [r7, #4]
 800b3f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b3f2:	061b      	lsls	r3, r3, #24
 800b3f4:	4933      	ldr	r1, [pc, #204]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b3f6:	4313      	orrs	r3, r2
 800b3f8:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 800b3fa:	4b33      	ldr	r3, [pc, #204]	; (800b4c8 <HAL_RCC_OscConfig+0x4dc>)
 800b3fc:	2201      	movs	r2, #1
 800b3fe:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b400:	f7fe ff0c 	bl	800a21c <HAL_GetTick>
 800b404:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b406:	e008      	b.n	800b41a <HAL_RCC_OscConfig+0x42e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b408:	f7fe ff08 	bl	800a21c <HAL_GetTick>
 800b40c:	4602      	mov	r2, r0
 800b40e:	693b      	ldr	r3, [r7, #16]
 800b410:	1ad3      	subs	r3, r2, r3
 800b412:	2b02      	cmp	r3, #2
 800b414:	d901      	bls.n	800b41a <HAL_RCC_OscConfig+0x42e>
          {
            return HAL_TIMEOUT;
 800b416:	2303      	movs	r3, #3
 800b418:	e04d      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b41a:	4b2a      	ldr	r3, [pc, #168]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b41c:	681b      	ldr	r3, [r3, #0]
 800b41e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800b422:	2b00      	cmp	r3, #0
 800b424:	d0f0      	beq.n	800b408 <HAL_RCC_OscConfig+0x41c>
 800b426:	e045      	b.n	800b4b4 <HAL_RCC_OscConfig+0x4c8>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b428:	4b27      	ldr	r3, [pc, #156]	; (800b4c8 <HAL_RCC_OscConfig+0x4dc>)
 800b42a:	2200      	movs	r2, #0
 800b42c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b42e:	f7fe fef5 	bl	800a21c <HAL_GetTick>
 800b432:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b434:	e008      	b.n	800b448 <HAL_RCC_OscConfig+0x45c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b436:	f7fe fef1 	bl	800a21c <HAL_GetTick>
 800b43a:	4602      	mov	r2, r0
 800b43c:	693b      	ldr	r3, [r7, #16]
 800b43e:	1ad3      	subs	r3, r2, r3
 800b440:	2b02      	cmp	r3, #2
 800b442:	d901      	bls.n	800b448 <HAL_RCC_OscConfig+0x45c>
          {
            return HAL_TIMEOUT;
 800b444:	2303      	movs	r3, #3
 800b446:	e036      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b448:	4b1e      	ldr	r3, [pc, #120]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b44a:	681b      	ldr	r3, [r3, #0]
 800b44c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800b450:	2b00      	cmp	r3, #0
 800b452:	d1f0      	bne.n	800b436 <HAL_RCC_OscConfig+0x44a>
 800b454:	e02e      	b.n	800b4b4 <HAL_RCC_OscConfig+0x4c8>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b456:	687b      	ldr	r3, [r7, #4]
 800b458:	699b      	ldr	r3, [r3, #24]
 800b45a:	2b01      	cmp	r3, #1
 800b45c:	d101      	bne.n	800b462 <HAL_RCC_OscConfig+0x476>
      {
        return HAL_ERROR;
 800b45e:	2301      	movs	r3, #1
 800b460:	e029      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 800b462:	4b18      	ldr	r3, [pc, #96]	; (800b4c4 <HAL_RCC_OscConfig+0x4d8>)
 800b464:	685b      	ldr	r3, [r3, #4]
 800b466:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b468:	68fb      	ldr	r3, [r7, #12]
 800b46a:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 800b46e:	687b      	ldr	r3, [r7, #4]
 800b470:	69db      	ldr	r3, [r3, #28]
 800b472:	429a      	cmp	r2, r3
 800b474:	d11c      	bne.n	800b4b0 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800b476:	68fb      	ldr	r3, [r7, #12]
 800b478:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800b47c:	687b      	ldr	r3, [r7, #4]
 800b47e:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b480:	429a      	cmp	r2, r3
 800b482:	d115      	bne.n	800b4b0 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800b484:	68fa      	ldr	r2, [r7, #12]
 800b486:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800b48a:	4013      	ands	r3, r2
 800b48c:	687a      	ldr	r2, [r7, #4]
 800b48e:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800b490:	4293      	cmp	r3, r2
 800b492:	d10d      	bne.n	800b4b0 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800b494:	68fb      	ldr	r3, [r7, #12]
 800b496:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800b49a:	687b      	ldr	r3, [r7, #4]
 800b49c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800b49e:	429a      	cmp	r2, r3
 800b4a0:	d106      	bne.n	800b4b0 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 800b4a2:	68fb      	ldr	r3, [r7, #12]
 800b4a4:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800b4a8:	687b      	ldr	r3, [r7, #4]
 800b4aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800b4ac:	429a      	cmp	r2, r3
 800b4ae:	d001      	beq.n	800b4b4 <HAL_RCC_OscConfig+0x4c8>
        {
          return HAL_ERROR;
 800b4b0:	2301      	movs	r3, #1
 800b4b2:	e000      	b.n	800b4b6 <HAL_RCC_OscConfig+0x4ca>
        }
      }
    }
  }
  return HAL_OK;
 800b4b4:	2300      	movs	r3, #0
}
 800b4b6:	4618      	mov	r0, r3
 800b4b8:	3718      	adds	r7, #24
 800b4ba:	46bd      	mov	sp, r7
 800b4bc:	bd80      	pop	{r7, pc}
 800b4be:	bf00      	nop
 800b4c0:	40007000 	.word	0x40007000
 800b4c4:	40023800 	.word	0x40023800
 800b4c8:	42470060 	.word	0x42470060

0800b4cc <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 800b4cc:	b580      	push	{r7, lr}
 800b4ce:	b084      	sub	sp, #16
 800b4d0:	af00      	add	r7, sp, #0
 800b4d2:	6078      	str	r0, [r7, #4]
 800b4d4:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800b4d6:	687b      	ldr	r3, [r7, #4]
 800b4d8:	2b00      	cmp	r3, #0
 800b4da:	d101      	bne.n	800b4e0 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 800b4dc:	2301      	movs	r3, #1
 800b4de:	e0cc      	b.n	800b67a <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b4e0:	4b68      	ldr	r3, [pc, #416]	; (800b684 <HAL_RCC_ClockConfig+0x1b8>)
 800b4e2:	681b      	ldr	r3, [r3, #0]
 800b4e4:	f003 030f 	and.w	r3, r3, #15
 800b4e8:	683a      	ldr	r2, [r7, #0]
 800b4ea:	429a      	cmp	r2, r3
 800b4ec:	d90c      	bls.n	800b508 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b4ee:	4b65      	ldr	r3, [pc, #404]	; (800b684 <HAL_RCC_ClockConfig+0x1b8>)
 800b4f0:	683a      	ldr	r2, [r7, #0]
 800b4f2:	b2d2      	uxtb	r2, r2
 800b4f4:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b4f6:	4b63      	ldr	r3, [pc, #396]	; (800b684 <HAL_RCC_ClockConfig+0x1b8>)
 800b4f8:	681b      	ldr	r3, [r3, #0]
 800b4fa:	f003 030f 	and.w	r3, r3, #15
 800b4fe:	683a      	ldr	r2, [r7, #0]
 800b500:	429a      	cmp	r2, r3
 800b502:	d001      	beq.n	800b508 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 800b504:	2301      	movs	r3, #1
 800b506:	e0b8      	b.n	800b67a <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b508:	687b      	ldr	r3, [r7, #4]
 800b50a:	681b      	ldr	r3, [r3, #0]
 800b50c:	f003 0302 	and.w	r3, r3, #2
 800b510:	2b00      	cmp	r3, #0
 800b512:	d020      	beq.n	800b556 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b514:	687b      	ldr	r3, [r7, #4]
 800b516:	681b      	ldr	r3, [r3, #0]
 800b518:	f003 0304 	and.w	r3, r3, #4
 800b51c:	2b00      	cmp	r3, #0
 800b51e:	d005      	beq.n	800b52c <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b520:	4b59      	ldr	r3, [pc, #356]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b522:	689b      	ldr	r3, [r3, #8]
 800b524:	4a58      	ldr	r2, [pc, #352]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b526:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800b52a:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b52c:	687b      	ldr	r3, [r7, #4]
 800b52e:	681b      	ldr	r3, [r3, #0]
 800b530:	f003 0308 	and.w	r3, r3, #8
 800b534:	2b00      	cmp	r3, #0
 800b536:	d005      	beq.n	800b544 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b538:	4b53      	ldr	r3, [pc, #332]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b53a:	689b      	ldr	r3, [r3, #8]
 800b53c:	4a52      	ldr	r2, [pc, #328]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b53e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800b542:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b544:	4b50      	ldr	r3, [pc, #320]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b546:	689b      	ldr	r3, [r3, #8]
 800b548:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800b54c:	687b      	ldr	r3, [r7, #4]
 800b54e:	689b      	ldr	r3, [r3, #8]
 800b550:	494d      	ldr	r1, [pc, #308]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b552:	4313      	orrs	r3, r2
 800b554:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b556:	687b      	ldr	r3, [r7, #4]
 800b558:	681b      	ldr	r3, [r3, #0]
 800b55a:	f003 0301 	and.w	r3, r3, #1
 800b55e:	2b00      	cmp	r3, #0
 800b560:	d044      	beq.n	800b5ec <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b562:	687b      	ldr	r3, [r7, #4]
 800b564:	685b      	ldr	r3, [r3, #4]
 800b566:	2b01      	cmp	r3, #1
 800b568:	d107      	bne.n	800b57a <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b56a:	4b47      	ldr	r3, [pc, #284]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b56c:	681b      	ldr	r3, [r3, #0]
 800b56e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800b572:	2b00      	cmp	r3, #0
 800b574:	d119      	bne.n	800b5aa <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800b576:	2301      	movs	r3, #1
 800b578:	e07f      	b.n	800b67a <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b57a:	687b      	ldr	r3, [r7, #4]
 800b57c:	685b      	ldr	r3, [r3, #4]
 800b57e:	2b02      	cmp	r3, #2
 800b580:	d003      	beq.n	800b58a <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 800b582:	687b      	ldr	r3, [r7, #4]
 800b584:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b586:	2b03      	cmp	r3, #3
 800b588:	d107      	bne.n	800b59a <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b58a:	4b3f      	ldr	r3, [pc, #252]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b58c:	681b      	ldr	r3, [r3, #0]
 800b58e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800b592:	2b00      	cmp	r3, #0
 800b594:	d109      	bne.n	800b5aa <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800b596:	2301      	movs	r3, #1
 800b598:	e06f      	b.n	800b67a <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b59a:	4b3b      	ldr	r3, [pc, #236]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b59c:	681b      	ldr	r3, [r3, #0]
 800b59e:	f003 0302 	and.w	r3, r3, #2
 800b5a2:	2b00      	cmp	r3, #0
 800b5a4:	d101      	bne.n	800b5aa <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800b5a6:	2301      	movs	r3, #1
 800b5a8:	e067      	b.n	800b67a <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b5aa:	4b37      	ldr	r3, [pc, #220]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b5ac:	689b      	ldr	r3, [r3, #8]
 800b5ae:	f023 0203 	bic.w	r2, r3, #3
 800b5b2:	687b      	ldr	r3, [r7, #4]
 800b5b4:	685b      	ldr	r3, [r3, #4]
 800b5b6:	4934      	ldr	r1, [pc, #208]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b5b8:	4313      	orrs	r3, r2
 800b5ba:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 800b5bc:	f7fe fe2e 	bl	800a21c <HAL_GetTick>
 800b5c0:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b5c2:	e00a      	b.n	800b5da <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b5c4:	f7fe fe2a 	bl	800a21c <HAL_GetTick>
 800b5c8:	4602      	mov	r2, r0
 800b5ca:	68fb      	ldr	r3, [r7, #12]
 800b5cc:	1ad3      	subs	r3, r2, r3
 800b5ce:	f241 3288 	movw	r2, #5000	; 0x1388
 800b5d2:	4293      	cmp	r3, r2
 800b5d4:	d901      	bls.n	800b5da <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 800b5d6:	2303      	movs	r3, #3
 800b5d8:	e04f      	b.n	800b67a <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b5da:	4b2b      	ldr	r3, [pc, #172]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b5dc:	689b      	ldr	r3, [r3, #8]
 800b5de:	f003 020c 	and.w	r2, r3, #12
 800b5e2:	687b      	ldr	r3, [r7, #4]
 800b5e4:	685b      	ldr	r3, [r3, #4]
 800b5e6:	009b      	lsls	r3, r3, #2
 800b5e8:	429a      	cmp	r2, r3
 800b5ea:	d1eb      	bne.n	800b5c4 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b5ec:	4b25      	ldr	r3, [pc, #148]	; (800b684 <HAL_RCC_ClockConfig+0x1b8>)
 800b5ee:	681b      	ldr	r3, [r3, #0]
 800b5f0:	f003 030f 	and.w	r3, r3, #15
 800b5f4:	683a      	ldr	r2, [r7, #0]
 800b5f6:	429a      	cmp	r2, r3
 800b5f8:	d20c      	bcs.n	800b614 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b5fa:	4b22      	ldr	r3, [pc, #136]	; (800b684 <HAL_RCC_ClockConfig+0x1b8>)
 800b5fc:	683a      	ldr	r2, [r7, #0]
 800b5fe:	b2d2      	uxtb	r2, r2
 800b600:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b602:	4b20      	ldr	r3, [pc, #128]	; (800b684 <HAL_RCC_ClockConfig+0x1b8>)
 800b604:	681b      	ldr	r3, [r3, #0]
 800b606:	f003 030f 	and.w	r3, r3, #15
 800b60a:	683a      	ldr	r2, [r7, #0]
 800b60c:	429a      	cmp	r2, r3
 800b60e:	d001      	beq.n	800b614 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 800b610:	2301      	movs	r3, #1
 800b612:	e032      	b.n	800b67a <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b614:	687b      	ldr	r3, [r7, #4]
 800b616:	681b      	ldr	r3, [r3, #0]
 800b618:	f003 0304 	and.w	r3, r3, #4
 800b61c:	2b00      	cmp	r3, #0
 800b61e:	d008      	beq.n	800b632 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b620:	4b19      	ldr	r3, [pc, #100]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b622:	689b      	ldr	r3, [r3, #8]
 800b624:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800b628:	687b      	ldr	r3, [r7, #4]
 800b62a:	68db      	ldr	r3, [r3, #12]
 800b62c:	4916      	ldr	r1, [pc, #88]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b62e:	4313      	orrs	r3, r2
 800b630:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b632:	687b      	ldr	r3, [r7, #4]
 800b634:	681b      	ldr	r3, [r3, #0]
 800b636:	f003 0308 	and.w	r3, r3, #8
 800b63a:	2b00      	cmp	r3, #0
 800b63c:	d009      	beq.n	800b652 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b63e:	4b12      	ldr	r3, [pc, #72]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b640:	689b      	ldr	r3, [r3, #8]
 800b642:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800b646:	687b      	ldr	r3, [r7, #4]
 800b648:	691b      	ldr	r3, [r3, #16]
 800b64a:	00db      	lsls	r3, r3, #3
 800b64c:	490e      	ldr	r1, [pc, #56]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b64e:	4313      	orrs	r3, r2
 800b650:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b652:	f000 f821 	bl	800b698 <HAL_RCC_GetSysClockFreq>
 800b656:	4601      	mov	r1, r0
 800b658:	4b0b      	ldr	r3, [pc, #44]	; (800b688 <HAL_RCC_ClockConfig+0x1bc>)
 800b65a:	689b      	ldr	r3, [r3, #8]
 800b65c:	091b      	lsrs	r3, r3, #4
 800b65e:	f003 030f 	and.w	r3, r3, #15
 800b662:	4a0a      	ldr	r2, [pc, #40]	; (800b68c <HAL_RCC_ClockConfig+0x1c0>)
 800b664:	5cd3      	ldrb	r3, [r2, r3]
 800b666:	fa21 f303 	lsr.w	r3, r1, r3
 800b66a:	4a09      	ldr	r2, [pc, #36]	; (800b690 <HAL_RCC_ClockConfig+0x1c4>)
 800b66c:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 800b66e:	4b09      	ldr	r3, [pc, #36]	; (800b694 <HAL_RCC_ClockConfig+0x1c8>)
 800b670:	681b      	ldr	r3, [r3, #0]
 800b672:	4618      	mov	r0, r3
 800b674:	f7fe fd8e 	bl	800a194 <HAL_InitTick>

  return HAL_OK;
 800b678:	2300      	movs	r3, #0
}
 800b67a:	4618      	mov	r0, r3
 800b67c:	3710      	adds	r7, #16
 800b67e:	46bd      	mov	sp, r7
 800b680:	bd80      	pop	{r7, pc}
 800b682:	bf00      	nop
 800b684:	40023c00 	.word	0x40023c00
 800b688:	40023800 	.word	0x40023800
 800b68c:	08011a98 	.word	0x08011a98
 800b690:	20000000 	.word	0x20000000
 800b694:	20000004 	.word	0x20000004

0800b698 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 800b698:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b69a:	b085      	sub	sp, #20
 800b69c:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 800b69e:	2300      	movs	r3, #0
 800b6a0:	607b      	str	r3, [r7, #4]
 800b6a2:	2300      	movs	r3, #0
 800b6a4:	60fb      	str	r3, [r7, #12]
 800b6a6:	2300      	movs	r3, #0
 800b6a8:	603b      	str	r3, [r7, #0]
  uint32_t sysclockfreq = 0U;
 800b6aa:	2300      	movs	r3, #0
 800b6ac:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b6ae:	4b63      	ldr	r3, [pc, #396]	; (800b83c <HAL_RCC_GetSysClockFreq+0x1a4>)
 800b6b0:	689b      	ldr	r3, [r3, #8]
 800b6b2:	f003 030c 	and.w	r3, r3, #12
 800b6b6:	2b04      	cmp	r3, #4
 800b6b8:	d007      	beq.n	800b6ca <HAL_RCC_GetSysClockFreq+0x32>
 800b6ba:	2b08      	cmp	r3, #8
 800b6bc:	d008      	beq.n	800b6d0 <HAL_RCC_GetSysClockFreq+0x38>
 800b6be:	2b00      	cmp	r3, #0
 800b6c0:	f040 80b4 	bne.w	800b82c <HAL_RCC_GetSysClockFreq+0x194>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 800b6c4:	4b5e      	ldr	r3, [pc, #376]	; (800b840 <HAL_RCC_GetSysClockFreq+0x1a8>)
 800b6c6:	60bb      	str	r3, [r7, #8]
       break;
 800b6c8:	e0b3      	b.n	800b832 <HAL_RCC_GetSysClockFreq+0x19a>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 800b6ca:	4b5e      	ldr	r3, [pc, #376]	; (800b844 <HAL_RCC_GetSysClockFreq+0x1ac>)
 800b6cc:	60bb      	str	r3, [r7, #8]
      break;
 800b6ce:	e0b0      	b.n	800b832 <HAL_RCC_GetSysClockFreq+0x19a>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b6d0:	4b5a      	ldr	r3, [pc, #360]	; (800b83c <HAL_RCC_GetSysClockFreq+0x1a4>)
 800b6d2:	685b      	ldr	r3, [r3, #4]
 800b6d4:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800b6d8:	607b      	str	r3, [r7, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b6da:	4b58      	ldr	r3, [pc, #352]	; (800b83c <HAL_RCC_GetSysClockFreq+0x1a4>)
 800b6dc:	685b      	ldr	r3, [r3, #4]
 800b6de:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800b6e2:	2b00      	cmp	r3, #0
 800b6e4:	d04a      	beq.n	800b77c <HAL_RCC_GetSysClockFreq+0xe4>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b6e6:	4b55      	ldr	r3, [pc, #340]	; (800b83c <HAL_RCC_GetSysClockFreq+0x1a4>)
 800b6e8:	685b      	ldr	r3, [r3, #4]
 800b6ea:	099b      	lsrs	r3, r3, #6
 800b6ec:	f04f 0400 	mov.w	r4, #0
 800b6f0:	f240 11ff 	movw	r1, #511	; 0x1ff
 800b6f4:	f04f 0200 	mov.w	r2, #0
 800b6f8:	ea03 0501 	and.w	r5, r3, r1
 800b6fc:	ea04 0602 	and.w	r6, r4, r2
 800b700:	4629      	mov	r1, r5
 800b702:	4632      	mov	r2, r6
 800b704:	f04f 0300 	mov.w	r3, #0
 800b708:	f04f 0400 	mov.w	r4, #0
 800b70c:	0154      	lsls	r4, r2, #5
 800b70e:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 800b712:	014b      	lsls	r3, r1, #5
 800b714:	4619      	mov	r1, r3
 800b716:	4622      	mov	r2, r4
 800b718:	1b49      	subs	r1, r1, r5
 800b71a:	eb62 0206 	sbc.w	r2, r2, r6
 800b71e:	f04f 0300 	mov.w	r3, #0
 800b722:	f04f 0400 	mov.w	r4, #0
 800b726:	0194      	lsls	r4, r2, #6
 800b728:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 800b72c:	018b      	lsls	r3, r1, #6
 800b72e:	1a5b      	subs	r3, r3, r1
 800b730:	eb64 0402 	sbc.w	r4, r4, r2
 800b734:	f04f 0100 	mov.w	r1, #0
 800b738:	f04f 0200 	mov.w	r2, #0
 800b73c:	00e2      	lsls	r2, r4, #3
 800b73e:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 800b742:	00d9      	lsls	r1, r3, #3
 800b744:	460b      	mov	r3, r1
 800b746:	4614      	mov	r4, r2
 800b748:	195b      	adds	r3, r3, r5
 800b74a:	eb44 0406 	adc.w	r4, r4, r6
 800b74e:	f04f 0100 	mov.w	r1, #0
 800b752:	f04f 0200 	mov.w	r2, #0
 800b756:	0262      	lsls	r2, r4, #9
 800b758:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 800b75c:	0259      	lsls	r1, r3, #9
 800b75e:	460b      	mov	r3, r1
 800b760:	4614      	mov	r4, r2
 800b762:	4618      	mov	r0, r3
 800b764:	4621      	mov	r1, r4
 800b766:	687b      	ldr	r3, [r7, #4]
 800b768:	f04f 0400 	mov.w	r4, #0
 800b76c:	461a      	mov	r2, r3
 800b76e:	4623      	mov	r3, r4
 800b770:	f7fb ff9c 	bl	80076ac <__aeabi_uldivmod>
 800b774:	4603      	mov	r3, r0
 800b776:	460c      	mov	r4, r1
 800b778:	60fb      	str	r3, [r7, #12]
 800b77a:	e049      	b.n	800b810 <HAL_RCC_GetSysClockFreq+0x178>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b77c:	4b2f      	ldr	r3, [pc, #188]	; (800b83c <HAL_RCC_GetSysClockFreq+0x1a4>)
 800b77e:	685b      	ldr	r3, [r3, #4]
 800b780:	099b      	lsrs	r3, r3, #6
 800b782:	f04f 0400 	mov.w	r4, #0
 800b786:	f240 11ff 	movw	r1, #511	; 0x1ff
 800b78a:	f04f 0200 	mov.w	r2, #0
 800b78e:	ea03 0501 	and.w	r5, r3, r1
 800b792:	ea04 0602 	and.w	r6, r4, r2
 800b796:	4629      	mov	r1, r5
 800b798:	4632      	mov	r2, r6
 800b79a:	f04f 0300 	mov.w	r3, #0
 800b79e:	f04f 0400 	mov.w	r4, #0
 800b7a2:	0154      	lsls	r4, r2, #5
 800b7a4:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 800b7a8:	014b      	lsls	r3, r1, #5
 800b7aa:	4619      	mov	r1, r3
 800b7ac:	4622      	mov	r2, r4
 800b7ae:	1b49      	subs	r1, r1, r5
 800b7b0:	eb62 0206 	sbc.w	r2, r2, r6
 800b7b4:	f04f 0300 	mov.w	r3, #0
 800b7b8:	f04f 0400 	mov.w	r4, #0
 800b7bc:	0194      	lsls	r4, r2, #6
 800b7be:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 800b7c2:	018b      	lsls	r3, r1, #6
 800b7c4:	1a5b      	subs	r3, r3, r1
 800b7c6:	eb64 0402 	sbc.w	r4, r4, r2
 800b7ca:	f04f 0100 	mov.w	r1, #0
 800b7ce:	f04f 0200 	mov.w	r2, #0
 800b7d2:	00e2      	lsls	r2, r4, #3
 800b7d4:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 800b7d8:	00d9      	lsls	r1, r3, #3
 800b7da:	460b      	mov	r3, r1
 800b7dc:	4614      	mov	r4, r2
 800b7de:	195b      	adds	r3, r3, r5
 800b7e0:	eb44 0406 	adc.w	r4, r4, r6
 800b7e4:	f04f 0100 	mov.w	r1, #0
 800b7e8:	f04f 0200 	mov.w	r2, #0
 800b7ec:	02a2      	lsls	r2, r4, #10
 800b7ee:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 800b7f2:	0299      	lsls	r1, r3, #10
 800b7f4:	460b      	mov	r3, r1
 800b7f6:	4614      	mov	r4, r2
 800b7f8:	4618      	mov	r0, r3
 800b7fa:	4621      	mov	r1, r4
 800b7fc:	687b      	ldr	r3, [r7, #4]
 800b7fe:	f04f 0400 	mov.w	r4, #0
 800b802:	461a      	mov	r2, r3
 800b804:	4623      	mov	r3, r4
 800b806:	f7fb ff51 	bl	80076ac <__aeabi_uldivmod>
 800b80a:	4603      	mov	r3, r0
 800b80c:	460c      	mov	r4, r1
 800b80e:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b810:	4b0a      	ldr	r3, [pc, #40]	; (800b83c <HAL_RCC_GetSysClockFreq+0x1a4>)
 800b812:	685b      	ldr	r3, [r3, #4]
 800b814:	0c1b      	lsrs	r3, r3, #16
 800b816:	f003 0303 	and.w	r3, r3, #3
 800b81a:	3301      	adds	r3, #1
 800b81c:	005b      	lsls	r3, r3, #1
 800b81e:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco/pllp;
 800b820:	68fa      	ldr	r2, [r7, #12]
 800b822:	683b      	ldr	r3, [r7, #0]
 800b824:	fbb2 f3f3 	udiv	r3, r2, r3
 800b828:	60bb      	str	r3, [r7, #8]
      break;
 800b82a:	e002      	b.n	800b832 <HAL_RCC_GetSysClockFreq+0x19a>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 800b82c:	4b04      	ldr	r3, [pc, #16]	; (800b840 <HAL_RCC_GetSysClockFreq+0x1a8>)
 800b82e:	60bb      	str	r3, [r7, #8]
      break;
 800b830:	bf00      	nop
    }
  }
  return sysclockfreq;
 800b832:	68bb      	ldr	r3, [r7, #8]
}
 800b834:	4618      	mov	r0, r3
 800b836:	3714      	adds	r7, #20
 800b838:	46bd      	mov	sp, r7
 800b83a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b83c:	40023800 	.word	0x40023800
 800b840:	00f42400 	.word	0x00f42400
 800b844:	007a1200 	.word	0x007a1200

0800b848 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 800b848:	b480      	push	{r7}
 800b84a:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 800b84c:	4b03      	ldr	r3, [pc, #12]	; (800b85c <HAL_RCC_GetHCLKFreq+0x14>)
 800b84e:	681b      	ldr	r3, [r3, #0]
}
 800b850:	4618      	mov	r0, r3
 800b852:	46bd      	mov	sp, r7
 800b854:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b858:	4770      	bx	lr
 800b85a:	bf00      	nop
 800b85c:	20000000 	.word	0x20000000

0800b860 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 800b860:	b580      	push	{r7, lr}
 800b862:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b864:	f7ff fff0 	bl	800b848 <HAL_RCC_GetHCLKFreq>
 800b868:	4601      	mov	r1, r0
 800b86a:	4b05      	ldr	r3, [pc, #20]	; (800b880 <HAL_RCC_GetPCLK1Freq+0x20>)
 800b86c:	689b      	ldr	r3, [r3, #8]
 800b86e:	0a9b      	lsrs	r3, r3, #10
 800b870:	f003 0307 	and.w	r3, r3, #7
 800b874:	4a03      	ldr	r2, [pc, #12]	; (800b884 <HAL_RCC_GetPCLK1Freq+0x24>)
 800b876:	5cd3      	ldrb	r3, [r2, r3]
 800b878:	fa21 f303 	lsr.w	r3, r1, r3
}
 800b87c:	4618      	mov	r0, r3
 800b87e:	bd80      	pop	{r7, pc}
 800b880:	40023800 	.word	0x40023800
 800b884:	08011aa8 	.word	0x08011aa8

0800b888 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 800b888:	b580      	push	{r7, lr}
 800b88a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 800b88c:	f7ff ffdc 	bl	800b848 <HAL_RCC_GetHCLKFreq>
 800b890:	4601      	mov	r1, r0
 800b892:	4b05      	ldr	r3, [pc, #20]	; (800b8a8 <HAL_RCC_GetPCLK2Freq+0x20>)
 800b894:	689b      	ldr	r3, [r3, #8]
 800b896:	0b5b      	lsrs	r3, r3, #13
 800b898:	f003 0307 	and.w	r3, r3, #7
 800b89c:	4a03      	ldr	r2, [pc, #12]	; (800b8ac <HAL_RCC_GetPCLK2Freq+0x24>)
 800b89e:	5cd3      	ldrb	r3, [r2, r3]
 800b8a0:	fa21 f303 	lsr.w	r3, r1, r3
}
 800b8a4:	4618      	mov	r0, r3
 800b8a6:	bd80      	pop	{r7, pc}
 800b8a8:	40023800 	.word	0x40023800
 800b8ac:	08011aa8 	.word	0x08011aa8

0800b8b0 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 800b8b0:	b580      	push	{r7, lr}
 800b8b2:	b082      	sub	sp, #8
 800b8b4:	af00      	add	r7, sp, #0
 800b8b6:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 800b8b8:	687b      	ldr	r3, [r7, #4]
 800b8ba:	2b00      	cmp	r3, #0
 800b8bc:	d101      	bne.n	800b8c2 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 800b8be:	2301      	movs	r3, #1
 800b8c0:	e03f      	b.n	800b942 <HAL_UART_Init+0x92>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 800b8c2:	687b      	ldr	r3, [r7, #4]
 800b8c4:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 800b8c8:	b2db      	uxtb	r3, r3
 800b8ca:	2b00      	cmp	r3, #0
 800b8cc:	d106      	bne.n	800b8dc <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 800b8ce:	687b      	ldr	r3, [r7, #4]
 800b8d0:	2200      	movs	r2, #0
 800b8d2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 800b8d6:	6878      	ldr	r0, [r7, #4]
 800b8d8:	f7fe fac8 	bl	8009e6c <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 800b8dc:	687b      	ldr	r3, [r7, #4]
 800b8de:	2224      	movs	r2, #36	; 0x24
 800b8e0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 800b8e4:	687b      	ldr	r3, [r7, #4]
 800b8e6:	681b      	ldr	r3, [r3, #0]
 800b8e8:	68da      	ldr	r2, [r3, #12]
 800b8ea:	687b      	ldr	r3, [r7, #4]
 800b8ec:	681b      	ldr	r3, [r3, #0]
 800b8ee:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800b8f2:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 800b8f4:	6878      	ldr	r0, [r7, #4]
 800b8f6:	f000 f829 	bl	800b94c <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800b8fa:	687b      	ldr	r3, [r7, #4]
 800b8fc:	681b      	ldr	r3, [r3, #0]
 800b8fe:	691a      	ldr	r2, [r3, #16]
 800b900:	687b      	ldr	r3, [r7, #4]
 800b902:	681b      	ldr	r3, [r3, #0]
 800b904:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800b908:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800b90a:	687b      	ldr	r3, [r7, #4]
 800b90c:	681b      	ldr	r3, [r3, #0]
 800b90e:	695a      	ldr	r2, [r3, #20]
 800b910:	687b      	ldr	r3, [r7, #4]
 800b912:	681b      	ldr	r3, [r3, #0]
 800b914:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800b918:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 800b91a:	687b      	ldr	r3, [r7, #4]
 800b91c:	681b      	ldr	r3, [r3, #0]
 800b91e:	68da      	ldr	r2, [r3, #12]
 800b920:	687b      	ldr	r3, [r7, #4]
 800b922:	681b      	ldr	r3, [r3, #0]
 800b924:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800b928:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800b92a:	687b      	ldr	r3, [r7, #4]
 800b92c:	2200      	movs	r2, #0
 800b92e:	63da      	str	r2, [r3, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 800b930:	687b      	ldr	r3, [r7, #4]
 800b932:	2220      	movs	r2, #32
 800b934:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 800b938:	687b      	ldr	r3, [r7, #4]
 800b93a:	2220      	movs	r2, #32
 800b93c:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

  return HAL_OK;
 800b940:	2300      	movs	r3, #0
}
 800b942:	4618      	mov	r0, r3
 800b944:	3708      	adds	r7, #8
 800b946:	46bd      	mov	sp, r7
 800b948:	bd80      	pop	{r7, pc}
	...

0800b94c <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 800b94c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b950:	b085      	sub	sp, #20
 800b952:	af00      	add	r7, sp, #0
 800b954:	6078      	str	r0, [r7, #4]
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800b956:	687b      	ldr	r3, [r7, #4]
 800b958:	681b      	ldr	r3, [r3, #0]
 800b95a:	691b      	ldr	r3, [r3, #16]
 800b95c:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800b960:	687b      	ldr	r3, [r7, #4]
 800b962:	68da      	ldr	r2, [r3, #12]
 800b964:	687b      	ldr	r3, [r7, #4]
 800b966:	681b      	ldr	r3, [r3, #0]
 800b968:	430a      	orrs	r2, r1
 800b96a:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 800b96c:	687b      	ldr	r3, [r7, #4]
 800b96e:	689a      	ldr	r2, [r3, #8]
 800b970:	687b      	ldr	r3, [r7, #4]
 800b972:	691b      	ldr	r3, [r3, #16]
 800b974:	431a      	orrs	r2, r3
 800b976:	687b      	ldr	r3, [r7, #4]
 800b978:	695b      	ldr	r3, [r3, #20]
 800b97a:	431a      	orrs	r2, r3
 800b97c:	687b      	ldr	r3, [r7, #4]
 800b97e:	69db      	ldr	r3, [r3, #28]
 800b980:	4313      	orrs	r3, r2
 800b982:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(huart->Instance->CR1,
 800b984:	687b      	ldr	r3, [r7, #4]
 800b986:	681b      	ldr	r3, [r3, #0]
 800b988:	68db      	ldr	r3, [r3, #12]
 800b98a:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 800b98e:	f023 030c 	bic.w	r3, r3, #12
 800b992:	687a      	ldr	r2, [r7, #4]
 800b994:	6812      	ldr	r2, [r2, #0]
 800b996:	68f9      	ldr	r1, [r7, #12]
 800b998:	430b      	orrs	r3, r1
 800b99a:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 800b99c:	687b      	ldr	r3, [r7, #4]
 800b99e:	681b      	ldr	r3, [r3, #0]
 800b9a0:	695b      	ldr	r3, [r3, #20]
 800b9a2:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 800b9a6:	687b      	ldr	r3, [r7, #4]
 800b9a8:	699a      	ldr	r2, [r3, #24]
 800b9aa:	687b      	ldr	r3, [r7, #4]
 800b9ac:	681b      	ldr	r3, [r3, #0]
 800b9ae:	430a      	orrs	r2, r1
 800b9b0:	615a      	str	r2, [r3, #20]

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800b9b2:	687b      	ldr	r3, [r7, #4]
 800b9b4:	69db      	ldr	r3, [r3, #28]
 800b9b6:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800b9ba:	f040 818b 	bne.w	800bcd4 <UART_SetConfig+0x388>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800b9be:	687b      	ldr	r3, [r7, #4]
 800b9c0:	681b      	ldr	r3, [r3, #0]
 800b9c2:	4ac1      	ldr	r2, [pc, #772]	; (800bcc8 <UART_SetConfig+0x37c>)
 800b9c4:	4293      	cmp	r3, r2
 800b9c6:	d005      	beq.n	800b9d4 <UART_SetConfig+0x88>
 800b9c8:	687b      	ldr	r3, [r7, #4]
 800b9ca:	681b      	ldr	r3, [r3, #0]
 800b9cc:	4abf      	ldr	r2, [pc, #764]	; (800bccc <UART_SetConfig+0x380>)
 800b9ce:	4293      	cmp	r3, r2
 800b9d0:	f040 80bd 	bne.w	800bb4e <UART_SetConfig+0x202>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 800b9d4:	f7ff ff58 	bl	800b888 <HAL_RCC_GetPCLK2Freq>
 800b9d8:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800b9da:	68bb      	ldr	r3, [r7, #8]
 800b9dc:	461d      	mov	r5, r3
 800b9de:	f04f 0600 	mov.w	r6, #0
 800b9e2:	46a8      	mov	r8, r5
 800b9e4:	46b1      	mov	r9, r6
 800b9e6:	eb18 0308 	adds.w	r3, r8, r8
 800b9ea:	eb49 0409 	adc.w	r4, r9, r9
 800b9ee:	4698      	mov	r8, r3
 800b9f0:	46a1      	mov	r9, r4
 800b9f2:	eb18 0805 	adds.w	r8, r8, r5
 800b9f6:	eb49 0906 	adc.w	r9, r9, r6
 800b9fa:	f04f 0100 	mov.w	r1, #0
 800b9fe:	f04f 0200 	mov.w	r2, #0
 800ba02:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 800ba06:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 800ba0a:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 800ba0e:	4688      	mov	r8, r1
 800ba10:	4691      	mov	r9, r2
 800ba12:	eb18 0005 	adds.w	r0, r8, r5
 800ba16:	eb49 0106 	adc.w	r1, r9, r6
 800ba1a:	687b      	ldr	r3, [r7, #4]
 800ba1c:	685b      	ldr	r3, [r3, #4]
 800ba1e:	461d      	mov	r5, r3
 800ba20:	f04f 0600 	mov.w	r6, #0
 800ba24:	196b      	adds	r3, r5, r5
 800ba26:	eb46 0406 	adc.w	r4, r6, r6
 800ba2a:	461a      	mov	r2, r3
 800ba2c:	4623      	mov	r3, r4
 800ba2e:	f7fb fe3d 	bl	80076ac <__aeabi_uldivmod>
 800ba32:	4603      	mov	r3, r0
 800ba34:	460c      	mov	r4, r1
 800ba36:	461a      	mov	r2, r3
 800ba38:	4ba5      	ldr	r3, [pc, #660]	; (800bcd0 <UART_SetConfig+0x384>)
 800ba3a:	fba3 2302 	umull	r2, r3, r3, r2
 800ba3e:	095b      	lsrs	r3, r3, #5
 800ba40:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800ba44:	68bb      	ldr	r3, [r7, #8]
 800ba46:	461d      	mov	r5, r3
 800ba48:	f04f 0600 	mov.w	r6, #0
 800ba4c:	46a9      	mov	r9, r5
 800ba4e:	46b2      	mov	sl, r6
 800ba50:	eb19 0309 	adds.w	r3, r9, r9
 800ba54:	eb4a 040a 	adc.w	r4, sl, sl
 800ba58:	4699      	mov	r9, r3
 800ba5a:	46a2      	mov	sl, r4
 800ba5c:	eb19 0905 	adds.w	r9, r9, r5
 800ba60:	eb4a 0a06 	adc.w	sl, sl, r6
 800ba64:	f04f 0100 	mov.w	r1, #0
 800ba68:	f04f 0200 	mov.w	r2, #0
 800ba6c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800ba70:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800ba74:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800ba78:	4689      	mov	r9, r1
 800ba7a:	4692      	mov	sl, r2
 800ba7c:	eb19 0005 	adds.w	r0, r9, r5
 800ba80:	eb4a 0106 	adc.w	r1, sl, r6
 800ba84:	687b      	ldr	r3, [r7, #4]
 800ba86:	685b      	ldr	r3, [r3, #4]
 800ba88:	461d      	mov	r5, r3
 800ba8a:	f04f 0600 	mov.w	r6, #0
 800ba8e:	196b      	adds	r3, r5, r5
 800ba90:	eb46 0406 	adc.w	r4, r6, r6
 800ba94:	461a      	mov	r2, r3
 800ba96:	4623      	mov	r3, r4
 800ba98:	f7fb fe08 	bl	80076ac <__aeabi_uldivmod>
 800ba9c:	4603      	mov	r3, r0
 800ba9e:	460c      	mov	r4, r1
 800baa0:	461a      	mov	r2, r3
 800baa2:	4b8b      	ldr	r3, [pc, #556]	; (800bcd0 <UART_SetConfig+0x384>)
 800baa4:	fba3 1302 	umull	r1, r3, r3, r2
 800baa8:	095b      	lsrs	r3, r3, #5
 800baaa:	2164      	movs	r1, #100	; 0x64
 800baac:	fb01 f303 	mul.w	r3, r1, r3
 800bab0:	1ad3      	subs	r3, r2, r3
 800bab2:	00db      	lsls	r3, r3, #3
 800bab4:	3332      	adds	r3, #50	; 0x32
 800bab6:	4a86      	ldr	r2, [pc, #536]	; (800bcd0 <UART_SetConfig+0x384>)
 800bab8:	fba2 2303 	umull	r2, r3, r2, r3
 800babc:	095b      	lsrs	r3, r3, #5
 800babe:	005b      	lsls	r3, r3, #1
 800bac0:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800bac4:	4498      	add	r8, r3
 800bac6:	68bb      	ldr	r3, [r7, #8]
 800bac8:	461d      	mov	r5, r3
 800baca:	f04f 0600 	mov.w	r6, #0
 800bace:	46a9      	mov	r9, r5
 800bad0:	46b2      	mov	sl, r6
 800bad2:	eb19 0309 	adds.w	r3, r9, r9
 800bad6:	eb4a 040a 	adc.w	r4, sl, sl
 800bada:	4699      	mov	r9, r3
 800badc:	46a2      	mov	sl, r4
 800bade:	eb19 0905 	adds.w	r9, r9, r5
 800bae2:	eb4a 0a06 	adc.w	sl, sl, r6
 800bae6:	f04f 0100 	mov.w	r1, #0
 800baea:	f04f 0200 	mov.w	r2, #0
 800baee:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800baf2:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800baf6:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800bafa:	4689      	mov	r9, r1
 800bafc:	4692      	mov	sl, r2
 800bafe:	eb19 0005 	adds.w	r0, r9, r5
 800bb02:	eb4a 0106 	adc.w	r1, sl, r6
 800bb06:	687b      	ldr	r3, [r7, #4]
 800bb08:	685b      	ldr	r3, [r3, #4]
 800bb0a:	461d      	mov	r5, r3
 800bb0c:	f04f 0600 	mov.w	r6, #0
 800bb10:	196b      	adds	r3, r5, r5
 800bb12:	eb46 0406 	adc.w	r4, r6, r6
 800bb16:	461a      	mov	r2, r3
 800bb18:	4623      	mov	r3, r4
 800bb1a:	f7fb fdc7 	bl	80076ac <__aeabi_uldivmod>
 800bb1e:	4603      	mov	r3, r0
 800bb20:	460c      	mov	r4, r1
 800bb22:	461a      	mov	r2, r3
 800bb24:	4b6a      	ldr	r3, [pc, #424]	; (800bcd0 <UART_SetConfig+0x384>)
 800bb26:	fba3 1302 	umull	r1, r3, r3, r2
 800bb2a:	095b      	lsrs	r3, r3, #5
 800bb2c:	2164      	movs	r1, #100	; 0x64
 800bb2e:	fb01 f303 	mul.w	r3, r1, r3
 800bb32:	1ad3      	subs	r3, r2, r3
 800bb34:	00db      	lsls	r3, r3, #3
 800bb36:	3332      	adds	r3, #50	; 0x32
 800bb38:	4a65      	ldr	r2, [pc, #404]	; (800bcd0 <UART_SetConfig+0x384>)
 800bb3a:	fba2 2303 	umull	r2, r3, r2, r3
 800bb3e:	095b      	lsrs	r3, r3, #5
 800bb40:	f003 0207 	and.w	r2, r3, #7
 800bb44:	687b      	ldr	r3, [r7, #4]
 800bb46:	681b      	ldr	r3, [r3, #0]
 800bb48:	4442      	add	r2, r8
 800bb4a:	609a      	str	r2, [r3, #8]
 800bb4c:	e26f      	b.n	800c02e <UART_SetConfig+0x6e2>
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 800bb4e:	f7ff fe87 	bl	800b860 <HAL_RCC_GetPCLK1Freq>
 800bb52:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 800bb54:	68bb      	ldr	r3, [r7, #8]
 800bb56:	461d      	mov	r5, r3
 800bb58:	f04f 0600 	mov.w	r6, #0
 800bb5c:	46a8      	mov	r8, r5
 800bb5e:	46b1      	mov	r9, r6
 800bb60:	eb18 0308 	adds.w	r3, r8, r8
 800bb64:	eb49 0409 	adc.w	r4, r9, r9
 800bb68:	4698      	mov	r8, r3
 800bb6a:	46a1      	mov	r9, r4
 800bb6c:	eb18 0805 	adds.w	r8, r8, r5
 800bb70:	eb49 0906 	adc.w	r9, r9, r6
 800bb74:	f04f 0100 	mov.w	r1, #0
 800bb78:	f04f 0200 	mov.w	r2, #0
 800bb7c:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 800bb80:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 800bb84:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 800bb88:	4688      	mov	r8, r1
 800bb8a:	4691      	mov	r9, r2
 800bb8c:	eb18 0005 	adds.w	r0, r8, r5
 800bb90:	eb49 0106 	adc.w	r1, r9, r6
 800bb94:	687b      	ldr	r3, [r7, #4]
 800bb96:	685b      	ldr	r3, [r3, #4]
 800bb98:	461d      	mov	r5, r3
 800bb9a:	f04f 0600 	mov.w	r6, #0
 800bb9e:	196b      	adds	r3, r5, r5
 800bba0:	eb46 0406 	adc.w	r4, r6, r6
 800bba4:	461a      	mov	r2, r3
 800bba6:	4623      	mov	r3, r4
 800bba8:	f7fb fd80 	bl	80076ac <__aeabi_uldivmod>
 800bbac:	4603      	mov	r3, r0
 800bbae:	460c      	mov	r4, r1
 800bbb0:	461a      	mov	r2, r3
 800bbb2:	4b47      	ldr	r3, [pc, #284]	; (800bcd0 <UART_SetConfig+0x384>)
 800bbb4:	fba3 2302 	umull	r2, r3, r3, r2
 800bbb8:	095b      	lsrs	r3, r3, #5
 800bbba:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800bbbe:	68bb      	ldr	r3, [r7, #8]
 800bbc0:	461d      	mov	r5, r3
 800bbc2:	f04f 0600 	mov.w	r6, #0
 800bbc6:	46a9      	mov	r9, r5
 800bbc8:	46b2      	mov	sl, r6
 800bbca:	eb19 0309 	adds.w	r3, r9, r9
 800bbce:	eb4a 040a 	adc.w	r4, sl, sl
 800bbd2:	4699      	mov	r9, r3
 800bbd4:	46a2      	mov	sl, r4
 800bbd6:	eb19 0905 	adds.w	r9, r9, r5
 800bbda:	eb4a 0a06 	adc.w	sl, sl, r6
 800bbde:	f04f 0100 	mov.w	r1, #0
 800bbe2:	f04f 0200 	mov.w	r2, #0
 800bbe6:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800bbea:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800bbee:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800bbf2:	4689      	mov	r9, r1
 800bbf4:	4692      	mov	sl, r2
 800bbf6:	eb19 0005 	adds.w	r0, r9, r5
 800bbfa:	eb4a 0106 	adc.w	r1, sl, r6
 800bbfe:	687b      	ldr	r3, [r7, #4]
 800bc00:	685b      	ldr	r3, [r3, #4]
 800bc02:	461d      	mov	r5, r3
 800bc04:	f04f 0600 	mov.w	r6, #0
 800bc08:	196b      	adds	r3, r5, r5
 800bc0a:	eb46 0406 	adc.w	r4, r6, r6
 800bc0e:	461a      	mov	r2, r3
 800bc10:	4623      	mov	r3, r4
 800bc12:	f7fb fd4b 	bl	80076ac <__aeabi_uldivmod>
 800bc16:	4603      	mov	r3, r0
 800bc18:	460c      	mov	r4, r1
 800bc1a:	461a      	mov	r2, r3
 800bc1c:	4b2c      	ldr	r3, [pc, #176]	; (800bcd0 <UART_SetConfig+0x384>)
 800bc1e:	fba3 1302 	umull	r1, r3, r3, r2
 800bc22:	095b      	lsrs	r3, r3, #5
 800bc24:	2164      	movs	r1, #100	; 0x64
 800bc26:	fb01 f303 	mul.w	r3, r1, r3
 800bc2a:	1ad3      	subs	r3, r2, r3
 800bc2c:	00db      	lsls	r3, r3, #3
 800bc2e:	3332      	adds	r3, #50	; 0x32
 800bc30:	4a27      	ldr	r2, [pc, #156]	; (800bcd0 <UART_SetConfig+0x384>)
 800bc32:	fba2 2303 	umull	r2, r3, r2, r3
 800bc36:	095b      	lsrs	r3, r3, #5
 800bc38:	005b      	lsls	r3, r3, #1
 800bc3a:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800bc3e:	4498      	add	r8, r3
 800bc40:	68bb      	ldr	r3, [r7, #8]
 800bc42:	461d      	mov	r5, r3
 800bc44:	f04f 0600 	mov.w	r6, #0
 800bc48:	46a9      	mov	r9, r5
 800bc4a:	46b2      	mov	sl, r6
 800bc4c:	eb19 0309 	adds.w	r3, r9, r9
 800bc50:	eb4a 040a 	adc.w	r4, sl, sl
 800bc54:	4699      	mov	r9, r3
 800bc56:	46a2      	mov	sl, r4
 800bc58:	eb19 0905 	adds.w	r9, r9, r5
 800bc5c:	eb4a 0a06 	adc.w	sl, sl, r6
 800bc60:	f04f 0100 	mov.w	r1, #0
 800bc64:	f04f 0200 	mov.w	r2, #0
 800bc68:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800bc6c:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800bc70:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800bc74:	4689      	mov	r9, r1
 800bc76:	4692      	mov	sl, r2
 800bc78:	eb19 0005 	adds.w	r0, r9, r5
 800bc7c:	eb4a 0106 	adc.w	r1, sl, r6
 800bc80:	687b      	ldr	r3, [r7, #4]
 800bc82:	685b      	ldr	r3, [r3, #4]
 800bc84:	461d      	mov	r5, r3
 800bc86:	f04f 0600 	mov.w	r6, #0
 800bc8a:	196b      	adds	r3, r5, r5
 800bc8c:	eb46 0406 	adc.w	r4, r6, r6
 800bc90:	461a      	mov	r2, r3
 800bc92:	4623      	mov	r3, r4
 800bc94:	f7fb fd0a 	bl	80076ac <__aeabi_uldivmod>
 800bc98:	4603      	mov	r3, r0
 800bc9a:	460c      	mov	r4, r1
 800bc9c:	461a      	mov	r2, r3
 800bc9e:	4b0c      	ldr	r3, [pc, #48]	; (800bcd0 <UART_SetConfig+0x384>)
 800bca0:	fba3 1302 	umull	r1, r3, r3, r2
 800bca4:	095b      	lsrs	r3, r3, #5
 800bca6:	2164      	movs	r1, #100	; 0x64
 800bca8:	fb01 f303 	mul.w	r3, r1, r3
 800bcac:	1ad3      	subs	r3, r2, r3
 800bcae:	00db      	lsls	r3, r3, #3
 800bcb0:	3332      	adds	r3, #50	; 0x32
 800bcb2:	4a07      	ldr	r2, [pc, #28]	; (800bcd0 <UART_SetConfig+0x384>)
 800bcb4:	fba2 2303 	umull	r2, r3, r2, r3
 800bcb8:	095b      	lsrs	r3, r3, #5
 800bcba:	f003 0207 	and.w	r2, r3, #7
 800bcbe:	687b      	ldr	r3, [r7, #4]
 800bcc0:	681b      	ldr	r3, [r3, #0]
 800bcc2:	4442      	add	r2, r8
 800bcc4:	609a      	str	r2, [r3, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 800bcc6:	e1b2      	b.n	800c02e <UART_SetConfig+0x6e2>
 800bcc8:	40011000 	.word	0x40011000
 800bccc:	40011400 	.word	0x40011400
 800bcd0:	51eb851f 	.word	0x51eb851f
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800bcd4:	687b      	ldr	r3, [r7, #4]
 800bcd6:	681b      	ldr	r3, [r3, #0]
 800bcd8:	4ad7      	ldr	r2, [pc, #860]	; (800c038 <UART_SetConfig+0x6ec>)
 800bcda:	4293      	cmp	r3, r2
 800bcdc:	d005      	beq.n	800bcea <UART_SetConfig+0x39e>
 800bcde:	687b      	ldr	r3, [r7, #4]
 800bce0:	681b      	ldr	r3, [r3, #0]
 800bce2:	4ad6      	ldr	r2, [pc, #856]	; (800c03c <UART_SetConfig+0x6f0>)
 800bce4:	4293      	cmp	r3, r2
 800bce6:	f040 80d1 	bne.w	800be8c <UART_SetConfig+0x540>
      pclk = HAL_RCC_GetPCLK2Freq();
 800bcea:	f7ff fdcd 	bl	800b888 <HAL_RCC_GetPCLK2Freq>
 800bcee:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800bcf0:	68bb      	ldr	r3, [r7, #8]
 800bcf2:	469a      	mov	sl, r3
 800bcf4:	f04f 0b00 	mov.w	fp, #0
 800bcf8:	46d0      	mov	r8, sl
 800bcfa:	46d9      	mov	r9, fp
 800bcfc:	eb18 0308 	adds.w	r3, r8, r8
 800bd00:	eb49 0409 	adc.w	r4, r9, r9
 800bd04:	4698      	mov	r8, r3
 800bd06:	46a1      	mov	r9, r4
 800bd08:	eb18 080a 	adds.w	r8, r8, sl
 800bd0c:	eb49 090b 	adc.w	r9, r9, fp
 800bd10:	f04f 0100 	mov.w	r1, #0
 800bd14:	f04f 0200 	mov.w	r2, #0
 800bd18:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 800bd1c:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 800bd20:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 800bd24:	4688      	mov	r8, r1
 800bd26:	4691      	mov	r9, r2
 800bd28:	eb1a 0508 	adds.w	r5, sl, r8
 800bd2c:	eb4b 0609 	adc.w	r6, fp, r9
 800bd30:	687b      	ldr	r3, [r7, #4]
 800bd32:	685b      	ldr	r3, [r3, #4]
 800bd34:	4619      	mov	r1, r3
 800bd36:	f04f 0200 	mov.w	r2, #0
 800bd3a:	f04f 0300 	mov.w	r3, #0
 800bd3e:	f04f 0400 	mov.w	r4, #0
 800bd42:	0094      	lsls	r4, r2, #2
 800bd44:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800bd48:	008b      	lsls	r3, r1, #2
 800bd4a:	461a      	mov	r2, r3
 800bd4c:	4623      	mov	r3, r4
 800bd4e:	4628      	mov	r0, r5
 800bd50:	4631      	mov	r1, r6
 800bd52:	f7fb fcab 	bl	80076ac <__aeabi_uldivmod>
 800bd56:	4603      	mov	r3, r0
 800bd58:	460c      	mov	r4, r1
 800bd5a:	461a      	mov	r2, r3
 800bd5c:	4bb8      	ldr	r3, [pc, #736]	; (800c040 <UART_SetConfig+0x6f4>)
 800bd5e:	fba3 2302 	umull	r2, r3, r3, r2
 800bd62:	095b      	lsrs	r3, r3, #5
 800bd64:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800bd68:	68bb      	ldr	r3, [r7, #8]
 800bd6a:	469b      	mov	fp, r3
 800bd6c:	f04f 0c00 	mov.w	ip, #0
 800bd70:	46d9      	mov	r9, fp
 800bd72:	46e2      	mov	sl, ip
 800bd74:	eb19 0309 	adds.w	r3, r9, r9
 800bd78:	eb4a 040a 	adc.w	r4, sl, sl
 800bd7c:	4699      	mov	r9, r3
 800bd7e:	46a2      	mov	sl, r4
 800bd80:	eb19 090b 	adds.w	r9, r9, fp
 800bd84:	eb4a 0a0c 	adc.w	sl, sl, ip
 800bd88:	f04f 0100 	mov.w	r1, #0
 800bd8c:	f04f 0200 	mov.w	r2, #0
 800bd90:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800bd94:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800bd98:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800bd9c:	4689      	mov	r9, r1
 800bd9e:	4692      	mov	sl, r2
 800bda0:	eb1b 0509 	adds.w	r5, fp, r9
 800bda4:	eb4c 060a 	adc.w	r6, ip, sl
 800bda8:	687b      	ldr	r3, [r7, #4]
 800bdaa:	685b      	ldr	r3, [r3, #4]
 800bdac:	4619      	mov	r1, r3
 800bdae:	f04f 0200 	mov.w	r2, #0
 800bdb2:	f04f 0300 	mov.w	r3, #0
 800bdb6:	f04f 0400 	mov.w	r4, #0
 800bdba:	0094      	lsls	r4, r2, #2
 800bdbc:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800bdc0:	008b      	lsls	r3, r1, #2
 800bdc2:	461a      	mov	r2, r3
 800bdc4:	4623      	mov	r3, r4
 800bdc6:	4628      	mov	r0, r5
 800bdc8:	4631      	mov	r1, r6
 800bdca:	f7fb fc6f 	bl	80076ac <__aeabi_uldivmod>
 800bdce:	4603      	mov	r3, r0
 800bdd0:	460c      	mov	r4, r1
 800bdd2:	461a      	mov	r2, r3
 800bdd4:	4b9a      	ldr	r3, [pc, #616]	; (800c040 <UART_SetConfig+0x6f4>)
 800bdd6:	fba3 1302 	umull	r1, r3, r3, r2
 800bdda:	095b      	lsrs	r3, r3, #5
 800bddc:	2164      	movs	r1, #100	; 0x64
 800bdde:	fb01 f303 	mul.w	r3, r1, r3
 800bde2:	1ad3      	subs	r3, r2, r3
 800bde4:	011b      	lsls	r3, r3, #4
 800bde6:	3332      	adds	r3, #50	; 0x32
 800bde8:	4a95      	ldr	r2, [pc, #596]	; (800c040 <UART_SetConfig+0x6f4>)
 800bdea:	fba2 2303 	umull	r2, r3, r2, r3
 800bdee:	095b      	lsrs	r3, r3, #5
 800bdf0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800bdf4:	4498      	add	r8, r3
 800bdf6:	68bb      	ldr	r3, [r7, #8]
 800bdf8:	469b      	mov	fp, r3
 800bdfa:	f04f 0c00 	mov.w	ip, #0
 800bdfe:	46d9      	mov	r9, fp
 800be00:	46e2      	mov	sl, ip
 800be02:	eb19 0309 	adds.w	r3, r9, r9
 800be06:	eb4a 040a 	adc.w	r4, sl, sl
 800be0a:	4699      	mov	r9, r3
 800be0c:	46a2      	mov	sl, r4
 800be0e:	eb19 090b 	adds.w	r9, r9, fp
 800be12:	eb4a 0a0c 	adc.w	sl, sl, ip
 800be16:	f04f 0100 	mov.w	r1, #0
 800be1a:	f04f 0200 	mov.w	r2, #0
 800be1e:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800be22:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800be26:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800be2a:	4689      	mov	r9, r1
 800be2c:	4692      	mov	sl, r2
 800be2e:	eb1b 0509 	adds.w	r5, fp, r9
 800be32:	eb4c 060a 	adc.w	r6, ip, sl
 800be36:	687b      	ldr	r3, [r7, #4]
 800be38:	685b      	ldr	r3, [r3, #4]
 800be3a:	4619      	mov	r1, r3
 800be3c:	f04f 0200 	mov.w	r2, #0
 800be40:	f04f 0300 	mov.w	r3, #0
 800be44:	f04f 0400 	mov.w	r4, #0
 800be48:	0094      	lsls	r4, r2, #2
 800be4a:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800be4e:	008b      	lsls	r3, r1, #2
 800be50:	461a      	mov	r2, r3
 800be52:	4623      	mov	r3, r4
 800be54:	4628      	mov	r0, r5
 800be56:	4631      	mov	r1, r6
 800be58:	f7fb fc28 	bl	80076ac <__aeabi_uldivmod>
 800be5c:	4603      	mov	r3, r0
 800be5e:	460c      	mov	r4, r1
 800be60:	461a      	mov	r2, r3
 800be62:	4b77      	ldr	r3, [pc, #476]	; (800c040 <UART_SetConfig+0x6f4>)
 800be64:	fba3 1302 	umull	r1, r3, r3, r2
 800be68:	095b      	lsrs	r3, r3, #5
 800be6a:	2164      	movs	r1, #100	; 0x64
 800be6c:	fb01 f303 	mul.w	r3, r1, r3
 800be70:	1ad3      	subs	r3, r2, r3
 800be72:	011b      	lsls	r3, r3, #4
 800be74:	3332      	adds	r3, #50	; 0x32
 800be76:	4a72      	ldr	r2, [pc, #456]	; (800c040 <UART_SetConfig+0x6f4>)
 800be78:	fba2 2303 	umull	r2, r3, r2, r3
 800be7c:	095b      	lsrs	r3, r3, #5
 800be7e:	f003 020f 	and.w	r2, r3, #15
 800be82:	687b      	ldr	r3, [r7, #4]
 800be84:	681b      	ldr	r3, [r3, #0]
 800be86:	4442      	add	r2, r8
 800be88:	609a      	str	r2, [r3, #8]
 800be8a:	e0d0      	b.n	800c02e <UART_SetConfig+0x6e2>
      pclk = HAL_RCC_GetPCLK1Freq();
 800be8c:	f7ff fce8 	bl	800b860 <HAL_RCC_GetPCLK1Freq>
 800be90:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 800be92:	68bb      	ldr	r3, [r7, #8]
 800be94:	469a      	mov	sl, r3
 800be96:	f04f 0b00 	mov.w	fp, #0
 800be9a:	46d0      	mov	r8, sl
 800be9c:	46d9      	mov	r9, fp
 800be9e:	eb18 0308 	adds.w	r3, r8, r8
 800bea2:	eb49 0409 	adc.w	r4, r9, r9
 800bea6:	4698      	mov	r8, r3
 800bea8:	46a1      	mov	r9, r4
 800beaa:	eb18 080a 	adds.w	r8, r8, sl
 800beae:	eb49 090b 	adc.w	r9, r9, fp
 800beb2:	f04f 0100 	mov.w	r1, #0
 800beb6:	f04f 0200 	mov.w	r2, #0
 800beba:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 800bebe:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 800bec2:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 800bec6:	4688      	mov	r8, r1
 800bec8:	4691      	mov	r9, r2
 800beca:	eb1a 0508 	adds.w	r5, sl, r8
 800bece:	eb4b 0609 	adc.w	r6, fp, r9
 800bed2:	687b      	ldr	r3, [r7, #4]
 800bed4:	685b      	ldr	r3, [r3, #4]
 800bed6:	4619      	mov	r1, r3
 800bed8:	f04f 0200 	mov.w	r2, #0
 800bedc:	f04f 0300 	mov.w	r3, #0
 800bee0:	f04f 0400 	mov.w	r4, #0
 800bee4:	0094      	lsls	r4, r2, #2
 800bee6:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800beea:	008b      	lsls	r3, r1, #2
 800beec:	461a      	mov	r2, r3
 800beee:	4623      	mov	r3, r4
 800bef0:	4628      	mov	r0, r5
 800bef2:	4631      	mov	r1, r6
 800bef4:	f7fb fbda 	bl	80076ac <__aeabi_uldivmod>
 800bef8:	4603      	mov	r3, r0
 800befa:	460c      	mov	r4, r1
 800befc:	461a      	mov	r2, r3
 800befe:	4b50      	ldr	r3, [pc, #320]	; (800c040 <UART_SetConfig+0x6f4>)
 800bf00:	fba3 2302 	umull	r2, r3, r3, r2
 800bf04:	095b      	lsrs	r3, r3, #5
 800bf06:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800bf0a:	68bb      	ldr	r3, [r7, #8]
 800bf0c:	469b      	mov	fp, r3
 800bf0e:	f04f 0c00 	mov.w	ip, #0
 800bf12:	46d9      	mov	r9, fp
 800bf14:	46e2      	mov	sl, ip
 800bf16:	eb19 0309 	adds.w	r3, r9, r9
 800bf1a:	eb4a 040a 	adc.w	r4, sl, sl
 800bf1e:	4699      	mov	r9, r3
 800bf20:	46a2      	mov	sl, r4
 800bf22:	eb19 090b 	adds.w	r9, r9, fp
 800bf26:	eb4a 0a0c 	adc.w	sl, sl, ip
 800bf2a:	f04f 0100 	mov.w	r1, #0
 800bf2e:	f04f 0200 	mov.w	r2, #0
 800bf32:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800bf36:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800bf3a:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800bf3e:	4689      	mov	r9, r1
 800bf40:	4692      	mov	sl, r2
 800bf42:	eb1b 0509 	adds.w	r5, fp, r9
 800bf46:	eb4c 060a 	adc.w	r6, ip, sl
 800bf4a:	687b      	ldr	r3, [r7, #4]
 800bf4c:	685b      	ldr	r3, [r3, #4]
 800bf4e:	4619      	mov	r1, r3
 800bf50:	f04f 0200 	mov.w	r2, #0
 800bf54:	f04f 0300 	mov.w	r3, #0
 800bf58:	f04f 0400 	mov.w	r4, #0
 800bf5c:	0094      	lsls	r4, r2, #2
 800bf5e:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800bf62:	008b      	lsls	r3, r1, #2
 800bf64:	461a      	mov	r2, r3
 800bf66:	4623      	mov	r3, r4
 800bf68:	4628      	mov	r0, r5
 800bf6a:	4631      	mov	r1, r6
 800bf6c:	f7fb fb9e 	bl	80076ac <__aeabi_uldivmod>
 800bf70:	4603      	mov	r3, r0
 800bf72:	460c      	mov	r4, r1
 800bf74:	461a      	mov	r2, r3
 800bf76:	4b32      	ldr	r3, [pc, #200]	; (800c040 <UART_SetConfig+0x6f4>)
 800bf78:	fba3 1302 	umull	r1, r3, r3, r2
 800bf7c:	095b      	lsrs	r3, r3, #5
 800bf7e:	2164      	movs	r1, #100	; 0x64
 800bf80:	fb01 f303 	mul.w	r3, r1, r3
 800bf84:	1ad3      	subs	r3, r2, r3
 800bf86:	011b      	lsls	r3, r3, #4
 800bf88:	3332      	adds	r3, #50	; 0x32
 800bf8a:	4a2d      	ldr	r2, [pc, #180]	; (800c040 <UART_SetConfig+0x6f4>)
 800bf8c:	fba2 2303 	umull	r2, r3, r2, r3
 800bf90:	095b      	lsrs	r3, r3, #5
 800bf92:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800bf96:	4498      	add	r8, r3
 800bf98:	68bb      	ldr	r3, [r7, #8]
 800bf9a:	469b      	mov	fp, r3
 800bf9c:	f04f 0c00 	mov.w	ip, #0
 800bfa0:	46d9      	mov	r9, fp
 800bfa2:	46e2      	mov	sl, ip
 800bfa4:	eb19 0309 	adds.w	r3, r9, r9
 800bfa8:	eb4a 040a 	adc.w	r4, sl, sl
 800bfac:	4699      	mov	r9, r3
 800bfae:	46a2      	mov	sl, r4
 800bfb0:	eb19 090b 	adds.w	r9, r9, fp
 800bfb4:	eb4a 0a0c 	adc.w	sl, sl, ip
 800bfb8:	f04f 0100 	mov.w	r1, #0
 800bfbc:	f04f 0200 	mov.w	r2, #0
 800bfc0:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800bfc4:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800bfc8:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 800bfcc:	4689      	mov	r9, r1
 800bfce:	4692      	mov	sl, r2
 800bfd0:	eb1b 0509 	adds.w	r5, fp, r9
 800bfd4:	eb4c 060a 	adc.w	r6, ip, sl
 800bfd8:	687b      	ldr	r3, [r7, #4]
 800bfda:	685b      	ldr	r3, [r3, #4]
 800bfdc:	4619      	mov	r1, r3
 800bfde:	f04f 0200 	mov.w	r2, #0
 800bfe2:	f04f 0300 	mov.w	r3, #0
 800bfe6:	f04f 0400 	mov.w	r4, #0
 800bfea:	0094      	lsls	r4, r2, #2
 800bfec:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800bff0:	008b      	lsls	r3, r1, #2
 800bff2:	461a      	mov	r2, r3
 800bff4:	4623      	mov	r3, r4
 800bff6:	4628      	mov	r0, r5
 800bff8:	4631      	mov	r1, r6
 800bffa:	f7fb fb57 	bl	80076ac <__aeabi_uldivmod>
 800bffe:	4603      	mov	r3, r0
 800c000:	460c      	mov	r4, r1
 800c002:	461a      	mov	r2, r3
 800c004:	4b0e      	ldr	r3, [pc, #56]	; (800c040 <UART_SetConfig+0x6f4>)
 800c006:	fba3 1302 	umull	r1, r3, r3, r2
 800c00a:	095b      	lsrs	r3, r3, #5
 800c00c:	2164      	movs	r1, #100	; 0x64
 800c00e:	fb01 f303 	mul.w	r3, r1, r3
 800c012:	1ad3      	subs	r3, r2, r3
 800c014:	011b      	lsls	r3, r3, #4
 800c016:	3332      	adds	r3, #50	; 0x32
 800c018:	4a09      	ldr	r2, [pc, #36]	; (800c040 <UART_SetConfig+0x6f4>)
 800c01a:	fba2 2303 	umull	r2, r3, r2, r3
 800c01e:	095b      	lsrs	r3, r3, #5
 800c020:	f003 020f 	and.w	r2, r3, #15
 800c024:	687b      	ldr	r3, [r7, #4]
 800c026:	681b      	ldr	r3, [r3, #0]
 800c028:	4442      	add	r2, r8
 800c02a:	609a      	str	r2, [r3, #8]
}
 800c02c:	e7ff      	b.n	800c02e <UART_SetConfig+0x6e2>
 800c02e:	bf00      	nop
 800c030:	3714      	adds	r7, #20
 800c032:	46bd      	mov	sp, r7
 800c034:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c038:	40011000 	.word	0x40011000
 800c03c:	40011400 	.word	0x40011400
 800c040:	51eb851f 	.word	0x51eb851f

0800c044 <_ZdlPvj>:
 800c044:	f000 b826 	b.w	800c094 <_ZdlPv>

0800c048 <_Znwj>:
 800c048:	b510      	push	{r4, lr}
 800c04a:	2800      	cmp	r0, #0
 800c04c:	bf14      	ite	ne
 800c04e:	4604      	movne	r4, r0
 800c050:	2401      	moveq	r4, #1
 800c052:	4620      	mov	r0, r4
 800c054:	f001 fb38 	bl	800d6c8 <malloc>
 800c058:	b100      	cbz	r0, 800c05c <_Znwj+0x14>
 800c05a:	bd10      	pop	{r4, pc}
 800c05c:	f000 f812 	bl	800c084 <_ZSt15get_new_handlerv>
 800c060:	b108      	cbz	r0, 800c066 <_Znwj+0x1e>
 800c062:	4780      	blx	r0
 800c064:	e7f5      	b.n	800c052 <_Znwj+0xa>
 800c066:	2004      	movs	r0, #4
 800c068:	f000 f890 	bl	800c18c <__cxa_allocate_exception>
 800c06c:	4b02      	ldr	r3, [pc, #8]	; (800c078 <_Znwj+0x30>)
 800c06e:	6003      	str	r3, [r0, #0]
 800c070:	4a02      	ldr	r2, [pc, #8]	; (800c07c <_Znwj+0x34>)
 800c072:	4903      	ldr	r1, [pc, #12]	; (800c080 <_Znwj+0x38>)
 800c074:	f000 f96c 	bl	800c350 <__cxa_throw>
 800c078:	08011bf0 	.word	0x08011bf0
 800c07c:	0800c285 	.word	0x0800c285
 800c080:	08011bcc 	.word	0x08011bcc

0800c084 <_ZSt15get_new_handlerv>:
 800c084:	4b02      	ldr	r3, [pc, #8]	; (800c090 <_ZSt15get_new_handlerv+0xc>)
 800c086:	6818      	ldr	r0, [r3, #0]
 800c088:	f3bf 8f5b 	dmb	ish
 800c08c:	4770      	bx	lr
 800c08e:	bf00      	nop
 800c090:	20000a20 	.word	0x20000a20

0800c094 <_ZdlPv>:
 800c094:	f001 bb20 	b.w	800d6d8 <free>

0800c098 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>:
 800c098:	b4f0      	push	{r4, r5, r6, r7}
 800c09a:	4c22      	ldr	r4, [pc, #136]	; (800c124 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x8c>)
 800c09c:	6863      	ldr	r3, [r4, #4]
 800c09e:	f1a0 0608 	sub.w	r6, r0, #8
 800c0a2:	b31b      	cbz	r3, 800c0ec <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x54>
 800c0a4:	f850 7c08 	ldr.w	r7, [r0, #-8]
 800c0a8:	19f5      	adds	r5, r6, r7
 800c0aa:	42ab      	cmp	r3, r5
 800c0ac:	d81e      	bhi.n	800c0ec <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x54>
 800c0ae:	d022      	beq.n	800c0f6 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x5e>
 800c0b0:	6859      	ldr	r1, [r3, #4]
 800c0b2:	2900      	cmp	r1, #0
 800c0b4:	d031      	beq.n	800c11a <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x82>
 800c0b6:	428d      	cmp	r5, r1
 800c0b8:	d303      	bcc.n	800c0c2 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x2a>
 800c0ba:	e02e      	b.n	800c11a <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x82>
 800c0bc:	4295      	cmp	r5, r2
 800c0be:	d205      	bcs.n	800c0cc <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x34>
 800c0c0:	4611      	mov	r1, r2
 800c0c2:	684a      	ldr	r2, [r1, #4]
 800c0c4:	1d1c      	adds	r4, r3, #4
 800c0c6:	460b      	mov	r3, r1
 800c0c8:	2a00      	cmp	r2, #0
 800c0ca:	d1f7      	bne.n	800c0bc <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x24>
 800c0cc:	4295      	cmp	r5, r2
 800c0ce:	d01c      	beq.n	800c10a <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x72>
 800c0d0:	6823      	ldr	r3, [r4, #0]
 800c0d2:	681a      	ldr	r2, [r3, #0]
 800c0d4:	1899      	adds	r1, r3, r2
 800c0d6:	428e      	cmp	r6, r1
 800c0d8:	d01c      	beq.n	800c114 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x7c>
 800c0da:	685b      	ldr	r3, [r3, #4]
 800c0dc:	f840 3c04 	str.w	r3, [r0, #-4]
 800c0e0:	6823      	ldr	r3, [r4, #0]
 800c0e2:	f840 7c08 	str.w	r7, [r0, #-8]
 800c0e6:	605e      	str	r6, [r3, #4]
 800c0e8:	bcf0      	pop	{r4, r5, r6, r7}
 800c0ea:	4770      	bx	lr
 800c0ec:	f840 3c04 	str.w	r3, [r0, #-4]
 800c0f0:	6066      	str	r6, [r4, #4]
 800c0f2:	bcf0      	pop	{r4, r5, r6, r7}
 800c0f4:	4770      	bx	lr
 800c0f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c0fa:	4417      	add	r7, r2
 800c0fc:	f840 7c08 	str.w	r7, [r0, #-8]
 800c100:	f840 3c04 	str.w	r3, [r0, #-4]
 800c104:	6066      	str	r6, [r4, #4]
 800c106:	bcf0      	pop	{r4, r5, r6, r7}
 800c108:	4770      	bx	lr
 800c10a:	e9d5 3200 	ldrd	r3, r2, [r5]
 800c10e:	604a      	str	r2, [r1, #4]
 800c110:	441f      	add	r7, r3
 800c112:	e7dd      	b.n	800c0d0 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x38>
 800c114:	4417      	add	r7, r2
 800c116:	601f      	str	r7, [r3, #0]
 800c118:	e7eb      	b.n	800c0f2 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x5a>
 800c11a:	460a      	mov	r2, r1
 800c11c:	3404      	adds	r4, #4
 800c11e:	4619      	mov	r1, r3
 800c120:	e7d4      	b.n	800c0cc <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x34>
 800c122:	bf00      	nop
 800c124:	20000a24 	.word	0x20000a24

0800c128 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>:
 800c128:	b430      	push	{r4, r5}
 800c12a:	4c17      	ldr	r4, [pc, #92]	; (800c188 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x60>)
 800c12c:	f100 0208 	add.w	r2, r0, #8
 800c130:	6863      	ldr	r3, [r4, #4]
 800c132:	2a08      	cmp	r2, #8
 800c134:	bf38      	it	cc
 800c136:	2208      	movcc	r2, #8
 800c138:	b303      	cbz	r3, 800c17c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x54>
 800c13a:	3207      	adds	r2, #7
 800c13c:	6819      	ldr	r1, [r3, #0]
 800c13e:	f022 0207 	bic.w	r2, r2, #7
 800c142:	428a      	cmp	r2, r1
 800c144:	d804      	bhi.n	800c150 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x28>
 800c146:	e01b      	b.n	800c180 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x58>
 800c148:	6801      	ldr	r1, [r0, #0]
 800c14a:	428a      	cmp	r2, r1
 800c14c:	d905      	bls.n	800c15a <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x32>
 800c14e:	4603      	mov	r3, r0
 800c150:	6858      	ldr	r0, [r3, #4]
 800c152:	2800      	cmp	r0, #0
 800c154:	d1f8      	bne.n	800c148 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x20>
 800c156:	bc30      	pop	{r4, r5}
 800c158:	4770      	bx	lr
 800c15a:	3304      	adds	r3, #4
 800c15c:	1a8c      	subs	r4, r1, r2
 800c15e:	2c07      	cmp	r4, #7
 800c160:	6845      	ldr	r5, [r0, #4]
 800c162:	d908      	bls.n	800c176 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x4e>
 800c164:	1881      	adds	r1, r0, r2
 800c166:	604d      	str	r5, [r1, #4]
 800c168:	5084      	str	r4, [r0, r2]
 800c16a:	6818      	ldr	r0, [r3, #0]
 800c16c:	6002      	str	r2, [r0, #0]
 800c16e:	6019      	str	r1, [r3, #0]
 800c170:	3008      	adds	r0, #8
 800c172:	bc30      	pop	{r4, r5}
 800c174:	4770      	bx	lr
 800c176:	6001      	str	r1, [r0, #0]
 800c178:	601d      	str	r5, [r3, #0]
 800c17a:	e7f9      	b.n	800c170 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x48>
 800c17c:	4618      	mov	r0, r3
 800c17e:	e7ea      	b.n	800c156 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x2e>
 800c180:	4618      	mov	r0, r3
 800c182:	1d23      	adds	r3, r4, #4
 800c184:	e7ea      	b.n	800c15c <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x34>
 800c186:	bf00      	nop
 800c188:	20000a24 	.word	0x20000a24

0800c18c <__cxa_allocate_exception>:
 800c18c:	b510      	push	{r4, lr}
 800c18e:	f100 0480 	add.w	r4, r0, #128	; 0x80
 800c192:	4620      	mov	r0, r4
 800c194:	f001 fa98 	bl	800d6c8 <malloc>
 800c198:	b138      	cbz	r0, 800c1aa <__cxa_allocate_exception+0x1e>
 800c19a:	4603      	mov	r3, r0
 800c19c:	2280      	movs	r2, #128	; 0x80
 800c19e:	2100      	movs	r1, #0
 800c1a0:	4618      	mov	r0, r3
 800c1a2:	f001 fd0a 	bl	800dbba <memset>
 800c1a6:	3080      	adds	r0, #128	; 0x80
 800c1a8:	bd10      	pop	{r4, pc}
 800c1aa:	4620      	mov	r0, r4
 800c1ac:	f7ff ffbc 	bl	800c128 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
 800c1b0:	4603      	mov	r3, r0
 800c1b2:	2800      	cmp	r0, #0
 800c1b4:	d1f2      	bne.n	800c19c <__cxa_allocate_exception+0x10>
 800c1b6:	f000 fac1 	bl	800c73c <_ZSt9terminatev>
 800c1ba:	bf00      	nop

0800c1bc <__cxa_free_exception>:
 800c1bc:	4a06      	ldr	r2, [pc, #24]	; (800c1d8 <__cxa_free_exception+0x1c>)
 800c1be:	6893      	ldr	r3, [r2, #8]
 800c1c0:	3880      	subs	r0, #128	; 0x80
 800c1c2:	4298      	cmp	r0, r3
 800c1c4:	d903      	bls.n	800c1ce <__cxa_free_exception+0x12>
 800c1c6:	68d2      	ldr	r2, [r2, #12]
 800c1c8:	4413      	add	r3, r2
 800c1ca:	4298      	cmp	r0, r3
 800c1cc:	d301      	bcc.n	800c1d2 <__cxa_free_exception+0x16>
 800c1ce:	f001 ba83 	b.w	800d6d8 <free>
 800c1d2:	f7ff bf61 	b.w	800c098 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
 800c1d6:	bf00      	nop
 800c1d8:	20000a24 	.word	0x20000a24

0800c1dc <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv>:
 800c1dc:	b538      	push	{r3, r4, r5, lr}
 800c1de:	4c08      	ldr	r4, [pc, #32]	; (800c200 <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x24>)
 800c1e0:	f44f 651e 	mov.w	r5, #2528	; 0x9e0
 800c1e4:	4628      	mov	r0, r5
 800c1e6:	60e5      	str	r5, [r4, #12]
 800c1e8:	f001 fa6e 	bl	800d6c8 <malloc>
 800c1ec:	60a0      	str	r0, [r4, #8]
 800c1ee:	b120      	cbz	r0, 800c1fa <_GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv+0x1e>
 800c1f0:	2300      	movs	r3, #0
 800c1f2:	6060      	str	r0, [r4, #4]
 800c1f4:	e9c0 5300 	strd	r5, r3, [r0]
 800c1f8:	bd38      	pop	{r3, r4, r5, pc}
 800c1fa:	60e0      	str	r0, [r4, #12]
 800c1fc:	6060      	str	r0, [r4, #4]
 800c1fe:	bd38      	pop	{r3, r4, r5, pc}
 800c200:	20000a24 	.word	0x20000a24

0800c204 <_ZNKSt17bad_function_call4whatEv>:
 800c204:	4800      	ldr	r0, [pc, #0]	; (800c208 <_ZNKSt17bad_function_call4whatEv+0x4>)
 800c206:	4770      	bx	lr
 800c208:	08011ab0 	.word	0x08011ab0

0800c20c <_ZNSt17bad_function_callD1Ev>:
 800c20c:	b510      	push	{r4, lr}
 800c20e:	4b03      	ldr	r3, [pc, #12]	; (800c21c <_ZNSt17bad_function_callD1Ev+0x10>)
 800c210:	6003      	str	r3, [r0, #0]
 800c212:	4604      	mov	r4, r0
 800c214:	f000 f822 	bl	800c25c <_ZNSt9exceptionD1Ev>
 800c218:	4620      	mov	r0, r4
 800c21a:	bd10      	pop	{r4, pc}
 800c21c:	08011af0 	.word	0x08011af0

0800c220 <_ZNSt17bad_function_callD0Ev>:
 800c220:	b510      	push	{r4, lr}
 800c222:	4b05      	ldr	r3, [pc, #20]	; (800c238 <_ZNSt17bad_function_callD0Ev+0x18>)
 800c224:	6003      	str	r3, [r0, #0]
 800c226:	4604      	mov	r4, r0
 800c228:	f000 f818 	bl	800c25c <_ZNSt9exceptionD1Ev>
 800c22c:	4620      	mov	r0, r4
 800c22e:	f7ff ff31 	bl	800c094 <_ZdlPv>
 800c232:	4620      	mov	r0, r4
 800c234:	bd10      	pop	{r4, pc}
 800c236:	bf00      	nop
 800c238:	08011af0 	.word	0x08011af0

0800c23c <_ZSt25__throw_bad_function_callv>:
 800c23c:	b508      	push	{r3, lr}
 800c23e:	2004      	movs	r0, #4
 800c240:	f7ff ffa4 	bl	800c18c <__cxa_allocate_exception>
 800c244:	4b02      	ldr	r3, [pc, #8]	; (800c250 <_ZSt25__throw_bad_function_callv+0x14>)
 800c246:	6003      	str	r3, [r0, #0]
 800c248:	4a02      	ldr	r2, [pc, #8]	; (800c254 <_ZSt25__throw_bad_function_callv+0x18>)
 800c24a:	4903      	ldr	r1, [pc, #12]	; (800c258 <_ZSt25__throw_bad_function_callv+0x1c>)
 800c24c:	f000 f880 	bl	800c350 <__cxa_throw>
 800c250:	08011af0 	.word	0x08011af0
 800c254:	0800c20d 	.word	0x0800c20d
 800c258:	08011ac4 	.word	0x08011ac4

0800c25c <_ZNSt9exceptionD1Ev>:
 800c25c:	4770      	bx	lr
 800c25e:	bf00      	nop

0800c260 <_ZNSt13bad_exceptionD1Ev>:
 800c260:	4770      	bx	lr
 800c262:	bf00      	nop

0800c264 <_ZGTtNKSt13bad_exception4whatEv>:
 800c264:	4800      	ldr	r0, [pc, #0]	; (800c268 <_ZGTtNKSt13bad_exception4whatEv+0x4>)
 800c266:	4770      	bx	lr
 800c268:	08011b08 	.word	0x08011b08

0800c26c <_ZNSt13bad_exceptionD0Ev>:
 800c26c:	b510      	push	{r4, lr}
 800c26e:	2104      	movs	r1, #4
 800c270:	4604      	mov	r4, r0
 800c272:	f7ff fee7 	bl	800c044 <_ZdlPvj>
 800c276:	4620      	mov	r0, r4
 800c278:	bd10      	pop	{r4, pc}
 800c27a:	bf00      	nop

0800c27c <_ZNKSt9bad_alloc4whatEv>:
 800c27c:	4800      	ldr	r0, [pc, #0]	; (800c280 <_ZNKSt9bad_alloc4whatEv+0x4>)
 800c27e:	4770      	bx	lr
 800c280:	08011bbc 	.word	0x08011bbc

0800c284 <_ZNSt9bad_allocD1Ev>:
 800c284:	b510      	push	{r4, lr}
 800c286:	4b03      	ldr	r3, [pc, #12]	; (800c294 <_ZNSt9bad_allocD1Ev+0x10>)
 800c288:	6003      	str	r3, [r0, #0]
 800c28a:	4604      	mov	r4, r0
 800c28c:	f7ff ffe6 	bl	800c25c <_ZNSt9exceptionD1Ev>
 800c290:	4620      	mov	r0, r4
 800c292:	bd10      	pop	{r4, pc}
 800c294:	08011bf0 	.word	0x08011bf0

0800c298 <_ZNSt9bad_allocD0Ev>:
 800c298:	b510      	push	{r4, lr}
 800c29a:	4b05      	ldr	r3, [pc, #20]	; (800c2b0 <_ZNSt9bad_allocD0Ev+0x18>)
 800c29c:	6003      	str	r3, [r0, #0]
 800c29e:	4604      	mov	r4, r0
 800c2a0:	f7ff ffdc 	bl	800c25c <_ZNSt9exceptionD1Ev>
 800c2a4:	4620      	mov	r0, r4
 800c2a6:	2104      	movs	r1, #4
 800c2a8:	f7ff fecc 	bl	800c044 <_ZdlPvj>
 800c2ac:	4620      	mov	r0, r4
 800c2ae:	bd10      	pop	{r4, pc}
 800c2b0:	08011bf0 	.word	0x08011bf0

0800c2b4 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block>:
 800c2b4:	2801      	cmp	r0, #1
 800c2b6:	b510      	push	{r4, lr}
 800c2b8:	d81a      	bhi.n	800c2f0 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x3c>
 800c2ba:	f3bf 8f5b 	dmb	ish
 800c2be:	f1a1 0328 	sub.w	r3, r1, #40	; 0x28
 800c2c2:	e853 2f00 	ldrex	r2, [r3]
 800c2c6:	3a01      	subs	r2, #1
 800c2c8:	e843 2000 	strex	r0, r2, [r3]
 800c2cc:	2800      	cmp	r0, #0
 800c2ce:	d1f8      	bne.n	800c2c2 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0xe>
 800c2d0:	f3bf 8f5b 	dmb	ish
 800c2d4:	b95a      	cbnz	r2, 800c2ee <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x3a>
 800c2d6:	f851 3c1c 	ldr.w	r3, [r1, #-28]
 800c2da:	f101 0458 	add.w	r4, r1, #88	; 0x58
 800c2de:	b10b      	cbz	r3, 800c2e4 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP21_Unwind_Control_Block+0x30>
 800c2e0:	4620      	mov	r0, r4
 800c2e2:	4798      	blx	r3
 800c2e4:	4620      	mov	r0, r4
 800c2e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c2ea:	f7ff bf67 	b.w	800c1bc <__cxa_free_exception>
 800c2ee:	bd10      	pop	{r4, pc}
 800c2f0:	f851 0c14 	ldr.w	r0, [r1, #-20]
 800c2f4:	f000 fa0e 	bl	800c714 <_ZN10__cxxabiv111__terminateEPFvvE>

0800c2f8 <__cxa_init_primary_exception>:
 800c2f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c2fa:	2500      	movs	r5, #0
 800c2fc:	e940 121e 	strd	r1, r2, [r0, #-120]	; 0x78
 800c300:	f840 5c80 	str.w	r5, [r0, #-128]
 800c304:	4604      	mov	r4, r0
 800c306:	f000 fa39 	bl	800c77c <_ZSt14get_unexpectedv>
 800c30a:	f844 0c70 	str.w	r0, [r4, #-112]
 800c30e:	f000 fa2d 	bl	800c76c <_ZSt13get_terminatev>
 800c312:	2347      	movs	r3, #71	; 0x47
 800c314:	2243      	movs	r2, #67	; 0x43
 800c316:	274e      	movs	r7, #78	; 0x4e
 800c318:	2655      	movs	r6, #85	; 0x55
 800c31a:	490c      	ldr	r1, [pc, #48]	; (800c34c <__cxa_init_primary_exception+0x54>)
 800c31c:	f804 3c58 	strb.w	r3, [r4, #-88]
 800c320:	232b      	movs	r3, #43	; 0x2b
 800c322:	f804 5c51 	strb.w	r5, [r4, #-81]
 800c326:	f804 7c57 	strb.w	r7, [r4, #-87]
 800c32a:	f804 6c56 	strb.w	r6, [r4, #-86]
 800c32e:	f844 1c50 	str.w	r1, [r4, #-80]
 800c332:	f804 2c55 	strb.w	r2, [r4, #-85]
 800c336:	f804 2c54 	strb.w	r2, [r4, #-84]
 800c33a:	f804 3c53 	strb.w	r3, [r4, #-83]
 800c33e:	f804 3c52 	strb.w	r3, [r4, #-82]
 800c342:	f844 0c6c 	str.w	r0, [r4, #-108]
 800c346:	f1a4 0080 	sub.w	r0, r4, #128	; 0x80
 800c34a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c34c:	0800c2b5 	.word	0x0800c2b5

0800c350 <__cxa_throw>:
 800c350:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c352:	4605      	mov	r5, r0
 800c354:	460e      	mov	r6, r1
 800c356:	4617      	mov	r7, r2
 800c358:	f000 fb9a 	bl	800ca90 <__cxa_get_globals>
 800c35c:	6843      	ldr	r3, [r0, #4]
 800c35e:	4604      	mov	r4, r0
 800c360:	3301      	adds	r3, #1
 800c362:	463a      	mov	r2, r7
 800c364:	4631      	mov	r1, r6
 800c366:	6063      	str	r3, [r4, #4]
 800c368:	4628      	mov	r0, r5
 800c36a:	f7ff ffc5 	bl	800c2f8 <__cxa_init_primary_exception>
 800c36e:	4604      	mov	r4, r0
 800c370:	2301      	movs	r3, #1
 800c372:	f844 3b28 	str.w	r3, [r4], #40
 800c376:	4620      	mov	r0, r4
 800c378:	f7fc f888 	bl	800848c <_Unwind_RaiseException>
 800c37c:	4620      	mov	r0, r4
 800c37e:	f000 f83b 	bl	800c3f8 <__cxa_begin_catch>
 800c382:	f000 f9db 	bl	800c73c <_ZSt9terminatev>
 800c386:	bf00      	nop

0800c388 <__cxa_rethrow>:
 800c388:	b510      	push	{r4, lr}
 800c38a:	f000 fb81 	bl	800ca90 <__cxa_get_globals>
 800c38e:	e9d0 4200 	ldrd	r4, r2, [r0]
 800c392:	3201      	adds	r2, #1
 800c394:	6042      	str	r2, [r0, #4]
 800c396:	b164      	cbz	r4, 800c3b2 <__cxa_rethrow+0x2a>
 800c398:	f894 2020 	ldrb.w	r2, [r4, #32]
 800c39c:	2a47      	cmp	r2, #71	; 0x47
 800c39e:	d00a      	beq.n	800c3b6 <__cxa_rethrow+0x2e>
 800c3a0:	2200      	movs	r2, #0
 800c3a2:	6002      	str	r2, [r0, #0]
 800c3a4:	3420      	adds	r4, #32
 800c3a6:	4620      	mov	r0, r4
 800c3a8:	f7fc f894 	bl	80084d4 <_Unwind_Resume_or_Rethrow>
 800c3ac:	4620      	mov	r0, r4
 800c3ae:	f000 f823 	bl	800c3f8 <__cxa_begin_catch>
 800c3b2:	f000 f9c3 	bl	800c73c <_ZSt9terminatev>
 800c3b6:	f894 2021 	ldrb.w	r2, [r4, #33]	; 0x21
 800c3ba:	2a4e      	cmp	r2, #78	; 0x4e
 800c3bc:	d1f0      	bne.n	800c3a0 <__cxa_rethrow+0x18>
 800c3be:	f894 2022 	ldrb.w	r2, [r4, #34]	; 0x22
 800c3c2:	2a55      	cmp	r2, #85	; 0x55
 800c3c4:	d1ec      	bne.n	800c3a0 <__cxa_rethrow+0x18>
 800c3c6:	f894 2023 	ldrb.w	r2, [r4, #35]	; 0x23
 800c3ca:	2a43      	cmp	r2, #67	; 0x43
 800c3cc:	d1e8      	bne.n	800c3a0 <__cxa_rethrow+0x18>
 800c3ce:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 800c3d2:	2a43      	cmp	r2, #67	; 0x43
 800c3d4:	d1e4      	bne.n	800c3a0 <__cxa_rethrow+0x18>
 800c3d6:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 800c3da:	2a2b      	cmp	r2, #43	; 0x2b
 800c3dc:	d1e0      	bne.n	800c3a0 <__cxa_rethrow+0x18>
 800c3de:	f894 2026 	ldrb.w	r2, [r4, #38]	; 0x26
 800c3e2:	2a2b      	cmp	r2, #43	; 0x2b
 800c3e4:	d1dc      	bne.n	800c3a0 <__cxa_rethrow+0x18>
 800c3e6:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 800c3ea:	2a01      	cmp	r2, #1
 800c3ec:	d8d8      	bhi.n	800c3a0 <__cxa_rethrow+0x18>
 800c3ee:	6962      	ldr	r2, [r4, #20]
 800c3f0:	4252      	negs	r2, r2
 800c3f2:	6162      	str	r2, [r4, #20]
 800c3f4:	e7d6      	b.n	800c3a4 <__cxa_rethrow+0x1c>
 800c3f6:	bf00      	nop

0800c3f8 <__cxa_begin_catch>:
 800c3f8:	b538      	push	{r3, r4, r5, lr}
 800c3fa:	4604      	mov	r4, r0
 800c3fc:	f000 fb48 	bl	800ca90 <__cxa_get_globals>
 800c400:	7822      	ldrb	r2, [r4, #0]
 800c402:	6803      	ldr	r3, [r0, #0]
 800c404:	2a47      	cmp	r2, #71	; 0x47
 800c406:	f1a4 0120 	sub.w	r1, r4, #32
 800c40a:	d004      	beq.n	800c416 <__cxa_begin_catch+0x1e>
 800c40c:	bb8b      	cbnz	r3, 800c472 <__cxa_begin_catch+0x7a>
 800c40e:	461c      	mov	r4, r3
 800c410:	6001      	str	r1, [r0, #0]
 800c412:	4620      	mov	r0, r4
 800c414:	bd38      	pop	{r3, r4, r5, pc}
 800c416:	7862      	ldrb	r2, [r4, #1]
 800c418:	2a4e      	cmp	r2, #78	; 0x4e
 800c41a:	d1f7      	bne.n	800c40c <__cxa_begin_catch+0x14>
 800c41c:	78a2      	ldrb	r2, [r4, #2]
 800c41e:	2a55      	cmp	r2, #85	; 0x55
 800c420:	d1f4      	bne.n	800c40c <__cxa_begin_catch+0x14>
 800c422:	78e2      	ldrb	r2, [r4, #3]
 800c424:	2a43      	cmp	r2, #67	; 0x43
 800c426:	d1f1      	bne.n	800c40c <__cxa_begin_catch+0x14>
 800c428:	7922      	ldrb	r2, [r4, #4]
 800c42a:	2a43      	cmp	r2, #67	; 0x43
 800c42c:	d1ee      	bne.n	800c40c <__cxa_begin_catch+0x14>
 800c42e:	7962      	ldrb	r2, [r4, #5]
 800c430:	2a2b      	cmp	r2, #43	; 0x2b
 800c432:	d1eb      	bne.n	800c40c <__cxa_begin_catch+0x14>
 800c434:	79a2      	ldrb	r2, [r4, #6]
 800c436:	2a2b      	cmp	r2, #43	; 0x2b
 800c438:	d1e8      	bne.n	800c40c <__cxa_begin_catch+0x14>
 800c43a:	79e2      	ldrb	r2, [r4, #7]
 800c43c:	2a01      	cmp	r2, #1
 800c43e:	d8e5      	bhi.n	800c40c <__cxa_begin_catch+0x14>
 800c440:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 800c444:	2a00      	cmp	r2, #0
 800c446:	db11      	blt.n	800c46c <__cxa_begin_catch+0x74>
 800c448:	3201      	adds	r2, #1
 800c44a:	6845      	ldr	r5, [r0, #4]
 800c44c:	f844 2c0c 	str.w	r2, [r4, #-12]
 800c450:	428b      	cmp	r3, r1
 800c452:	f105 35ff 	add.w	r5, r5, #4294967295
 800c456:	6045      	str	r5, [r0, #4]
 800c458:	bf1c      	itt	ne
 800c45a:	f844 3c10 	strne.w	r3, [r4, #-16]
 800c45e:	6001      	strne	r1, [r0, #0]
 800c460:	4620      	mov	r0, r4
 800c462:	6a64      	ldr	r4, [r4, #36]	; 0x24
 800c464:	f7fb fc60 	bl	8007d28 <_Unwind_Complete>
 800c468:	4620      	mov	r0, r4
 800c46a:	bd38      	pop	{r3, r4, r5, pc}
 800c46c:	f1c2 0201 	rsb	r2, r2, #1
 800c470:	e7eb      	b.n	800c44a <__cxa_begin_catch+0x52>
 800c472:	f000 f963 	bl	800c73c <_ZSt9terminatev>
 800c476:	bf00      	nop

0800c478 <__cxa_end_catch>:
 800c478:	b508      	push	{r3, lr}
 800c47a:	f000 fb05 	bl	800ca88 <__cxa_get_globals_fast>
 800c47e:	4602      	mov	r2, r0
 800c480:	6800      	ldr	r0, [r0, #0]
 800c482:	b370      	cbz	r0, 800c4e2 <__cxa_end_catch+0x6a>
 800c484:	f890 3020 	ldrb.w	r3, [r0, #32]
 800c488:	2b47      	cmp	r3, #71	; 0x47
 800c48a:	d006      	beq.n	800c49a <__cxa_end_catch+0x22>
 800c48c:	2300      	movs	r3, #0
 800c48e:	6013      	str	r3, [r2, #0]
 800c490:	3020      	adds	r0, #32
 800c492:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c496:	f7fb bc49 	b.w	8007d2c <_Unwind_DeleteException>
 800c49a:	f890 3021 	ldrb.w	r3, [r0, #33]	; 0x21
 800c49e:	2b4e      	cmp	r3, #78	; 0x4e
 800c4a0:	d1f4      	bne.n	800c48c <__cxa_end_catch+0x14>
 800c4a2:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 800c4a6:	2b55      	cmp	r3, #85	; 0x55
 800c4a8:	d1f0      	bne.n	800c48c <__cxa_end_catch+0x14>
 800c4aa:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 800c4ae:	2b43      	cmp	r3, #67	; 0x43
 800c4b0:	d1ec      	bne.n	800c48c <__cxa_end_catch+0x14>
 800c4b2:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800c4b6:	2b43      	cmp	r3, #67	; 0x43
 800c4b8:	d1e8      	bne.n	800c48c <__cxa_end_catch+0x14>
 800c4ba:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800c4be:	2b2b      	cmp	r3, #43	; 0x2b
 800c4c0:	d1e4      	bne.n	800c48c <__cxa_end_catch+0x14>
 800c4c2:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 800c4c6:	2b2b      	cmp	r3, #43	; 0x2b
 800c4c8:	d1e0      	bne.n	800c48c <__cxa_end_catch+0x14>
 800c4ca:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800c4ce:	2b01      	cmp	r3, #1
 800c4d0:	d8dc      	bhi.n	800c48c <__cxa_end_catch+0x14>
 800c4d2:	6943      	ldr	r3, [r0, #20]
 800c4d4:	2b00      	cmp	r3, #0
 800c4d6:	db05      	blt.n	800c4e4 <__cxa_end_catch+0x6c>
 800c4d8:	3b01      	subs	r3, #1
 800c4da:	2b00      	cmp	r3, #0
 800c4dc:	d007      	beq.n	800c4ee <__cxa_end_catch+0x76>
 800c4de:	db0d      	blt.n	800c4fc <__cxa_end_catch+0x84>
 800c4e0:	6143      	str	r3, [r0, #20]
 800c4e2:	bd08      	pop	{r3, pc}
 800c4e4:	3301      	adds	r3, #1
 800c4e6:	d1fb      	bne.n	800c4e0 <__cxa_end_catch+0x68>
 800c4e8:	6901      	ldr	r1, [r0, #16]
 800c4ea:	6011      	str	r1, [r2, #0]
 800c4ec:	e7f8      	b.n	800c4e0 <__cxa_end_catch+0x68>
 800c4ee:	6903      	ldr	r3, [r0, #16]
 800c4f0:	6013      	str	r3, [r2, #0]
 800c4f2:	3020      	adds	r0, #32
 800c4f4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800c4f8:	f7fb bc18 	b.w	8007d2c <_Unwind_DeleteException>
 800c4fc:	f000 f91e 	bl	800c73c <_ZSt9terminatev>

0800c500 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 800c500:	b570      	push	{r4, r5, r6, lr}
 800c502:	6803      	ldr	r3, [r0, #0]
 800c504:	b084      	sub	sp, #16
 800c506:	2400      	movs	r4, #0
 800c508:	699e      	ldr	r6, [r3, #24]
 800c50a:	9400      	str	r4, [sp, #0]
 800c50c:	2310      	movs	r3, #16
 800c50e:	4615      	mov	r5, r2
 800c510:	e9cd 3402 	strd	r3, r4, [sp, #8]
 800c514:	6812      	ldr	r2, [r2, #0]
 800c516:	f88d 4004 	strb.w	r4, [sp, #4]
 800c51a:	466b      	mov	r3, sp
 800c51c:	47b0      	blx	r6
 800c51e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800c522:	f003 0306 	and.w	r3, r3, #6
 800c526:	2b06      	cmp	r3, #6
 800c528:	bf03      	ittte	eq
 800c52a:	9b00      	ldreq	r3, [sp, #0]
 800c52c:	602b      	streq	r3, [r5, #0]
 800c52e:	2001      	moveq	r0, #1
 800c530:	4620      	movne	r0, r4
 800c532:	b004      	add	sp, #16
 800c534:	bd70      	pop	{r4, r5, r6, pc}
 800c536:	bf00      	nop

0800c538 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 800c538:	9800      	ldr	r0, [sp, #0]
 800c53a:	4290      	cmp	r0, r2
 800c53c:	bf0c      	ite	eq
 800c53e:	2006      	moveq	r0, #6
 800c540:	2001      	movne	r0, #1
 800c542:	4770      	bx	lr

0800c544 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 800c544:	b510      	push	{r4, lr}
 800c546:	4b03      	ldr	r3, [pc, #12]	; (800c554 <_ZN10__cxxabiv117__class_type_infoD1Ev+0x10>)
 800c548:	6003      	str	r3, [r0, #0]
 800c54a:	4604      	mov	r4, r0
 800c54c:	f000 f91e 	bl	800c78c <_ZNSt9type_infoD1Ev>
 800c550:	4620      	mov	r0, r4
 800c552:	bd10      	pop	{r4, pc}
 800c554:	08011c34 	.word	0x08011c34

0800c558 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 800c558:	b510      	push	{r4, lr}
 800c55a:	4b05      	ldr	r3, [pc, #20]	; (800c570 <_ZN10__cxxabiv117__class_type_infoD0Ev+0x18>)
 800c55c:	6003      	str	r3, [r0, #0]
 800c55e:	4604      	mov	r4, r0
 800c560:	f000 f914 	bl	800c78c <_ZNSt9type_infoD1Ev>
 800c564:	4620      	mov	r0, r4
 800c566:	2108      	movs	r1, #8
 800c568:	f7ff fd6c 	bl	800c044 <_ZdlPvj>
 800c56c:	4620      	mov	r0, r4
 800c56e:	bd10      	pop	{r4, pc}
 800c570:	08011c34 	.word	0x08011c34

0800c574 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 800c574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c578:	e9dd 1408 	ldrd	r1, r4, [sp, #32]
 800c57c:	9d06      	ldr	r5, [sp, #24]
 800c57e:	428d      	cmp	r5, r1
 800c580:	4690      	mov	r8, r2
 800c582:	461f      	mov	r7, r3
 800c584:	4606      	mov	r6, r0
 800c586:	d00c      	beq.n	800c5a2 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x2e>
 800c588:	4639      	mov	r1, r7
 800c58a:	4630      	mov	r0, r6
 800c58c:	f000 f902 	bl	800c794 <_ZNKSt9type_infoeqERKS_>
 800c590:	b120      	cbz	r0, 800c59c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x28>
 800c592:	2301      	movs	r3, #1
 800c594:	6025      	str	r5, [r4, #0]
 800c596:	f884 8004 	strb.w	r8, [r4, #4]
 800c59a:	71a3      	strb	r3, [r4, #6]
 800c59c:	2000      	movs	r0, #0
 800c59e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c5a2:	9907      	ldr	r1, [sp, #28]
 800c5a4:	f000 f8f6 	bl	800c794 <_ZNKSt9type_infoeqERKS_>
 800c5a8:	2800      	cmp	r0, #0
 800c5aa:	d0ed      	beq.n	800c588 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x14>
 800c5ac:	f884 8005 	strb.w	r8, [r4, #5]
 800c5b0:	2000      	movs	r0, #0
 800c5b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c5b6:	bf00      	nop

0800c5b8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 800c5b8:	b538      	push	{r3, r4, r5, lr}
 800c5ba:	4615      	mov	r5, r2
 800c5bc:	461c      	mov	r4, r3
 800c5be:	f000 f8e9 	bl	800c794 <_ZNKSt9type_infoeqERKS_>
 800c5c2:	b120      	cbz	r0, 800c5ce <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x16>
 800c5c4:	2208      	movs	r2, #8
 800c5c6:	2306      	movs	r3, #6
 800c5c8:	6025      	str	r5, [r4, #0]
 800c5ca:	60e2      	str	r2, [r4, #12]
 800c5cc:	7123      	strb	r3, [r4, #4]
 800c5ce:	bd38      	pop	{r3, r4, r5, pc}

0800c5d0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 800c5d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c5d4:	4617      	mov	r7, r2
 800c5d6:	461c      	mov	r4, r3
 800c5d8:	4606      	mov	r6, r0
 800c5da:	460d      	mov	r5, r1
 800c5dc:	f000 f8da 	bl	800c794 <_ZNKSt9type_infoeqERKS_>
 800c5e0:	b908      	cbnz	r0, 800c5e6 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x16>
 800c5e2:	2c03      	cmp	r4, #3
 800c5e4:	d901      	bls.n	800c5ea <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x1a>
 800c5e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c5ea:	682b      	ldr	r3, [r5, #0]
 800c5ec:	463a      	mov	r2, r7
 800c5ee:	4631      	mov	r1, r6
 800c5f0:	4628      	mov	r0, r5
 800c5f2:	695b      	ldr	r3, [r3, #20]
 800c5f4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c5f8:	4718      	bx	r3
 800c5fa:	bf00      	nop

0800c5fc <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 800c5fc:	b510      	push	{r4, lr}
 800c5fe:	4b03      	ldr	r3, [pc, #12]	; (800c60c <_ZN10__cxxabiv120__si_class_type_infoD1Ev+0x10>)
 800c600:	6003      	str	r3, [r0, #0]
 800c602:	4604      	mov	r4, r0
 800c604:	f7ff ff9e 	bl	800c544 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800c608:	4620      	mov	r0, r4
 800c60a:	bd10      	pop	{r4, pc}
 800c60c:	08011c94 	.word	0x08011c94

0800c610 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 800c610:	b510      	push	{r4, lr}
 800c612:	4b05      	ldr	r3, [pc, #20]	; (800c628 <_ZN10__cxxabiv120__si_class_type_infoD0Ev+0x18>)
 800c614:	6003      	str	r3, [r0, #0]
 800c616:	4604      	mov	r4, r0
 800c618:	f7ff ff94 	bl	800c544 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 800c61c:	4620      	mov	r0, r4
 800c61e:	210c      	movs	r1, #12
 800c620:	f7ff fd10 	bl	800c044 <_ZdlPvj>
 800c624:	4620      	mov	r0, r4
 800c626:	bd10      	pop	{r4, pc}
 800c628:	08011c94 	.word	0x08011c94

0800c62c <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 800c62c:	b570      	push	{r4, r5, r6, lr}
 800c62e:	b082      	sub	sp, #8
 800c630:	460e      	mov	r6, r1
 800c632:	9c06      	ldr	r4, [sp, #24]
 800c634:	4294      	cmp	r4, r2
 800c636:	4605      	mov	r5, r0
 800c638:	d009      	beq.n	800c64e <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x22>
 800c63a:	68a8      	ldr	r0, [r5, #8]
 800c63c:	6805      	ldr	r5, [r0, #0]
 800c63e:	9406      	str	r4, [sp, #24]
 800c640:	6a2c      	ldr	r4, [r5, #32]
 800c642:	4631      	mov	r1, r6
 800c644:	46a4      	mov	ip, r4
 800c646:	b002      	add	sp, #8
 800c648:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c64c:	4760      	bx	ip
 800c64e:	4619      	mov	r1, r3
 800c650:	9201      	str	r2, [sp, #4]
 800c652:	9300      	str	r3, [sp, #0]
 800c654:	f000 f89e 	bl	800c794 <_ZNKSt9type_infoeqERKS_>
 800c658:	e9dd 3200 	ldrd	r3, r2, [sp]
 800c65c:	2800      	cmp	r0, #0
 800c65e:	d0ec      	beq.n	800c63a <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0xe>
 800c660:	2006      	movs	r0, #6
 800c662:	b002      	add	sp, #8
 800c664:	bd70      	pop	{r4, r5, r6, pc}
 800c666:	bf00      	nop

0800c668 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 800c668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c66c:	460e      	mov	r6, r1
 800c66e:	b081      	sub	sp, #4
 800c670:	4619      	mov	r1, r3
 800c672:	461f      	mov	r7, r3
 800c674:	4691      	mov	r9, r2
 800c676:	4683      	mov	fp, r0
 800c678:	e9dd 4a0a 	ldrd	r4, sl, [sp, #40]	; 0x28
 800c67c:	e9dd 850c 	ldrd	r8, r5, [sp, #48]	; 0x30
 800c680:	f000 f888 	bl	800c794 <_ZNKSt9type_infoeqERKS_>
 800c684:	b170      	cbz	r0, 800c6a4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x3c>
 800c686:	2e00      	cmp	r6, #0
 800c688:	602c      	str	r4, [r5, #0]
 800c68a:	f885 9004 	strb.w	r9, [r5, #4]
 800c68e:	db1d      	blt.n	800c6cc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x64>
 800c690:	4434      	add	r4, r6
 800c692:	45a0      	cmp	r8, r4
 800c694:	bf0c      	ite	eq
 800c696:	2406      	moveq	r4, #6
 800c698:	2401      	movne	r4, #1
 800c69a:	71ac      	strb	r4, [r5, #6]
 800c69c:	2000      	movs	r0, #0
 800c69e:	b001      	add	sp, #4
 800c6a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c6a4:	4544      	cmp	r4, r8
 800c6a6:	d016      	beq.n	800c6d6 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x6e>
 800c6a8:	f8db 0008 	ldr.w	r0, [fp, #8]
 800c6ac:	f8d0 c000 	ldr.w	ip, [r0]
 800c6b0:	e9cd 850c 	strd	r8, r5, [sp, #48]	; 0x30
 800c6b4:	e9cd 4a0a 	strd	r4, sl, [sp, #40]	; 0x28
 800c6b8:	f8dc 401c 	ldr.w	r4, [ip, #28]
 800c6bc:	463b      	mov	r3, r7
 800c6be:	464a      	mov	r2, r9
 800c6c0:	4631      	mov	r1, r6
 800c6c2:	46a4      	mov	ip, r4
 800c6c4:	b001      	add	sp, #4
 800c6c6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6ca:	4760      	bx	ip
 800c6cc:	3602      	adds	r6, #2
 800c6ce:	d1e5      	bne.n	800c69c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34>
 800c6d0:	2301      	movs	r3, #1
 800c6d2:	71ab      	strb	r3, [r5, #6]
 800c6d4:	e7e2      	b.n	800c69c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34>
 800c6d6:	4651      	mov	r1, sl
 800c6d8:	4658      	mov	r0, fp
 800c6da:	f000 f85b 	bl	800c794 <_ZNKSt9type_infoeqERKS_>
 800c6de:	2800      	cmp	r0, #0
 800c6e0:	d0e2      	beq.n	800c6a8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x40>
 800c6e2:	f885 9005 	strb.w	r9, [r5, #5]
 800c6e6:	e7d9      	b.n	800c69c <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x34>

0800c6e8 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 800c6e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c6ec:	4607      	mov	r7, r0
 800c6ee:	460c      	mov	r4, r1
 800c6f0:	4615      	mov	r5, r2
 800c6f2:	461e      	mov	r6, r3
 800c6f4:	f7ff ff60 	bl	800c5b8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 800c6f8:	b108      	cbz	r0, 800c6fe <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x16>
 800c6fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c6fe:	68b8      	ldr	r0, [r7, #8]
 800c700:	6807      	ldr	r7, [r0, #0]
 800c702:	4621      	mov	r1, r4
 800c704:	69bc      	ldr	r4, [r7, #24]
 800c706:	4633      	mov	r3, r6
 800c708:	462a      	mov	r2, r5
 800c70a:	46a4      	mov	ip, r4
 800c70c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c710:	4760      	bx	ip
 800c712:	bf00      	nop

0800c714 <_ZN10__cxxabiv111__terminateEPFvvE>:
 800c714:	b508      	push	{r3, lr}
 800c716:	4780      	blx	r0
 800c718:	f000 fd8c 	bl	800d234 <abort>
 800c71c:	f7ff fe6c 	bl	800c3f8 <__cxa_begin_catch>
 800c720:	f000 fd88 	bl	800d234 <abort>
 800c724:	460d      	mov	r5, r1
 800c726:	4604      	mov	r4, r0
 800c728:	f7ff fea6 	bl	800c478 <__cxa_end_catch>
 800c72c:	3501      	adds	r5, #1
 800c72e:	d001      	beq.n	800c734 <_ZN10__cxxabiv111__terminateEPFvvE+0x20>
 800c730:	f000 f8e2 	bl	800c8f8 <__cxa_end_cleanup>
 800c734:	4620      	mov	r0, r4
 800c736:	f000 f871 	bl	800c81c <__cxa_call_unexpected>
 800c73a:	bf00      	nop

0800c73c <_ZSt9terminatev>:
 800c73c:	b508      	push	{r3, lr}
 800c73e:	4b03      	ldr	r3, [pc, #12]	; (800c74c <_ZSt9terminatev+0x10>)
 800c740:	6818      	ldr	r0, [r3, #0]
 800c742:	f3bf 8f5b 	dmb	ish
 800c746:	f7ff ffe5 	bl	800c714 <_ZN10__cxxabiv111__terminateEPFvvE>
 800c74a:	bf00      	nop
 800c74c:	20000010 	.word	0x20000010

0800c750 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 800c750:	b508      	push	{r3, lr}
 800c752:	4780      	blx	r0
 800c754:	f7ff fff2 	bl	800c73c <_ZSt9terminatev>

0800c758 <_ZSt10unexpectedv>:
 800c758:	b508      	push	{r3, lr}
 800c75a:	4b03      	ldr	r3, [pc, #12]	; (800c768 <_ZSt10unexpectedv+0x10>)
 800c75c:	6818      	ldr	r0, [r3, #0]
 800c75e:	f3bf 8f5b 	dmb	ish
 800c762:	f7ff fff5 	bl	800c750 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800c766:	bf00      	nop
 800c768:	2000000c 	.word	0x2000000c

0800c76c <_ZSt13get_terminatev>:
 800c76c:	4b02      	ldr	r3, [pc, #8]	; (800c778 <_ZSt13get_terminatev+0xc>)
 800c76e:	6818      	ldr	r0, [r3, #0]
 800c770:	f3bf 8f5b 	dmb	ish
 800c774:	4770      	bx	lr
 800c776:	bf00      	nop
 800c778:	20000010 	.word	0x20000010

0800c77c <_ZSt14get_unexpectedv>:
 800c77c:	4b02      	ldr	r3, [pc, #8]	; (800c788 <_ZSt14get_unexpectedv+0xc>)
 800c77e:	6818      	ldr	r0, [r3, #0]
 800c780:	f3bf 8f5b 	dmb	ish
 800c784:	4770      	bx	lr
 800c786:	bf00      	nop
 800c788:	2000000c 	.word	0x2000000c

0800c78c <_ZNSt9type_infoD1Ev>:
 800c78c:	4770      	bx	lr
 800c78e:	bf00      	nop

0800c790 <_ZNKSt9type_info14__is_pointer_pEv>:
 800c790:	2000      	movs	r0, #0
 800c792:	4770      	bx	lr

0800c794 <_ZNKSt9type_infoeqERKS_>:
 800c794:	4281      	cmp	r1, r0
 800c796:	d00f      	beq.n	800c7b8 <_ZNKSt9type_infoeqERKS_+0x24>
 800c798:	b508      	push	{r3, lr}
 800c79a:	6840      	ldr	r0, [r0, #4]
 800c79c:	7803      	ldrb	r3, [r0, #0]
 800c79e:	2b2a      	cmp	r3, #42	; 0x2a
 800c7a0:	d00c      	beq.n	800c7bc <_ZNKSt9type_infoeqERKS_+0x28>
 800c7a2:	6849      	ldr	r1, [r1, #4]
 800c7a4:	780b      	ldrb	r3, [r1, #0]
 800c7a6:	2b2a      	cmp	r3, #42	; 0x2a
 800c7a8:	bf08      	it	eq
 800c7aa:	3101      	addeq	r1, #1
 800c7ac:	f7fa fad8 	bl	8006d60 <strcmp>
 800c7b0:	fab0 f080 	clz	r0, r0
 800c7b4:	0940      	lsrs	r0, r0, #5
 800c7b6:	bd08      	pop	{r3, pc}
 800c7b8:	2001      	movs	r0, #1
 800c7ba:	4770      	bx	lr
 800c7bc:	2000      	movs	r0, #0
 800c7be:	bd08      	pop	{r3, pc}

0800c7c0 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>:
 800c7c0:	7803      	ldrb	r3, [r0, #0]
 800c7c2:	2b47      	cmp	r3, #71	; 0x47
 800c7c4:	d001      	beq.n	800c7ca <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0xa>
 800c7c6:	2000      	movs	r0, #0
 800c7c8:	4770      	bx	lr
 800c7ca:	7843      	ldrb	r3, [r0, #1]
 800c7cc:	2b4e      	cmp	r3, #78	; 0x4e
 800c7ce:	d1fa      	bne.n	800c7c6 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c7d0:	7883      	ldrb	r3, [r0, #2]
 800c7d2:	2b55      	cmp	r3, #85	; 0x55
 800c7d4:	d1f7      	bne.n	800c7c6 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c7d6:	78c3      	ldrb	r3, [r0, #3]
 800c7d8:	2b43      	cmp	r3, #67	; 0x43
 800c7da:	d1f4      	bne.n	800c7c6 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c7dc:	7903      	ldrb	r3, [r0, #4]
 800c7de:	2b43      	cmp	r3, #67	; 0x43
 800c7e0:	d1f1      	bne.n	800c7c6 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c7e2:	7943      	ldrb	r3, [r0, #5]
 800c7e4:	2b2b      	cmp	r3, #43	; 0x2b
 800c7e6:	d1ee      	bne.n	800c7c6 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c7e8:	7983      	ldrb	r3, [r0, #6]
 800c7ea:	2b2b      	cmp	r3, #43	; 0x2b
 800c7ec:	d1eb      	bne.n	800c7c6 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc+0x6>
 800c7ee:	79c0      	ldrb	r0, [r0, #7]
 800c7f0:	2801      	cmp	r0, #1
 800c7f2:	bf8c      	ite	hi
 800c7f4:	2000      	movhi	r0, #0
 800c7f6:	2001      	movls	r0, #1
 800c7f8:	4770      	bx	lr
 800c7fa:	bf00      	nop

0800c7fc <__cxa_call_terminate>:
 800c7fc:	b510      	push	{r4, lr}
 800c7fe:	b130      	cbz	r0, 800c80e <__cxa_call_terminate+0x12>
 800c800:	4604      	mov	r4, r0
 800c802:	f7ff fdf9 	bl	800c3f8 <__cxa_begin_catch>
 800c806:	4620      	mov	r0, r4
 800c808:	f7ff ffda 	bl	800c7c0 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800c80c:	b908      	cbnz	r0, 800c812 <__cxa_call_terminate+0x16>
 800c80e:	f7ff ff95 	bl	800c73c <_ZSt9terminatev>
 800c812:	f854 0c14 	ldr.w	r0, [r4, #-20]
 800c816:	f7ff ff7d 	bl	800c714 <_ZN10__cxxabiv111__terminateEPFvvE>
 800c81a:	bf00      	nop

0800c81c <__cxa_call_unexpected>:
 800c81c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c820:	b085      	sub	sp, #20
 800c822:	4602      	mov	r2, r0
 800c824:	f7ff ffcc 	bl	800c7c0 <_ZN10__cxxabiv1L24__is_gxx_exception_classEPc>
 800c828:	b150      	cbz	r0, 800c840 <__cxa_call_unexpected+0x24>
 800c82a:	e952 8506 	ldrd	r8, r5, [r2, #-24]
 800c82e:	4610      	mov	r0, r2
 800c830:	6a96      	ldr	r6, [r2, #40]	; 0x28
 800c832:	e9d2 740c 	ldrd	r7, r4, [r2, #48]	; 0x30
 800c836:	f7ff fddf 	bl	800c3f8 <__cxa_begin_catch>
 800c83a:	4640      	mov	r0, r8
 800c83c:	f7ff ff88 	bl	800c750 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 800c840:	4610      	mov	r0, r2
 800c842:	f7ff fdd9 	bl	800c3f8 <__cxa_begin_catch>
 800c846:	f7ff ff87 	bl	800c758 <_ZSt10unexpectedv>
 800c84a:	f7ff fdd5 	bl	800c3f8 <__cxa_begin_catch>
 800c84e:	f7ff ff75 	bl	800c73c <_ZSt9terminatev>
 800c852:	f7ff fdd1 	bl	800c3f8 <__cxa_begin_catch>
 800c856:	f000 f917 	bl	800ca88 <__cxa_get_globals_fast>
 800c85a:	6803      	ldr	r3, [r0, #0]
 800c85c:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
 800c860:	f10d 0a10 	add.w	sl, sp, #16
 800c864:	2a01      	cmp	r2, #1
 800c866:	bf0c      	ite	eq
 800c868:	681a      	ldreq	r2, [r3, #0]
 800c86a:	f103 0278 	addne.w	r2, r3, #120	; 0x78
 800c86e:	f04f 0800 	mov.w	r8, #0
 800c872:	3320      	adds	r3, #32
 800c874:	f84a 2d08 	str.w	r2, [sl, #-8]!
 800c878:	f027 0b03 	bic.w	fp, r7, #3
 800c87c:	9301      	str	r3, [sp, #4]
 800c87e:	46c1      	mov	r9, r8
 800c880:	45b1      	cmp	r9, r6
 800c882:	da1b      	bge.n	800c8bc <__cxa_call_unexpected+0xa0>
 800c884:	6827      	ldr	r7, [r4, #0]
 800c886:	b107      	cbz	r7, 800c88a <__cxa_call_unexpected+0x6e>
 800c888:	4427      	add	r7, r4
 800c88a:	4653      	mov	r3, sl
 800c88c:	2200      	movs	r2, #0
 800c88e:	4639      	mov	r1, r7
 800c890:	9801      	ldr	r0, [sp, #4]
 800c892:	f000 f837 	bl	800c904 <__cxa_type_match>
 800c896:	b9e8      	cbnz	r0, 800c8d4 <__cxa_call_unexpected+0xb8>
 800c898:	683b      	ldr	r3, [r7, #0]
 800c89a:	4914      	ldr	r1, [pc, #80]	; (800c8ec <__cxa_call_unexpected+0xd0>)
 800c89c:	691b      	ldr	r3, [r3, #16]
 800c89e:	9300      	str	r3, [sp, #0]
 800c8a0:	aa04      	add	r2, sp, #16
 800c8a2:	2301      	movs	r3, #1
 800c8a4:	f842 0d04 	str.w	r0, [r2, #-4]!
 800c8a8:	4638      	mov	r0, r7
 800c8aa:	9f00      	ldr	r7, [sp, #0]
 800c8ac:	47b8      	blx	r7
 800c8ae:	2800      	cmp	r0, #0
 800c8b0:	bf18      	it	ne
 800c8b2:	4680      	movne	r8, r0
 800c8b4:	f109 0901 	add.w	r9, r9, #1
 800c8b8:	445c      	add	r4, fp
 800c8ba:	e7e1      	b.n	800c880 <__cxa_call_unexpected+0x64>
 800c8bc:	f1b8 0f00 	cmp.w	r8, #0
 800c8c0:	d010      	beq.n	800c8e4 <__cxa_call_unexpected+0xc8>
 800c8c2:	2004      	movs	r0, #4
 800c8c4:	f7ff fc62 	bl	800c18c <__cxa_allocate_exception>
 800c8c8:	4b09      	ldr	r3, [pc, #36]	; (800c8f0 <__cxa_call_unexpected+0xd4>)
 800c8ca:	6003      	str	r3, [r0, #0]
 800c8cc:	4a09      	ldr	r2, [pc, #36]	; (800c8f4 <__cxa_call_unexpected+0xd8>)
 800c8ce:	4907      	ldr	r1, [pc, #28]	; (800c8ec <__cxa_call_unexpected+0xd0>)
 800c8d0:	f7ff fd3e 	bl	800c350 <__cxa_throw>
 800c8d4:	f7ff fd58 	bl	800c388 <__cxa_rethrow>
 800c8d8:	f7ff fdce 	bl	800c478 <__cxa_end_catch>
 800c8dc:	f7ff fdcc 	bl	800c478 <__cxa_end_catch>
 800c8e0:	f000 f80a 	bl	800c8f8 <__cxa_end_cleanup>
 800c8e4:	4628      	mov	r0, r5
 800c8e6:	f7ff ff15 	bl	800c714 <_ZN10__cxxabiv111__terminateEPFvvE>
 800c8ea:	bf00      	nop
 800c8ec:	08011b2c 	.word	0x08011b2c
 800c8f0:	08011bb0 	.word	0x08011bb0
 800c8f4:	0800c261 	.word	0x0800c261

0800c8f8 <__cxa_end_cleanup>:
 800c8f8:	b41e      	push	{r1, r2, r3, r4}
 800c8fa:	f000 f88d 	bl	800ca18 <__gnu_end_cleanup>
 800c8fe:	bc1e      	pop	{r1, r2, r3, r4}
 800c900:	f7fb fdd6 	bl	80084b0 <_Unwind_Resume>

0800c904 <__cxa_type_match>:
 800c904:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c906:	7802      	ldrb	r2, [r0, #0]
 800c908:	2a47      	cmp	r2, #71	; 0x47
 800c90a:	b083      	sub	sp, #12
 800c90c:	460d      	mov	r5, r1
 800c90e:	461f      	mov	r7, r3
 800c910:	d01e      	beq.n	800c950 <__cxa_type_match+0x4c>
 800c912:	2300      	movs	r3, #0
 800c914:	4c25      	ldr	r4, [pc, #148]	; (800c9ac <__cxa_type_match+0xa8>)
 800c916:	9301      	str	r3, [sp, #4]
 800c918:	6823      	ldr	r3, [r4, #0]
 800c91a:	4620      	mov	r0, r4
 800c91c:	689b      	ldr	r3, [r3, #8]
 800c91e:	4798      	blx	r3
 800c920:	b180      	cbz	r0, 800c944 <__cxa_type_match+0x40>
 800c922:	9b01      	ldr	r3, [sp, #4]
 800c924:	681b      	ldr	r3, [r3, #0]
 800c926:	9301      	str	r3, [sp, #4]
 800c928:	2602      	movs	r6, #2
 800c92a:	682b      	ldr	r3, [r5, #0]
 800c92c:	4621      	mov	r1, r4
 800c92e:	4628      	mov	r0, r5
 800c930:	691c      	ldr	r4, [r3, #16]
 800c932:	aa01      	add	r2, sp, #4
 800c934:	2301      	movs	r3, #1
 800c936:	47a0      	blx	r4
 800c938:	b130      	cbz	r0, 800c948 <__cxa_type_match+0x44>
 800c93a:	9b01      	ldr	r3, [sp, #4]
 800c93c:	603b      	str	r3, [r7, #0]
 800c93e:	4630      	mov	r0, r6
 800c940:	b003      	add	sp, #12
 800c942:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c944:	2601      	movs	r6, #1
 800c946:	e7f0      	b.n	800c92a <__cxa_type_match+0x26>
 800c948:	4606      	mov	r6, r0
 800c94a:	4630      	mov	r0, r6
 800c94c:	b003      	add	sp, #12
 800c94e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c950:	7843      	ldrb	r3, [r0, #1]
 800c952:	2b4e      	cmp	r3, #78	; 0x4e
 800c954:	d1dd      	bne.n	800c912 <__cxa_type_match+0xe>
 800c956:	7883      	ldrb	r3, [r0, #2]
 800c958:	2b55      	cmp	r3, #85	; 0x55
 800c95a:	d1da      	bne.n	800c912 <__cxa_type_match+0xe>
 800c95c:	78c3      	ldrb	r3, [r0, #3]
 800c95e:	2b43      	cmp	r3, #67	; 0x43
 800c960:	d1d7      	bne.n	800c912 <__cxa_type_match+0xe>
 800c962:	7903      	ldrb	r3, [r0, #4]
 800c964:	2b46      	cmp	r3, #70	; 0x46
 800c966:	d015      	beq.n	800c994 <__cxa_type_match+0x90>
 800c968:	7903      	ldrb	r3, [r0, #4]
 800c96a:	2b43      	cmp	r3, #67	; 0x43
 800c96c:	d1d1      	bne.n	800c912 <__cxa_type_match+0xe>
 800c96e:	7943      	ldrb	r3, [r0, #5]
 800c970:	2b2b      	cmp	r3, #43	; 0x2b
 800c972:	d1ce      	bne.n	800c912 <__cxa_type_match+0xe>
 800c974:	7983      	ldrb	r3, [r0, #6]
 800c976:	2b2b      	cmp	r3, #43	; 0x2b
 800c978:	d1cb      	bne.n	800c912 <__cxa_type_match+0xe>
 800c97a:	79c3      	ldrb	r3, [r0, #7]
 800c97c:	2b01      	cmp	r3, #1
 800c97e:	d8c8      	bhi.n	800c912 <__cxa_type_match+0xe>
 800c980:	f850 4c20 	ldr.w	r4, [r0, #-32]
 800c984:	d002      	beq.n	800c98c <__cxa_type_match+0x88>
 800c986:	3058      	adds	r0, #88	; 0x58
 800c988:	9001      	str	r0, [sp, #4]
 800c98a:	e7c5      	b.n	800c918 <__cxa_type_match+0x14>
 800c98c:	4620      	mov	r0, r4
 800c98e:	f854 4c78 	ldr.w	r4, [r4, #-120]
 800c992:	e7f9      	b.n	800c988 <__cxa_type_match+0x84>
 800c994:	7943      	ldrb	r3, [r0, #5]
 800c996:	2b4f      	cmp	r3, #79	; 0x4f
 800c998:	d1e6      	bne.n	800c968 <__cxa_type_match+0x64>
 800c99a:	7983      	ldrb	r3, [r0, #6]
 800c99c:	2b52      	cmp	r3, #82	; 0x52
 800c99e:	d1e3      	bne.n	800c968 <__cxa_type_match+0x64>
 800c9a0:	79c3      	ldrb	r3, [r0, #7]
 800c9a2:	2b00      	cmp	r3, #0
 800c9a4:	d1e0      	bne.n	800c968 <__cxa_type_match+0x64>
 800c9a6:	9301      	str	r3, [sp, #4]
 800c9a8:	4c01      	ldr	r4, [pc, #4]	; (800c9b0 <__cxa_type_match+0xac>)
 800c9aa:	e7b5      	b.n	800c918 <__cxa_type_match+0x14>
 800c9ac:	08011b24 	.word	0x08011b24
 800c9b0:	08011b1c 	.word	0x08011b1c

0800c9b4 <__cxa_begin_cleanup>:
 800c9b4:	b510      	push	{r4, lr}
 800c9b6:	4604      	mov	r4, r0
 800c9b8:	f000 f86a 	bl	800ca90 <__cxa_get_globals>
 800c9bc:	7823      	ldrb	r3, [r4, #0]
 800c9be:	2b47      	cmp	r3, #71	; 0x47
 800c9c0:	f1a4 0220 	sub.w	r2, r4, #32
 800c9c4:	d004      	beq.n	800c9d0 <__cxa_begin_cleanup+0x1c>
 800c9c6:	6883      	ldr	r3, [r0, #8]
 800c9c8:	bb23      	cbnz	r3, 800ca14 <__cxa_begin_cleanup+0x60>
 800c9ca:	6082      	str	r2, [r0, #8]
 800c9cc:	2001      	movs	r0, #1
 800c9ce:	bd10      	pop	{r4, pc}
 800c9d0:	7863      	ldrb	r3, [r4, #1]
 800c9d2:	2b4e      	cmp	r3, #78	; 0x4e
 800c9d4:	d1f7      	bne.n	800c9c6 <__cxa_begin_cleanup+0x12>
 800c9d6:	78a3      	ldrb	r3, [r4, #2]
 800c9d8:	2b55      	cmp	r3, #85	; 0x55
 800c9da:	d1f4      	bne.n	800c9c6 <__cxa_begin_cleanup+0x12>
 800c9dc:	78e3      	ldrb	r3, [r4, #3]
 800c9de:	2b43      	cmp	r3, #67	; 0x43
 800c9e0:	d1f1      	bne.n	800c9c6 <__cxa_begin_cleanup+0x12>
 800c9e2:	7923      	ldrb	r3, [r4, #4]
 800c9e4:	2b43      	cmp	r3, #67	; 0x43
 800c9e6:	d1ee      	bne.n	800c9c6 <__cxa_begin_cleanup+0x12>
 800c9e8:	7963      	ldrb	r3, [r4, #5]
 800c9ea:	2b2b      	cmp	r3, #43	; 0x2b
 800c9ec:	d1eb      	bne.n	800c9c6 <__cxa_begin_cleanup+0x12>
 800c9ee:	79a3      	ldrb	r3, [r4, #6]
 800c9f0:	2b2b      	cmp	r3, #43	; 0x2b
 800c9f2:	d1e8      	bne.n	800c9c6 <__cxa_begin_cleanup+0x12>
 800c9f4:	79e3      	ldrb	r3, [r4, #7]
 800c9f6:	2b01      	cmp	r3, #1
 800c9f8:	d8e5      	bhi.n	800c9c6 <__cxa_begin_cleanup+0x12>
 800c9fa:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800c9fe:	3301      	adds	r3, #1
 800ca00:	2b01      	cmp	r3, #1
 800ca02:	f844 3c04 	str.w	r3, [r4, #-4]
 800ca06:	d1e1      	bne.n	800c9cc <__cxa_begin_cleanup+0x18>
 800ca08:	6883      	ldr	r3, [r0, #8]
 800ca0a:	f844 3c08 	str.w	r3, [r4, #-8]
 800ca0e:	6082      	str	r2, [r0, #8]
 800ca10:	2001      	movs	r0, #1
 800ca12:	bd10      	pop	{r4, pc}
 800ca14:	f7ff fe92 	bl	800c73c <_ZSt9terminatev>

0800ca18 <__gnu_end_cleanup>:
 800ca18:	b508      	push	{r3, lr}
 800ca1a:	f000 f839 	bl	800ca90 <__cxa_get_globals>
 800ca1e:	6883      	ldr	r3, [r0, #8]
 800ca20:	b383      	cbz	r3, 800ca84 <__gnu_end_cleanup+0x6c>
 800ca22:	f893 2020 	ldrb.w	r2, [r3, #32]
 800ca26:	2a47      	cmp	r2, #71	; 0x47
 800ca28:	d004      	beq.n	800ca34 <__gnu_end_cleanup+0x1c>
 800ca2a:	2200      	movs	r2, #0
 800ca2c:	6082      	str	r2, [r0, #8]
 800ca2e:	f103 0020 	add.w	r0, r3, #32
 800ca32:	bd08      	pop	{r3, pc}
 800ca34:	f893 2021 	ldrb.w	r2, [r3, #33]	; 0x21
 800ca38:	2a4e      	cmp	r2, #78	; 0x4e
 800ca3a:	d1f6      	bne.n	800ca2a <__gnu_end_cleanup+0x12>
 800ca3c:	f893 2022 	ldrb.w	r2, [r3, #34]	; 0x22
 800ca40:	2a55      	cmp	r2, #85	; 0x55
 800ca42:	d1f2      	bne.n	800ca2a <__gnu_end_cleanup+0x12>
 800ca44:	f893 2023 	ldrb.w	r2, [r3, #35]	; 0x23
 800ca48:	2a43      	cmp	r2, #67	; 0x43
 800ca4a:	d1ee      	bne.n	800ca2a <__gnu_end_cleanup+0x12>
 800ca4c:	f893 2024 	ldrb.w	r2, [r3, #36]	; 0x24
 800ca50:	2a43      	cmp	r2, #67	; 0x43
 800ca52:	d1ea      	bne.n	800ca2a <__gnu_end_cleanup+0x12>
 800ca54:	f893 2025 	ldrb.w	r2, [r3, #37]	; 0x25
 800ca58:	2a2b      	cmp	r2, #43	; 0x2b
 800ca5a:	d1e6      	bne.n	800ca2a <__gnu_end_cleanup+0x12>
 800ca5c:	f893 2026 	ldrb.w	r2, [r3, #38]	; 0x26
 800ca60:	2a2b      	cmp	r2, #43	; 0x2b
 800ca62:	d1e2      	bne.n	800ca2a <__gnu_end_cleanup+0x12>
 800ca64:	f893 2027 	ldrb.w	r2, [r3, #39]	; 0x27
 800ca68:	2a01      	cmp	r2, #1
 800ca6a:	d8de      	bhi.n	800ca2a <__gnu_end_cleanup+0x12>
 800ca6c:	69da      	ldr	r2, [r3, #28]
 800ca6e:	3a01      	subs	r2, #1
 800ca70:	61da      	str	r2, [r3, #28]
 800ca72:	2a00      	cmp	r2, #0
 800ca74:	d1db      	bne.n	800ca2e <__gnu_end_cleanup+0x16>
 800ca76:	699a      	ldr	r2, [r3, #24]
 800ca78:	6082      	str	r2, [r0, #8]
 800ca7a:	2200      	movs	r2, #0
 800ca7c:	619a      	str	r2, [r3, #24]
 800ca7e:	f103 0020 	add.w	r0, r3, #32
 800ca82:	bd08      	pop	{r3, pc}
 800ca84:	f7ff fe5a 	bl	800c73c <_ZSt9terminatev>

0800ca88 <__cxa_get_globals_fast>:
 800ca88:	4800      	ldr	r0, [pc, #0]	; (800ca8c <__cxa_get_globals_fast+0x4>)
 800ca8a:	4770      	bx	lr
 800ca8c:	20000a34 	.word	0x20000a34

0800ca90 <__cxa_get_globals>:
 800ca90:	4800      	ldr	r0, [pc, #0]	; (800ca94 <__cxa_get_globals+0x4>)
 800ca92:	4770      	bx	lr
 800ca94:	20000a34 	.word	0x20000a34

0800ca98 <_ZL28read_encoded_value_with_basehjPKhPj>:
 800ca98:	2850      	cmp	r0, #80	; 0x50
 800ca9a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca9c:	d01c      	beq.n	800cad8 <_ZL28read_encoded_value_with_basehjPKhPj+0x40>
 800ca9e:	f000 040f 	and.w	r4, r0, #15
 800caa2:	2c0c      	cmp	r4, #12
 800caa4:	d856      	bhi.n	800cb54 <_ZL28read_encoded_value_with_basehjPKhPj+0xbc>
 800caa6:	e8df f004 	tbb	[pc, r4]
 800caaa:	4107      	.short	0x4107
 800caac:	551f0751 	.word	0x551f0751
 800cab0:	27555555 	.word	0x27555555
 800cab4:	0723      	.short	0x0723
 800cab6:	1f          	.byte	0x1f
 800cab7:	00          	.byte	0x00
 800cab8:	4614      	mov	r4, r2
 800caba:	f854 5b04 	ldr.w	r5, [r4], #4
 800cabe:	b145      	cbz	r5, 800cad2 <_ZL28read_encoded_value_with_basehjPKhPj+0x3a>
 800cac0:	f000 0670 	and.w	r6, r0, #112	; 0x70
 800cac4:	2e10      	cmp	r6, #16
 800cac6:	bf08      	it	eq
 800cac8:	4611      	moveq	r1, r2
 800caca:	440d      	add	r5, r1
 800cacc:	0602      	lsls	r2, r0, #24
 800cace:	bf48      	it	mi
 800cad0:	682d      	ldrmi	r5, [r5, #0]
 800cad2:	601d      	str	r5, [r3, #0]
 800cad4:	4620      	mov	r0, r4
 800cad6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cad8:	3203      	adds	r2, #3
 800cada:	f022 0403 	bic.w	r4, r2, #3
 800cade:	f854 5b04 	ldr.w	r5, [r4], #4
 800cae2:	601d      	str	r5, [r3, #0]
 800cae4:	4620      	mov	r0, r4
 800cae6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cae8:	4614      	mov	r4, r2
 800caea:	f854 5b08 	ldr.w	r5, [r4], #8
 800caee:	e7e6      	b.n	800cabe <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800caf0:	4614      	mov	r4, r2
 800caf2:	f934 5b02 	ldrsh.w	r5, [r4], #2
 800caf6:	e7e2      	b.n	800cabe <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800caf8:	2500      	movs	r5, #0
 800cafa:	462f      	mov	r7, r5
 800cafc:	4614      	mov	r4, r2
 800cafe:	f814 cb01 	ldrb.w	ip, [r4], #1
 800cb02:	f00c 067f 	and.w	r6, ip, #127	; 0x7f
 800cb06:	40be      	lsls	r6, r7
 800cb08:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800cb0c:	ea45 0506 	orr.w	r5, r5, r6
 800cb10:	f107 0707 	add.w	r7, r7, #7
 800cb14:	d1f3      	bne.n	800cafe <_ZL28read_encoded_value_with_basehjPKhPj+0x66>
 800cb16:	2f1f      	cmp	r7, #31
 800cb18:	d8d1      	bhi.n	800cabe <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800cb1a:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800cb1e:	d0ce      	beq.n	800cabe <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800cb20:	f04f 36ff 	mov.w	r6, #4294967295
 800cb24:	fa06 f707 	lsl.w	r7, r6, r7
 800cb28:	433d      	orrs	r5, r7
 800cb2a:	e7c9      	b.n	800cac0 <_ZL28read_encoded_value_with_basehjPKhPj+0x28>
 800cb2c:	2500      	movs	r5, #0
 800cb2e:	462f      	mov	r7, r5
 800cb30:	4614      	mov	r4, r2
 800cb32:	f814 cb01 	ldrb.w	ip, [r4], #1
 800cb36:	f00c 067f 	and.w	r6, ip, #127	; 0x7f
 800cb3a:	40be      	lsls	r6, r7
 800cb3c:	f01c 0f80 	tst.w	ip, #128	; 0x80
 800cb40:	ea45 0506 	orr.w	r5, r5, r6
 800cb44:	f107 0707 	add.w	r7, r7, #7
 800cb48:	d1f3      	bne.n	800cb32 <_ZL28read_encoded_value_with_basehjPKhPj+0x9a>
 800cb4a:	e7b8      	b.n	800cabe <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800cb4c:	4614      	mov	r4, r2
 800cb4e:	f834 5b02 	ldrh.w	r5, [r4], #2
 800cb52:	e7b4      	b.n	800cabe <_ZL28read_encoded_value_with_basehjPKhPj+0x26>
 800cb54:	f000 fb6e 	bl	800d234 <abort>

0800cb58 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>:
 800cb58:	f000 0070 	and.w	r0, r0, #112	; 0x70
 800cb5c:	2820      	cmp	r0, #32
 800cb5e:	d011      	beq.n	800cb84 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x2c>
 800cb60:	d90b      	bls.n	800cb7a <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x22>
 800cb62:	2840      	cmp	r0, #64	; 0x40
 800cb64:	d006      	beq.n	800cb74 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x1c>
 800cb66:	2850      	cmp	r0, #80	; 0x50
 800cb68:	d00a      	beq.n	800cb80 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x28>
 800cb6a:	2830      	cmp	r0, #48	; 0x30
 800cb6c:	d10d      	bne.n	800cb8a <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x32>
 800cb6e:	4608      	mov	r0, r1
 800cb70:	f7fb be98 	b.w	80088a4 <_Unwind_GetDataRelBase>
 800cb74:	4608      	mov	r0, r1
 800cb76:	f7fb be85 	b.w	8008884 <_Unwind_GetRegionStart>
 800cb7a:	b108      	cbz	r0, 800cb80 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x28>
 800cb7c:	2810      	cmp	r0, #16
 800cb7e:	d104      	bne.n	800cb8a <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3+0x32>
 800cb80:	2000      	movs	r0, #0
 800cb82:	4770      	bx	lr
 800cb84:	4608      	mov	r0, r1
 800cb86:	f7fb be91 	b.w	80088ac <_Unwind_GetTextRelBase>
 800cb8a:	b508      	push	{r3, lr}
 800cb8c:	f000 fb52 	bl	800d234 <abort>

0800cb90 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 800cb90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb92:	460c      	mov	r4, r1
 800cb94:	4615      	mov	r5, r2
 800cb96:	4607      	mov	r7, r0
 800cb98:	b108      	cbz	r0, 800cb9e <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0xe>
 800cb9a:	f7fb fe73 	bl	8008884 <_Unwind_GetRegionStart>
 800cb9e:	6028      	str	r0, [r5, #0]
 800cba0:	7826      	ldrb	r6, [r4, #0]
 800cba2:	2eff      	cmp	r6, #255	; 0xff
 800cba4:	f104 0401 	add.w	r4, r4, #1
 800cba8:	d129      	bne.n	800cbfe <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x6e>
 800cbaa:	6068      	str	r0, [r5, #4]
 800cbac:	7823      	ldrb	r3, [r4, #0]
 800cbae:	752b      	strb	r3, [r5, #20]
 800cbb0:	2bff      	cmp	r3, #255	; 0xff
 800cbb2:	f104 0001 	add.w	r0, r4, #1
 800cbb6:	d032      	beq.n	800cc1e <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x8e>
 800cbb8:	2310      	movs	r3, #16
 800cbba:	2400      	movs	r4, #0
 800cbbc:	752b      	strb	r3, [r5, #20]
 800cbbe:	4622      	mov	r2, r4
 800cbc0:	f810 1b01 	ldrb.w	r1, [r0], #1
 800cbc4:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800cbc8:	4093      	lsls	r3, r2
 800cbca:	0609      	lsls	r1, r1, #24
 800cbcc:	ea44 0403 	orr.w	r4, r4, r3
 800cbd0:	f102 0207 	add.w	r2, r2, #7
 800cbd4:	d4f4      	bmi.n	800cbc0 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x30>
 800cbd6:	4404      	add	r4, r0
 800cbd8:	60ec      	str	r4, [r5, #12]
 800cbda:	7803      	ldrb	r3, [r0, #0]
 800cbdc:	756b      	strb	r3, [r5, #21]
 800cbde:	2400      	movs	r4, #0
 800cbe0:	3001      	adds	r0, #1
 800cbe2:	4622      	mov	r2, r4
 800cbe4:	f810 1b01 	ldrb.w	r1, [r0], #1
 800cbe8:	f001 037f 	and.w	r3, r1, #127	; 0x7f
 800cbec:	4093      	lsls	r3, r2
 800cbee:	431c      	orrs	r4, r3
 800cbf0:	060b      	lsls	r3, r1, #24
 800cbf2:	f102 0207 	add.w	r2, r2, #7
 800cbf6:	d4f5      	bmi.n	800cbe4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x54>
 800cbf8:	4404      	add	r4, r0
 800cbfa:	612c      	str	r4, [r5, #16]
 800cbfc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cbfe:	4639      	mov	r1, r7
 800cc00:	4630      	mov	r0, r6
 800cc02:	f7ff ffa9 	bl	800cb58 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 800cc06:	4622      	mov	r2, r4
 800cc08:	4601      	mov	r1, r0
 800cc0a:	1d2b      	adds	r3, r5, #4
 800cc0c:	4630      	mov	r0, r6
 800cc0e:	f7ff ff43 	bl	800ca98 <_ZL28read_encoded_value_with_basehjPKhPj>
 800cc12:	4604      	mov	r4, r0
 800cc14:	1c60      	adds	r0, r4, #1
 800cc16:	7823      	ldrb	r3, [r4, #0]
 800cc18:	752b      	strb	r3, [r5, #20]
 800cc1a:	2bff      	cmp	r3, #255	; 0xff
 800cc1c:	d1cc      	bne.n	800cbb8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x28>
 800cc1e:	2300      	movs	r3, #0
 800cc20:	60eb      	str	r3, [r5, #12]
 800cc22:	e7da      	b.n	800cbda <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x4a>

0800cc24 <__gxx_personality_v0>:
 800cc24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc28:	f000 0403 	and.w	r4, r0, #3
 800cc2c:	b099      	sub	sp, #100	; 0x64
 800cc2e:	2300      	movs	r3, #0
 800cc30:	2c01      	cmp	r4, #1
 800cc32:	4688      	mov	r8, r1
 800cc34:	4617      	mov	r7, r2
 800cc36:	930c      	str	r3, [sp, #48]	; 0x30
 800cc38:	f000 8096 	beq.w	800cd68 <__gxx_personality_v0+0x144>
 800cc3c:	d30d      	bcc.n	800cc5a <__gxx_personality_v0+0x36>
 800cc3e:	2c02      	cmp	r4, #2
 800cc40:	f040 825f 	bne.w	800d102 <__gxx_personality_v0+0x4de>
 800cc44:	4639      	mov	r1, r7
 800cc46:	4640      	mov	r0, r8
 800cc48:	f7fb fe08 	bl	800885c <__gnu_unwind_frame>
 800cc4c:	2800      	cmp	r0, #0
 800cc4e:	f000 809b 	beq.w	800cd88 <__gxx_personality_v0+0x164>
 800cc52:	2009      	movs	r0, #9
 800cc54:	b019      	add	sp, #100	; 0x64
 800cc56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cc5a:	0702      	lsls	r2, r0, #28
 800cc5c:	d4f2      	bmi.n	800cc44 <__gxx_personality_v0+0x20>
 800cc5e:	2301      	movs	r3, #1
 800cc60:	9304      	str	r3, [sp, #16]
 800cc62:	aa18      	add	r2, sp, #96	; 0x60
 800cc64:	2300      	movs	r3, #0
 800cc66:	f842 8d2c 	str.w	r8, [r2, #-44]!
 800cc6a:	4619      	mov	r1, r3
 800cc6c:	9200      	str	r2, [sp, #0]
 800cc6e:	4638      	mov	r0, r7
 800cc70:	220c      	movs	r2, #12
 800cc72:	f7fb f883 	bl	8007d7c <_Unwind_VRS_Set>
 800cc76:	4638      	mov	r0, r7
 800cc78:	f7fb fe0a 	bl	8008890 <_Unwind_GetLanguageSpecificData>
 800cc7c:	9005      	str	r0, [sp, #20]
 800cc7e:	2800      	cmp	r0, #0
 800cc80:	d0e0      	beq.n	800cc44 <__gxx_personality_v0+0x20>
 800cc82:	ab12      	add	r3, sp, #72	; 0x48
 800cc84:	461a      	mov	r2, r3
 800cc86:	9905      	ldr	r1, [sp, #20]
 800cc88:	9306      	str	r3, [sp, #24]
 800cc8a:	4638      	mov	r0, r7
 800cc8c:	f7ff ff80 	bl	800cb90 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800cc90:	4605      	mov	r5, r0
 800cc92:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800cc96:	28ff      	cmp	r0, #255	; 0xff
 800cc98:	f000 80e5 	beq.w	800ce66 <__gxx_personality_v0+0x242>
 800cc9c:	4639      	mov	r1, r7
 800cc9e:	f7ff ff5b 	bl	800cb58 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 800cca2:	4604      	mov	r4, r0
 800cca4:	2300      	movs	r3, #0
 800cca6:	f10d 0b44 	add.w	fp, sp, #68	; 0x44
 800ccaa:	4619      	mov	r1, r3
 800ccac:	f8cd b000 	str.w	fp, [sp]
 800ccb0:	220f      	movs	r2, #15
 800ccb2:	4638      	mov	r0, r7
 800ccb4:	9414      	str	r4, [sp, #80]	; 0x50
 800ccb6:	f7fb f83f 	bl	8007d38 <_Unwind_VRS_Get>
 800ccba:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ccbc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800ccbe:	f026 0601 	bic.w	r6, r6, #1
 800ccc2:	429d      	cmp	r5, r3
 800ccc4:	f106 36ff 	add.w	r6, r6, #4294967295
 800ccc8:	f080 80d4 	bcs.w	800ce74 <__gxx_personality_v0+0x250>
 800cccc:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800ccd0:	f10d 0940 	add.w	r9, sp, #64	; 0x40
 800ccd4:	f89d 405d 	ldrb.w	r4, [sp, #93]	; 0x5d
 800ccd8:	2cff      	cmp	r4, #255	; 0xff
 800ccda:	f04f 0100 	mov.w	r1, #0
 800ccde:	d003      	beq.n	800cce8 <__gxx_personality_v0+0xc4>
 800cce0:	4620      	mov	r0, r4
 800cce2:	f7ff ff39 	bl	800cb58 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 800cce6:	4601      	mov	r1, r0
 800cce8:	462a      	mov	r2, r5
 800ccea:	4620      	mov	r0, r4
 800ccec:	4653      	mov	r3, sl
 800ccee:	f7ff fed3 	bl	800ca98 <_ZL28read_encoded_value_with_basehjPKhPj>
 800ccf2:	f89d 405d 	ldrb.w	r4, [sp, #93]	; 0x5d
 800ccf6:	2cff      	cmp	r4, #255	; 0xff
 800ccf8:	4605      	mov	r5, r0
 800ccfa:	f04f 0100 	mov.w	r1, #0
 800ccfe:	d003      	beq.n	800cd08 <__gxx_personality_v0+0xe4>
 800cd00:	4620      	mov	r0, r4
 800cd02:	f7ff ff29 	bl	800cb58 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 800cd06:	4601      	mov	r1, r0
 800cd08:	462a      	mov	r2, r5
 800cd0a:	4620      	mov	r0, r4
 800cd0c:	464b      	mov	r3, r9
 800cd0e:	f7ff fec3 	bl	800ca98 <_ZL28read_encoded_value_with_basehjPKhPj>
 800cd12:	f89d 405d 	ldrb.w	r4, [sp, #93]	; 0x5d
 800cd16:	2cff      	cmp	r4, #255	; 0xff
 800cd18:	4605      	mov	r5, r0
 800cd1a:	f04f 0100 	mov.w	r1, #0
 800cd1e:	d003      	beq.n	800cd28 <__gxx_personality_v0+0x104>
 800cd20:	4620      	mov	r0, r4
 800cd22:	f7ff ff19 	bl	800cb58 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 800cd26:	4601      	mov	r1, r0
 800cd28:	462a      	mov	r2, r5
 800cd2a:	4620      	mov	r0, r4
 800cd2c:	465b      	mov	r3, fp
 800cd2e:	f7ff feb3 	bl	800ca98 <_ZL28read_encoded_value_with_basehjPKhPj>
 800cd32:	2400      	movs	r4, #0
 800cd34:	4605      	mov	r5, r0
 800cd36:	4621      	mov	r1, r4
 800cd38:	f815 2b01 	ldrb.w	r2, [r5], #1
 800cd3c:	f002 037f 	and.w	r3, r2, #127	; 0x7f
 800cd40:	408b      	lsls	r3, r1
 800cd42:	431c      	orrs	r4, r3
 800cd44:	0613      	lsls	r3, r2, #24
 800cd46:	f101 0107 	add.w	r1, r1, #7
 800cd4a:	d4f5      	bmi.n	800cd38 <__gxx_personality_v0+0x114>
 800cd4c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800cd4e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800cd50:	4413      	add	r3, r2
 800cd52:	42b3      	cmp	r3, r6
 800cd54:	d91f      	bls.n	800cd96 <__gxx_personality_v0+0x172>
 800cd56:	9b04      	ldr	r3, [sp, #16]
 800cd58:	07db      	lsls	r3, r3, #31
 800cd5a:	f100 8091 	bmi.w	800ce80 <__gxx_personality_v0+0x25c>
 800cd5e:	9b04      	ldr	r3, [sp, #16]
 800cd60:	071c      	lsls	r4, r3, #28
 800cd62:	d515      	bpl.n	800cd90 <__gxx_personality_v0+0x16c>
 800cd64:	f7ff fcea 	bl	800c73c <_ZSt9terminatev>
 800cd68:	f010 0408 	ands.w	r4, r0, #8
 800cd6c:	d01c      	beq.n	800cda8 <__gxx_personality_v0+0x184>
 800cd6e:	aa18      	add	r2, sp, #96	; 0x60
 800cd70:	f044 0402 	orr.w	r4, r4, #2
 800cd74:	f842 1d2c 	str.w	r1, [r2, #-44]!
 800cd78:	4638      	mov	r0, r7
 800cd7a:	9200      	str	r2, [sp, #0]
 800cd7c:	4619      	mov	r1, r3
 800cd7e:	220c      	movs	r2, #12
 800cd80:	9404      	str	r4, [sp, #16]
 800cd82:	f7fa fffb 	bl	8007d7c <_Unwind_VRS_Set>
 800cd86:	e776      	b.n	800cc76 <__gxx_personality_v0+0x52>
 800cd88:	2008      	movs	r0, #8
 800cd8a:	b019      	add	sp, #100	; 0x64
 800cd8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd90:	4640      	mov	r0, r8
 800cd92:	f7ff fd33 	bl	800c7fc <__cxa_call_terminate>
 800cd96:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cd98:	4413      	add	r3, r2
 800cd9a:	42b3      	cmp	r3, r6
 800cd9c:	f200 8088 	bhi.w	800ceb0 <__gxx_personality_v0+0x28c>
 800cda0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800cda2:	42ab      	cmp	r3, r5
 800cda4:	d896      	bhi.n	800ccd4 <__gxx_personality_v0+0xb0>
 800cda6:	e7d6      	b.n	800cd56 <__gxx_personality_v0+0x132>
 800cda8:	ab12      	add	r3, sp, #72	; 0x48
 800cdaa:	9300      	str	r3, [sp, #0]
 800cdac:	9306      	str	r3, [sp, #24]
 800cdae:	220d      	movs	r2, #13
 800cdb0:	4623      	mov	r3, r4
 800cdb2:	4621      	mov	r1, r4
 800cdb4:	4638      	mov	r0, r7
 800cdb6:	f8d8 5020 	ldr.w	r5, [r8, #32]
 800cdba:	f7fa ffbd 	bl	8007d38 <_Unwind_VRS_Get>
 800cdbe:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800cdc0:	429d      	cmp	r5, r3
 800cdc2:	d002      	beq.n	800cdca <__gxx_personality_v0+0x1a6>
 800cdc4:	2302      	movs	r3, #2
 800cdc6:	9304      	str	r3, [sp, #16]
 800cdc8:	e74b      	b.n	800cc62 <__gxx_personality_v0+0x3e>
 800cdca:	aa18      	add	r2, sp, #96	; 0x60
 800cdcc:	4623      	mov	r3, r4
 800cdce:	f842 8d2c 	str.w	r8, [r2, #-44]!
 800cdd2:	4621      	mov	r1, r4
 800cdd4:	9200      	str	r2, [sp, #0]
 800cdd6:	4638      	mov	r0, r7
 800cdd8:	220c      	movs	r2, #12
 800cdda:	f7fa ffcf 	bl	8007d7c <_Unwind_VRS_Set>
 800cdde:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800cde2:	9303      	str	r3, [sp, #12]
 800cde4:	2b00      	cmp	r3, #0
 800cde6:	d0d3      	beq.n	800cd90 <__gxx_personality_v0+0x16c>
 800cde8:	f8d8 3028 	ldr.w	r3, [r8, #40]	; 0x28
 800cdec:	461a      	mov	r2, r3
 800cdee:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 800cdf2:	9305      	str	r3, [sp, #20]
 800cdf4:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800cdf8:	f10d 0940 	add.w	r9, sp, #64	; 0x40
 800cdfc:	4613      	mov	r3, r2
 800cdfe:	2b00      	cmp	r3, #0
 800ce00:	461c      	mov	r4, r3
 800ce02:	f2c0 8127 	blt.w	800d054 <__gxx_personality_v0+0x430>
 800ce06:	2503      	movs	r5, #3
 800ce08:	a918      	add	r1, sp, #96	; 0x60
 800ce0a:	2300      	movs	r3, #0
 800ce0c:	f841 8d28 	str.w	r8, [r1, #-40]!
 800ce10:	461a      	mov	r2, r3
 800ce12:	9100      	str	r1, [sp, #0]
 800ce14:	4638      	mov	r0, r7
 800ce16:	4619      	mov	r1, r3
 800ce18:	f7fa ffb0 	bl	8007d7c <_Unwind_VRS_Set>
 800ce1c:	2300      	movs	r3, #0
 800ce1e:	4619      	mov	r1, r3
 800ce20:	2201      	movs	r2, #1
 800ce22:	f8cd a000 	str.w	sl, [sp]
 800ce26:	4638      	mov	r0, r7
 800ce28:	940f      	str	r4, [sp, #60]	; 0x3c
 800ce2a:	f7fa ffa7 	bl	8007d7c <_Unwind_VRS_Set>
 800ce2e:	2300      	movs	r3, #0
 800ce30:	4619      	mov	r1, r3
 800ce32:	220f      	movs	r2, #15
 800ce34:	f8cd 9000 	str.w	r9, [sp]
 800ce38:	4638      	mov	r0, r7
 800ce3a:	f7fa ff7d 	bl	8007d38 <_Unwind_VRS_Get>
 800ce3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ce40:	9a03      	ldr	r2, [sp, #12]
 800ce42:	f8cd 9000 	str.w	r9, [sp]
 800ce46:	f003 0401 	and.w	r4, r3, #1
 800ce4a:	2300      	movs	r3, #0
 800ce4c:	4314      	orrs	r4, r2
 800ce4e:	4638      	mov	r0, r7
 800ce50:	4619      	mov	r1, r3
 800ce52:	220f      	movs	r2, #15
 800ce54:	9410      	str	r4, [sp, #64]	; 0x40
 800ce56:	f7fa ff91 	bl	8007d7c <_Unwind_VRS_Set>
 800ce5a:	2d02      	cmp	r5, #2
 800ce5c:	d005      	beq.n	800ce6a <__gxx_personality_v0+0x246>
 800ce5e:	2007      	movs	r0, #7
 800ce60:	b019      	add	sp, #100	; 0x64
 800ce62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ce66:	2400      	movs	r4, #0
 800ce68:	e71c      	b.n	800cca4 <__gxx_personality_v0+0x80>
 800ce6a:	4640      	mov	r0, r8
 800ce6c:	f7ff fda2 	bl	800c9b4 <__cxa_begin_cleanup>
 800ce70:	2007      	movs	r0, #7
 800ce72:	e6ef      	b.n	800cc54 <__gxx_personality_v0+0x30>
 800ce74:	9b04      	ldr	r3, [sp, #16]
 800ce76:	07d9      	lsls	r1, r3, #31
 800ce78:	f57f af71 	bpl.w	800cd5e <__gxx_personality_v0+0x13a>
 800ce7c:	f10d 0940 	add.w	r9, sp, #64	; 0x40
 800ce80:	2400      	movs	r4, #0
 800ce82:	9403      	str	r4, [sp, #12]
 800ce84:	2300      	movs	r3, #0
 800ce86:	4619      	mov	r1, r3
 800ce88:	220d      	movs	r2, #13
 800ce8a:	f8cd 9000 	str.w	r9, [sp]
 800ce8e:	4638      	mov	r0, r7
 800ce90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ce92:	f7fa ff51 	bl	8007d38 <_Unwind_VRS_Get>
 800ce96:	9a05      	ldr	r2, [sp, #20]
 800ce98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ce9a:	f8c8 202c 	str.w	r2, [r8, #44]	; 0x2c
 800ce9e:	9a03      	ldr	r2, [sp, #12]
 800cea0:	f8c8 2030 	str.w	r2, [r8, #48]	; 0x30
 800cea4:	e9c8 5409 	strd	r5, r4, [r8, #36]	; 0x24
 800cea8:	f8c8 3020 	str.w	r3, [r8, #32]
 800ceac:	2006      	movs	r0, #6
 800ceae:	e6d1      	b.n	800cc54 <__gxx_personality_v0+0x30>
 800ceb0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800ceb2:	2b00      	cmp	r3, #0
 800ceb4:	f43f aec6 	beq.w	800cc44 <__gxx_personality_v0+0x20>
 800ceb8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ceba:	189a      	adds	r2, r3, r2
 800cebc:	9203      	str	r2, [sp, #12]
 800cebe:	2c00      	cmp	r4, #0
 800cec0:	f000 80f0 	beq.w	800d0a4 <__gxx_personality_v0+0x480>
 800cec4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800cec6:	3c01      	subs	r4, #1
 800cec8:	4423      	add	r3, r4
 800ceca:	2a00      	cmp	r2, #0
 800cecc:	f43f aeba 	beq.w	800cc44 <__gxx_personality_v0+0x20>
 800ced0:	2b00      	cmp	r3, #0
 800ced2:	f000 80f8 	beq.w	800d0c6 <__gxx_personality_v0+0x4a2>
 800ced6:	9a04      	ldr	r2, [sp, #16]
 800ced8:	f012 0208 	ands.w	r2, r2, #8
 800cedc:	9209      	str	r2, [sp, #36]	; 0x24
 800cede:	f000 8103 	beq.w	800d0e8 <__gxx_personality_v0+0x4c4>
 800cee2:	2147      	movs	r1, #71	; 0x47
 800cee4:	224e      	movs	r2, #78	; 0x4e
 800cee6:	f888 1000 	strb.w	r1, [r8]
 800ceea:	f888 2001 	strb.w	r2, [r8, #1]
 800ceee:	2155      	movs	r1, #85	; 0x55
 800cef0:	2243      	movs	r2, #67	; 0x43
 800cef2:	f888 1002 	strb.w	r1, [r8, #2]
 800cef6:	f888 2003 	strb.w	r2, [r8, #3]
 800cefa:	2146      	movs	r1, #70	; 0x46
 800cefc:	224f      	movs	r2, #79	; 0x4f
 800cefe:	f888 1004 	strb.w	r1, [r8, #4]
 800cf02:	f888 2005 	strb.w	r2, [r8, #5]
 800cf06:	2152      	movs	r1, #82	; 0x52
 800cf08:	2200      	movs	r2, #0
 800cf0a:	f888 1006 	strb.w	r1, [r8, #6]
 800cf0e:	f888 2007 	strb.w	r2, [r8, #7]
 800cf12:	e9cd 7a0a 	strd	r7, sl, [sp, #40]	; 0x28
 800cf16:	2200      	movs	r2, #0
 800cf18:	9207      	str	r2, [sp, #28]
 800cf1a:	f8cd 9020 	str.w	r9, [sp, #32]
 800cf1e:	2400      	movs	r4, #0
 800cf20:	4621      	mov	r1, r4
 800cf22:	e000      	b.n	800cf26 <__gxx_personality_v0+0x302>
 800cf24:	462b      	mov	r3, r5
 800cf26:	461d      	mov	r5, r3
 800cf28:	f815 0b01 	ldrb.w	r0, [r5], #1
 800cf2c:	f000 027f 	and.w	r2, r0, #127	; 0x7f
 800cf30:	408a      	lsls	r2, r1
 800cf32:	0606      	lsls	r6, r0, #24
 800cf34:	ea44 0402 	orr.w	r4, r4, r2
 800cf38:	f101 0107 	add.w	r1, r1, #7
 800cf3c:	d4f2      	bmi.n	800cf24 <__gxx_personality_v0+0x300>
 800cf3e:	291f      	cmp	r1, #31
 800cf40:	d805      	bhi.n	800cf4e <__gxx_personality_v0+0x32a>
 800cf42:	0640      	lsls	r0, r0, #25
 800cf44:	d503      	bpl.n	800cf4e <__gxx_personality_v0+0x32a>
 800cf46:	2201      	movs	r2, #1
 800cf48:	408a      	lsls	r2, r1
 800cf4a:	4252      	negs	r2, r2
 800cf4c:	4314      	orrs	r4, r2
 800cf4e:	2600      	movs	r6, #0
 800cf50:	4631      	mov	r1, r6
 800cf52:	46a1      	mov	r9, r4
 800cf54:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800cf58:	f000 027f 	and.w	r2, r0, #127	; 0x7f
 800cf5c:	408a      	lsls	r2, r1
 800cf5e:	4316      	orrs	r6, r2
 800cf60:	0602      	lsls	r2, r0, #24
 800cf62:	f101 0107 	add.w	r1, r1, #7
 800cf66:	d4f5      	bmi.n	800cf54 <__gxx_personality_v0+0x330>
 800cf68:	291f      	cmp	r1, #31
 800cf6a:	d805      	bhi.n	800cf78 <__gxx_personality_v0+0x354>
 800cf6c:	0647      	lsls	r7, r0, #25
 800cf6e:	d503      	bpl.n	800cf78 <__gxx_personality_v0+0x354>
 800cf70:	2301      	movs	r3, #1
 800cf72:	408b      	lsls	r3, r1
 800cf74:	425b      	negs	r3, r3
 800cf76:	431e      	orrs	r6, r3
 800cf78:	2c00      	cmp	r4, #0
 800cf7a:	d04c      	beq.n	800d016 <__gxx_personality_v0+0x3f2>
 800cf7c:	dc4e      	bgt.n	800d01c <__gxx_personality_v0+0x3f8>
 800cf7e:	f104 0a01 	add.w	sl, r4, #1
 800cf82:	ebca 728a 	rsb	r2, sl, sl, lsl #30
 800cf86:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800cf88:	eb03 0782 	add.w	r7, r3, r2, lsl #2
 800cf8c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800cf90:	f1b8 0f00 	cmp.w	r8, #0
 800cf94:	d001      	beq.n	800cf9a <__gxx_personality_v0+0x376>
 800cf96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cf98:	b12b      	cbz	r3, 800cfa6 <__gxx_personality_v0+0x382>
 800cf9a:	b351      	cbz	r1, 800cff2 <__gxx_personality_v0+0x3ce>
 800cf9c:	2e00      	cmp	r6, #0
 800cf9e:	f000 808b 	beq.w	800d0b8 <__gxx_personality_v0+0x494>
 800cfa2:	19ab      	adds	r3, r5, r6
 800cfa4:	e7bb      	b.n	800cf1e <__gxx_personality_v0+0x2fa>
 800cfa6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cfa8:	9311      	str	r3, [sp, #68]	; 0x44
 800cfaa:	b929      	cbnz	r1, 800cfb8 <__gxx_personality_v0+0x394>
 800cfac:	e091      	b.n	800d0d2 <__gxx_personality_v0+0x4ae>
 800cfae:	f857 1f04 	ldr.w	r1, [r7, #4]!
 800cfb2:	2900      	cmp	r1, #0
 800cfb4:	f000 808d 	beq.w	800d0d2 <__gxx_personality_v0+0x4ae>
 800cfb8:	4439      	add	r1, r7
 800cfba:	465b      	mov	r3, fp
 800cfbc:	2200      	movs	r2, #0
 800cfbe:	4640      	mov	r0, r8
 800cfc0:	f7ff fca0 	bl	800c904 <__cxa_type_match>
 800cfc4:	2800      	cmp	r0, #0
 800cfc6:	d0f2      	beq.n	800cfae <__gxx_personality_v0+0x38a>
 800cfc8:	e7e8      	b.n	800cf9c <__gxx_personality_v0+0x378>
 800cfca:	00e2      	lsls	r2, r4, #3
 800cfcc:	4252      	negs	r2, r2
 800cfce:	e9dd 1314 	ldrd	r1, r3, [sp, #80]	; 0x50
 800cfd2:	441a      	add	r2, r3
 800cfd4:	9b08      	ldr	r3, [sp, #32]
 800cfd6:	f7ff fd5f 	bl	800ca98 <_ZL28read_encoded_value_with_basehjPKhPj>
 800cfda:	9910      	ldr	r1, [sp, #64]	; 0x40
 800cfdc:	b149      	cbz	r1, 800cff2 <__gxx_personality_v0+0x3ce>
 800cfde:	f1b8 0f00 	cmp.w	r8, #0
 800cfe2:	d0db      	beq.n	800cf9c <__gxx_personality_v0+0x378>
 800cfe4:	ab0c      	add	r3, sp, #48	; 0x30
 800cfe6:	2200      	movs	r2, #0
 800cfe8:	4640      	mov	r0, r8
 800cfea:	f7ff fc8b 	bl	800c904 <__cxa_type_match>
 800cfee:	2800      	cmp	r0, #0
 800cff0:	d0d4      	beq.n	800cf9c <__gxx_personality_v0+0x378>
 800cff2:	9b04      	ldr	r3, [sp, #16]
 800cff4:	07d8      	lsls	r0, r3, #31
 800cff6:	464a      	mov	r2, r9
 800cff8:	e9dd 7a0a 	ldrd	r7, sl, [sp, #40]	; 0x28
 800cffc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800d000:	f53f af40 	bmi.w	800ce84 <__gxx_personality_v0+0x260>
 800d004:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d006:	2b00      	cmp	r3, #0
 800d008:	f43f aef8 	beq.w	800cdfc <__gxx_personality_v0+0x1d8>
 800d00c:	2c00      	cmp	r4, #0
 800d00e:	f6bf aefa 	bge.w	800ce06 <__gxx_personality_v0+0x1e2>
 800d012:	f7ff fba1 	bl	800c758 <_ZSt10unexpectedv>
 800d016:	2301      	movs	r3, #1
 800d018:	9307      	str	r3, [sp, #28]
 800d01a:	e7bf      	b.n	800cf9c <__gxx_personality_v0+0x378>
 800d01c:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800d020:	28ff      	cmp	r0, #255	; 0xff
 800d022:	d03b      	beq.n	800d09c <__gxx_personality_v0+0x478>
 800d024:	f000 0307 	and.w	r3, r0, #7
 800d028:	2b04      	cmp	r3, #4
 800d02a:	d86a      	bhi.n	800d102 <__gxx_personality_v0+0x4de>
 800d02c:	a201      	add	r2, pc, #4	; (adr r2, 800d034 <__gxx_personality_v0+0x410>)
 800d02e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d032:	bf00      	nop
 800d034:	0800d04f 	.word	0x0800d04f
 800d038:	0800d103 	.word	0x0800d103
 800d03c:	0800d049 	.word	0x0800d049
 800d040:	0800d04f 	.word	0x0800d04f
 800d044:	0800cfcb 	.word	0x0800cfcb
 800d048:	0062      	lsls	r2, r4, #1
 800d04a:	4252      	negs	r2, r2
 800d04c:	e7bf      	b.n	800cfce <__gxx_personality_v0+0x3aa>
 800d04e:	00a2      	lsls	r2, r4, #2
 800d050:	4252      	negs	r2, r2
 800d052:	e7bc      	b.n	800cfce <__gxx_personality_v0+0x3aa>
 800d054:	3301      	adds	r3, #1
 800d056:	461d      	mov	r5, r3
 800d058:	e9dd 1205 	ldrd	r1, r2, [sp, #20]
 800d05c:	4638      	mov	r0, r7
 800d05e:	f7ff fd97 	bl	800cb90 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800d062:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800d066:	28ff      	cmp	r0, #255	; 0xff
 800d068:	d01a      	beq.n	800d0a0 <__gxx_personality_v0+0x47c>
 800d06a:	4639      	mov	r1, r7
 800d06c:	f7ff fd74 	bl	800cb58 <_ZL21base_of_encoded_valuehP15_Unwind_Context.part.3>
 800d070:	ebc5 7285 	rsb	r2, r5, r5, lsl #30
 800d074:	0092      	lsls	r2, r2, #2
 800d076:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800d078:	9014      	str	r0, [sp, #80]	; 0x50
 800d07a:	58ab      	ldr	r3, [r5, r2]
 800d07c:	4415      	add	r5, r2
 800d07e:	b133      	cbz	r3, 800d08e <__gxx_personality_v0+0x46a>
 800d080:	462a      	mov	r2, r5
 800d082:	2300      	movs	r3, #0
 800d084:	f852 1f04 	ldr.w	r1, [r2, #4]!
 800d088:	3301      	adds	r3, #1
 800d08a:	2900      	cmp	r1, #0
 800d08c:	d1fa      	bne.n	800d084 <__gxx_personality_v0+0x460>
 800d08e:	2204      	movs	r2, #4
 800d090:	e9c8 250c 	strd	r2, r5, [r8, #48]	; 0x30
 800d094:	e9c8 300a 	strd	r3, r0, [r8, #40]	; 0x28
 800d098:	2503      	movs	r5, #3
 800d09a:	e6b5      	b.n	800ce08 <__gxx_personality_v0+0x1e4>
 800d09c:	2200      	movs	r2, #0
 800d09e:	e796      	b.n	800cfce <__gxx_personality_v0+0x3aa>
 800d0a0:	2000      	movs	r0, #0
 800d0a2:	e7e5      	b.n	800d070 <__gxx_personality_v0+0x44c>
 800d0a4:	9b03      	ldr	r3, [sp, #12]
 800d0a6:	2b00      	cmp	r3, #0
 800d0a8:	f43f adcc 	beq.w	800cc44 <__gxx_personality_v0+0x20>
 800d0ac:	9b04      	ldr	r3, [sp, #16]
 800d0ae:	07da      	lsls	r2, r3, #31
 800d0b0:	f53f adc8 	bmi.w	800cc44 <__gxx_personality_v0+0x20>
 800d0b4:	2502      	movs	r5, #2
 800d0b6:	e6a7      	b.n	800ce08 <__gxx_personality_v0+0x1e4>
 800d0b8:	e9dd 3907 	ldrd	r3, r9, [sp, #28]
 800d0bc:	e9dd 7a0a 	ldrd	r7, sl, [sp, #40]	; 0x28
 800d0c0:	2b00      	cmp	r3, #0
 800d0c2:	f43f adbf 	beq.w	800cc44 <__gxx_personality_v0+0x20>
 800d0c6:	9b04      	ldr	r3, [sp, #16]
 800d0c8:	07dd      	lsls	r5, r3, #31
 800d0ca:	f53f adbb 	bmi.w	800cc44 <__gxx_personality_v0+0x20>
 800d0ce:	2400      	movs	r4, #0
 800d0d0:	e7f0      	b.n	800d0b4 <__gxx_personality_v0+0x490>
 800d0d2:	9b04      	ldr	r3, [sp, #16]
 800d0d4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800d0d6:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800d0da:	07de      	lsls	r6, r3, #31
 800d0dc:	4655      	mov	r5, sl
 800d0de:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 800d0e2:	f53f aecf 	bmi.w	800ce84 <__gxx_personality_v0+0x260>
 800d0e6:	e7b7      	b.n	800d058 <__gxx_personality_v0+0x434>
 800d0e8:	f898 2007 	ldrb.w	r2, [r8, #7]
 800d0ec:	2a01      	cmp	r2, #1
 800d0ee:	bf0c      	ite	eq
 800d0f0:	f858 2c20 	ldreq.w	r2, [r8, #-32]
 800d0f4:	f108 0258 	addne.w	r2, r8, #88	; 0x58
 800d0f8:	920c      	str	r2, [sp, #48]	; 0x30
 800d0fa:	e70a      	b.n	800cf12 <__gxx_personality_v0+0x2ee>
 800d0fc:	f7ff f97c 	bl	800c3f8 <__cxa_begin_catch>
 800d100:	e630      	b.n	800cd64 <__gxx_personality_v0+0x140>
 800d102:	f000 f897 	bl	800d234 <abort>
 800d106:	bf00      	nop

0800d108 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv>:
 800d108:	b570      	push	{r4, r5, r6, lr}
 800d10a:	4b3c      	ldr	r3, [pc, #240]	; (800d1fc <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf4>)
 800d10c:	781a      	ldrb	r2, [r3, #0]
 800d10e:	b082      	sub	sp, #8
 800d110:	2a00      	cmp	r2, #0
 800d112:	d135      	bne.n	800d180 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x78>
 800d114:	2401      	movs	r4, #1
 800d116:	701c      	strb	r4, [r3, #0]
 800d118:	f000 f87e 	bl	800d218 <__cxa_current_exception_type>
 800d11c:	2800      	cmp	r0, #0
 800d11e:	d03d      	beq.n	800d19c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x94>
 800d120:	6844      	ldr	r4, [r0, #4]
 800d122:	4d37      	ldr	r5, [pc, #220]	; (800d200 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800d124:	7823      	ldrb	r3, [r4, #0]
 800d126:	2b2a      	cmp	r3, #42	; 0x2a
 800d128:	ab02      	add	r3, sp, #8
 800d12a:	f04f 32ff 	mov.w	r2, #4294967295
 800d12e:	bf08      	it	eq
 800d130:	3401      	addeq	r4, #1
 800d132:	f843 2d04 	str.w	r2, [r3, #-4]!
 800d136:	2200      	movs	r2, #0
 800d138:	4611      	mov	r1, r2
 800d13a:	4620      	mov	r0, r4
 800d13c:	f7f9 fd48 	bl	8006bd0 <__cxa_demangle>
 800d140:	682b      	ldr	r3, [r5, #0]
 800d142:	4606      	mov	r6, r0
 800d144:	68db      	ldr	r3, [r3, #12]
 800d146:	482f      	ldr	r0, [pc, #188]	; (800d204 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xfc>)
 800d148:	2230      	movs	r2, #48	; 0x30
 800d14a:	2101      	movs	r1, #1
 800d14c:	f000 fa86 	bl	800d65c <fwrite>
 800d150:	9b01      	ldr	r3, [sp, #4]
 800d152:	b17b      	cbz	r3, 800d174 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x6c>
 800d154:	682b      	ldr	r3, [r5, #0]
 800d156:	4620      	mov	r0, r4
 800d158:	68d9      	ldr	r1, [r3, #12]
 800d15a:	f000 f8df 	bl	800d31c <fputs>
 800d15e:	682b      	ldr	r3, [r5, #0]
 800d160:	4829      	ldr	r0, [pc, #164]	; (800d208 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x100>)
 800d162:	68db      	ldr	r3, [r3, #12]
 800d164:	2202      	movs	r2, #2
 800d166:	2101      	movs	r1, #1
 800d168:	f000 fa78 	bl	800d65c <fwrite>
 800d16c:	9b01      	ldr	r3, [sp, #4]
 800d16e:	b18b      	cbz	r3, 800d194 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x8c>
 800d170:	f7ff f90a 	bl	800c388 <__cxa_rethrow>
 800d174:	682b      	ldr	r3, [r5, #0]
 800d176:	4630      	mov	r0, r6
 800d178:	68d9      	ldr	r1, [r3, #12]
 800d17a:	f000 f8cf 	bl	800d31c <fputs>
 800d17e:	e7ee      	b.n	800d15e <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x56>
 800d180:	4b1f      	ldr	r3, [pc, #124]	; (800d200 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800d182:	4822      	ldr	r0, [pc, #136]	; (800d20c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x104>)
 800d184:	681b      	ldr	r3, [r3, #0]
 800d186:	221d      	movs	r2, #29
 800d188:	68db      	ldr	r3, [r3, #12]
 800d18a:	2101      	movs	r1, #1
 800d18c:	f000 fa66 	bl	800d65c <fwrite>
 800d190:	f000 f850 	bl	800d234 <abort>
 800d194:	4630      	mov	r0, r6
 800d196:	f000 fa9f 	bl	800d6d8 <free>
 800d19a:	e7e9      	b.n	800d170 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x68>
 800d19c:	4b18      	ldr	r3, [pc, #96]	; (800d200 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf8>)
 800d19e:	481c      	ldr	r0, [pc, #112]	; (800d210 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x108>)
 800d1a0:	681b      	ldr	r3, [r3, #0]
 800d1a2:	4621      	mov	r1, r4
 800d1a4:	68db      	ldr	r3, [r3, #12]
 800d1a6:	222d      	movs	r2, #45	; 0x2d
 800d1a8:	f000 fa58 	bl	800d65c <fwrite>
 800d1ac:	f000 f842 	bl	800d234 <abort>
 800d1b0:	2901      	cmp	r1, #1
 800d1b2:	460c      	mov	r4, r1
 800d1b4:	d119      	bne.n	800d1ea <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xe2>
 800d1b6:	f7ff f91f 	bl	800c3f8 <__cxa_begin_catch>
 800d1ba:	6803      	ldr	r3, [r0, #0]
 800d1bc:	689b      	ldr	r3, [r3, #8]
 800d1be:	4798      	blx	r3
 800d1c0:	682b      	ldr	r3, [r5, #0]
 800d1c2:	4606      	mov	r6, r0
 800d1c4:	68db      	ldr	r3, [r3, #12]
 800d1c6:	4813      	ldr	r0, [pc, #76]	; (800d214 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x10c>)
 800d1c8:	4621      	mov	r1, r4
 800d1ca:	220b      	movs	r2, #11
 800d1cc:	f000 fa46 	bl	800d65c <fwrite>
 800d1d0:	682b      	ldr	r3, [r5, #0]
 800d1d2:	4630      	mov	r0, r6
 800d1d4:	68d9      	ldr	r1, [r3, #12]
 800d1d6:	f000 f8a1 	bl	800d31c <fputs>
 800d1da:	682b      	ldr	r3, [r5, #0]
 800d1dc:	200a      	movs	r0, #10
 800d1de:	68d9      	ldr	r1, [r3, #12]
 800d1e0:	f000 f85a 	bl	800d298 <fputc>
 800d1e4:	f7ff f948 	bl	800c478 <__cxa_end_catch>
 800d1e8:	e7e0      	b.n	800d1ac <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xa4>
 800d1ea:	f7ff f905 	bl	800c3f8 <__cxa_begin_catch>
 800d1ee:	f7ff f943 	bl	800c478 <__cxa_end_catch>
 800d1f2:	e7db      	b.n	800d1ac <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xa4>
 800d1f4:	f7ff f940 	bl	800c478 <__cxa_end_catch>
 800d1f8:	f7ff fb7e 	bl	800c8f8 <__cxa_end_cleanup>
 800d1fc:	20000a40 	.word	0x20000a40
 800d200:	20000014 	.word	0x20000014
 800d204:	08011cf0 	.word	0x08011cf0
 800d208:	08011d24 	.word	0x08011d24
 800d20c:	08011cd0 	.word	0x08011cd0
 800d210:	08011d28 	.word	0x08011d28
 800d214:	08011d58 	.word	0x08011d58

0800d218 <__cxa_current_exception_type>:
 800d218:	b508      	push	{r3, lr}
 800d21a:	f7ff fc39 	bl	800ca90 <__cxa_get_globals>
 800d21e:	6800      	ldr	r0, [r0, #0]
 800d220:	b130      	cbz	r0, 800d230 <__cxa_current_exception_type+0x18>
 800d222:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800d226:	6800      	ldr	r0, [r0, #0]
 800d228:	2b01      	cmp	r3, #1
 800d22a:	bf08      	it	eq
 800d22c:	f850 0c78 	ldreq.w	r0, [r0, #-120]
 800d230:	bd08      	pop	{r3, pc}
 800d232:	bf00      	nop

0800d234 <abort>:
 800d234:	b508      	push	{r3, lr}
 800d236:	2006      	movs	r0, #6
 800d238:	f000 fef2 	bl	800e020 <raise>
 800d23c:	2001      	movs	r0, #1
 800d23e:	f7fc fea3 	bl	8009f88 <_exit>
	...

0800d244 <__errno>:
 800d244:	4b01      	ldr	r3, [pc, #4]	; (800d24c <__errno+0x8>)
 800d246:	6818      	ldr	r0, [r3, #0]
 800d248:	4770      	bx	lr
 800d24a:	bf00      	nop
 800d24c:	20000014 	.word	0x20000014

0800d250 <_fputc_r>:
 800d250:	b570      	push	{r4, r5, r6, lr}
 800d252:	460e      	mov	r6, r1
 800d254:	4614      	mov	r4, r2
 800d256:	4605      	mov	r5, r0
 800d258:	b118      	cbz	r0, 800d262 <_fputc_r+0x12>
 800d25a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800d25c:	b90b      	cbnz	r3, 800d262 <_fputc_r+0x12>
 800d25e:	f003 f94d 	bl	80104fc <__sinit>
 800d262:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d264:	07d8      	lsls	r0, r3, #31
 800d266:	d405      	bmi.n	800d274 <_fputc_r+0x24>
 800d268:	89a3      	ldrh	r3, [r4, #12]
 800d26a:	0599      	lsls	r1, r3, #22
 800d26c:	d402      	bmi.n	800d274 <_fputc_r+0x24>
 800d26e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d270:	f000 fa28 	bl	800d6c4 <__retarget_lock_acquire_recursive>
 800d274:	4622      	mov	r2, r4
 800d276:	4628      	mov	r0, r5
 800d278:	4631      	mov	r1, r6
 800d27a:	f000 fcb3 	bl	800dbe4 <_putc_r>
 800d27e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d280:	07da      	lsls	r2, r3, #31
 800d282:	4605      	mov	r5, r0
 800d284:	d405      	bmi.n	800d292 <_fputc_r+0x42>
 800d286:	89a3      	ldrh	r3, [r4, #12]
 800d288:	059b      	lsls	r3, r3, #22
 800d28a:	d402      	bmi.n	800d292 <_fputc_r+0x42>
 800d28c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d28e:	f000 fa1a 	bl	800d6c6 <__retarget_lock_release_recursive>
 800d292:	4628      	mov	r0, r5
 800d294:	bd70      	pop	{r4, r5, r6, pc}
	...

0800d298 <fputc>:
 800d298:	4b02      	ldr	r3, [pc, #8]	; (800d2a4 <fputc+0xc>)
 800d29a:	460a      	mov	r2, r1
 800d29c:	4601      	mov	r1, r0
 800d29e:	6818      	ldr	r0, [r3, #0]
 800d2a0:	f7ff bfd6 	b.w	800d250 <_fputc_r>
 800d2a4:	20000014 	.word	0x20000014

0800d2a8 <_fputs_r>:
 800d2a8:	b530      	push	{r4, r5, lr}
 800d2aa:	b087      	sub	sp, #28
 800d2ac:	4605      	mov	r5, r0
 800d2ae:	4608      	mov	r0, r1
 800d2b0:	4614      	mov	r4, r2
 800d2b2:	9101      	str	r1, [sp, #4]
 800d2b4:	f7f9 fd5e 	bl	8006d74 <strlen>
 800d2b8:	ab01      	add	r3, sp, #4
 800d2ba:	9303      	str	r3, [sp, #12]
 800d2bc:	2301      	movs	r3, #1
 800d2be:	9005      	str	r0, [sp, #20]
 800d2c0:	9002      	str	r0, [sp, #8]
 800d2c2:	9304      	str	r3, [sp, #16]
 800d2c4:	b125      	cbz	r5, 800d2d0 <_fputs_r+0x28>
 800d2c6:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800d2c8:	b913      	cbnz	r3, 800d2d0 <_fputs_r+0x28>
 800d2ca:	4628      	mov	r0, r5
 800d2cc:	f003 f916 	bl	80104fc <__sinit>
 800d2d0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d2d2:	07db      	lsls	r3, r3, #31
 800d2d4:	d405      	bmi.n	800d2e2 <_fputs_r+0x3a>
 800d2d6:	89a3      	ldrh	r3, [r4, #12]
 800d2d8:	0598      	lsls	r0, r3, #22
 800d2da:	d402      	bmi.n	800d2e2 <_fputs_r+0x3a>
 800d2dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d2de:	f000 f9f1 	bl	800d6c4 <__retarget_lock_acquire_recursive>
 800d2e2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d2e6:	0499      	lsls	r1, r3, #18
 800d2e8:	d406      	bmi.n	800d2f8 <_fputs_r+0x50>
 800d2ea:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800d2ee:	81a3      	strh	r3, [r4, #12]
 800d2f0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d2f2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800d2f6:	6663      	str	r3, [r4, #100]	; 0x64
 800d2f8:	aa03      	add	r2, sp, #12
 800d2fa:	4628      	mov	r0, r5
 800d2fc:	4621      	mov	r1, r4
 800d2fe:	f000 f815 	bl	800d32c <__sfvwrite_r>
 800d302:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d304:	07da      	lsls	r2, r3, #31
 800d306:	4605      	mov	r5, r0
 800d308:	d405      	bmi.n	800d316 <_fputs_r+0x6e>
 800d30a:	89a3      	ldrh	r3, [r4, #12]
 800d30c:	059b      	lsls	r3, r3, #22
 800d30e:	d402      	bmi.n	800d316 <_fputs_r+0x6e>
 800d310:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d312:	f000 f9d8 	bl	800d6c6 <__retarget_lock_release_recursive>
 800d316:	4628      	mov	r0, r5
 800d318:	b007      	add	sp, #28
 800d31a:	bd30      	pop	{r4, r5, pc}

0800d31c <fputs>:
 800d31c:	4b02      	ldr	r3, [pc, #8]	; (800d328 <fputs+0xc>)
 800d31e:	460a      	mov	r2, r1
 800d320:	4601      	mov	r1, r0
 800d322:	6818      	ldr	r0, [r3, #0]
 800d324:	f7ff bfc0 	b.w	800d2a8 <_fputs_r>
 800d328:	20000014 	.word	0x20000014

0800d32c <__sfvwrite_r>:
 800d32c:	6893      	ldr	r3, [r2, #8]
 800d32e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d332:	4680      	mov	r8, r0
 800d334:	460c      	mov	r4, r1
 800d336:	4691      	mov	r9, r2
 800d338:	b91b      	cbnz	r3, 800d342 <__sfvwrite_r+0x16>
 800d33a:	2000      	movs	r0, #0
 800d33c:	b003      	add	sp, #12
 800d33e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d342:	898b      	ldrh	r3, [r1, #12]
 800d344:	0718      	lsls	r0, r3, #28
 800d346:	d54f      	bpl.n	800d3e8 <__sfvwrite_r+0xbc>
 800d348:	690b      	ldr	r3, [r1, #16]
 800d34a:	2b00      	cmp	r3, #0
 800d34c:	d04c      	beq.n	800d3e8 <__sfvwrite_r+0xbc>
 800d34e:	89a5      	ldrh	r5, [r4, #12]
 800d350:	f8d9 6000 	ldr.w	r6, [r9]
 800d354:	f015 0702 	ands.w	r7, r5, #2
 800d358:	d169      	bne.n	800d42e <__sfvwrite_r+0x102>
 800d35a:	f015 0501 	ands.w	r5, r5, #1
 800d35e:	f000 809a 	beq.w	800d496 <__sfvwrite_r+0x16a>
 800d362:	4638      	mov	r0, r7
 800d364:	46ba      	mov	sl, r7
 800d366:	46bb      	mov	fp, r7
 800d368:	f1bb 0f00 	cmp.w	fp, #0
 800d36c:	f000 8103 	beq.w	800d576 <__sfvwrite_r+0x24a>
 800d370:	b950      	cbnz	r0, 800d388 <__sfvwrite_r+0x5c>
 800d372:	465a      	mov	r2, fp
 800d374:	210a      	movs	r1, #10
 800d376:	4650      	mov	r0, sl
 800d378:	f7f9 fca2 	bl	8006cc0 <memchr>
 800d37c:	2800      	cmp	r0, #0
 800d37e:	f000 80ff 	beq.w	800d580 <__sfvwrite_r+0x254>
 800d382:	3001      	adds	r0, #1
 800d384:	eba0 070a 	sub.w	r7, r0, sl
 800d388:	6820      	ldr	r0, [r4, #0]
 800d38a:	6921      	ldr	r1, [r4, #16]
 800d38c:	6962      	ldr	r2, [r4, #20]
 800d38e:	455f      	cmp	r7, fp
 800d390:	463b      	mov	r3, r7
 800d392:	bf28      	it	cs
 800d394:	465b      	movcs	r3, fp
 800d396:	4288      	cmp	r0, r1
 800d398:	f240 80f5 	bls.w	800d586 <__sfvwrite_r+0x25a>
 800d39c:	68a5      	ldr	r5, [r4, #8]
 800d39e:	4415      	add	r5, r2
 800d3a0:	42ab      	cmp	r3, r5
 800d3a2:	f340 80f0 	ble.w	800d586 <__sfvwrite_r+0x25a>
 800d3a6:	4651      	mov	r1, sl
 800d3a8:	462a      	mov	r2, r5
 800d3aa:	f000 fbed 	bl	800db88 <memmove>
 800d3ae:	6823      	ldr	r3, [r4, #0]
 800d3b0:	442b      	add	r3, r5
 800d3b2:	6023      	str	r3, [r4, #0]
 800d3b4:	4621      	mov	r1, r4
 800d3b6:	4640      	mov	r0, r8
 800d3b8:	f003 f834 	bl	8010424 <_fflush_r>
 800d3bc:	2800      	cmp	r0, #0
 800d3be:	d165      	bne.n	800d48c <__sfvwrite_r+0x160>
 800d3c0:	1b7f      	subs	r7, r7, r5
 800d3c2:	f040 80fa 	bne.w	800d5ba <__sfvwrite_r+0x28e>
 800d3c6:	4621      	mov	r1, r4
 800d3c8:	4640      	mov	r0, r8
 800d3ca:	f003 f82b 	bl	8010424 <_fflush_r>
 800d3ce:	2800      	cmp	r0, #0
 800d3d0:	d15c      	bne.n	800d48c <__sfvwrite_r+0x160>
 800d3d2:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800d3d6:	44aa      	add	sl, r5
 800d3d8:	ebab 0b05 	sub.w	fp, fp, r5
 800d3dc:	1b5d      	subs	r5, r3, r5
 800d3de:	f8c9 5008 	str.w	r5, [r9, #8]
 800d3e2:	2d00      	cmp	r5, #0
 800d3e4:	d1c0      	bne.n	800d368 <__sfvwrite_r+0x3c>
 800d3e6:	e7a8      	b.n	800d33a <__sfvwrite_r+0xe>
 800d3e8:	4621      	mov	r1, r4
 800d3ea:	4640      	mov	r0, r8
 800d3ec:	f002 f8ee 	bl	800f5cc <__swsetup_r>
 800d3f0:	2800      	cmp	r0, #0
 800d3f2:	d0ac      	beq.n	800d34e <__sfvwrite_r+0x22>
 800d3f4:	f04f 30ff 	mov.w	r0, #4294967295
 800d3f8:	e7a0      	b.n	800d33c <__sfvwrite_r+0x10>
 800d3fa:	e9d6 a700 	ldrd	sl, r7, [r6]
 800d3fe:	3608      	adds	r6, #8
 800d400:	2f00      	cmp	r7, #0
 800d402:	d0fa      	beq.n	800d3fa <__sfvwrite_r+0xce>
 800d404:	455f      	cmp	r7, fp
 800d406:	463b      	mov	r3, r7
 800d408:	4652      	mov	r2, sl
 800d40a:	bf28      	it	cs
 800d40c:	465b      	movcs	r3, fp
 800d40e:	69e1      	ldr	r1, [r4, #28]
 800d410:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800d412:	4640      	mov	r0, r8
 800d414:	47a8      	blx	r5
 800d416:	2800      	cmp	r0, #0
 800d418:	dd38      	ble.n	800d48c <__sfvwrite_r+0x160>
 800d41a:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800d41e:	4482      	add	sl, r0
 800d420:	1a3f      	subs	r7, r7, r0
 800d422:	1a18      	subs	r0, r3, r0
 800d424:	f8c9 0008 	str.w	r0, [r9, #8]
 800d428:	2800      	cmp	r0, #0
 800d42a:	d1e9      	bne.n	800d400 <__sfvwrite_r+0xd4>
 800d42c:	e785      	b.n	800d33a <__sfvwrite_r+0xe>
 800d42e:	f04f 0a00 	mov.w	sl, #0
 800d432:	4657      	mov	r7, sl
 800d434:	f8df b18c 	ldr.w	fp, [pc, #396]	; 800d5c4 <__sfvwrite_r+0x298>
 800d438:	e7e2      	b.n	800d400 <__sfvwrite_r+0xd4>
 800d43a:	e9d6 5a00 	ldrd	r5, sl, [r6]
 800d43e:	3608      	adds	r6, #8
 800d440:	f1ba 0f00 	cmp.w	sl, #0
 800d444:	d0f9      	beq.n	800d43a <__sfvwrite_r+0x10e>
 800d446:	89a2      	ldrh	r2, [r4, #12]
 800d448:	68a3      	ldr	r3, [r4, #8]
 800d44a:	6820      	ldr	r0, [r4, #0]
 800d44c:	0591      	lsls	r1, r2, #22
 800d44e:	d564      	bpl.n	800d51a <__sfvwrite_r+0x1ee>
 800d450:	4553      	cmp	r3, sl
 800d452:	d836      	bhi.n	800d4c2 <__sfvwrite_r+0x196>
 800d454:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800d458:	d033      	beq.n	800d4c2 <__sfvwrite_r+0x196>
 800d45a:	6921      	ldr	r1, [r4, #16]
 800d45c:	6967      	ldr	r7, [r4, #20]
 800d45e:	eba0 0b01 	sub.w	fp, r0, r1
 800d462:	2302      	movs	r3, #2
 800d464:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 800d468:	fb97 f7f3 	sdiv	r7, r7, r3
 800d46c:	f10b 0301 	add.w	r3, fp, #1
 800d470:	4453      	add	r3, sl
 800d472:	429f      	cmp	r7, r3
 800d474:	bf38      	it	cc
 800d476:	461f      	movcc	r7, r3
 800d478:	0553      	lsls	r3, r2, #21
 800d47a:	d53e      	bpl.n	800d4fa <__sfvwrite_r+0x1ce>
 800d47c:	4639      	mov	r1, r7
 800d47e:	4640      	mov	r0, r8
 800d480:	f000 f932 	bl	800d6e8 <_malloc_r>
 800d484:	b948      	cbnz	r0, 800d49a <__sfvwrite_r+0x16e>
 800d486:	230c      	movs	r3, #12
 800d488:	f8c8 3000 	str.w	r3, [r8]
 800d48c:	89a3      	ldrh	r3, [r4, #12]
 800d48e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d492:	81a3      	strh	r3, [r4, #12]
 800d494:	e7ae      	b.n	800d3f4 <__sfvwrite_r+0xc8>
 800d496:	46aa      	mov	sl, r5
 800d498:	e7d2      	b.n	800d440 <__sfvwrite_r+0x114>
 800d49a:	465a      	mov	r2, fp
 800d49c:	6921      	ldr	r1, [r4, #16]
 800d49e:	9001      	str	r0, [sp, #4]
 800d4a0:	f000 fb67 	bl	800db72 <memcpy>
 800d4a4:	89a2      	ldrh	r2, [r4, #12]
 800d4a6:	9b01      	ldr	r3, [sp, #4]
 800d4a8:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 800d4ac:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800d4b0:	81a2      	strh	r2, [r4, #12]
 800d4b2:	6123      	str	r3, [r4, #16]
 800d4b4:	6167      	str	r7, [r4, #20]
 800d4b6:	445b      	add	r3, fp
 800d4b8:	eba7 070b 	sub.w	r7, r7, fp
 800d4bc:	6023      	str	r3, [r4, #0]
 800d4be:	60a7      	str	r7, [r4, #8]
 800d4c0:	4653      	mov	r3, sl
 800d4c2:	4553      	cmp	r3, sl
 800d4c4:	bf28      	it	cs
 800d4c6:	4653      	movcs	r3, sl
 800d4c8:	461a      	mov	r2, r3
 800d4ca:	4629      	mov	r1, r5
 800d4cc:	6820      	ldr	r0, [r4, #0]
 800d4ce:	9301      	str	r3, [sp, #4]
 800d4d0:	f000 fb5a 	bl	800db88 <memmove>
 800d4d4:	68a2      	ldr	r2, [r4, #8]
 800d4d6:	9b01      	ldr	r3, [sp, #4]
 800d4d8:	1ad2      	subs	r2, r2, r3
 800d4da:	60a2      	str	r2, [r4, #8]
 800d4dc:	6822      	ldr	r2, [r4, #0]
 800d4de:	4413      	add	r3, r2
 800d4e0:	4657      	mov	r7, sl
 800d4e2:	6023      	str	r3, [r4, #0]
 800d4e4:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800d4e8:	443d      	add	r5, r7
 800d4ea:	ebaa 0a07 	sub.w	sl, sl, r7
 800d4ee:	1bdf      	subs	r7, r3, r7
 800d4f0:	f8c9 7008 	str.w	r7, [r9, #8]
 800d4f4:	2f00      	cmp	r7, #0
 800d4f6:	d1a3      	bne.n	800d440 <__sfvwrite_r+0x114>
 800d4f8:	e71f      	b.n	800d33a <__sfvwrite_r+0xe>
 800d4fa:	463a      	mov	r2, r7
 800d4fc:	4640      	mov	r0, r8
 800d4fe:	f000 fbad 	bl	800dc5c <_realloc_r>
 800d502:	4603      	mov	r3, r0
 800d504:	2800      	cmp	r0, #0
 800d506:	d1d4      	bne.n	800d4b2 <__sfvwrite_r+0x186>
 800d508:	6921      	ldr	r1, [r4, #16]
 800d50a:	4640      	mov	r0, r8
 800d50c:	f003 f886 	bl	801061c <_free_r>
 800d510:	89a3      	ldrh	r3, [r4, #12]
 800d512:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d516:	81a3      	strh	r3, [r4, #12]
 800d518:	e7b5      	b.n	800d486 <__sfvwrite_r+0x15a>
 800d51a:	6922      	ldr	r2, [r4, #16]
 800d51c:	4282      	cmp	r2, r0
 800d51e:	d302      	bcc.n	800d526 <__sfvwrite_r+0x1fa>
 800d520:	6962      	ldr	r2, [r4, #20]
 800d522:	4552      	cmp	r2, sl
 800d524:	d916      	bls.n	800d554 <__sfvwrite_r+0x228>
 800d526:	4553      	cmp	r3, sl
 800d528:	bf28      	it	cs
 800d52a:	4653      	movcs	r3, sl
 800d52c:	461a      	mov	r2, r3
 800d52e:	4629      	mov	r1, r5
 800d530:	461f      	mov	r7, r3
 800d532:	f000 fb29 	bl	800db88 <memmove>
 800d536:	68a3      	ldr	r3, [r4, #8]
 800d538:	6822      	ldr	r2, [r4, #0]
 800d53a:	1bdb      	subs	r3, r3, r7
 800d53c:	443a      	add	r2, r7
 800d53e:	60a3      	str	r3, [r4, #8]
 800d540:	6022      	str	r2, [r4, #0]
 800d542:	2b00      	cmp	r3, #0
 800d544:	d1ce      	bne.n	800d4e4 <__sfvwrite_r+0x1b8>
 800d546:	4621      	mov	r1, r4
 800d548:	4640      	mov	r0, r8
 800d54a:	f002 ff6b 	bl	8010424 <_fflush_r>
 800d54e:	2800      	cmp	r0, #0
 800d550:	d0c8      	beq.n	800d4e4 <__sfvwrite_r+0x1b8>
 800d552:	e79b      	b.n	800d48c <__sfvwrite_r+0x160>
 800d554:	4b1a      	ldr	r3, [pc, #104]	; (800d5c0 <__sfvwrite_r+0x294>)
 800d556:	6a67      	ldr	r7, [r4, #36]	; 0x24
 800d558:	69e1      	ldr	r1, [r4, #28]
 800d55a:	459a      	cmp	sl, r3
 800d55c:	bf94      	ite	ls
 800d55e:	4653      	movls	r3, sl
 800d560:	f06f 4300 	mvnhi.w	r3, #2147483648	; 0x80000000
 800d564:	4640      	mov	r0, r8
 800d566:	fb93 f3f2 	sdiv	r3, r3, r2
 800d56a:	4353      	muls	r3, r2
 800d56c:	462a      	mov	r2, r5
 800d56e:	47b8      	blx	r7
 800d570:	1e07      	subs	r7, r0, #0
 800d572:	dcb7      	bgt.n	800d4e4 <__sfvwrite_r+0x1b8>
 800d574:	e78a      	b.n	800d48c <__sfvwrite_r+0x160>
 800d576:	e9d6 ab00 	ldrd	sl, fp, [r6]
 800d57a:	2000      	movs	r0, #0
 800d57c:	3608      	adds	r6, #8
 800d57e:	e6f3      	b.n	800d368 <__sfvwrite_r+0x3c>
 800d580:	f10b 0701 	add.w	r7, fp, #1
 800d584:	e700      	b.n	800d388 <__sfvwrite_r+0x5c>
 800d586:	429a      	cmp	r2, r3
 800d588:	dc09      	bgt.n	800d59e <__sfvwrite_r+0x272>
 800d58a:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800d58c:	69e1      	ldr	r1, [r4, #28]
 800d58e:	4613      	mov	r3, r2
 800d590:	4640      	mov	r0, r8
 800d592:	4652      	mov	r2, sl
 800d594:	47a8      	blx	r5
 800d596:	1e05      	subs	r5, r0, #0
 800d598:	f73f af12 	bgt.w	800d3c0 <__sfvwrite_r+0x94>
 800d59c:	e776      	b.n	800d48c <__sfvwrite_r+0x160>
 800d59e:	461a      	mov	r2, r3
 800d5a0:	4651      	mov	r1, sl
 800d5a2:	9301      	str	r3, [sp, #4]
 800d5a4:	f000 faf0 	bl	800db88 <memmove>
 800d5a8:	9b01      	ldr	r3, [sp, #4]
 800d5aa:	68a2      	ldr	r2, [r4, #8]
 800d5ac:	1ad2      	subs	r2, r2, r3
 800d5ae:	60a2      	str	r2, [r4, #8]
 800d5b0:	6822      	ldr	r2, [r4, #0]
 800d5b2:	441a      	add	r2, r3
 800d5b4:	6022      	str	r2, [r4, #0]
 800d5b6:	461d      	mov	r5, r3
 800d5b8:	e702      	b.n	800d3c0 <__sfvwrite_r+0x94>
 800d5ba:	2001      	movs	r0, #1
 800d5bc:	e709      	b.n	800d3d2 <__sfvwrite_r+0xa6>
 800d5be:	bf00      	nop
 800d5c0:	7ffffffe 	.word	0x7ffffffe
 800d5c4:	7ffffc00 	.word	0x7ffffc00

0800d5c8 <_fwrite_r>:
 800d5c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d5cc:	b086      	sub	sp, #24
 800d5ce:	fb02 f503 	mul.w	r5, r2, r3
 800d5d2:	461e      	mov	r6, r3
 800d5d4:	ab01      	add	r3, sp, #4
 800d5d6:	9303      	str	r3, [sp, #12]
 800d5d8:	2301      	movs	r3, #1
 800d5da:	4617      	mov	r7, r2
 800d5dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800d5de:	9101      	str	r1, [sp, #4]
 800d5e0:	9502      	str	r5, [sp, #8]
 800d5e2:	9505      	str	r5, [sp, #20]
 800d5e4:	9304      	str	r3, [sp, #16]
 800d5e6:	4680      	mov	r8, r0
 800d5e8:	b118      	cbz	r0, 800d5f2 <_fwrite_r+0x2a>
 800d5ea:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800d5ec:	b90b      	cbnz	r3, 800d5f2 <_fwrite_r+0x2a>
 800d5ee:	f002 ff85 	bl	80104fc <__sinit>
 800d5f2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d5f4:	07d8      	lsls	r0, r3, #31
 800d5f6:	d405      	bmi.n	800d604 <_fwrite_r+0x3c>
 800d5f8:	89a3      	ldrh	r3, [r4, #12]
 800d5fa:	0599      	lsls	r1, r3, #22
 800d5fc:	d402      	bmi.n	800d604 <_fwrite_r+0x3c>
 800d5fe:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d600:	f000 f860 	bl	800d6c4 <__retarget_lock_acquire_recursive>
 800d604:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d608:	049a      	lsls	r2, r3, #18
 800d60a:	d406      	bmi.n	800d61a <_fwrite_r+0x52>
 800d60c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800d610:	81a3      	strh	r3, [r4, #12]
 800d612:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d614:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800d618:	6663      	str	r3, [r4, #100]	; 0x64
 800d61a:	aa03      	add	r2, sp, #12
 800d61c:	4621      	mov	r1, r4
 800d61e:	4640      	mov	r0, r8
 800d620:	f7ff fe84 	bl	800d32c <__sfvwrite_r>
 800d624:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800d626:	b958      	cbnz	r0, 800d640 <_fwrite_r+0x78>
 800d628:	07d8      	lsls	r0, r3, #31
 800d62a:	d405      	bmi.n	800d638 <_fwrite_r+0x70>
 800d62c:	89a3      	ldrh	r3, [r4, #12]
 800d62e:	0599      	lsls	r1, r3, #22
 800d630:	d402      	bmi.n	800d638 <_fwrite_r+0x70>
 800d632:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d634:	f000 f847 	bl	800d6c6 <__retarget_lock_release_recursive>
 800d638:	4630      	mov	r0, r6
 800d63a:	b006      	add	sp, #24
 800d63c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d640:	07da      	lsls	r2, r3, #31
 800d642:	d405      	bmi.n	800d650 <_fwrite_r+0x88>
 800d644:	89a3      	ldrh	r3, [r4, #12]
 800d646:	059b      	lsls	r3, r3, #22
 800d648:	d402      	bmi.n	800d650 <_fwrite_r+0x88>
 800d64a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800d64c:	f000 f83b 	bl	800d6c6 <__retarget_lock_release_recursive>
 800d650:	9b05      	ldr	r3, [sp, #20]
 800d652:	1aed      	subs	r5, r5, r3
 800d654:	fbb5 f6f7 	udiv	r6, r5, r7
 800d658:	e7ee      	b.n	800d638 <_fwrite_r+0x70>
	...

0800d65c <fwrite>:
 800d65c:	b507      	push	{r0, r1, r2, lr}
 800d65e:	9300      	str	r3, [sp, #0]
 800d660:	4613      	mov	r3, r2
 800d662:	460a      	mov	r2, r1
 800d664:	4601      	mov	r1, r0
 800d666:	4803      	ldr	r0, [pc, #12]	; (800d674 <fwrite+0x18>)
 800d668:	6800      	ldr	r0, [r0, #0]
 800d66a:	f7ff ffad 	bl	800d5c8 <_fwrite_r>
 800d66e:	b003      	add	sp, #12
 800d670:	f85d fb04 	ldr.w	pc, [sp], #4
 800d674:	20000014 	.word	0x20000014

0800d678 <__libc_init_array>:
 800d678:	b570      	push	{r4, r5, r6, lr}
 800d67a:	4e0d      	ldr	r6, [pc, #52]	; (800d6b0 <__libc_init_array+0x38>)
 800d67c:	4c0d      	ldr	r4, [pc, #52]	; (800d6b4 <__libc_init_array+0x3c>)
 800d67e:	1ba4      	subs	r4, r4, r6
 800d680:	10a4      	asrs	r4, r4, #2
 800d682:	2500      	movs	r5, #0
 800d684:	42a5      	cmp	r5, r4
 800d686:	d109      	bne.n	800d69c <__libc_init_array+0x24>
 800d688:	4e0b      	ldr	r6, [pc, #44]	; (800d6b8 <__libc_init_array+0x40>)
 800d68a:	4c0c      	ldr	r4, [pc, #48]	; (800d6bc <__libc_init_array+0x44>)
 800d68c:	f003 fe22 	bl	80112d4 <_init>
 800d690:	1ba4      	subs	r4, r4, r6
 800d692:	10a4      	asrs	r4, r4, #2
 800d694:	2500      	movs	r5, #0
 800d696:	42a5      	cmp	r5, r4
 800d698:	d105      	bne.n	800d6a6 <__libc_init_array+0x2e>
 800d69a:	bd70      	pop	{r4, r5, r6, pc}
 800d69c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800d6a0:	4798      	blx	r3
 800d6a2:	3501      	adds	r5, #1
 800d6a4:	e7ee      	b.n	800d684 <__libc_init_array+0xc>
 800d6a6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800d6aa:	4798      	blx	r3
 800d6ac:	3501      	adds	r5, #1
 800d6ae:	e7f2      	b.n	800d696 <__libc_init_array+0x1e>
 800d6b0:	08012ad0 	.word	0x08012ad0
 800d6b4:	08012ad0 	.word	0x08012ad0
 800d6b8:	08012ad0 	.word	0x08012ad0
 800d6bc:	08012adc 	.word	0x08012adc

0800d6c0 <__retarget_lock_init_recursive>:
 800d6c0:	4770      	bx	lr

0800d6c2 <__retarget_lock_close_recursive>:
 800d6c2:	4770      	bx	lr

0800d6c4 <__retarget_lock_acquire_recursive>:
 800d6c4:	4770      	bx	lr

0800d6c6 <__retarget_lock_release_recursive>:
 800d6c6:	4770      	bx	lr

0800d6c8 <malloc>:
 800d6c8:	4b02      	ldr	r3, [pc, #8]	; (800d6d4 <malloc+0xc>)
 800d6ca:	4601      	mov	r1, r0
 800d6cc:	6818      	ldr	r0, [r3, #0]
 800d6ce:	f000 b80b 	b.w	800d6e8 <_malloc_r>
 800d6d2:	bf00      	nop
 800d6d4:	20000014 	.word	0x20000014

0800d6d8 <free>:
 800d6d8:	4b02      	ldr	r3, [pc, #8]	; (800d6e4 <free+0xc>)
 800d6da:	4601      	mov	r1, r0
 800d6dc:	6818      	ldr	r0, [r3, #0]
 800d6de:	f002 bf9d 	b.w	801061c <_free_r>
 800d6e2:	bf00      	nop
 800d6e4:	20000014 	.word	0x20000014

0800d6e8 <_malloc_r>:
 800d6e8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6ec:	f101 050b 	add.w	r5, r1, #11
 800d6f0:	2d16      	cmp	r5, #22
 800d6f2:	4606      	mov	r6, r0
 800d6f4:	d906      	bls.n	800d704 <_malloc_r+0x1c>
 800d6f6:	f035 0507 	bics.w	r5, r5, #7
 800d6fa:	d504      	bpl.n	800d706 <_malloc_r+0x1e>
 800d6fc:	230c      	movs	r3, #12
 800d6fe:	6033      	str	r3, [r6, #0]
 800d700:	2400      	movs	r4, #0
 800d702:	e1a8      	b.n	800da56 <_malloc_r+0x36e>
 800d704:	2510      	movs	r5, #16
 800d706:	428d      	cmp	r5, r1
 800d708:	d3f8      	bcc.n	800d6fc <_malloc_r+0x14>
 800d70a:	4630      	mov	r0, r6
 800d70c:	f000 fa5e 	bl	800dbcc <__malloc_lock>
 800d710:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
 800d714:	4fc0      	ldr	r7, [pc, #768]	; (800da18 <_malloc_r+0x330>)
 800d716:	d238      	bcs.n	800d78a <_malloc_r+0xa2>
 800d718:	f105 0208 	add.w	r2, r5, #8
 800d71c:	443a      	add	r2, r7
 800d71e:	f1a2 0108 	sub.w	r1, r2, #8
 800d722:	6854      	ldr	r4, [r2, #4]
 800d724:	428c      	cmp	r4, r1
 800d726:	ea4f 03d5 	mov.w	r3, r5, lsr #3
 800d72a:	d102      	bne.n	800d732 <_malloc_r+0x4a>
 800d72c:	68d4      	ldr	r4, [r2, #12]
 800d72e:	42a2      	cmp	r2, r4
 800d730:	d010      	beq.n	800d754 <_malloc_r+0x6c>
 800d732:	6863      	ldr	r3, [r4, #4]
 800d734:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 800d738:	f023 0303 	bic.w	r3, r3, #3
 800d73c:	60ca      	str	r2, [r1, #12]
 800d73e:	4423      	add	r3, r4
 800d740:	6091      	str	r1, [r2, #8]
 800d742:	685a      	ldr	r2, [r3, #4]
 800d744:	f042 0201 	orr.w	r2, r2, #1
 800d748:	605a      	str	r2, [r3, #4]
 800d74a:	4630      	mov	r0, r6
 800d74c:	f000 fa44 	bl	800dbd8 <__malloc_unlock>
 800d750:	3408      	adds	r4, #8
 800d752:	e180      	b.n	800da56 <_malloc_r+0x36e>
 800d754:	3302      	adds	r3, #2
 800d756:	4ab1      	ldr	r2, [pc, #708]	; (800da1c <_malloc_r+0x334>)
 800d758:	693c      	ldr	r4, [r7, #16]
 800d75a:	4294      	cmp	r4, r2
 800d75c:	4611      	mov	r1, r2
 800d75e:	d075      	beq.n	800d84c <_malloc_r+0x164>
 800d760:	6860      	ldr	r0, [r4, #4]
 800d762:	f020 0c03 	bic.w	ip, r0, #3
 800d766:	ebac 0005 	sub.w	r0, ip, r5
 800d76a:	280f      	cmp	r0, #15
 800d76c:	dd48      	ble.n	800d800 <_malloc_r+0x118>
 800d76e:	1963      	adds	r3, r4, r5
 800d770:	f045 0501 	orr.w	r5, r5, #1
 800d774:	6065      	str	r5, [r4, #4]
 800d776:	e9c7 3304 	strd	r3, r3, [r7, #16]
 800d77a:	e9c3 2202 	strd	r2, r2, [r3, #8]
 800d77e:	f040 0201 	orr.w	r2, r0, #1
 800d782:	605a      	str	r2, [r3, #4]
 800d784:	f844 000c 	str.w	r0, [r4, ip]
 800d788:	e7df      	b.n	800d74a <_malloc_r+0x62>
 800d78a:	0a6b      	lsrs	r3, r5, #9
 800d78c:	d02a      	beq.n	800d7e4 <_malloc_r+0xfc>
 800d78e:	2b04      	cmp	r3, #4
 800d790:	d812      	bhi.n	800d7b8 <_malloc_r+0xd0>
 800d792:	09ab      	lsrs	r3, r5, #6
 800d794:	3338      	adds	r3, #56	; 0x38
 800d796:	1c5a      	adds	r2, r3, #1
 800d798:	eb07 02c2 	add.w	r2, r7, r2, lsl #3
 800d79c:	f1a2 0c08 	sub.w	ip, r2, #8
 800d7a0:	6854      	ldr	r4, [r2, #4]
 800d7a2:	4564      	cmp	r4, ip
 800d7a4:	d006      	beq.n	800d7b4 <_malloc_r+0xcc>
 800d7a6:	6862      	ldr	r2, [r4, #4]
 800d7a8:	f022 0203 	bic.w	r2, r2, #3
 800d7ac:	1b50      	subs	r0, r2, r5
 800d7ae:	280f      	cmp	r0, #15
 800d7b0:	dd1c      	ble.n	800d7ec <_malloc_r+0x104>
 800d7b2:	3b01      	subs	r3, #1
 800d7b4:	3301      	adds	r3, #1
 800d7b6:	e7ce      	b.n	800d756 <_malloc_r+0x6e>
 800d7b8:	2b14      	cmp	r3, #20
 800d7ba:	d801      	bhi.n	800d7c0 <_malloc_r+0xd8>
 800d7bc:	335b      	adds	r3, #91	; 0x5b
 800d7be:	e7ea      	b.n	800d796 <_malloc_r+0xae>
 800d7c0:	2b54      	cmp	r3, #84	; 0x54
 800d7c2:	d802      	bhi.n	800d7ca <_malloc_r+0xe2>
 800d7c4:	0b2b      	lsrs	r3, r5, #12
 800d7c6:	336e      	adds	r3, #110	; 0x6e
 800d7c8:	e7e5      	b.n	800d796 <_malloc_r+0xae>
 800d7ca:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 800d7ce:	d802      	bhi.n	800d7d6 <_malloc_r+0xee>
 800d7d0:	0beb      	lsrs	r3, r5, #15
 800d7d2:	3377      	adds	r3, #119	; 0x77
 800d7d4:	e7df      	b.n	800d796 <_malloc_r+0xae>
 800d7d6:	f240 5254 	movw	r2, #1364	; 0x554
 800d7da:	4293      	cmp	r3, r2
 800d7dc:	d804      	bhi.n	800d7e8 <_malloc_r+0x100>
 800d7de:	0cab      	lsrs	r3, r5, #18
 800d7e0:	337c      	adds	r3, #124	; 0x7c
 800d7e2:	e7d8      	b.n	800d796 <_malloc_r+0xae>
 800d7e4:	233f      	movs	r3, #63	; 0x3f
 800d7e6:	e7d6      	b.n	800d796 <_malloc_r+0xae>
 800d7e8:	237e      	movs	r3, #126	; 0x7e
 800d7ea:	e7d4      	b.n	800d796 <_malloc_r+0xae>
 800d7ec:	2800      	cmp	r0, #0
 800d7ee:	68e1      	ldr	r1, [r4, #12]
 800d7f0:	db04      	blt.n	800d7fc <_malloc_r+0x114>
 800d7f2:	68a3      	ldr	r3, [r4, #8]
 800d7f4:	60d9      	str	r1, [r3, #12]
 800d7f6:	608b      	str	r3, [r1, #8]
 800d7f8:	18a3      	adds	r3, r4, r2
 800d7fa:	e7a2      	b.n	800d742 <_malloc_r+0x5a>
 800d7fc:	460c      	mov	r4, r1
 800d7fe:	e7d0      	b.n	800d7a2 <_malloc_r+0xba>
 800d800:	2800      	cmp	r0, #0
 800d802:	e9c7 2204 	strd	r2, r2, [r7, #16]
 800d806:	db07      	blt.n	800d818 <_malloc_r+0x130>
 800d808:	44a4      	add	ip, r4
 800d80a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 800d80e:	f043 0301 	orr.w	r3, r3, #1
 800d812:	f8cc 3004 	str.w	r3, [ip, #4]
 800d816:	e798      	b.n	800d74a <_malloc_r+0x62>
 800d818:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 800d81c:	6878      	ldr	r0, [r7, #4]
 800d81e:	f080 8099 	bcs.w	800d954 <_malloc_r+0x26c>
 800d822:	ea4f 0cdc 	mov.w	ip, ip, lsr #3
 800d826:	ea4f 0eac 	mov.w	lr, ip, asr #2
 800d82a:	2201      	movs	r2, #1
 800d82c:	f10c 0c01 	add.w	ip, ip, #1
 800d830:	fa02 f20e 	lsl.w	r2, r2, lr
 800d834:	4310      	orrs	r0, r2
 800d836:	6078      	str	r0, [r7, #4]
 800d838:	eb07 02cc 	add.w	r2, r7, ip, lsl #3
 800d83c:	f857 003c 	ldr.w	r0, [r7, ip, lsl #3]
 800d840:	3a08      	subs	r2, #8
 800d842:	e9c4 0202 	strd	r0, r2, [r4, #8]
 800d846:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
 800d84a:	60c4      	str	r4, [r0, #12]
 800d84c:	2001      	movs	r0, #1
 800d84e:	109a      	asrs	r2, r3, #2
 800d850:	fa00 f202 	lsl.w	r2, r0, r2
 800d854:	6878      	ldr	r0, [r7, #4]
 800d856:	4290      	cmp	r0, r2
 800d858:	d326      	bcc.n	800d8a8 <_malloc_r+0x1c0>
 800d85a:	4210      	tst	r0, r2
 800d85c:	d106      	bne.n	800d86c <_malloc_r+0x184>
 800d85e:	f023 0303 	bic.w	r3, r3, #3
 800d862:	0052      	lsls	r2, r2, #1
 800d864:	4210      	tst	r0, r2
 800d866:	f103 0304 	add.w	r3, r3, #4
 800d86a:	d0fa      	beq.n	800d862 <_malloc_r+0x17a>
 800d86c:	eb07 0cc3 	add.w	ip, r7, r3, lsl #3
 800d870:	46e1      	mov	r9, ip
 800d872:	4698      	mov	r8, r3
 800d874:	f8d9 400c 	ldr.w	r4, [r9, #12]
 800d878:	454c      	cmp	r4, r9
 800d87a:	f040 80af 	bne.w	800d9dc <_malloc_r+0x2f4>
 800d87e:	f108 0801 	add.w	r8, r8, #1
 800d882:	f018 0f03 	tst.w	r8, #3
 800d886:	f109 0908 	add.w	r9, r9, #8
 800d88a:	d1f3      	bne.n	800d874 <_malloc_r+0x18c>
 800d88c:	0798      	lsls	r0, r3, #30
 800d88e:	f040 80e8 	bne.w	800da62 <_malloc_r+0x37a>
 800d892:	687b      	ldr	r3, [r7, #4]
 800d894:	ea23 0302 	bic.w	r3, r3, r2
 800d898:	607b      	str	r3, [r7, #4]
 800d89a:	6878      	ldr	r0, [r7, #4]
 800d89c:	0052      	lsls	r2, r2, #1
 800d89e:	4290      	cmp	r0, r2
 800d8a0:	d302      	bcc.n	800d8a8 <_malloc_r+0x1c0>
 800d8a2:	2a00      	cmp	r2, #0
 800d8a4:	f040 80ec 	bne.w	800da80 <_malloc_r+0x398>
 800d8a8:	f8d7 a008 	ldr.w	sl, [r7, #8]
 800d8ac:	f8da 4004 	ldr.w	r4, [sl, #4]
 800d8b0:	f024 0203 	bic.w	r2, r4, #3
 800d8b4:	42aa      	cmp	r2, r5
 800d8b6:	d303      	bcc.n	800d8c0 <_malloc_r+0x1d8>
 800d8b8:	1b53      	subs	r3, r2, r5
 800d8ba:	2b0f      	cmp	r3, #15
 800d8bc:	f300 8140 	bgt.w	800db40 <_malloc_r+0x458>
 800d8c0:	4b57      	ldr	r3, [pc, #348]	; (800da20 <_malloc_r+0x338>)
 800d8c2:	9200      	str	r2, [sp, #0]
 800d8c4:	2008      	movs	r0, #8
 800d8c6:	681c      	ldr	r4, [r3, #0]
 800d8c8:	f001 fe18 	bl	800f4fc <sysconf>
 800d8cc:	4b55      	ldr	r3, [pc, #340]	; (800da24 <_malloc_r+0x33c>)
 800d8ce:	9a00      	ldr	r2, [sp, #0]
 800d8d0:	6819      	ldr	r1, [r3, #0]
 800d8d2:	3410      	adds	r4, #16
 800d8d4:	3101      	adds	r1, #1
 800d8d6:	442c      	add	r4, r5
 800d8d8:	bf1f      	itttt	ne
 800d8da:	f104 34ff 	addne.w	r4, r4, #4294967295
 800d8de:	1824      	addne	r4, r4, r0
 800d8e0:	4241      	negne	r1, r0
 800d8e2:	400c      	andne	r4, r1
 800d8e4:	4680      	mov	r8, r0
 800d8e6:	4621      	mov	r1, r4
 800d8e8:	4630      	mov	r0, r6
 800d8ea:	e9cd 2300 	strd	r2, r3, [sp]
 800d8ee:	f000 fb5d 	bl	800dfac <_sbrk_r>
 800d8f2:	f1b0 3fff 	cmp.w	r0, #4294967295
 800d8f6:	4683      	mov	fp, r0
 800d8f8:	f000 80fb 	beq.w	800daf2 <_malloc_r+0x40a>
 800d8fc:	9a00      	ldr	r2, [sp, #0]
 800d8fe:	9b01      	ldr	r3, [sp, #4]
 800d900:	eb0a 0102 	add.w	r1, sl, r2
 800d904:	4281      	cmp	r1, r0
 800d906:	d902      	bls.n	800d90e <_malloc_r+0x226>
 800d908:	45ba      	cmp	sl, r7
 800d90a:	f040 80f2 	bne.w	800daf2 <_malloc_r+0x40a>
 800d90e:	f8df 9120 	ldr.w	r9, [pc, #288]	; 800da30 <_malloc_r+0x348>
 800d912:	f8d9 0000 	ldr.w	r0, [r9]
 800d916:	4559      	cmp	r1, fp
 800d918:	eb00 0e04 	add.w	lr, r0, r4
 800d91c:	f8c9 e000 	str.w	lr, [r9]
 800d920:	f108 3cff 	add.w	ip, r8, #4294967295
 800d924:	f040 80ae 	bne.w	800da84 <_malloc_r+0x39c>
 800d928:	ea11 0f0c 	tst.w	r1, ip
 800d92c:	f040 80aa 	bne.w	800da84 <_malloc_r+0x39c>
 800d930:	68bb      	ldr	r3, [r7, #8]
 800d932:	4414      	add	r4, r2
 800d934:	f044 0401 	orr.w	r4, r4, #1
 800d938:	605c      	str	r4, [r3, #4]
 800d93a:	4a3b      	ldr	r2, [pc, #236]	; (800da28 <_malloc_r+0x340>)
 800d93c:	f8d9 3000 	ldr.w	r3, [r9]
 800d940:	6811      	ldr	r1, [r2, #0]
 800d942:	428b      	cmp	r3, r1
 800d944:	bf88      	it	hi
 800d946:	6013      	strhi	r3, [r2, #0]
 800d948:	4a38      	ldr	r2, [pc, #224]	; (800da2c <_malloc_r+0x344>)
 800d94a:	6811      	ldr	r1, [r2, #0]
 800d94c:	428b      	cmp	r3, r1
 800d94e:	bf88      	it	hi
 800d950:	6013      	strhi	r3, [r2, #0]
 800d952:	e0ce      	b.n	800daf2 <_malloc_r+0x40a>
 800d954:	ea4f 225c 	mov.w	r2, ip, lsr #9
 800d958:	2a04      	cmp	r2, #4
 800d95a:	d818      	bhi.n	800d98e <_malloc_r+0x2a6>
 800d95c:	ea4f 129c 	mov.w	r2, ip, lsr #6
 800d960:	3238      	adds	r2, #56	; 0x38
 800d962:	f102 0e01 	add.w	lr, r2, #1
 800d966:	eb07 08c2 	add.w	r8, r7, r2, lsl #3
 800d96a:	f857 e03e 	ldr.w	lr, [r7, lr, lsl #3]
 800d96e:	45f0      	cmp	r8, lr
 800d970:	d12b      	bne.n	800d9ca <_malloc_r+0x2e2>
 800d972:	1092      	asrs	r2, r2, #2
 800d974:	f04f 0c01 	mov.w	ip, #1
 800d978:	fa0c f202 	lsl.w	r2, ip, r2
 800d97c:	4310      	orrs	r0, r2
 800d97e:	6078      	str	r0, [r7, #4]
 800d980:	e9c4 e802 	strd	lr, r8, [r4, #8]
 800d984:	f8c8 4008 	str.w	r4, [r8, #8]
 800d988:	f8ce 400c 	str.w	r4, [lr, #12]
 800d98c:	e75e      	b.n	800d84c <_malloc_r+0x164>
 800d98e:	2a14      	cmp	r2, #20
 800d990:	d801      	bhi.n	800d996 <_malloc_r+0x2ae>
 800d992:	325b      	adds	r2, #91	; 0x5b
 800d994:	e7e5      	b.n	800d962 <_malloc_r+0x27a>
 800d996:	2a54      	cmp	r2, #84	; 0x54
 800d998:	d803      	bhi.n	800d9a2 <_malloc_r+0x2ba>
 800d99a:	ea4f 321c 	mov.w	r2, ip, lsr #12
 800d99e:	326e      	adds	r2, #110	; 0x6e
 800d9a0:	e7df      	b.n	800d962 <_malloc_r+0x27a>
 800d9a2:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800d9a6:	d803      	bhi.n	800d9b0 <_malloc_r+0x2c8>
 800d9a8:	ea4f 32dc 	mov.w	r2, ip, lsr #15
 800d9ac:	3277      	adds	r2, #119	; 0x77
 800d9ae:	e7d8      	b.n	800d962 <_malloc_r+0x27a>
 800d9b0:	f240 5e54 	movw	lr, #1364	; 0x554
 800d9b4:	4572      	cmp	r2, lr
 800d9b6:	bf9a      	itte	ls
 800d9b8:	ea4f 429c 	movls.w	r2, ip, lsr #18
 800d9bc:	327c      	addls	r2, #124	; 0x7c
 800d9be:	227e      	movhi	r2, #126	; 0x7e
 800d9c0:	e7cf      	b.n	800d962 <_malloc_r+0x27a>
 800d9c2:	f8de e008 	ldr.w	lr, [lr, #8]
 800d9c6:	45f0      	cmp	r8, lr
 800d9c8:	d005      	beq.n	800d9d6 <_malloc_r+0x2ee>
 800d9ca:	f8de 2004 	ldr.w	r2, [lr, #4]
 800d9ce:	f022 0203 	bic.w	r2, r2, #3
 800d9d2:	4562      	cmp	r2, ip
 800d9d4:	d8f5      	bhi.n	800d9c2 <_malloc_r+0x2da>
 800d9d6:	f8de 800c 	ldr.w	r8, [lr, #12]
 800d9da:	e7d1      	b.n	800d980 <_malloc_r+0x298>
 800d9dc:	6860      	ldr	r0, [r4, #4]
 800d9de:	f8d4 e00c 	ldr.w	lr, [r4, #12]
 800d9e2:	f020 0003 	bic.w	r0, r0, #3
 800d9e6:	eba0 0a05 	sub.w	sl, r0, r5
 800d9ea:	f1ba 0f0f 	cmp.w	sl, #15
 800d9ee:	dd21      	ble.n	800da34 <_malloc_r+0x34c>
 800d9f0:	68a2      	ldr	r2, [r4, #8]
 800d9f2:	1963      	adds	r3, r4, r5
 800d9f4:	f045 0501 	orr.w	r5, r5, #1
 800d9f8:	6065      	str	r5, [r4, #4]
 800d9fa:	f8c2 e00c 	str.w	lr, [r2, #12]
 800d9fe:	f8ce 2008 	str.w	r2, [lr, #8]
 800da02:	f04a 0201 	orr.w	r2, sl, #1
 800da06:	e9c7 3304 	strd	r3, r3, [r7, #16]
 800da0a:	e9c3 1102 	strd	r1, r1, [r3, #8]
 800da0e:	605a      	str	r2, [r3, #4]
 800da10:	f844 a000 	str.w	sl, [r4, r0]
 800da14:	e699      	b.n	800d74a <_malloc_r+0x62>
 800da16:	bf00      	nop
 800da18:	20000440 	.word	0x20000440
 800da1c:	20000448 	.word	0x20000448
 800da20:	20000a74 	.word	0x20000a74
 800da24:	20000848 	.word	0x20000848
 800da28:	20000a6c 	.word	0x20000a6c
 800da2c:	20000a70 	.word	0x20000a70
 800da30:	20000a44 	.word	0x20000a44
 800da34:	f1ba 0f00 	cmp.w	sl, #0
 800da38:	db11      	blt.n	800da5e <_malloc_r+0x376>
 800da3a:	4420      	add	r0, r4
 800da3c:	6843      	ldr	r3, [r0, #4]
 800da3e:	f043 0301 	orr.w	r3, r3, #1
 800da42:	6043      	str	r3, [r0, #4]
 800da44:	f854 3f08 	ldr.w	r3, [r4, #8]!
 800da48:	4630      	mov	r0, r6
 800da4a:	f8c3 e00c 	str.w	lr, [r3, #12]
 800da4e:	f8ce 3008 	str.w	r3, [lr, #8]
 800da52:	f000 f8c1 	bl	800dbd8 <__malloc_unlock>
 800da56:	4620      	mov	r0, r4
 800da58:	b003      	add	sp, #12
 800da5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da5e:	4674      	mov	r4, lr
 800da60:	e70a      	b.n	800d878 <_malloc_r+0x190>
 800da62:	f1ac 0008 	sub.w	r0, ip, #8
 800da66:	f8dc c000 	ldr.w	ip, [ip]
 800da6a:	4584      	cmp	ip, r0
 800da6c:	f103 33ff 	add.w	r3, r3, #4294967295
 800da70:	f43f af0c 	beq.w	800d88c <_malloc_r+0x1a4>
 800da74:	e711      	b.n	800d89a <_malloc_r+0x1b2>
 800da76:	3304      	adds	r3, #4
 800da78:	0052      	lsls	r2, r2, #1
 800da7a:	4210      	tst	r0, r2
 800da7c:	d0fb      	beq.n	800da76 <_malloc_r+0x38e>
 800da7e:	e6f5      	b.n	800d86c <_malloc_r+0x184>
 800da80:	4643      	mov	r3, r8
 800da82:	e7fa      	b.n	800da7a <_malloc_r+0x392>
 800da84:	6818      	ldr	r0, [r3, #0]
 800da86:	9200      	str	r2, [sp, #0]
 800da88:	3001      	adds	r0, #1
 800da8a:	bf1b      	ittet	ne
 800da8c:	ebab 0101 	subne.w	r1, fp, r1
 800da90:	4471      	addne	r1, lr
 800da92:	f8c3 b000 	streq.w	fp, [r3]
 800da96:	f8c9 1000 	strne.w	r1, [r9]
 800da9a:	f01b 0307 	ands.w	r3, fp, #7
 800da9e:	bf1c      	itt	ne
 800daa0:	f1c3 0308 	rsbne	r3, r3, #8
 800daa4:	449b      	addne	fp, r3
 800daa6:	445c      	add	r4, fp
 800daa8:	4498      	add	r8, r3
 800daaa:	ea04 030c 	and.w	r3, r4, ip
 800daae:	eba8 0803 	sub.w	r8, r8, r3
 800dab2:	4641      	mov	r1, r8
 800dab4:	4630      	mov	r0, r6
 800dab6:	f000 fa79 	bl	800dfac <_sbrk_r>
 800daba:	1c43      	adds	r3, r0, #1
 800dabc:	bf04      	itt	eq
 800dabe:	4658      	moveq	r0, fp
 800dac0:	f04f 0800 	moveq.w	r8, #0
 800dac4:	f8d9 3000 	ldr.w	r3, [r9]
 800dac8:	f8c7 b008 	str.w	fp, [r7, #8]
 800dacc:	eba0 000b 	sub.w	r0, r0, fp
 800dad0:	4440      	add	r0, r8
 800dad2:	4443      	add	r3, r8
 800dad4:	f040 0001 	orr.w	r0, r0, #1
 800dad8:	45ba      	cmp	sl, r7
 800dada:	9a00      	ldr	r2, [sp, #0]
 800dadc:	f8c9 3000 	str.w	r3, [r9]
 800dae0:	f8cb 0004 	str.w	r0, [fp, #4]
 800dae4:	f43f af29 	beq.w	800d93a <_malloc_r+0x252>
 800dae8:	2a0f      	cmp	r2, #15
 800daea:	d810      	bhi.n	800db0e <_malloc_r+0x426>
 800daec:	2301      	movs	r3, #1
 800daee:	f8cb 3004 	str.w	r3, [fp, #4]
 800daf2:	68bb      	ldr	r3, [r7, #8]
 800daf4:	685a      	ldr	r2, [r3, #4]
 800daf6:	f022 0203 	bic.w	r2, r2, #3
 800dafa:	42aa      	cmp	r2, r5
 800dafc:	eba2 0305 	sub.w	r3, r2, r5
 800db00:	d301      	bcc.n	800db06 <_malloc_r+0x41e>
 800db02:	2b0f      	cmp	r3, #15
 800db04:	dc1c      	bgt.n	800db40 <_malloc_r+0x458>
 800db06:	4630      	mov	r0, r6
 800db08:	f000 f866 	bl	800dbd8 <__malloc_unlock>
 800db0c:	e5f8      	b.n	800d700 <_malloc_r+0x18>
 800db0e:	f8da 3004 	ldr.w	r3, [sl, #4]
 800db12:	f1a2 040c 	sub.w	r4, r2, #12
 800db16:	f024 0407 	bic.w	r4, r4, #7
 800db1a:	f003 0301 	and.w	r3, r3, #1
 800db1e:	4323      	orrs	r3, r4
 800db20:	f8ca 3004 	str.w	r3, [sl, #4]
 800db24:	2205      	movs	r2, #5
 800db26:	eb0a 0304 	add.w	r3, sl, r4
 800db2a:	2c0f      	cmp	r4, #15
 800db2c:	e9c3 2201 	strd	r2, r2, [r3, #4]
 800db30:	f67f af03 	bls.w	800d93a <_malloc_r+0x252>
 800db34:	f10a 0108 	add.w	r1, sl, #8
 800db38:	4630      	mov	r0, r6
 800db3a:	f002 fd6f 	bl	801061c <_free_r>
 800db3e:	e6fc      	b.n	800d93a <_malloc_r+0x252>
 800db40:	68bc      	ldr	r4, [r7, #8]
 800db42:	f045 0201 	orr.w	r2, r5, #1
 800db46:	4425      	add	r5, r4
 800db48:	f043 0301 	orr.w	r3, r3, #1
 800db4c:	6062      	str	r2, [r4, #4]
 800db4e:	60bd      	str	r5, [r7, #8]
 800db50:	606b      	str	r3, [r5, #4]
 800db52:	e5fa      	b.n	800d74a <_malloc_r+0x62>

0800db54 <memcmp>:
 800db54:	b530      	push	{r4, r5, lr}
 800db56:	2400      	movs	r4, #0
 800db58:	42a2      	cmp	r2, r4
 800db5a:	d101      	bne.n	800db60 <memcmp+0xc>
 800db5c:	2000      	movs	r0, #0
 800db5e:	e007      	b.n	800db70 <memcmp+0x1c>
 800db60:	5d03      	ldrb	r3, [r0, r4]
 800db62:	3401      	adds	r4, #1
 800db64:	190d      	adds	r5, r1, r4
 800db66:	f815 5c01 	ldrb.w	r5, [r5, #-1]
 800db6a:	42ab      	cmp	r3, r5
 800db6c:	d0f4      	beq.n	800db58 <memcmp+0x4>
 800db6e:	1b58      	subs	r0, r3, r5
 800db70:	bd30      	pop	{r4, r5, pc}

0800db72 <memcpy>:
 800db72:	b510      	push	{r4, lr}
 800db74:	1e43      	subs	r3, r0, #1
 800db76:	440a      	add	r2, r1
 800db78:	4291      	cmp	r1, r2
 800db7a:	d100      	bne.n	800db7e <memcpy+0xc>
 800db7c:	bd10      	pop	{r4, pc}
 800db7e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800db82:	f803 4f01 	strb.w	r4, [r3, #1]!
 800db86:	e7f7      	b.n	800db78 <memcpy+0x6>

0800db88 <memmove>:
 800db88:	4288      	cmp	r0, r1
 800db8a:	b510      	push	{r4, lr}
 800db8c:	eb01 0302 	add.w	r3, r1, r2
 800db90:	d807      	bhi.n	800dba2 <memmove+0x1a>
 800db92:	1e42      	subs	r2, r0, #1
 800db94:	4299      	cmp	r1, r3
 800db96:	d00a      	beq.n	800dbae <memmove+0x26>
 800db98:	f811 4b01 	ldrb.w	r4, [r1], #1
 800db9c:	f802 4f01 	strb.w	r4, [r2, #1]!
 800dba0:	e7f8      	b.n	800db94 <memmove+0xc>
 800dba2:	4283      	cmp	r3, r0
 800dba4:	d9f5      	bls.n	800db92 <memmove+0xa>
 800dba6:	1881      	adds	r1, r0, r2
 800dba8:	1ad2      	subs	r2, r2, r3
 800dbaa:	42d3      	cmn	r3, r2
 800dbac:	d100      	bne.n	800dbb0 <memmove+0x28>
 800dbae:	bd10      	pop	{r4, pc}
 800dbb0:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800dbb4:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800dbb8:	e7f7      	b.n	800dbaa <memmove+0x22>

0800dbba <memset>:
 800dbba:	4402      	add	r2, r0
 800dbbc:	4603      	mov	r3, r0
 800dbbe:	4293      	cmp	r3, r2
 800dbc0:	d100      	bne.n	800dbc4 <memset+0xa>
 800dbc2:	4770      	bx	lr
 800dbc4:	f803 1b01 	strb.w	r1, [r3], #1
 800dbc8:	e7f9      	b.n	800dbbe <memset+0x4>
	...

0800dbcc <__malloc_lock>:
 800dbcc:	4801      	ldr	r0, [pc, #4]	; (800dbd4 <__malloc_lock+0x8>)
 800dbce:	f7ff bd79 	b.w	800d6c4 <__retarget_lock_acquire_recursive>
 800dbd2:	bf00      	nop
 800dbd4:	20000a80 	.word	0x20000a80

0800dbd8 <__malloc_unlock>:
 800dbd8:	4801      	ldr	r0, [pc, #4]	; (800dbe0 <__malloc_unlock+0x8>)
 800dbda:	f7ff bd74 	b.w	800d6c6 <__retarget_lock_release_recursive>
 800dbde:	bf00      	nop
 800dbe0:	20000a80 	.word	0x20000a80

0800dbe4 <_putc_r>:
 800dbe4:	b570      	push	{r4, r5, r6, lr}
 800dbe6:	460d      	mov	r5, r1
 800dbe8:	4614      	mov	r4, r2
 800dbea:	4606      	mov	r6, r0
 800dbec:	b118      	cbz	r0, 800dbf6 <_putc_r+0x12>
 800dbee:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800dbf0:	b90b      	cbnz	r3, 800dbf6 <_putc_r+0x12>
 800dbf2:	f002 fc83 	bl	80104fc <__sinit>
 800dbf6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800dbf8:	07d8      	lsls	r0, r3, #31
 800dbfa:	d405      	bmi.n	800dc08 <_putc_r+0x24>
 800dbfc:	89a3      	ldrh	r3, [r4, #12]
 800dbfe:	0599      	lsls	r1, r3, #22
 800dc00:	d402      	bmi.n	800dc08 <_putc_r+0x24>
 800dc02:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800dc04:	f7ff fd5e 	bl	800d6c4 <__retarget_lock_acquire_recursive>
 800dc08:	68a3      	ldr	r3, [r4, #8]
 800dc0a:	3b01      	subs	r3, #1
 800dc0c:	2b00      	cmp	r3, #0
 800dc0e:	60a3      	str	r3, [r4, #8]
 800dc10:	da05      	bge.n	800dc1e <_putc_r+0x3a>
 800dc12:	69a2      	ldr	r2, [r4, #24]
 800dc14:	4293      	cmp	r3, r2
 800dc16:	db12      	blt.n	800dc3e <_putc_r+0x5a>
 800dc18:	b2eb      	uxtb	r3, r5
 800dc1a:	2b0a      	cmp	r3, #10
 800dc1c:	d00f      	beq.n	800dc3e <_putc_r+0x5a>
 800dc1e:	6823      	ldr	r3, [r4, #0]
 800dc20:	1c5a      	adds	r2, r3, #1
 800dc22:	6022      	str	r2, [r4, #0]
 800dc24:	701d      	strb	r5, [r3, #0]
 800dc26:	b2ed      	uxtb	r5, r5
 800dc28:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800dc2a:	07da      	lsls	r2, r3, #31
 800dc2c:	d405      	bmi.n	800dc3a <_putc_r+0x56>
 800dc2e:	89a3      	ldrh	r3, [r4, #12]
 800dc30:	059b      	lsls	r3, r3, #22
 800dc32:	d402      	bmi.n	800dc3a <_putc_r+0x56>
 800dc34:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800dc36:	f7ff fd46 	bl	800d6c6 <__retarget_lock_release_recursive>
 800dc3a:	4628      	mov	r0, r5
 800dc3c:	bd70      	pop	{r4, r5, r6, pc}
 800dc3e:	4629      	mov	r1, r5
 800dc40:	4622      	mov	r2, r4
 800dc42:	4630      	mov	r0, r6
 800dc44:	f001 fc67 	bl	800f516 <__swbuf_r>
 800dc48:	4605      	mov	r5, r0
 800dc4a:	e7ed      	b.n	800dc28 <_putc_r+0x44>

0800dc4c <realloc>:
 800dc4c:	4b02      	ldr	r3, [pc, #8]	; (800dc58 <realloc+0xc>)
 800dc4e:	460a      	mov	r2, r1
 800dc50:	4601      	mov	r1, r0
 800dc52:	6818      	ldr	r0, [r3, #0]
 800dc54:	f000 b802 	b.w	800dc5c <_realloc_r>
 800dc58:	20000014 	.word	0x20000014

0800dc5c <_realloc_r>:
 800dc5c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc60:	4682      	mov	sl, r0
 800dc62:	460c      	mov	r4, r1
 800dc64:	b929      	cbnz	r1, 800dc72 <_realloc_r+0x16>
 800dc66:	4611      	mov	r1, r2
 800dc68:	b003      	add	sp, #12
 800dc6a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dc6e:	f7ff bd3b 	b.w	800d6e8 <_malloc_r>
 800dc72:	9201      	str	r2, [sp, #4]
 800dc74:	f7ff ffaa 	bl	800dbcc <__malloc_lock>
 800dc78:	9a01      	ldr	r2, [sp, #4]
 800dc7a:	f854 5c04 	ldr.w	r5, [r4, #-4]
 800dc7e:	f102 080b 	add.w	r8, r2, #11
 800dc82:	f1b8 0f16 	cmp.w	r8, #22
 800dc86:	f1a4 0908 	sub.w	r9, r4, #8
 800dc8a:	f025 0603 	bic.w	r6, r5, #3
 800dc8e:	d90b      	bls.n	800dca8 <_realloc_r+0x4c>
 800dc90:	f038 0807 	bics.w	r8, r8, #7
 800dc94:	d50a      	bpl.n	800dcac <_realloc_r+0x50>
 800dc96:	230c      	movs	r3, #12
 800dc98:	f8ca 3000 	str.w	r3, [sl]
 800dc9c:	f04f 0b00 	mov.w	fp, #0
 800dca0:	4658      	mov	r0, fp
 800dca2:	b003      	add	sp, #12
 800dca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dca8:	f04f 0810 	mov.w	r8, #16
 800dcac:	4590      	cmp	r8, r2
 800dcae:	d3f2      	bcc.n	800dc96 <_realloc_r+0x3a>
 800dcb0:	45b0      	cmp	r8, r6
 800dcb2:	f340 8170 	ble.w	800df96 <_realloc_r+0x33a>
 800dcb6:	49a9      	ldr	r1, [pc, #676]	; (800df5c <_realloc_r+0x300>)
 800dcb8:	9101      	str	r1, [sp, #4]
 800dcba:	f8d1 c008 	ldr.w	ip, [r1, #8]
 800dcbe:	eb09 0306 	add.w	r3, r9, r6
 800dcc2:	459c      	cmp	ip, r3
 800dcc4:	6858      	ldr	r0, [r3, #4]
 800dcc6:	d005      	beq.n	800dcd4 <_realloc_r+0x78>
 800dcc8:	f020 0101 	bic.w	r1, r0, #1
 800dccc:	4419      	add	r1, r3
 800dcce:	6849      	ldr	r1, [r1, #4]
 800dcd0:	07cf      	lsls	r7, r1, #31
 800dcd2:	d447      	bmi.n	800dd64 <_realloc_r+0x108>
 800dcd4:	f020 0003 	bic.w	r0, r0, #3
 800dcd8:	459c      	cmp	ip, r3
 800dcda:	eb06 0700 	add.w	r7, r6, r0
 800dcde:	d119      	bne.n	800dd14 <_realloc_r+0xb8>
 800dce0:	f108 0110 	add.w	r1, r8, #16
 800dce4:	42b9      	cmp	r1, r7
 800dce6:	dc3f      	bgt.n	800dd68 <_realloc_r+0x10c>
 800dce8:	eb09 0308 	add.w	r3, r9, r8
 800dcec:	9a01      	ldr	r2, [sp, #4]
 800dcee:	eba7 0708 	sub.w	r7, r7, r8
 800dcf2:	f047 0701 	orr.w	r7, r7, #1
 800dcf6:	6093      	str	r3, [r2, #8]
 800dcf8:	605f      	str	r7, [r3, #4]
 800dcfa:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800dcfe:	f003 0301 	and.w	r3, r3, #1
 800dd02:	ea43 0308 	orr.w	r3, r3, r8
 800dd06:	f844 3c04 	str.w	r3, [r4, #-4]
 800dd0a:	4650      	mov	r0, sl
 800dd0c:	f7ff ff64 	bl	800dbd8 <__malloc_unlock>
 800dd10:	46a3      	mov	fp, r4
 800dd12:	e7c5      	b.n	800dca0 <_realloc_r+0x44>
 800dd14:	45b8      	cmp	r8, r7
 800dd16:	dc27      	bgt.n	800dd68 <_realloc_r+0x10c>
 800dd18:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 800dd1c:	60da      	str	r2, [r3, #12]
 800dd1e:	6093      	str	r3, [r2, #8]
 800dd20:	eba7 0008 	sub.w	r0, r7, r8
 800dd24:	f8d9 2004 	ldr.w	r2, [r9, #4]
 800dd28:	280f      	cmp	r0, #15
 800dd2a:	f002 0201 	and.w	r2, r2, #1
 800dd2e:	eb09 0307 	add.w	r3, r9, r7
 800dd32:	f240 8132 	bls.w	800df9a <_realloc_r+0x33e>
 800dd36:	eb09 0108 	add.w	r1, r9, r8
 800dd3a:	ea48 0202 	orr.w	r2, r8, r2
 800dd3e:	f040 0001 	orr.w	r0, r0, #1
 800dd42:	f8c9 2004 	str.w	r2, [r9, #4]
 800dd46:	6048      	str	r0, [r1, #4]
 800dd48:	685a      	ldr	r2, [r3, #4]
 800dd4a:	f042 0201 	orr.w	r2, r2, #1
 800dd4e:	605a      	str	r2, [r3, #4]
 800dd50:	3108      	adds	r1, #8
 800dd52:	4650      	mov	r0, sl
 800dd54:	f002 fc62 	bl	801061c <_free_r>
 800dd58:	4650      	mov	r0, sl
 800dd5a:	f7ff ff3d 	bl	800dbd8 <__malloc_unlock>
 800dd5e:	f109 0b08 	add.w	fp, r9, #8
 800dd62:	e79d      	b.n	800dca0 <_realloc_r+0x44>
 800dd64:	2000      	movs	r0, #0
 800dd66:	4603      	mov	r3, r0
 800dd68:	07e9      	lsls	r1, r5, #31
 800dd6a:	f100 80c6 	bmi.w	800defa <_realloc_r+0x29e>
 800dd6e:	f854 5c08 	ldr.w	r5, [r4, #-8]
 800dd72:	eba9 0505 	sub.w	r5, r9, r5
 800dd76:	6869      	ldr	r1, [r5, #4]
 800dd78:	f021 0103 	bic.w	r1, r1, #3
 800dd7c:	eb01 0b06 	add.w	fp, r1, r6
 800dd80:	2b00      	cmp	r3, #0
 800dd82:	f000 8086 	beq.w	800de92 <_realloc_r+0x236>
 800dd86:	459c      	cmp	ip, r3
 800dd88:	eb00 070b 	add.w	r7, r0, fp
 800dd8c:	d149      	bne.n	800de22 <_realloc_r+0x1c6>
 800dd8e:	f108 0310 	add.w	r3, r8, #16
 800dd92:	42bb      	cmp	r3, r7
 800dd94:	dc7d      	bgt.n	800de92 <_realloc_r+0x236>
 800dd96:	46ab      	mov	fp, r5
 800dd98:	68eb      	ldr	r3, [r5, #12]
 800dd9a:	f85b 2f08 	ldr.w	r2, [fp, #8]!
 800dd9e:	60d3      	str	r3, [r2, #12]
 800dda0:	609a      	str	r2, [r3, #8]
 800dda2:	1f32      	subs	r2, r6, #4
 800dda4:	2a24      	cmp	r2, #36	; 0x24
 800dda6:	d837      	bhi.n	800de18 <_realloc_r+0x1bc>
 800dda8:	2a13      	cmp	r2, #19
 800ddaa:	d933      	bls.n	800de14 <_realloc_r+0x1b8>
 800ddac:	6823      	ldr	r3, [r4, #0]
 800ddae:	60ab      	str	r3, [r5, #8]
 800ddb0:	6863      	ldr	r3, [r4, #4]
 800ddb2:	60eb      	str	r3, [r5, #12]
 800ddb4:	2a1b      	cmp	r2, #27
 800ddb6:	d81b      	bhi.n	800ddf0 <_realloc_r+0x194>
 800ddb8:	3408      	adds	r4, #8
 800ddba:	f105 0310 	add.w	r3, r5, #16
 800ddbe:	6822      	ldr	r2, [r4, #0]
 800ddc0:	601a      	str	r2, [r3, #0]
 800ddc2:	6862      	ldr	r2, [r4, #4]
 800ddc4:	605a      	str	r2, [r3, #4]
 800ddc6:	68a2      	ldr	r2, [r4, #8]
 800ddc8:	609a      	str	r2, [r3, #8]
 800ddca:	eb05 0308 	add.w	r3, r5, r8
 800ddce:	9a01      	ldr	r2, [sp, #4]
 800ddd0:	eba7 0708 	sub.w	r7, r7, r8
 800ddd4:	f047 0701 	orr.w	r7, r7, #1
 800ddd8:	6093      	str	r3, [r2, #8]
 800ddda:	605f      	str	r7, [r3, #4]
 800dddc:	686b      	ldr	r3, [r5, #4]
 800ddde:	f003 0301 	and.w	r3, r3, #1
 800dde2:	ea43 0308 	orr.w	r3, r3, r8
 800dde6:	606b      	str	r3, [r5, #4]
 800dde8:	4650      	mov	r0, sl
 800ddea:	f7ff fef5 	bl	800dbd8 <__malloc_unlock>
 800ddee:	e757      	b.n	800dca0 <_realloc_r+0x44>
 800ddf0:	68a3      	ldr	r3, [r4, #8]
 800ddf2:	612b      	str	r3, [r5, #16]
 800ddf4:	68e3      	ldr	r3, [r4, #12]
 800ddf6:	616b      	str	r3, [r5, #20]
 800ddf8:	2a24      	cmp	r2, #36	; 0x24
 800ddfa:	bf01      	itttt	eq
 800ddfc:	6923      	ldreq	r3, [r4, #16]
 800ddfe:	61ab      	streq	r3, [r5, #24]
 800de00:	6962      	ldreq	r2, [r4, #20]
 800de02:	61ea      	streq	r2, [r5, #28]
 800de04:	bf19      	ittee	ne
 800de06:	3410      	addne	r4, #16
 800de08:	f105 0318 	addne.w	r3, r5, #24
 800de0c:	f105 0320 	addeq.w	r3, r5, #32
 800de10:	3418      	addeq	r4, #24
 800de12:	e7d4      	b.n	800ddbe <_realloc_r+0x162>
 800de14:	465b      	mov	r3, fp
 800de16:	e7d2      	b.n	800ddbe <_realloc_r+0x162>
 800de18:	4621      	mov	r1, r4
 800de1a:	4658      	mov	r0, fp
 800de1c:	f7ff feb4 	bl	800db88 <memmove>
 800de20:	e7d3      	b.n	800ddca <_realloc_r+0x16e>
 800de22:	45b8      	cmp	r8, r7
 800de24:	dc35      	bgt.n	800de92 <_realloc_r+0x236>
 800de26:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 800de2a:	4628      	mov	r0, r5
 800de2c:	60da      	str	r2, [r3, #12]
 800de2e:	6093      	str	r3, [r2, #8]
 800de30:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800de34:	68eb      	ldr	r3, [r5, #12]
 800de36:	60d3      	str	r3, [r2, #12]
 800de38:	609a      	str	r2, [r3, #8]
 800de3a:	1f32      	subs	r2, r6, #4
 800de3c:	2a24      	cmp	r2, #36	; 0x24
 800de3e:	d824      	bhi.n	800de8a <_realloc_r+0x22e>
 800de40:	2a13      	cmp	r2, #19
 800de42:	d908      	bls.n	800de56 <_realloc_r+0x1fa>
 800de44:	6823      	ldr	r3, [r4, #0]
 800de46:	60ab      	str	r3, [r5, #8]
 800de48:	6863      	ldr	r3, [r4, #4]
 800de4a:	60eb      	str	r3, [r5, #12]
 800de4c:	2a1b      	cmp	r2, #27
 800de4e:	d80a      	bhi.n	800de66 <_realloc_r+0x20a>
 800de50:	3408      	adds	r4, #8
 800de52:	f105 0010 	add.w	r0, r5, #16
 800de56:	6823      	ldr	r3, [r4, #0]
 800de58:	6003      	str	r3, [r0, #0]
 800de5a:	6863      	ldr	r3, [r4, #4]
 800de5c:	6043      	str	r3, [r0, #4]
 800de5e:	68a3      	ldr	r3, [r4, #8]
 800de60:	6083      	str	r3, [r0, #8]
 800de62:	46a9      	mov	r9, r5
 800de64:	e75c      	b.n	800dd20 <_realloc_r+0xc4>
 800de66:	68a3      	ldr	r3, [r4, #8]
 800de68:	612b      	str	r3, [r5, #16]
 800de6a:	68e3      	ldr	r3, [r4, #12]
 800de6c:	616b      	str	r3, [r5, #20]
 800de6e:	2a24      	cmp	r2, #36	; 0x24
 800de70:	bf01      	itttt	eq
 800de72:	6923      	ldreq	r3, [r4, #16]
 800de74:	61ab      	streq	r3, [r5, #24]
 800de76:	6963      	ldreq	r3, [r4, #20]
 800de78:	61eb      	streq	r3, [r5, #28]
 800de7a:	bf19      	ittee	ne
 800de7c:	3410      	addne	r4, #16
 800de7e:	f105 0018 	addne.w	r0, r5, #24
 800de82:	f105 0020 	addeq.w	r0, r5, #32
 800de86:	3418      	addeq	r4, #24
 800de88:	e7e5      	b.n	800de56 <_realloc_r+0x1fa>
 800de8a:	4621      	mov	r1, r4
 800de8c:	f7ff fe7c 	bl	800db88 <memmove>
 800de90:	e7e7      	b.n	800de62 <_realloc_r+0x206>
 800de92:	45d8      	cmp	r8, fp
 800de94:	dc31      	bgt.n	800defa <_realloc_r+0x29e>
 800de96:	4628      	mov	r0, r5
 800de98:	68eb      	ldr	r3, [r5, #12]
 800de9a:	f850 2f08 	ldr.w	r2, [r0, #8]!
 800de9e:	60d3      	str	r3, [r2, #12]
 800dea0:	609a      	str	r2, [r3, #8]
 800dea2:	1f32      	subs	r2, r6, #4
 800dea4:	2a24      	cmp	r2, #36	; 0x24
 800dea6:	d824      	bhi.n	800def2 <_realloc_r+0x296>
 800dea8:	2a13      	cmp	r2, #19
 800deaa:	d908      	bls.n	800debe <_realloc_r+0x262>
 800deac:	6823      	ldr	r3, [r4, #0]
 800deae:	60ab      	str	r3, [r5, #8]
 800deb0:	6863      	ldr	r3, [r4, #4]
 800deb2:	60eb      	str	r3, [r5, #12]
 800deb4:	2a1b      	cmp	r2, #27
 800deb6:	d80a      	bhi.n	800dece <_realloc_r+0x272>
 800deb8:	3408      	adds	r4, #8
 800deba:	f105 0010 	add.w	r0, r5, #16
 800debe:	6823      	ldr	r3, [r4, #0]
 800dec0:	6003      	str	r3, [r0, #0]
 800dec2:	6863      	ldr	r3, [r4, #4]
 800dec4:	6043      	str	r3, [r0, #4]
 800dec6:	68a3      	ldr	r3, [r4, #8]
 800dec8:	6083      	str	r3, [r0, #8]
 800deca:	465f      	mov	r7, fp
 800decc:	e7c9      	b.n	800de62 <_realloc_r+0x206>
 800dece:	68a3      	ldr	r3, [r4, #8]
 800ded0:	612b      	str	r3, [r5, #16]
 800ded2:	68e3      	ldr	r3, [r4, #12]
 800ded4:	616b      	str	r3, [r5, #20]
 800ded6:	2a24      	cmp	r2, #36	; 0x24
 800ded8:	bf01      	itttt	eq
 800deda:	6923      	ldreq	r3, [r4, #16]
 800dedc:	61ab      	streq	r3, [r5, #24]
 800dede:	6963      	ldreq	r3, [r4, #20]
 800dee0:	61eb      	streq	r3, [r5, #28]
 800dee2:	bf19      	ittee	ne
 800dee4:	3410      	addne	r4, #16
 800dee6:	f105 0018 	addne.w	r0, r5, #24
 800deea:	f105 0020 	addeq.w	r0, r5, #32
 800deee:	3418      	addeq	r4, #24
 800def0:	e7e5      	b.n	800debe <_realloc_r+0x262>
 800def2:	4621      	mov	r1, r4
 800def4:	f7ff fe48 	bl	800db88 <memmove>
 800def8:	e7e7      	b.n	800deca <_realloc_r+0x26e>
 800defa:	4611      	mov	r1, r2
 800defc:	4650      	mov	r0, sl
 800defe:	f7ff fbf3 	bl	800d6e8 <_malloc_r>
 800df02:	4683      	mov	fp, r0
 800df04:	2800      	cmp	r0, #0
 800df06:	f43f af6f 	beq.w	800dde8 <_realloc_r+0x18c>
 800df0a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800df0e:	f023 0301 	bic.w	r3, r3, #1
 800df12:	444b      	add	r3, r9
 800df14:	f1a0 0208 	sub.w	r2, r0, #8
 800df18:	4293      	cmp	r3, r2
 800df1a:	d105      	bne.n	800df28 <_realloc_r+0x2cc>
 800df1c:	f850 7c04 	ldr.w	r7, [r0, #-4]
 800df20:	f027 0703 	bic.w	r7, r7, #3
 800df24:	4437      	add	r7, r6
 800df26:	e6fb      	b.n	800dd20 <_realloc_r+0xc4>
 800df28:	1f32      	subs	r2, r6, #4
 800df2a:	2a24      	cmp	r2, #36	; 0x24
 800df2c:	d82f      	bhi.n	800df8e <_realloc_r+0x332>
 800df2e:	2a13      	cmp	r2, #19
 800df30:	d92a      	bls.n	800df88 <_realloc_r+0x32c>
 800df32:	6823      	ldr	r3, [r4, #0]
 800df34:	6003      	str	r3, [r0, #0]
 800df36:	6863      	ldr	r3, [r4, #4]
 800df38:	6043      	str	r3, [r0, #4]
 800df3a:	2a1b      	cmp	r2, #27
 800df3c:	d810      	bhi.n	800df60 <_realloc_r+0x304>
 800df3e:	f104 0208 	add.w	r2, r4, #8
 800df42:	f100 0308 	add.w	r3, r0, #8
 800df46:	6811      	ldr	r1, [r2, #0]
 800df48:	6019      	str	r1, [r3, #0]
 800df4a:	6851      	ldr	r1, [r2, #4]
 800df4c:	6059      	str	r1, [r3, #4]
 800df4e:	6892      	ldr	r2, [r2, #8]
 800df50:	609a      	str	r2, [r3, #8]
 800df52:	4621      	mov	r1, r4
 800df54:	4650      	mov	r0, sl
 800df56:	f002 fb61 	bl	801061c <_free_r>
 800df5a:	e745      	b.n	800dde8 <_realloc_r+0x18c>
 800df5c:	20000440 	.word	0x20000440
 800df60:	68a3      	ldr	r3, [r4, #8]
 800df62:	6083      	str	r3, [r0, #8]
 800df64:	68e3      	ldr	r3, [r4, #12]
 800df66:	60c3      	str	r3, [r0, #12]
 800df68:	2a24      	cmp	r2, #36	; 0x24
 800df6a:	bf01      	itttt	eq
 800df6c:	6923      	ldreq	r3, [r4, #16]
 800df6e:	6103      	streq	r3, [r0, #16]
 800df70:	6961      	ldreq	r1, [r4, #20]
 800df72:	6141      	streq	r1, [r0, #20]
 800df74:	bf19      	ittee	ne
 800df76:	f104 0210 	addne.w	r2, r4, #16
 800df7a:	f100 0310 	addne.w	r3, r0, #16
 800df7e:	f104 0218 	addeq.w	r2, r4, #24
 800df82:	f100 0318 	addeq.w	r3, r0, #24
 800df86:	e7de      	b.n	800df46 <_realloc_r+0x2ea>
 800df88:	4603      	mov	r3, r0
 800df8a:	4622      	mov	r2, r4
 800df8c:	e7db      	b.n	800df46 <_realloc_r+0x2ea>
 800df8e:	4621      	mov	r1, r4
 800df90:	f7ff fdfa 	bl	800db88 <memmove>
 800df94:	e7dd      	b.n	800df52 <_realloc_r+0x2f6>
 800df96:	4637      	mov	r7, r6
 800df98:	e6c2      	b.n	800dd20 <_realloc_r+0xc4>
 800df9a:	4317      	orrs	r7, r2
 800df9c:	f8c9 7004 	str.w	r7, [r9, #4]
 800dfa0:	685a      	ldr	r2, [r3, #4]
 800dfa2:	f042 0201 	orr.w	r2, r2, #1
 800dfa6:	605a      	str	r2, [r3, #4]
 800dfa8:	e6d6      	b.n	800dd58 <_realloc_r+0xfc>
 800dfaa:	bf00      	nop

0800dfac <_sbrk_r>:
 800dfac:	b538      	push	{r3, r4, r5, lr}
 800dfae:	4c06      	ldr	r4, [pc, #24]	; (800dfc8 <_sbrk_r+0x1c>)
 800dfb0:	2300      	movs	r3, #0
 800dfb2:	4605      	mov	r5, r0
 800dfb4:	4608      	mov	r0, r1
 800dfb6:	6023      	str	r3, [r4, #0]
 800dfb8:	f7fc f85e 	bl	800a078 <_sbrk>
 800dfbc:	1c43      	adds	r3, r0, #1
 800dfbe:	d102      	bne.n	800dfc6 <_sbrk_r+0x1a>
 800dfc0:	6823      	ldr	r3, [r4, #0]
 800dfc2:	b103      	cbz	r3, 800dfc6 <_sbrk_r+0x1a>
 800dfc4:	602b      	str	r3, [r5, #0]
 800dfc6:	bd38      	pop	{r3, r4, r5, pc}
 800dfc8:	20000a88 	.word	0x20000a88

0800dfcc <_raise_r>:
 800dfcc:	291f      	cmp	r1, #31
 800dfce:	b538      	push	{r3, r4, r5, lr}
 800dfd0:	4604      	mov	r4, r0
 800dfd2:	460d      	mov	r5, r1
 800dfd4:	d904      	bls.n	800dfe0 <_raise_r+0x14>
 800dfd6:	2316      	movs	r3, #22
 800dfd8:	6003      	str	r3, [r0, #0]
 800dfda:	f04f 30ff 	mov.w	r0, #4294967295
 800dfde:	bd38      	pop	{r3, r4, r5, pc}
 800dfe0:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
 800dfe4:	b112      	cbz	r2, 800dfec <_raise_r+0x20>
 800dfe6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800dfea:	b94b      	cbnz	r3, 800e000 <_raise_r+0x34>
 800dfec:	4620      	mov	r0, r4
 800dfee:	f000 f831 	bl	800e054 <_getpid_r>
 800dff2:	462a      	mov	r2, r5
 800dff4:	4601      	mov	r1, r0
 800dff6:	4620      	mov	r0, r4
 800dff8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800dffc:	f000 b818 	b.w	800e030 <_kill_r>
 800e000:	2b01      	cmp	r3, #1
 800e002:	d00a      	beq.n	800e01a <_raise_r+0x4e>
 800e004:	1c59      	adds	r1, r3, #1
 800e006:	d103      	bne.n	800e010 <_raise_r+0x44>
 800e008:	2316      	movs	r3, #22
 800e00a:	6003      	str	r3, [r0, #0]
 800e00c:	2001      	movs	r0, #1
 800e00e:	e7e6      	b.n	800dfde <_raise_r+0x12>
 800e010:	2400      	movs	r4, #0
 800e012:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800e016:	4628      	mov	r0, r5
 800e018:	4798      	blx	r3
 800e01a:	2000      	movs	r0, #0
 800e01c:	e7df      	b.n	800dfde <_raise_r+0x12>
	...

0800e020 <raise>:
 800e020:	4b02      	ldr	r3, [pc, #8]	; (800e02c <raise+0xc>)
 800e022:	4601      	mov	r1, r0
 800e024:	6818      	ldr	r0, [r3, #0]
 800e026:	f7ff bfd1 	b.w	800dfcc <_raise_r>
 800e02a:	bf00      	nop
 800e02c:	20000014 	.word	0x20000014

0800e030 <_kill_r>:
 800e030:	b538      	push	{r3, r4, r5, lr}
 800e032:	4c07      	ldr	r4, [pc, #28]	; (800e050 <_kill_r+0x20>)
 800e034:	2300      	movs	r3, #0
 800e036:	4605      	mov	r5, r0
 800e038:	4608      	mov	r0, r1
 800e03a:	4611      	mov	r1, r2
 800e03c:	6023      	str	r3, [r4, #0]
 800e03e:	f7fb ff93 	bl	8009f68 <_kill>
 800e042:	1c43      	adds	r3, r0, #1
 800e044:	d102      	bne.n	800e04c <_kill_r+0x1c>
 800e046:	6823      	ldr	r3, [r4, #0]
 800e048:	b103      	cbz	r3, 800e04c <_kill_r+0x1c>
 800e04a:	602b      	str	r3, [r5, #0]
 800e04c:	bd38      	pop	{r3, r4, r5, pc}
 800e04e:	bf00      	nop
 800e050:	20000a88 	.word	0x20000a88

0800e054 <_getpid_r>:
 800e054:	f7fb bf80 	b.w	8009f58 <_getpid>

0800e058 <sprintf>:
 800e058:	b40e      	push	{r1, r2, r3}
 800e05a:	b500      	push	{lr}
 800e05c:	b09c      	sub	sp, #112	; 0x70
 800e05e:	ab1d      	add	r3, sp, #116	; 0x74
 800e060:	9002      	str	r0, [sp, #8]
 800e062:	9006      	str	r0, [sp, #24]
 800e064:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800e068:	4809      	ldr	r0, [pc, #36]	; (800e090 <sprintf+0x38>)
 800e06a:	9107      	str	r1, [sp, #28]
 800e06c:	9104      	str	r1, [sp, #16]
 800e06e:	4909      	ldr	r1, [pc, #36]	; (800e094 <sprintf+0x3c>)
 800e070:	f853 2b04 	ldr.w	r2, [r3], #4
 800e074:	9105      	str	r1, [sp, #20]
 800e076:	6800      	ldr	r0, [r0, #0]
 800e078:	9301      	str	r3, [sp, #4]
 800e07a:	a902      	add	r1, sp, #8
 800e07c:	f000 f820 	bl	800e0c0 <_svfprintf_r>
 800e080:	9b02      	ldr	r3, [sp, #8]
 800e082:	2200      	movs	r2, #0
 800e084:	701a      	strb	r2, [r3, #0]
 800e086:	b01c      	add	sp, #112	; 0x70
 800e088:	f85d eb04 	ldr.w	lr, [sp], #4
 800e08c:	b003      	add	sp, #12
 800e08e:	4770      	bx	lr
 800e090:	20000014 	.word	0x20000014
 800e094:	ffff0208 	.word	0xffff0208

0800e098 <strncmp>:
 800e098:	b510      	push	{r4, lr}
 800e09a:	b16a      	cbz	r2, 800e0b8 <strncmp+0x20>
 800e09c:	3901      	subs	r1, #1
 800e09e:	1884      	adds	r4, r0, r2
 800e0a0:	f810 3b01 	ldrb.w	r3, [r0], #1
 800e0a4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800e0a8:	4293      	cmp	r3, r2
 800e0aa:	d103      	bne.n	800e0b4 <strncmp+0x1c>
 800e0ac:	42a0      	cmp	r0, r4
 800e0ae:	d001      	beq.n	800e0b4 <strncmp+0x1c>
 800e0b0:	2b00      	cmp	r3, #0
 800e0b2:	d1f5      	bne.n	800e0a0 <strncmp+0x8>
 800e0b4:	1a98      	subs	r0, r3, r2
 800e0b6:	bd10      	pop	{r4, pc}
 800e0b8:	4610      	mov	r0, r2
 800e0ba:	e7fc      	b.n	800e0b6 <strncmp+0x1e>
 800e0bc:	0000      	movs	r0, r0
	...

0800e0c0 <_svfprintf_r>:
 800e0c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0c4:	b0d3      	sub	sp, #332	; 0x14c
 800e0c6:	4688      	mov	r8, r1
 800e0c8:	4693      	mov	fp, r2
 800e0ca:	461e      	mov	r6, r3
 800e0cc:	9003      	str	r0, [sp, #12]
 800e0ce:	f002 fb7f 	bl	80107d0 <_localeconv_r>
 800e0d2:	6803      	ldr	r3, [r0, #0]
 800e0d4:	9316      	str	r3, [sp, #88]	; 0x58
 800e0d6:	4618      	mov	r0, r3
 800e0d8:	f7f8 fe4c 	bl	8006d74 <strlen>
 800e0dc:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 800e0e0:	900d      	str	r0, [sp, #52]	; 0x34
 800e0e2:	0618      	lsls	r0, r3, #24
 800e0e4:	d518      	bpl.n	800e118 <_svfprintf_r+0x58>
 800e0e6:	f8d8 3010 	ldr.w	r3, [r8, #16]
 800e0ea:	b9ab      	cbnz	r3, 800e118 <_svfprintf_r+0x58>
 800e0ec:	2140      	movs	r1, #64	; 0x40
 800e0ee:	9803      	ldr	r0, [sp, #12]
 800e0f0:	f7ff fafa 	bl	800d6e8 <_malloc_r>
 800e0f4:	f8c8 0000 	str.w	r0, [r8]
 800e0f8:	f8c8 0010 	str.w	r0, [r8, #16]
 800e0fc:	b948      	cbnz	r0, 800e112 <_svfprintf_r+0x52>
 800e0fe:	9a03      	ldr	r2, [sp, #12]
 800e100:	230c      	movs	r3, #12
 800e102:	6013      	str	r3, [r2, #0]
 800e104:	f04f 33ff 	mov.w	r3, #4294967295
 800e108:	930e      	str	r3, [sp, #56]	; 0x38
 800e10a:	980e      	ldr	r0, [sp, #56]	; 0x38
 800e10c:	b053      	add	sp, #332	; 0x14c
 800e10e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e112:	2340      	movs	r3, #64	; 0x40
 800e114:	f8c8 3014 	str.w	r3, [r8, #20]
 800e118:	ed9f 7bc9 	vldr	d7, [pc, #804]	; 800e440 <_svfprintf_r+0x380>
 800e11c:	2300      	movs	r3, #0
 800e11e:	e9cd 3327 	strd	r3, r3, [sp, #156]	; 0x9c
 800e122:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
 800e126:	e9cd 3317 	strd	r3, r3, [sp, #92]	; 0x5c
 800e12a:	ac29      	add	r4, sp, #164	; 0xa4
 800e12c:	9426      	str	r4, [sp, #152]	; 0x98
 800e12e:	9304      	str	r3, [sp, #16]
 800e130:	9309      	str	r3, [sp, #36]	; 0x24
 800e132:	9312      	str	r3, [sp, #72]	; 0x48
 800e134:	9319      	str	r3, [sp, #100]	; 0x64
 800e136:	930e      	str	r3, [sp, #56]	; 0x38
 800e138:	465d      	mov	r5, fp
 800e13a:	462b      	mov	r3, r5
 800e13c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e140:	b112      	cbz	r2, 800e148 <_svfprintf_r+0x88>
 800e142:	2a25      	cmp	r2, #37	; 0x25
 800e144:	f040 80e4 	bne.w	800e310 <_svfprintf_r+0x250>
 800e148:	ebb5 070b 	subs.w	r7, r5, fp
 800e14c:	d00e      	beq.n	800e16c <_svfprintf_r+0xac>
 800e14e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800e150:	443b      	add	r3, r7
 800e152:	9328      	str	r3, [sp, #160]	; 0xa0
 800e154:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800e156:	3301      	adds	r3, #1
 800e158:	2b07      	cmp	r3, #7
 800e15a:	e9c4 b700 	strd	fp, r7, [r4]
 800e15e:	9327      	str	r3, [sp, #156]	; 0x9c
 800e160:	f300 80d8 	bgt.w	800e314 <_svfprintf_r+0x254>
 800e164:	3408      	adds	r4, #8
 800e166:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e168:	443b      	add	r3, r7
 800e16a:	930e      	str	r3, [sp, #56]	; 0x38
 800e16c:	782b      	ldrb	r3, [r5, #0]
 800e16e:	2b00      	cmp	r3, #0
 800e170:	f001 81b4 	beq.w	800f4dc <_svfprintf_r+0x141c>
 800e174:	1c6b      	adds	r3, r5, #1
 800e176:	930c      	str	r3, [sp, #48]	; 0x30
 800e178:	2300      	movs	r3, #0
 800e17a:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 800e17e:	f04f 35ff 	mov.w	r5, #4294967295
 800e182:	930f      	str	r3, [sp, #60]	; 0x3c
 800e184:	469a      	mov	sl, r3
 800e186:	270a      	movs	r7, #10
 800e188:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e18a:	781b      	ldrb	r3, [r3, #0]
 800e18c:	9306      	str	r3, [sp, #24]
 800e18e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e190:	3301      	adds	r3, #1
 800e192:	930c      	str	r3, [sp, #48]	; 0x30
 800e194:	9b06      	ldr	r3, [sp, #24]
 800e196:	3b20      	subs	r3, #32
 800e198:	2b5a      	cmp	r3, #90	; 0x5a
 800e19a:	f200 8624 	bhi.w	800ede6 <_svfprintf_r+0xd26>
 800e19e:	a201      	add	r2, pc, #4	; (adr r2, 800e1a4 <_svfprintf_r+0xe4>)
 800e1a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e1a4:	0800e3a7 	.word	0x0800e3a7
 800e1a8:	0800ede7 	.word	0x0800ede7
 800e1ac:	0800ede7 	.word	0x0800ede7
 800e1b0:	0800e3b9 	.word	0x0800e3b9
 800e1b4:	0800ede7 	.word	0x0800ede7
 800e1b8:	0800ede7 	.word	0x0800ede7
 800e1bc:	0800ede7 	.word	0x0800ede7
 800e1c0:	0800e36d 	.word	0x0800e36d
 800e1c4:	0800ede7 	.word	0x0800ede7
 800e1c8:	0800ede7 	.word	0x0800ede7
 800e1cc:	0800e3bf 	.word	0x0800e3bf
 800e1d0:	0800e3d7 	.word	0x0800e3d7
 800e1d4:	0800ede7 	.word	0x0800ede7
 800e1d8:	0800e3d1 	.word	0x0800e3d1
 800e1dc:	0800e3db 	.word	0x0800e3db
 800e1e0:	0800ede7 	.word	0x0800ede7
 800e1e4:	0800e40f 	.word	0x0800e40f
 800e1e8:	0800e415 	.word	0x0800e415
 800e1ec:	0800e415 	.word	0x0800e415
 800e1f0:	0800e415 	.word	0x0800e415
 800e1f4:	0800e415 	.word	0x0800e415
 800e1f8:	0800e415 	.word	0x0800e415
 800e1fc:	0800e415 	.word	0x0800e415
 800e200:	0800e415 	.word	0x0800e415
 800e204:	0800e415 	.word	0x0800e415
 800e208:	0800e415 	.word	0x0800e415
 800e20c:	0800ede7 	.word	0x0800ede7
 800e210:	0800ede7 	.word	0x0800ede7
 800e214:	0800ede7 	.word	0x0800ede7
 800e218:	0800ede7 	.word	0x0800ede7
 800e21c:	0800ede7 	.word	0x0800ede7
 800e220:	0800ede7 	.word	0x0800ede7
 800e224:	0800ede7 	.word	0x0800ede7
 800e228:	0800e517 	.word	0x0800e517
 800e22c:	0800ede7 	.word	0x0800ede7
 800e230:	0800e481 	.word	0x0800e481
 800e234:	0800e4a3 	.word	0x0800e4a3
 800e238:	0800e517 	.word	0x0800e517
 800e23c:	0800e517 	.word	0x0800e517
 800e240:	0800e517 	.word	0x0800e517
 800e244:	0800ede7 	.word	0x0800ede7
 800e248:	0800ede7 	.word	0x0800ede7
 800e24c:	0800ede7 	.word	0x0800ede7
 800e250:	0800ede7 	.word	0x0800ede7
 800e254:	0800e435 	.word	0x0800e435
 800e258:	0800ede7 	.word	0x0800ede7
 800e25c:	0800ede7 	.word	0x0800ede7
 800e260:	0800e9e9 	.word	0x0800e9e9
 800e264:	0800ede7 	.word	0x0800ede7
 800e268:	0800ede7 	.word	0x0800ede7
 800e26c:	0800ede7 	.word	0x0800ede7
 800e270:	0800ea75 	.word	0x0800ea75
 800e274:	0800ede7 	.word	0x0800ede7
 800e278:	0800ec57 	.word	0x0800ec57
 800e27c:	0800ede7 	.word	0x0800ede7
 800e280:	0800ede7 	.word	0x0800ede7
 800e284:	0800e32d 	.word	0x0800e32d
 800e288:	0800ede7 	.word	0x0800ede7
 800e28c:	0800ede7 	.word	0x0800ede7
 800e290:	0800ede7 	.word	0x0800ede7
 800e294:	0800ede7 	.word	0x0800ede7
 800e298:	0800ede7 	.word	0x0800ede7
 800e29c:	0800ede7 	.word	0x0800ede7
 800e2a0:	0800ede7 	.word	0x0800ede7
 800e2a4:	0800ede7 	.word	0x0800ede7
 800e2a8:	0800e517 	.word	0x0800e517
 800e2ac:	0800ede7 	.word	0x0800ede7
 800e2b0:	0800e481 	.word	0x0800e481
 800e2b4:	0800e4a7 	.word	0x0800e4a7
 800e2b8:	0800e517 	.word	0x0800e517
 800e2bc:	0800e517 	.word	0x0800e517
 800e2c0:	0800e517 	.word	0x0800e517
 800e2c4:	0800e44d 	.word	0x0800e44d
 800e2c8:	0800e4a7 	.word	0x0800e4a7
 800e2cc:	0800e475 	.word	0x0800e475
 800e2d0:	0800ede7 	.word	0x0800ede7
 800e2d4:	0800e467 	.word	0x0800e467
 800e2d8:	0800ede7 	.word	0x0800ede7
 800e2dc:	0800e9a3 	.word	0x0800e9a3
 800e2e0:	0800e9ed 	.word	0x0800e9ed
 800e2e4:	0800ea55 	.word	0x0800ea55
 800e2e8:	0800e475 	.word	0x0800e475
 800e2ec:	0800ede7 	.word	0x0800ede7
 800e2f0:	0800ea75 	.word	0x0800ea75
 800e2f4:	0800e189 	.word	0x0800e189
 800e2f8:	0800ec5b 	.word	0x0800ec5b
 800e2fc:	0800ede7 	.word	0x0800ede7
 800e300:	0800ede7 	.word	0x0800ede7
 800e304:	0800ec99 	.word	0x0800ec99
 800e308:	0800ede7 	.word	0x0800ede7
 800e30c:	0800e189 	.word	0x0800e189
 800e310:	461d      	mov	r5, r3
 800e312:	e712      	b.n	800e13a <_svfprintf_r+0x7a>
 800e314:	aa26      	add	r2, sp, #152	; 0x98
 800e316:	4641      	mov	r1, r8
 800e318:	9803      	ldr	r0, [sp, #12]
 800e31a:	f002 fe11 	bl	8010f40 <__ssprint_r>
 800e31e:	2800      	cmp	r0, #0
 800e320:	f040 8166 	bne.w	800e5f0 <_svfprintf_r+0x530>
 800e324:	ac29      	add	r4, sp, #164	; 0xa4
 800e326:	e71e      	b.n	800e166 <_svfprintf_r+0xa6>
 800e328:	461e      	mov	r6, r3
 800e32a:	e72d      	b.n	800e188 <_svfprintf_r+0xc8>
 800e32c:	4b46      	ldr	r3, [pc, #280]	; (800e448 <_svfprintf_r+0x388>)
 800e32e:	9318      	str	r3, [sp, #96]	; 0x60
 800e330:	f01a 0f20 	tst.w	sl, #32
 800e334:	f000 84b3 	beq.w	800ec9e <_svfprintf_r+0xbde>
 800e338:	3607      	adds	r6, #7
 800e33a:	f026 0607 	bic.w	r6, r6, #7
 800e33e:	f106 0308 	add.w	r3, r6, #8
 800e342:	e9d6 6700 	ldrd	r6, r7, [r6]
 800e346:	9308      	str	r3, [sp, #32]
 800e348:	f01a 0f01 	tst.w	sl, #1
 800e34c:	d00a      	beq.n	800e364 <_svfprintf_r+0x2a4>
 800e34e:	ea56 0307 	orrs.w	r3, r6, r7
 800e352:	d007      	beq.n	800e364 <_svfprintf_r+0x2a4>
 800e354:	2330      	movs	r3, #48	; 0x30
 800e356:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 800e35a:	9b06      	ldr	r3, [sp, #24]
 800e35c:	f88d 307d 	strb.w	r3, [sp, #125]	; 0x7d
 800e360:	f04a 0a02 	orr.w	sl, sl, #2
 800e364:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 800e368:	2302      	movs	r3, #2
 800e36a:	e34d      	b.n	800ea08 <_svfprintf_r+0x948>
 800e36c:	9803      	ldr	r0, [sp, #12]
 800e36e:	f002 fa2f 	bl	80107d0 <_localeconv_r>
 800e372:	6843      	ldr	r3, [r0, #4]
 800e374:	9319      	str	r3, [sp, #100]	; 0x64
 800e376:	4618      	mov	r0, r3
 800e378:	f7f8 fcfc 	bl	8006d74 <strlen>
 800e37c:	9012      	str	r0, [sp, #72]	; 0x48
 800e37e:	9803      	ldr	r0, [sp, #12]
 800e380:	f002 fa26 	bl	80107d0 <_localeconv_r>
 800e384:	6883      	ldr	r3, [r0, #8]
 800e386:	9309      	str	r3, [sp, #36]	; 0x24
 800e388:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800e38a:	2b00      	cmp	r3, #0
 800e38c:	f43f aefc 	beq.w	800e188 <_svfprintf_r+0xc8>
 800e390:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e392:	2b00      	cmp	r3, #0
 800e394:	f43f aef8 	beq.w	800e188 <_svfprintf_r+0xc8>
 800e398:	781b      	ldrb	r3, [r3, #0]
 800e39a:	2b00      	cmp	r3, #0
 800e39c:	f43f aef4 	beq.w	800e188 <_svfprintf_r+0xc8>
 800e3a0:	f44a 6a80 	orr.w	sl, sl, #1024	; 0x400
 800e3a4:	e6f0      	b.n	800e188 <_svfprintf_r+0xc8>
 800e3a6:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 800e3aa:	2b00      	cmp	r3, #0
 800e3ac:	f47f aeec 	bne.w	800e188 <_svfprintf_r+0xc8>
 800e3b0:	2320      	movs	r3, #32
 800e3b2:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 800e3b6:	e6e7      	b.n	800e188 <_svfprintf_r+0xc8>
 800e3b8:	f04a 0a01 	orr.w	sl, sl, #1
 800e3bc:	e6e4      	b.n	800e188 <_svfprintf_r+0xc8>
 800e3be:	6832      	ldr	r2, [r6, #0]
 800e3c0:	920f      	str	r2, [sp, #60]	; 0x3c
 800e3c2:	2a00      	cmp	r2, #0
 800e3c4:	f106 0304 	add.w	r3, r6, #4
 800e3c8:	daae      	bge.n	800e328 <_svfprintf_r+0x268>
 800e3ca:	4252      	negs	r2, r2
 800e3cc:	920f      	str	r2, [sp, #60]	; 0x3c
 800e3ce:	461e      	mov	r6, r3
 800e3d0:	f04a 0a04 	orr.w	sl, sl, #4
 800e3d4:	e6d8      	b.n	800e188 <_svfprintf_r+0xc8>
 800e3d6:	232b      	movs	r3, #43	; 0x2b
 800e3d8:	e7eb      	b.n	800e3b2 <_svfprintf_r+0x2f2>
 800e3da:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800e3dc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e3de:	7812      	ldrb	r2, [r2, #0]
 800e3e0:	9206      	str	r2, [sp, #24]
 800e3e2:	2a2a      	cmp	r2, #42	; 0x2a
 800e3e4:	f103 0301 	add.w	r3, r3, #1
 800e3e8:	d10f      	bne.n	800e40a <_svfprintf_r+0x34a>
 800e3ea:	6835      	ldr	r5, [r6, #0]
 800e3ec:	930c      	str	r3, [sp, #48]	; 0x30
 800e3ee:	ea45 75e5 	orr.w	r5, r5, r5, asr #31
 800e3f2:	3604      	adds	r6, #4
 800e3f4:	e6c8      	b.n	800e188 <_svfprintf_r+0xc8>
 800e3f6:	fb07 2505 	mla	r5, r7, r5, r2
 800e3fa:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e3fe:	9206      	str	r2, [sp, #24]
 800e400:	9a06      	ldr	r2, [sp, #24]
 800e402:	3a30      	subs	r2, #48	; 0x30
 800e404:	2a09      	cmp	r2, #9
 800e406:	d9f6      	bls.n	800e3f6 <_svfprintf_r+0x336>
 800e408:	e6c3      	b.n	800e192 <_svfprintf_r+0xd2>
 800e40a:	2500      	movs	r5, #0
 800e40c:	e7f8      	b.n	800e400 <_svfprintf_r+0x340>
 800e40e:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
 800e412:	e6b9      	b.n	800e188 <_svfprintf_r+0xc8>
 800e414:	2200      	movs	r2, #0
 800e416:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e418:	920f      	str	r2, [sp, #60]	; 0x3c
 800e41a:	9a06      	ldr	r2, [sp, #24]
 800e41c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800e41e:	3a30      	subs	r2, #48	; 0x30
 800e420:	fb07 2201 	mla	r2, r7, r1, r2
 800e424:	920f      	str	r2, [sp, #60]	; 0x3c
 800e426:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e42a:	9206      	str	r2, [sp, #24]
 800e42c:	3a30      	subs	r2, #48	; 0x30
 800e42e:	2a09      	cmp	r2, #9
 800e430:	d9f3      	bls.n	800e41a <_svfprintf_r+0x35a>
 800e432:	e6ae      	b.n	800e192 <_svfprintf_r+0xd2>
 800e434:	f04a 0a08 	orr.w	sl, sl, #8
 800e438:	e6a6      	b.n	800e188 <_svfprintf_r+0xc8>
 800e43a:	bf00      	nop
 800e43c:	f3af 8000 	nop.w
	...
 800e448:	080125ed 	.word	0x080125ed
 800e44c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e44e:	781b      	ldrb	r3, [r3, #0]
 800e450:	2b68      	cmp	r3, #104	; 0x68
 800e452:	bf01      	itttt	eq
 800e454:	9b0c      	ldreq	r3, [sp, #48]	; 0x30
 800e456:	3301      	addeq	r3, #1
 800e458:	930c      	streq	r3, [sp, #48]	; 0x30
 800e45a:	f44a 7a00 	orreq.w	sl, sl, #512	; 0x200
 800e45e:	bf18      	it	ne
 800e460:	f04a 0a40 	orrne.w	sl, sl, #64	; 0x40
 800e464:	e690      	b.n	800e188 <_svfprintf_r+0xc8>
 800e466:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e468:	781b      	ldrb	r3, [r3, #0]
 800e46a:	2b6c      	cmp	r3, #108	; 0x6c
 800e46c:	d105      	bne.n	800e47a <_svfprintf_r+0x3ba>
 800e46e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e470:	3301      	adds	r3, #1
 800e472:	930c      	str	r3, [sp, #48]	; 0x30
 800e474:	f04a 0a20 	orr.w	sl, sl, #32
 800e478:	e686      	b.n	800e188 <_svfprintf_r+0xc8>
 800e47a:	f04a 0a10 	orr.w	sl, sl, #16
 800e47e:	e683      	b.n	800e188 <_svfprintf_r+0xc8>
 800e480:	1d33      	adds	r3, r6, #4
 800e482:	9308      	str	r3, [sp, #32]
 800e484:	2000      	movs	r0, #0
 800e486:	6833      	ldr	r3, [r6, #0]
 800e488:	f88d 30e4 	strb.w	r3, [sp, #228]	; 0xe4
 800e48c:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
 800e490:	4681      	mov	r9, r0
 800e492:	2501      	movs	r5, #1
 800e494:	9010      	str	r0, [sp, #64]	; 0x40
 800e496:	4607      	mov	r7, r0
 800e498:	9007      	str	r0, [sp, #28]
 800e49a:	4606      	mov	r6, r0
 800e49c:	f10d 0be4 	add.w	fp, sp, #228	; 0xe4
 800e4a0:	e301      	b.n	800eaa6 <_svfprintf_r+0x9e6>
 800e4a2:	f04a 0a10 	orr.w	sl, sl, #16
 800e4a6:	f01a 0f20 	tst.w	sl, #32
 800e4aa:	d021      	beq.n	800e4f0 <_svfprintf_r+0x430>
 800e4ac:	3607      	adds	r6, #7
 800e4ae:	f026 0607 	bic.w	r6, r6, #7
 800e4b2:	f106 0308 	add.w	r3, r6, #8
 800e4b6:	e9d6 6700 	ldrd	r6, r7, [r6]
 800e4ba:	9308      	str	r3, [sp, #32]
 800e4bc:	2e00      	cmp	r6, #0
 800e4be:	f177 0300 	sbcs.w	r3, r7, #0
 800e4c2:	da06      	bge.n	800e4d2 <_svfprintf_r+0x412>
 800e4c4:	4276      	negs	r6, r6
 800e4c6:	f04f 032d 	mov.w	r3, #45	; 0x2d
 800e4ca:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 800e4ce:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 800e4d2:	1c6b      	adds	r3, r5, #1
 800e4d4:	f040 83f6 	bne.w	800ecc4 <_svfprintf_r+0xc04>
 800e4d8:	2f00      	cmp	r7, #0
 800e4da:	bf08      	it	eq
 800e4dc:	2e0a      	cmpeq	r6, #10
 800e4de:	f080 8427 	bcs.w	800ed30 <_svfprintf_r+0xc70>
 800e4e2:	f50d 7ba4 	add.w	fp, sp, #328	; 0x148
 800e4e6:	3630      	adds	r6, #48	; 0x30
 800e4e8:	f80b 6d01 	strb.w	r6, [fp, #-1]!
 800e4ec:	f000 bc0d 	b.w	800ed0a <_svfprintf_r+0xc4a>
 800e4f0:	1d33      	adds	r3, r6, #4
 800e4f2:	f01a 0f10 	tst.w	sl, #16
 800e4f6:	9308      	str	r3, [sp, #32]
 800e4f8:	d002      	beq.n	800e500 <_svfprintf_r+0x440>
 800e4fa:	6836      	ldr	r6, [r6, #0]
 800e4fc:	17f7      	asrs	r7, r6, #31
 800e4fe:	e7dd      	b.n	800e4bc <_svfprintf_r+0x3fc>
 800e500:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800e504:	6836      	ldr	r6, [r6, #0]
 800e506:	d001      	beq.n	800e50c <_svfprintf_r+0x44c>
 800e508:	b236      	sxth	r6, r6
 800e50a:	e7f7      	b.n	800e4fc <_svfprintf_r+0x43c>
 800e50c:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800e510:	bf18      	it	ne
 800e512:	b276      	sxtbne	r6, r6
 800e514:	e7f2      	b.n	800e4fc <_svfprintf_r+0x43c>
 800e516:	3607      	adds	r6, #7
 800e518:	f026 0607 	bic.w	r6, r6, #7
 800e51c:	ed96 7b00 	vldr	d7, [r6]
 800e520:	f106 0308 	add.w	r3, r6, #8
 800e524:	ed8d 7b0a 	vstr	d7, [sp, #40]	; 0x28
 800e528:	9308      	str	r3, [sp, #32]
 800e52a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e52c:	931a      	str	r3, [sp, #104]	; 0x68
 800e52e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e530:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800e534:	931b      	str	r3, [sp, #108]	; 0x6c
 800e536:	f04f 32ff 	mov.w	r2, #4294967295
 800e53a:	4bb2      	ldr	r3, [pc, #712]	; (800e804 <_svfprintf_r+0x744>)
 800e53c:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
 800e540:	f7f9 f876 	bl	8007630 <__aeabi_dcmpun>
 800e544:	bb00      	cbnz	r0, 800e588 <_svfprintf_r+0x4c8>
 800e546:	f04f 32ff 	mov.w	r2, #4294967295
 800e54a:	4bae      	ldr	r3, [pc, #696]	; (800e804 <_svfprintf_r+0x744>)
 800e54c:	e9dd 011a 	ldrd	r0, r1, [sp, #104]	; 0x68
 800e550:	f7f9 f850 	bl	80075f4 <__aeabi_dcmple>
 800e554:	b9c0      	cbnz	r0, 800e588 <_svfprintf_r+0x4c8>
 800e556:	2200      	movs	r2, #0
 800e558:	2300      	movs	r3, #0
 800e55a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800e55e:	f7f9 f83f 	bl	80075e0 <__aeabi_dcmplt>
 800e562:	b110      	cbz	r0, 800e56a <_svfprintf_r+0x4aa>
 800e564:	232d      	movs	r3, #45	; 0x2d
 800e566:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 800e56a:	4aa7      	ldr	r2, [pc, #668]	; (800e808 <_svfprintf_r+0x748>)
 800e56c:	4ba7      	ldr	r3, [pc, #668]	; (800e80c <_svfprintf_r+0x74c>)
 800e56e:	9906      	ldr	r1, [sp, #24]
 800e570:	f02a 0a80 	bic.w	sl, sl, #128	; 0x80
 800e574:	2947      	cmp	r1, #71	; 0x47
 800e576:	bfcc      	ite	gt
 800e578:	4693      	movgt	fp, r2
 800e57a:	469b      	movle	fp, r3
 800e57c:	f04f 0900 	mov.w	r9, #0
 800e580:	2503      	movs	r5, #3
 800e582:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800e586:	e3c6      	b.n	800ed16 <_svfprintf_r+0xc56>
 800e588:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800e58c:	4610      	mov	r0, r2
 800e58e:	4619      	mov	r1, r3
 800e590:	f7f9 f84e 	bl	8007630 <__aeabi_dcmpun>
 800e594:	4681      	mov	r9, r0
 800e596:	b140      	cbz	r0, 800e5aa <_svfprintf_r+0x4ea>
 800e598:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e59a:	4a9d      	ldr	r2, [pc, #628]	; (800e810 <_svfprintf_r+0x750>)
 800e59c:	2b00      	cmp	r3, #0
 800e59e:	bfbc      	itt	lt
 800e5a0:	232d      	movlt	r3, #45	; 0x2d
 800e5a2:	f88d 307b 	strblt.w	r3, [sp, #123]	; 0x7b
 800e5a6:	4b9b      	ldr	r3, [pc, #620]	; (800e814 <_svfprintf_r+0x754>)
 800e5a8:	e7e1      	b.n	800e56e <_svfprintf_r+0x4ae>
 800e5aa:	9b06      	ldr	r3, [sp, #24]
 800e5ac:	f023 0320 	bic.w	r3, r3, #32
 800e5b0:	2b41      	cmp	r3, #65	; 0x41
 800e5b2:	9307      	str	r3, [sp, #28]
 800e5b4:	d125      	bne.n	800e602 <_svfprintf_r+0x542>
 800e5b6:	2330      	movs	r3, #48	; 0x30
 800e5b8:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 800e5bc:	9b06      	ldr	r3, [sp, #24]
 800e5be:	2b61      	cmp	r3, #97	; 0x61
 800e5c0:	bf14      	ite	ne
 800e5c2:	2358      	movne	r3, #88	; 0x58
 800e5c4:	2378      	moveq	r3, #120	; 0x78
 800e5c6:	2d63      	cmp	r5, #99	; 0x63
 800e5c8:	f88d 307d 	strb.w	r3, [sp, #125]	; 0x7d
 800e5cc:	f04a 0a02 	orr.w	sl, sl, #2
 800e5d0:	f340 8108 	ble.w	800e7e4 <_svfprintf_r+0x724>
 800e5d4:	1c69      	adds	r1, r5, #1
 800e5d6:	9803      	ldr	r0, [sp, #12]
 800e5d8:	f7ff f886 	bl	800d6e8 <_malloc_r>
 800e5dc:	4683      	mov	fp, r0
 800e5de:	2800      	cmp	r0, #0
 800e5e0:	f040 8103 	bne.w	800e7ea <_svfprintf_r+0x72a>
 800e5e4:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 800e5e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e5ec:	f8a8 300c 	strh.w	r3, [r8, #12]
 800e5f0:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 800e5f4:	f013 0f40 	tst.w	r3, #64	; 0x40
 800e5f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e5fa:	bf18      	it	ne
 800e5fc:	f04f 33ff 	movne.w	r3, #4294967295
 800e600:	e582      	b.n	800e108 <_svfprintf_r+0x48>
 800e602:	1c69      	adds	r1, r5, #1
 800e604:	f000 80f3 	beq.w	800e7ee <_svfprintf_r+0x72e>
 800e608:	9b07      	ldr	r3, [sp, #28]
 800e60a:	2b47      	cmp	r3, #71	; 0x47
 800e60c:	d102      	bne.n	800e614 <_svfprintf_r+0x554>
 800e60e:	2d00      	cmp	r5, #0
 800e610:	f000 80ef 	beq.w	800e7f2 <_svfprintf_r+0x732>
 800e614:	f44a 7380 	orr.w	r3, sl, #256	; 0x100
 800e618:	9310      	str	r3, [sp, #64]	; 0x40
 800e61a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e61c:	2b00      	cmp	r3, #0
 800e61e:	f280 80eb 	bge.w	800e7f8 <_svfprintf_r+0x738>
 800e622:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e624:	9314      	str	r3, [sp, #80]	; 0x50
 800e626:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800e628:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 800e62c:	9315      	str	r3, [sp, #84]	; 0x54
 800e62e:	232d      	movs	r3, #45	; 0x2d
 800e630:	9313      	str	r3, [sp, #76]	; 0x4c
 800e632:	9b07      	ldr	r3, [sp, #28]
 800e634:	2b41      	cmp	r3, #65	; 0x41
 800e636:	f040 8105 	bne.w	800e844 <_svfprintf_r+0x784>
 800e63a:	a820      	add	r0, sp, #128	; 0x80
 800e63c:	ed9d 0b14 	vldr	d0, [sp, #80]	; 0x50
 800e640:	f002 fbf0 	bl	8010e24 <frexp>
 800e644:	2200      	movs	r2, #0
 800e646:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 800e64a:	ec51 0b10 	vmov	r0, r1, d0
 800e64e:	f7f8 fd55 	bl	80070fc <__aeabi_dmul>
 800e652:	2200      	movs	r2, #0
 800e654:	2300      	movs	r3, #0
 800e656:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800e65a:	f7f8 ffb7 	bl	80075cc <__aeabi_dcmpeq>
 800e65e:	b108      	cbz	r0, 800e664 <_svfprintf_r+0x5a4>
 800e660:	2301      	movs	r3, #1
 800e662:	9320      	str	r3, [sp, #128]	; 0x80
 800e664:	4f6c      	ldr	r7, [pc, #432]	; (800e818 <_svfprintf_r+0x758>)
 800e666:	4b6d      	ldr	r3, [pc, #436]	; (800e81c <_svfprintf_r+0x75c>)
 800e668:	9a06      	ldr	r2, [sp, #24]
 800e66a:	2a61      	cmp	r2, #97	; 0x61
 800e66c:	bf08      	it	eq
 800e66e:	461f      	moveq	r7, r3
 800e670:	9711      	str	r7, [sp, #68]	; 0x44
 800e672:	465e      	mov	r6, fp
 800e674:	1e6f      	subs	r7, r5, #1
 800e676:	2200      	movs	r2, #0
 800e678:	4b69      	ldr	r3, [pc, #420]	; (800e820 <_svfprintf_r+0x760>)
 800e67a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800e67e:	f7f8 fd3d 	bl	80070fc <__aeabi_dmul>
 800e682:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800e686:	f7f8 ffe9 	bl	800765c <__aeabi_d2iz>
 800e68a:	901c      	str	r0, [sp, #112]	; 0x70
 800e68c:	f7f8 fccc 	bl	8007028 <__aeabi_i2d>
 800e690:	4602      	mov	r2, r0
 800e692:	460b      	mov	r3, r1
 800e694:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800e698:	f7f8 fb78 	bl	8006d8c <__aeabi_dsub>
 800e69c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800e69e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e6a0:	971d      	str	r7, [sp, #116]	; 0x74
 800e6a2:	5c9b      	ldrb	r3, [r3, r2]
 800e6a4:	f806 3b01 	strb.w	r3, [r6], #1
 800e6a8:	1c7a      	adds	r2, r7, #1
 800e6aa:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800e6ae:	d006      	beq.n	800e6be <_svfprintf_r+0x5fe>
 800e6b0:	2200      	movs	r2, #0
 800e6b2:	2300      	movs	r3, #0
 800e6b4:	3f01      	subs	r7, #1
 800e6b6:	f7f8 ff89 	bl	80075cc <__aeabi_dcmpeq>
 800e6ba:	2800      	cmp	r0, #0
 800e6bc:	d0db      	beq.n	800e676 <_svfprintf_r+0x5b6>
 800e6be:	2200      	movs	r2, #0
 800e6c0:	4b58      	ldr	r3, [pc, #352]	; (800e824 <_svfprintf_r+0x764>)
 800e6c2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800e6c6:	f7f8 ffa9 	bl	800761c <__aeabi_dcmpgt>
 800e6ca:	b960      	cbnz	r0, 800e6e6 <_svfprintf_r+0x626>
 800e6cc:	2200      	movs	r2, #0
 800e6ce:	4b55      	ldr	r3, [pc, #340]	; (800e824 <_svfprintf_r+0x764>)
 800e6d0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800e6d4:	f7f8 ff7a 	bl	80075cc <__aeabi_dcmpeq>
 800e6d8:	2800      	cmp	r0, #0
 800e6da:	f000 80ae 	beq.w	800e83a <_svfprintf_r+0x77a>
 800e6de:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800e6e0:	07db      	lsls	r3, r3, #31
 800e6e2:	f140 80aa 	bpl.w	800e83a <_svfprintf_r+0x77a>
 800e6e6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800e6e8:	9624      	str	r6, [sp, #144]	; 0x90
 800e6ea:	7bd9      	ldrb	r1, [r3, #15]
 800e6ec:	2030      	movs	r0, #48	; 0x30
 800e6ee:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800e6f0:	1e53      	subs	r3, r2, #1
 800e6f2:	9324      	str	r3, [sp, #144]	; 0x90
 800e6f4:	f812 3c01 	ldrb.w	r3, [r2, #-1]
 800e6f8:	428b      	cmp	r3, r1
 800e6fa:	f000 8095 	beq.w	800e828 <_svfprintf_r+0x768>
 800e6fe:	2b39      	cmp	r3, #57	; 0x39
 800e700:	bf0b      	itete	eq
 800e702:	9b11      	ldreq	r3, [sp, #68]	; 0x44
 800e704:	3301      	addne	r3, #1
 800e706:	7a9b      	ldrbeq	r3, [r3, #10]
 800e708:	b2db      	uxtbne	r3, r3
 800e70a:	f802 3c01 	strb.w	r3, [r2, #-1]
 800e70e:	4633      	mov	r3, r6
 800e710:	eba3 030b 	sub.w	r3, r3, fp
 800e714:	9304      	str	r3, [sp, #16]
 800e716:	9b07      	ldr	r3, [sp, #28]
 800e718:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800e71a:	2b47      	cmp	r3, #71	; 0x47
 800e71c:	f040 80d7 	bne.w	800e8ce <_svfprintf_r+0x80e>
 800e720:	1cf7      	adds	r7, r6, #3
 800e722:	db02      	blt.n	800e72a <_svfprintf_r+0x66a>
 800e724:	42b5      	cmp	r5, r6
 800e726:	f280 80fd 	bge.w	800e924 <_svfprintf_r+0x864>
 800e72a:	9b06      	ldr	r3, [sp, #24]
 800e72c:	3b02      	subs	r3, #2
 800e72e:	9306      	str	r3, [sp, #24]
 800e730:	9906      	ldr	r1, [sp, #24]
 800e732:	f89d 2018 	ldrb.w	r2, [sp, #24]
 800e736:	f021 0120 	bic.w	r1, r1, #32
 800e73a:	2941      	cmp	r1, #65	; 0x41
 800e73c:	bf08      	it	eq
 800e73e:	320f      	addeq	r2, #15
 800e740:	f106 33ff 	add.w	r3, r6, #4294967295
 800e744:	bf06      	itte	eq
 800e746:	b2d2      	uxtbeq	r2, r2
 800e748:	2101      	moveq	r1, #1
 800e74a:	2100      	movne	r1, #0
 800e74c:	2b00      	cmp	r3, #0
 800e74e:	9320      	str	r3, [sp, #128]	; 0x80
 800e750:	bfb8      	it	lt
 800e752:	f1c6 0301 	rsblt	r3, r6, #1
 800e756:	f88d 2088 	strb.w	r2, [sp, #136]	; 0x88
 800e75a:	bfb4      	ite	lt
 800e75c:	222d      	movlt	r2, #45	; 0x2d
 800e75e:	222b      	movge	r2, #43	; 0x2b
 800e760:	2b09      	cmp	r3, #9
 800e762:	f88d 2089 	strb.w	r2, [sp, #137]	; 0x89
 800e766:	f340 80c9 	ble.w	800e8fc <_svfprintf_r+0x83c>
 800e76a:	f10d 0297 	add.w	r2, sp, #151	; 0x97
 800e76e:	250a      	movs	r5, #10
 800e770:	fb93 f0f5 	sdiv	r0, r3, r5
 800e774:	fb05 3310 	mls	r3, r5, r0, r3
 800e778:	3330      	adds	r3, #48	; 0x30
 800e77a:	2809      	cmp	r0, #9
 800e77c:	f802 3c01 	strb.w	r3, [r2, #-1]
 800e780:	f102 31ff 	add.w	r1, r2, #4294967295
 800e784:	4603      	mov	r3, r0
 800e786:	f300 80b2 	bgt.w	800e8ee <_svfprintf_r+0x82e>
 800e78a:	3330      	adds	r3, #48	; 0x30
 800e78c:	f801 3c01 	strb.w	r3, [r1, #-1]
 800e790:	3a02      	subs	r2, #2
 800e792:	f10d 038a 	add.w	r3, sp, #138	; 0x8a
 800e796:	f10d 0097 	add.w	r0, sp, #151	; 0x97
 800e79a:	4282      	cmp	r2, r0
 800e79c:	4619      	mov	r1, r3
 800e79e:	f0c0 80a8 	bcc.w	800e8f2 <_svfprintf_r+0x832>
 800e7a2:	9a04      	ldr	r2, [sp, #16]
 800e7a4:	ab22      	add	r3, sp, #136	; 0x88
 800e7a6:	1acb      	subs	r3, r1, r3
 800e7a8:	2a01      	cmp	r2, #1
 800e7aa:	9317      	str	r3, [sp, #92]	; 0x5c
 800e7ac:	eb03 0502 	add.w	r5, r3, r2
 800e7b0:	dc02      	bgt.n	800e7b8 <_svfprintf_r+0x6f8>
 800e7b2:	f01a 0f01 	tst.w	sl, #1
 800e7b6:	d001      	beq.n	800e7bc <_svfprintf_r+0x6fc>
 800e7b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e7ba:	441d      	add	r5, r3
 800e7bc:	f42a 6380 	bic.w	r3, sl, #1024	; 0x400
 800e7c0:	2700      	movs	r7, #0
 800e7c2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800e7c6:	9310      	str	r3, [sp, #64]	; 0x40
 800e7c8:	9707      	str	r7, [sp, #28]
 800e7ca:	463e      	mov	r6, r7
 800e7cc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800e7ce:	2b00      	cmp	r3, #0
 800e7d0:	f000 8315 	beq.w	800edfe <_svfprintf_r+0xd3e>
 800e7d4:	232d      	movs	r3, #45	; 0x2d
 800e7d6:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 800e7da:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 800e7de:	2300      	movs	r3, #0
 800e7e0:	9310      	str	r3, [sp, #64]	; 0x40
 800e7e2:	e160      	b.n	800eaa6 <_svfprintf_r+0x9e6>
 800e7e4:	f10d 0be4 	add.w	fp, sp, #228	; 0xe4
 800e7e8:	e714      	b.n	800e614 <_svfprintf_r+0x554>
 800e7ea:	4681      	mov	r9, r0
 800e7ec:	e712      	b.n	800e614 <_svfprintf_r+0x554>
 800e7ee:	2506      	movs	r5, #6
 800e7f0:	e710      	b.n	800e614 <_svfprintf_r+0x554>
 800e7f2:	46a9      	mov	r9, r5
 800e7f4:	2501      	movs	r5, #1
 800e7f6:	e70d      	b.n	800e614 <_svfprintf_r+0x554>
 800e7f8:	ed9d 7b0a 	vldr	d7, [sp, #40]	; 0x28
 800e7fc:	2300      	movs	r3, #0
 800e7fe:	ed8d 7b14 	vstr	d7, [sp, #80]	; 0x50
 800e802:	e715      	b.n	800e630 <_svfprintf_r+0x570>
 800e804:	7fefffff 	.word	0x7fefffff
 800e808:	080125d0 	.word	0x080125d0
 800e80c:	080125cc 	.word	0x080125cc
 800e810:	080125d8 	.word	0x080125d8
 800e814:	080125d4 	.word	0x080125d4
 800e818:	080125ed 	.word	0x080125ed
 800e81c:	080125dc 	.word	0x080125dc
 800e820:	40300000 	.word	0x40300000
 800e824:	3fe00000 	.word	0x3fe00000
 800e828:	f802 0c01 	strb.w	r0, [r2, #-1]
 800e82c:	e75f      	b.n	800e6ee <_svfprintf_r+0x62e>
 800e82e:	f803 1b01 	strb.w	r1, [r3], #1
 800e832:	1af2      	subs	r2, r6, r3
 800e834:	2a00      	cmp	r2, #0
 800e836:	dafa      	bge.n	800e82e <_svfprintf_r+0x76e>
 800e838:	e76a      	b.n	800e710 <_svfprintf_r+0x650>
 800e83a:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800e83c:	4633      	mov	r3, r6
 800e83e:	2130      	movs	r1, #48	; 0x30
 800e840:	4416      	add	r6, r2
 800e842:	e7f6      	b.n	800e832 <_svfprintf_r+0x772>
 800e844:	9b07      	ldr	r3, [sp, #28]
 800e846:	2b46      	cmp	r3, #70	; 0x46
 800e848:	d004      	beq.n	800e854 <_svfprintf_r+0x794>
 800e84a:	2b45      	cmp	r3, #69	; 0x45
 800e84c:	d13a      	bne.n	800e8c4 <_svfprintf_r+0x804>
 800e84e:	1c6e      	adds	r6, r5, #1
 800e850:	2102      	movs	r1, #2
 800e852:	e001      	b.n	800e858 <_svfprintf_r+0x798>
 800e854:	462e      	mov	r6, r5
 800e856:	2103      	movs	r1, #3
 800e858:	ab24      	add	r3, sp, #144	; 0x90
 800e85a:	9301      	str	r3, [sp, #4]
 800e85c:	ab21      	add	r3, sp, #132	; 0x84
 800e85e:	9300      	str	r3, [sp, #0]
 800e860:	4632      	mov	r2, r6
 800e862:	ab20      	add	r3, sp, #128	; 0x80
 800e864:	ed9d 0b14 	vldr	d0, [sp, #80]	; 0x50
 800e868:	9803      	ldr	r0, [sp, #12]
 800e86a:	f000 ffa5 	bl	800f7b8 <_dtoa_r>
 800e86e:	9b07      	ldr	r3, [sp, #28]
 800e870:	2b47      	cmp	r3, #71	; 0x47
 800e872:	4683      	mov	fp, r0
 800e874:	d102      	bne.n	800e87c <_svfprintf_r+0x7bc>
 800e876:	f01a 0f01 	tst.w	sl, #1
 800e87a:	d026      	beq.n	800e8ca <_svfprintf_r+0x80a>
 800e87c:	9b07      	ldr	r3, [sp, #28]
 800e87e:	2b46      	cmp	r3, #70	; 0x46
 800e880:	eb0b 0706 	add.w	r7, fp, r6
 800e884:	d10f      	bne.n	800e8a6 <_svfprintf_r+0x7e6>
 800e886:	f89b 3000 	ldrb.w	r3, [fp]
 800e88a:	2b30      	cmp	r3, #48	; 0x30
 800e88c:	d109      	bne.n	800e8a2 <_svfprintf_r+0x7e2>
 800e88e:	2200      	movs	r2, #0
 800e890:	2300      	movs	r3, #0
 800e892:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
 800e896:	f7f8 fe99 	bl	80075cc <__aeabi_dcmpeq>
 800e89a:	b910      	cbnz	r0, 800e8a2 <_svfprintf_r+0x7e2>
 800e89c:	f1c6 0601 	rsb	r6, r6, #1
 800e8a0:	9620      	str	r6, [sp, #128]	; 0x80
 800e8a2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800e8a4:	441f      	add	r7, r3
 800e8a6:	2200      	movs	r2, #0
 800e8a8:	2300      	movs	r3, #0
 800e8aa:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
 800e8ae:	f7f8 fe8d 	bl	80075cc <__aeabi_dcmpeq>
 800e8b2:	b948      	cbnz	r0, 800e8c8 <_svfprintf_r+0x808>
 800e8b4:	2230      	movs	r2, #48	; 0x30
 800e8b6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800e8b8:	429f      	cmp	r7, r3
 800e8ba:	d906      	bls.n	800e8ca <_svfprintf_r+0x80a>
 800e8bc:	1c59      	adds	r1, r3, #1
 800e8be:	9124      	str	r1, [sp, #144]	; 0x90
 800e8c0:	701a      	strb	r2, [r3, #0]
 800e8c2:	e7f8      	b.n	800e8b6 <_svfprintf_r+0x7f6>
 800e8c4:	462e      	mov	r6, r5
 800e8c6:	e7c3      	b.n	800e850 <_svfprintf_r+0x790>
 800e8c8:	9724      	str	r7, [sp, #144]	; 0x90
 800e8ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800e8cc:	e720      	b.n	800e710 <_svfprintf_r+0x650>
 800e8ce:	9b07      	ldr	r3, [sp, #28]
 800e8d0:	2b46      	cmp	r3, #70	; 0x46
 800e8d2:	f47f af2d 	bne.w	800e730 <_svfprintf_r+0x670>
 800e8d6:	2e00      	cmp	r6, #0
 800e8d8:	dd1d      	ble.n	800e916 <_svfprintf_r+0x856>
 800e8da:	b915      	cbnz	r5, 800e8e2 <_svfprintf_r+0x822>
 800e8dc:	f01a 0f01 	tst.w	sl, #1
 800e8e0:	d034      	beq.n	800e94c <_svfprintf_r+0x88c>
 800e8e2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e8e4:	18f3      	adds	r3, r6, r3
 800e8e6:	441d      	add	r5, r3
 800e8e8:	2366      	movs	r3, #102	; 0x66
 800e8ea:	9306      	str	r3, [sp, #24]
 800e8ec:	e033      	b.n	800e956 <_svfprintf_r+0x896>
 800e8ee:	460a      	mov	r2, r1
 800e8f0:	e73e      	b.n	800e770 <_svfprintf_r+0x6b0>
 800e8f2:	f812 1b01 	ldrb.w	r1, [r2], #1
 800e8f6:	f803 1b01 	strb.w	r1, [r3], #1
 800e8fa:	e74e      	b.n	800e79a <_svfprintf_r+0x6da>
 800e8fc:	b941      	cbnz	r1, 800e910 <_svfprintf_r+0x850>
 800e8fe:	2230      	movs	r2, #48	; 0x30
 800e900:	f88d 208a 	strb.w	r2, [sp, #138]	; 0x8a
 800e904:	f10d 028b 	add.w	r2, sp, #139	; 0x8b
 800e908:	3330      	adds	r3, #48	; 0x30
 800e90a:	1c51      	adds	r1, r2, #1
 800e90c:	7013      	strb	r3, [r2, #0]
 800e90e:	e748      	b.n	800e7a2 <_svfprintf_r+0x6e2>
 800e910:	f10d 028a 	add.w	r2, sp, #138	; 0x8a
 800e914:	e7f8      	b.n	800e908 <_svfprintf_r+0x848>
 800e916:	b915      	cbnz	r5, 800e91e <_svfprintf_r+0x85e>
 800e918:	f01a 0f01 	tst.w	sl, #1
 800e91c:	d018      	beq.n	800e950 <_svfprintf_r+0x890>
 800e91e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e920:	3301      	adds	r3, #1
 800e922:	e7e0      	b.n	800e8e6 <_svfprintf_r+0x826>
 800e924:	9b04      	ldr	r3, [sp, #16]
 800e926:	42b3      	cmp	r3, r6
 800e928:	dc06      	bgt.n	800e938 <_svfprintf_r+0x878>
 800e92a:	f01a 0f01 	tst.w	sl, #1
 800e92e:	d025      	beq.n	800e97c <_svfprintf_r+0x8bc>
 800e930:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e932:	18f5      	adds	r5, r6, r3
 800e934:	2367      	movs	r3, #103	; 0x67
 800e936:	e7d8      	b.n	800e8ea <_svfprintf_r+0x82a>
 800e938:	9b04      	ldr	r3, [sp, #16]
 800e93a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800e93c:	2e00      	cmp	r6, #0
 800e93e:	eb03 0502 	add.w	r5, r3, r2
 800e942:	dcf7      	bgt.n	800e934 <_svfprintf_r+0x874>
 800e944:	f1c6 0301 	rsb	r3, r6, #1
 800e948:	441d      	add	r5, r3
 800e94a:	e7f3      	b.n	800e934 <_svfprintf_r+0x874>
 800e94c:	4635      	mov	r5, r6
 800e94e:	e7cb      	b.n	800e8e8 <_svfprintf_r+0x828>
 800e950:	2366      	movs	r3, #102	; 0x66
 800e952:	9306      	str	r3, [sp, #24]
 800e954:	2501      	movs	r5, #1
 800e956:	f41a 6380 	ands.w	r3, sl, #1024	; 0x400
 800e95a:	9307      	str	r3, [sp, #28]
 800e95c:	d01f      	beq.n	800e99e <_svfprintf_r+0x8de>
 800e95e:	2700      	movs	r7, #0
 800e960:	2e00      	cmp	r6, #0
 800e962:	9707      	str	r7, [sp, #28]
 800e964:	f77f af32 	ble.w	800e7cc <_svfprintf_r+0x70c>
 800e968:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e96a:	781b      	ldrb	r3, [r3, #0]
 800e96c:	2bff      	cmp	r3, #255	; 0xff
 800e96e:	d107      	bne.n	800e980 <_svfprintf_r+0x8c0>
 800e970:	9b07      	ldr	r3, [sp, #28]
 800e972:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e974:	443b      	add	r3, r7
 800e976:	fb02 5503 	mla	r5, r2, r3, r5
 800e97a:	e727      	b.n	800e7cc <_svfprintf_r+0x70c>
 800e97c:	4635      	mov	r5, r6
 800e97e:	e7d9      	b.n	800e934 <_svfprintf_r+0x874>
 800e980:	42b3      	cmp	r3, r6
 800e982:	daf5      	bge.n	800e970 <_svfprintf_r+0x8b0>
 800e984:	1af6      	subs	r6, r6, r3
 800e986:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e988:	785b      	ldrb	r3, [r3, #1]
 800e98a:	b133      	cbz	r3, 800e99a <_svfprintf_r+0x8da>
 800e98c:	9b07      	ldr	r3, [sp, #28]
 800e98e:	3301      	adds	r3, #1
 800e990:	9307      	str	r3, [sp, #28]
 800e992:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e994:	3301      	adds	r3, #1
 800e996:	9309      	str	r3, [sp, #36]	; 0x24
 800e998:	e7e6      	b.n	800e968 <_svfprintf_r+0x8a8>
 800e99a:	3701      	adds	r7, #1
 800e99c:	e7e4      	b.n	800e968 <_svfprintf_r+0x8a8>
 800e99e:	9f07      	ldr	r7, [sp, #28]
 800e9a0:	e714      	b.n	800e7cc <_svfprintf_r+0x70c>
 800e9a2:	4632      	mov	r2, r6
 800e9a4:	f01a 0f20 	tst.w	sl, #32
 800e9a8:	f852 3b04 	ldr.w	r3, [r2], #4
 800e9ac:	9208      	str	r2, [sp, #32]
 800e9ae:	d009      	beq.n	800e9c4 <_svfprintf_r+0x904>
 800e9b0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e9b2:	4610      	mov	r0, r2
 800e9b4:	17d1      	asrs	r1, r2, #31
 800e9b6:	e9c3 0100 	strd	r0, r1, [r3]
 800e9ba:	9e08      	ldr	r6, [sp, #32]
 800e9bc:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
 800e9c0:	f7ff bbba 	b.w	800e138 <_svfprintf_r+0x78>
 800e9c4:	f01a 0f10 	tst.w	sl, #16
 800e9c8:	d002      	beq.n	800e9d0 <_svfprintf_r+0x910>
 800e9ca:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e9cc:	601a      	str	r2, [r3, #0]
 800e9ce:	e7f4      	b.n	800e9ba <_svfprintf_r+0x8fa>
 800e9d0:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800e9d4:	d002      	beq.n	800e9dc <_svfprintf_r+0x91c>
 800e9d6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e9d8:	801a      	strh	r2, [r3, #0]
 800e9da:	e7ee      	b.n	800e9ba <_svfprintf_r+0x8fa>
 800e9dc:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800e9e0:	d0f3      	beq.n	800e9ca <_svfprintf_r+0x90a>
 800e9e2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e9e4:	701a      	strb	r2, [r3, #0]
 800e9e6:	e7e8      	b.n	800e9ba <_svfprintf_r+0x8fa>
 800e9e8:	f04a 0a10 	orr.w	sl, sl, #16
 800e9ec:	f01a 0f20 	tst.w	sl, #32
 800e9f0:	d01e      	beq.n	800ea30 <_svfprintf_r+0x970>
 800e9f2:	3607      	adds	r6, #7
 800e9f4:	f026 0607 	bic.w	r6, r6, #7
 800e9f8:	f106 0308 	add.w	r3, r6, #8
 800e9fc:	e9d6 6700 	ldrd	r6, r7, [r6]
 800ea00:	9308      	str	r3, [sp, #32]
 800ea02:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 800ea06:	2300      	movs	r3, #0
 800ea08:	2200      	movs	r2, #0
 800ea0a:	1c69      	adds	r1, r5, #1
 800ea0c:	f88d 207b 	strb.w	r2, [sp, #123]	; 0x7b
 800ea10:	f000 815b 	beq.w	800ecca <_svfprintf_r+0xc0a>
 800ea14:	4652      	mov	r2, sl
 800ea16:	ea56 0107 	orrs.w	r1, r6, r7
 800ea1a:	f02a 0a80 	bic.w	sl, sl, #128	; 0x80
 800ea1e:	f040 8154 	bne.w	800ecca <_svfprintf_r+0xc0a>
 800ea22:	2d00      	cmp	r5, #0
 800ea24:	f000 81d5 	beq.w	800edd2 <_svfprintf_r+0xd12>
 800ea28:	2b01      	cmp	r3, #1
 800ea2a:	f040 8151 	bne.w	800ecd0 <_svfprintf_r+0xc10>
 800ea2e:	e558      	b.n	800e4e2 <_svfprintf_r+0x422>
 800ea30:	1d33      	adds	r3, r6, #4
 800ea32:	f01a 0f10 	tst.w	sl, #16
 800ea36:	9308      	str	r3, [sp, #32]
 800ea38:	d001      	beq.n	800ea3e <_svfprintf_r+0x97e>
 800ea3a:	6836      	ldr	r6, [r6, #0]
 800ea3c:	e003      	b.n	800ea46 <_svfprintf_r+0x986>
 800ea3e:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800ea42:	d002      	beq.n	800ea4a <_svfprintf_r+0x98a>
 800ea44:	8836      	ldrh	r6, [r6, #0]
 800ea46:	2700      	movs	r7, #0
 800ea48:	e7db      	b.n	800ea02 <_svfprintf_r+0x942>
 800ea4a:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800ea4e:	d0f4      	beq.n	800ea3a <_svfprintf_r+0x97a>
 800ea50:	7836      	ldrb	r6, [r6, #0]
 800ea52:	e7f8      	b.n	800ea46 <_svfprintf_r+0x986>
 800ea54:	1d33      	adds	r3, r6, #4
 800ea56:	9308      	str	r3, [sp, #32]
 800ea58:	f647 0330 	movw	r3, #30768	; 0x7830
 800ea5c:	f8ad 307c 	strh.w	r3, [sp, #124]	; 0x7c
 800ea60:	2278      	movs	r2, #120	; 0x78
 800ea62:	4bb0      	ldr	r3, [pc, #704]	; (800ed24 <_svfprintf_r+0xc64>)
 800ea64:	9318      	str	r3, [sp, #96]	; 0x60
 800ea66:	6836      	ldr	r6, [r6, #0]
 800ea68:	9206      	str	r2, [sp, #24]
 800ea6a:	2700      	movs	r7, #0
 800ea6c:	f04a 0a02 	orr.w	sl, sl, #2
 800ea70:	2302      	movs	r3, #2
 800ea72:	e7c9      	b.n	800ea08 <_svfprintf_r+0x948>
 800ea74:	1d33      	adds	r3, r6, #4
 800ea76:	f8d6 b000 	ldr.w	fp, [r6]
 800ea7a:	9308      	str	r3, [sp, #32]
 800ea7c:	2600      	movs	r6, #0
 800ea7e:	1c68      	adds	r0, r5, #1
 800ea80:	f88d 607b 	strb.w	r6, [sp, #123]	; 0x7b
 800ea84:	f000 80e1 	beq.w	800ec4a <_svfprintf_r+0xb8a>
 800ea88:	462a      	mov	r2, r5
 800ea8a:	4631      	mov	r1, r6
 800ea8c:	4658      	mov	r0, fp
 800ea8e:	f7f8 f917 	bl	8006cc0 <memchr>
 800ea92:	4681      	mov	r9, r0
 800ea94:	2800      	cmp	r0, #0
 800ea96:	f43f ad74 	beq.w	800e582 <_svfprintf_r+0x4c2>
 800ea9a:	eba0 050b 	sub.w	r5, r0, fp
 800ea9e:	46b1      	mov	r9, r6
 800eaa0:	9610      	str	r6, [sp, #64]	; 0x40
 800eaa2:	4637      	mov	r7, r6
 800eaa4:	9607      	str	r6, [sp, #28]
 800eaa6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eaa8:	42ab      	cmp	r3, r5
 800eaaa:	bfb8      	it	lt
 800eaac:	462b      	movlt	r3, r5
 800eaae:	9311      	str	r3, [sp, #68]	; 0x44
 800eab0:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 800eab4:	b113      	cbz	r3, 800eabc <_svfprintf_r+0x9fc>
 800eab6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800eab8:	3301      	adds	r3, #1
 800eaba:	9311      	str	r3, [sp, #68]	; 0x44
 800eabc:	f01a 0302 	ands.w	r3, sl, #2
 800eac0:	931c      	str	r3, [sp, #112]	; 0x70
 800eac2:	bf1e      	ittt	ne
 800eac4:	9b11      	ldrne	r3, [sp, #68]	; 0x44
 800eac6:	3302      	addne	r3, #2
 800eac8:	9311      	strne	r3, [sp, #68]	; 0x44
 800eaca:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
 800eace:	931d      	str	r3, [sp, #116]	; 0x74
 800ead0:	d122      	bne.n	800eb18 <_svfprintf_r+0xa58>
 800ead2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ead4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ead6:	1a9b      	subs	r3, r3, r2
 800ead8:	2b00      	cmp	r3, #0
 800eada:	9313      	str	r3, [sp, #76]	; 0x4c
 800eadc:	dd1c      	ble.n	800eb18 <_svfprintf_r+0xa58>
 800eade:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800eae0:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	; 0x9c
 800eae4:	2810      	cmp	r0, #16
 800eae6:	4890      	ldr	r0, [pc, #576]	; (800ed28 <_svfprintf_r+0xc68>)
 800eae8:	6020      	str	r0, [r4, #0]
 800eaea:	f102 0201 	add.w	r2, r2, #1
 800eaee:	f104 0108 	add.w	r1, r4, #8
 800eaf2:	f300 8188 	bgt.w	800ee06 <_svfprintf_r+0xd46>
 800eaf6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800eaf8:	6060      	str	r0, [r4, #4]
 800eafa:	4403      	add	r3, r0
 800eafc:	2a07      	cmp	r2, #7
 800eafe:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800eb02:	f340 8195 	ble.w	800ee30 <_svfprintf_r+0xd70>
 800eb06:	aa26      	add	r2, sp, #152	; 0x98
 800eb08:	4641      	mov	r1, r8
 800eb0a:	9803      	ldr	r0, [sp, #12]
 800eb0c:	f002 fa18 	bl	8010f40 <__ssprint_r>
 800eb10:	2800      	cmp	r0, #0
 800eb12:	f040 84c1 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800eb16:	ac29      	add	r4, sp, #164	; 0xa4
 800eb18:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 800eb1c:	b173      	cbz	r3, 800eb3c <_svfprintf_r+0xa7c>
 800eb1e:	f10d 037b 	add.w	r3, sp, #123	; 0x7b
 800eb22:	6023      	str	r3, [r4, #0]
 800eb24:	2301      	movs	r3, #1
 800eb26:	6063      	str	r3, [r4, #4]
 800eb28:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800eb2a:	3301      	adds	r3, #1
 800eb2c:	9328      	str	r3, [sp, #160]	; 0xa0
 800eb2e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800eb30:	3301      	adds	r3, #1
 800eb32:	2b07      	cmp	r3, #7
 800eb34:	9327      	str	r3, [sp, #156]	; 0x9c
 800eb36:	f300 817d 	bgt.w	800ee34 <_svfprintf_r+0xd74>
 800eb3a:	3408      	adds	r4, #8
 800eb3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800eb3e:	b16b      	cbz	r3, 800eb5c <_svfprintf_r+0xa9c>
 800eb40:	ab1f      	add	r3, sp, #124	; 0x7c
 800eb42:	6023      	str	r3, [r4, #0]
 800eb44:	2302      	movs	r3, #2
 800eb46:	6063      	str	r3, [r4, #4]
 800eb48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800eb4a:	3302      	adds	r3, #2
 800eb4c:	9328      	str	r3, [sp, #160]	; 0xa0
 800eb4e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800eb50:	3301      	adds	r3, #1
 800eb52:	2b07      	cmp	r3, #7
 800eb54:	9327      	str	r3, [sp, #156]	; 0x9c
 800eb56:	f300 8177 	bgt.w	800ee48 <_svfprintf_r+0xd88>
 800eb5a:	3408      	adds	r4, #8
 800eb5c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800eb5e:	2b80      	cmp	r3, #128	; 0x80
 800eb60:	d122      	bne.n	800eba8 <_svfprintf_r+0xae8>
 800eb62:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800eb64:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800eb66:	1a9b      	subs	r3, r3, r2
 800eb68:	2b00      	cmp	r3, #0
 800eb6a:	9313      	str	r3, [sp, #76]	; 0x4c
 800eb6c:	dd1c      	ble.n	800eba8 <_svfprintf_r+0xae8>
 800eb6e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800eb70:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	; 0x9c
 800eb74:	2810      	cmp	r0, #16
 800eb76:	486d      	ldr	r0, [pc, #436]	; (800ed2c <_svfprintf_r+0xc6c>)
 800eb78:	6020      	str	r0, [r4, #0]
 800eb7a:	f102 0201 	add.w	r2, r2, #1
 800eb7e:	f104 0108 	add.w	r1, r4, #8
 800eb82:	f300 816b 	bgt.w	800ee5c <_svfprintf_r+0xd9c>
 800eb86:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800eb88:	6060      	str	r0, [r4, #4]
 800eb8a:	4403      	add	r3, r0
 800eb8c:	2a07      	cmp	r2, #7
 800eb8e:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800eb92:	f340 8178 	ble.w	800ee86 <_svfprintf_r+0xdc6>
 800eb96:	aa26      	add	r2, sp, #152	; 0x98
 800eb98:	4641      	mov	r1, r8
 800eb9a:	9803      	ldr	r0, [sp, #12]
 800eb9c:	f002 f9d0 	bl	8010f40 <__ssprint_r>
 800eba0:	2800      	cmp	r0, #0
 800eba2:	f040 8479 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800eba6:	ac29      	add	r4, sp, #164	; 0xa4
 800eba8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ebaa:	1b5b      	subs	r3, r3, r5
 800ebac:	2b00      	cmp	r3, #0
 800ebae:	9310      	str	r3, [sp, #64]	; 0x40
 800ebb0:	dd1c      	ble.n	800ebec <_svfprintf_r+0xb2c>
 800ebb2:	9810      	ldr	r0, [sp, #64]	; 0x40
 800ebb4:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	; 0x9c
 800ebb8:	2810      	cmp	r0, #16
 800ebba:	485c      	ldr	r0, [pc, #368]	; (800ed2c <_svfprintf_r+0xc6c>)
 800ebbc:	6020      	str	r0, [r4, #0]
 800ebbe:	f102 0201 	add.w	r2, r2, #1
 800ebc2:	f104 0108 	add.w	r1, r4, #8
 800ebc6:	f300 8160 	bgt.w	800ee8a <_svfprintf_r+0xdca>
 800ebca:	9810      	ldr	r0, [sp, #64]	; 0x40
 800ebcc:	6060      	str	r0, [r4, #4]
 800ebce:	4403      	add	r3, r0
 800ebd0:	2a07      	cmp	r2, #7
 800ebd2:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800ebd6:	f340 816d 	ble.w	800eeb4 <_svfprintf_r+0xdf4>
 800ebda:	aa26      	add	r2, sp, #152	; 0x98
 800ebdc:	4641      	mov	r1, r8
 800ebde:	9803      	ldr	r0, [sp, #12]
 800ebe0:	f002 f9ae 	bl	8010f40 <__ssprint_r>
 800ebe4:	2800      	cmp	r0, #0
 800ebe6:	f040 8457 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800ebea:	ac29      	add	r4, sp, #164	; 0xa4
 800ebec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800ebee:	9310      	str	r3, [sp, #64]	; 0x40
 800ebf0:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800ebf4:	f040 8160 	bne.w	800eeb8 <_svfprintf_r+0xdf8>
 800ebf8:	e9c4 b500 	strd	fp, r5, [r4]
 800ebfc:	441d      	add	r5, r3
 800ebfe:	9528      	str	r5, [sp, #160]	; 0xa0
 800ec00:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800ec02:	3301      	adds	r3, #1
 800ec04:	2b07      	cmp	r3, #7
 800ec06:	9327      	str	r3, [sp, #156]	; 0x9c
 800ec08:	f300 819c 	bgt.w	800ef44 <_svfprintf_r+0xe84>
 800ec0c:	3408      	adds	r4, #8
 800ec0e:	f01a 0f04 	tst.w	sl, #4
 800ec12:	f040 8423 	bne.w	800f45c <_svfprintf_r+0x139c>
 800ec16:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800ec1a:	9911      	ldr	r1, [sp, #68]	; 0x44
 800ec1c:	428a      	cmp	r2, r1
 800ec1e:	bfac      	ite	ge
 800ec20:	189b      	addge	r3, r3, r2
 800ec22:	185b      	addlt	r3, r3, r1
 800ec24:	930e      	str	r3, [sp, #56]	; 0x38
 800ec26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800ec28:	b13b      	cbz	r3, 800ec3a <_svfprintf_r+0xb7a>
 800ec2a:	aa26      	add	r2, sp, #152	; 0x98
 800ec2c:	4641      	mov	r1, r8
 800ec2e:	9803      	ldr	r0, [sp, #12]
 800ec30:	f002 f986 	bl	8010f40 <__ssprint_r>
 800ec34:	2800      	cmp	r0, #0
 800ec36:	f040 842f 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800ec3a:	2300      	movs	r3, #0
 800ec3c:	9327      	str	r3, [sp, #156]	; 0x9c
 800ec3e:	f1b9 0f00 	cmp.w	r9, #0
 800ec42:	f040 8445 	bne.w	800f4d0 <_svfprintf_r+0x1410>
 800ec46:	ac29      	add	r4, sp, #164	; 0xa4
 800ec48:	e6b7      	b.n	800e9ba <_svfprintf_r+0x8fa>
 800ec4a:	4658      	mov	r0, fp
 800ec4c:	f7f8 f892 	bl	8006d74 <strlen>
 800ec50:	46b1      	mov	r9, r6
 800ec52:	4605      	mov	r5, r0
 800ec54:	e495      	b.n	800e582 <_svfprintf_r+0x4c2>
 800ec56:	f04a 0a10 	orr.w	sl, sl, #16
 800ec5a:	f01a 0f20 	tst.w	sl, #32
 800ec5e:	d009      	beq.n	800ec74 <_svfprintf_r+0xbb4>
 800ec60:	3607      	adds	r6, #7
 800ec62:	f026 0607 	bic.w	r6, r6, #7
 800ec66:	f106 0308 	add.w	r3, r6, #8
 800ec6a:	e9d6 6700 	ldrd	r6, r7, [r6]
 800ec6e:	9308      	str	r3, [sp, #32]
 800ec70:	2301      	movs	r3, #1
 800ec72:	e6c9      	b.n	800ea08 <_svfprintf_r+0x948>
 800ec74:	1d33      	adds	r3, r6, #4
 800ec76:	f01a 0f10 	tst.w	sl, #16
 800ec7a:	9308      	str	r3, [sp, #32]
 800ec7c:	d001      	beq.n	800ec82 <_svfprintf_r+0xbc2>
 800ec7e:	6836      	ldr	r6, [r6, #0]
 800ec80:	e003      	b.n	800ec8a <_svfprintf_r+0xbca>
 800ec82:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800ec86:	d002      	beq.n	800ec8e <_svfprintf_r+0xbce>
 800ec88:	8836      	ldrh	r6, [r6, #0]
 800ec8a:	2700      	movs	r7, #0
 800ec8c:	e7f0      	b.n	800ec70 <_svfprintf_r+0xbb0>
 800ec8e:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800ec92:	d0f4      	beq.n	800ec7e <_svfprintf_r+0xbbe>
 800ec94:	7836      	ldrb	r6, [r6, #0]
 800ec96:	e7f8      	b.n	800ec8a <_svfprintf_r+0xbca>
 800ec98:	4b22      	ldr	r3, [pc, #136]	; (800ed24 <_svfprintf_r+0xc64>)
 800ec9a:	f7ff bb48 	b.w	800e32e <_svfprintf_r+0x26e>
 800ec9e:	1d33      	adds	r3, r6, #4
 800eca0:	f01a 0f10 	tst.w	sl, #16
 800eca4:	9308      	str	r3, [sp, #32]
 800eca6:	d001      	beq.n	800ecac <_svfprintf_r+0xbec>
 800eca8:	6836      	ldr	r6, [r6, #0]
 800ecaa:	e003      	b.n	800ecb4 <_svfprintf_r+0xbf4>
 800ecac:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800ecb0:	d003      	beq.n	800ecba <_svfprintf_r+0xbfa>
 800ecb2:	8836      	ldrh	r6, [r6, #0]
 800ecb4:	2700      	movs	r7, #0
 800ecb6:	f7ff bb47 	b.w	800e348 <_svfprintf_r+0x288>
 800ecba:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800ecbe:	d0f3      	beq.n	800eca8 <_svfprintf_r+0xbe8>
 800ecc0:	7836      	ldrb	r6, [r6, #0]
 800ecc2:	e7f7      	b.n	800ecb4 <_svfprintf_r+0xbf4>
 800ecc4:	4652      	mov	r2, sl
 800ecc6:	2301      	movs	r3, #1
 800ecc8:	e6a5      	b.n	800ea16 <_svfprintf_r+0x956>
 800ecca:	2b01      	cmp	r3, #1
 800eccc:	f43f ac04 	beq.w	800e4d8 <_svfprintf_r+0x418>
 800ecd0:	2b02      	cmp	r3, #2
 800ecd2:	d06c      	beq.n	800edae <_svfprintf_r+0xcee>
 800ecd4:	ab52      	add	r3, sp, #328	; 0x148
 800ecd6:	08f1      	lsrs	r1, r6, #3
 800ecd8:	ea41 7147 	orr.w	r1, r1, r7, lsl #29
 800ecdc:	08f8      	lsrs	r0, r7, #3
 800ecde:	f006 0207 	and.w	r2, r6, #7
 800ece2:	4607      	mov	r7, r0
 800ece4:	460e      	mov	r6, r1
 800ece6:	3230      	adds	r2, #48	; 0x30
 800ece8:	ea56 0107 	orrs.w	r1, r6, r7
 800ecec:	f103 3bff 	add.w	fp, r3, #4294967295
 800ecf0:	f803 2c01 	strb.w	r2, [r3, #-1]
 800ecf4:	d114      	bne.n	800ed20 <_svfprintf_r+0xc60>
 800ecf6:	f01a 0f01 	tst.w	sl, #1
 800ecfa:	d006      	beq.n	800ed0a <_svfprintf_r+0xc4a>
 800ecfc:	2a30      	cmp	r2, #48	; 0x30
 800ecfe:	d004      	beq.n	800ed0a <_svfprintf_r+0xc4a>
 800ed00:	2230      	movs	r2, #48	; 0x30
 800ed02:	f80b 2c01 	strb.w	r2, [fp, #-1]
 800ed06:	f1a3 0b02 	sub.w	fp, r3, #2
 800ed0a:	ab52      	add	r3, sp, #328	; 0x148
 800ed0c:	9510      	str	r5, [sp, #64]	; 0x40
 800ed0e:	f04f 0900 	mov.w	r9, #0
 800ed12:	eba3 050b 	sub.w	r5, r3, fp
 800ed16:	464f      	mov	r7, r9
 800ed18:	f8cd 901c 	str.w	r9, [sp, #28]
 800ed1c:	464e      	mov	r6, r9
 800ed1e:	e6c2      	b.n	800eaa6 <_svfprintf_r+0x9e6>
 800ed20:	465b      	mov	r3, fp
 800ed22:	e7d8      	b.n	800ecd6 <_svfprintf_r+0xc16>
 800ed24:	080125dc 	.word	0x080125dc
 800ed28:	08012600 	.word	0x08012600
 800ed2c:	08012610 	.word	0x08012610
 800ed30:	2300      	movs	r3, #0
 800ed32:	9304      	str	r3, [sp, #16]
 800ed34:	f40a 6380 	and.w	r3, sl, #1024	; 0x400
 800ed38:	f50d 79a4 	add.w	r9, sp, #328	; 0x148
 800ed3c:	9307      	str	r3, [sp, #28]
 800ed3e:	220a      	movs	r2, #10
 800ed40:	2300      	movs	r3, #0
 800ed42:	4630      	mov	r0, r6
 800ed44:	4639      	mov	r1, r7
 800ed46:	f7f8 fcb1 	bl	80076ac <__aeabi_uldivmod>
 800ed4a:	9b04      	ldr	r3, [sp, #16]
 800ed4c:	3301      	adds	r3, #1
 800ed4e:	9304      	str	r3, [sp, #16]
 800ed50:	9b07      	ldr	r3, [sp, #28]
 800ed52:	3230      	adds	r2, #48	; 0x30
 800ed54:	f109 3bff 	add.w	fp, r9, #4294967295
 800ed58:	f809 2c01 	strb.w	r2, [r9, #-1]
 800ed5c:	b1d3      	cbz	r3, 800ed94 <_svfprintf_r+0xcd4>
 800ed5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ed60:	9a04      	ldr	r2, [sp, #16]
 800ed62:	781b      	ldrb	r3, [r3, #0]
 800ed64:	429a      	cmp	r2, r3
 800ed66:	d115      	bne.n	800ed94 <_svfprintf_r+0xcd4>
 800ed68:	2aff      	cmp	r2, #255	; 0xff
 800ed6a:	d013      	beq.n	800ed94 <_svfprintf_r+0xcd4>
 800ed6c:	2f00      	cmp	r7, #0
 800ed6e:	bf08      	it	eq
 800ed70:	2e0a      	cmpeq	r6, #10
 800ed72:	d30f      	bcc.n	800ed94 <_svfprintf_r+0xcd4>
 800ed74:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ed76:	9919      	ldr	r1, [sp, #100]	; 0x64
 800ed78:	ebab 0b03 	sub.w	fp, fp, r3
 800ed7c:	461a      	mov	r2, r3
 800ed7e:	4658      	mov	r0, fp
 800ed80:	f002 f8c9 	bl	8010f16 <strncpy>
 800ed84:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ed86:	785b      	ldrb	r3, [r3, #1]
 800ed88:	b11b      	cbz	r3, 800ed92 <_svfprintf_r+0xcd2>
 800ed8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ed8c:	3301      	adds	r3, #1
 800ed8e:	9309      	str	r3, [sp, #36]	; 0x24
 800ed90:	2300      	movs	r3, #0
 800ed92:	9304      	str	r3, [sp, #16]
 800ed94:	2300      	movs	r3, #0
 800ed96:	4630      	mov	r0, r6
 800ed98:	4639      	mov	r1, r7
 800ed9a:	220a      	movs	r2, #10
 800ed9c:	f7f8 fc86 	bl	80076ac <__aeabi_uldivmod>
 800eda0:	4606      	mov	r6, r0
 800eda2:	460f      	mov	r7, r1
 800eda4:	ea56 0307 	orrs.w	r3, r6, r7
 800eda8:	d0af      	beq.n	800ed0a <_svfprintf_r+0xc4a>
 800edaa:	46d9      	mov	r9, fp
 800edac:	e7c7      	b.n	800ed3e <_svfprintf_r+0xc7e>
 800edae:	f50d 7ba4 	add.w	fp, sp, #328	; 0x148
 800edb2:	f006 030f 	and.w	r3, r6, #15
 800edb6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800edb8:	5cd3      	ldrb	r3, [r2, r3]
 800edba:	f80b 3d01 	strb.w	r3, [fp, #-1]!
 800edbe:	0933      	lsrs	r3, r6, #4
 800edc0:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 800edc4:	093a      	lsrs	r2, r7, #4
 800edc6:	461e      	mov	r6, r3
 800edc8:	4617      	mov	r7, r2
 800edca:	ea56 0307 	orrs.w	r3, r6, r7
 800edce:	d1f0      	bne.n	800edb2 <_svfprintf_r+0xcf2>
 800edd0:	e79b      	b.n	800ed0a <_svfprintf_r+0xc4a>
 800edd2:	f50d 7ba4 	add.w	fp, sp, #328	; 0x148
 800edd6:	2b00      	cmp	r3, #0
 800edd8:	d197      	bne.n	800ed0a <_svfprintf_r+0xc4a>
 800edda:	07d2      	lsls	r2, r2, #31
 800eddc:	bf44      	itt	mi
 800edde:	2330      	movmi	r3, #48	; 0x30
 800ede0:	f80b 3d01 	strbmi.w	r3, [fp, #-1]!
 800ede4:	e791      	b.n	800ed0a <_svfprintf_r+0xc4a>
 800ede6:	9b06      	ldr	r3, [sp, #24]
 800ede8:	2b00      	cmp	r3, #0
 800edea:	f000 8377 	beq.w	800f4dc <_svfprintf_r+0x141c>
 800edee:	2000      	movs	r0, #0
 800edf0:	f88d 30e4 	strb.w	r3, [sp, #228]	; 0xe4
 800edf4:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
 800edf8:	9608      	str	r6, [sp, #32]
 800edfa:	f7ff bb49 	b.w	800e490 <_svfprintf_r+0x3d0>
 800edfe:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
 800ee02:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ee04:	e4ec      	b.n	800e7e0 <_svfprintf_r+0x720>
 800ee06:	2010      	movs	r0, #16
 800ee08:	4403      	add	r3, r0
 800ee0a:	2a07      	cmp	r2, #7
 800ee0c:	6060      	str	r0, [r4, #4]
 800ee0e:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800ee12:	dd08      	ble.n	800ee26 <_svfprintf_r+0xd66>
 800ee14:	aa26      	add	r2, sp, #152	; 0x98
 800ee16:	4641      	mov	r1, r8
 800ee18:	9803      	ldr	r0, [sp, #12]
 800ee1a:	f002 f891 	bl	8010f40 <__ssprint_r>
 800ee1e:	2800      	cmp	r0, #0
 800ee20:	f040 833a 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800ee24:	a929      	add	r1, sp, #164	; 0xa4
 800ee26:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ee28:	3b10      	subs	r3, #16
 800ee2a:	9313      	str	r3, [sp, #76]	; 0x4c
 800ee2c:	460c      	mov	r4, r1
 800ee2e:	e656      	b.n	800eade <_svfprintf_r+0xa1e>
 800ee30:	460c      	mov	r4, r1
 800ee32:	e671      	b.n	800eb18 <_svfprintf_r+0xa58>
 800ee34:	aa26      	add	r2, sp, #152	; 0x98
 800ee36:	4641      	mov	r1, r8
 800ee38:	9803      	ldr	r0, [sp, #12]
 800ee3a:	f002 f881 	bl	8010f40 <__ssprint_r>
 800ee3e:	2800      	cmp	r0, #0
 800ee40:	f040 832a 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800ee44:	ac29      	add	r4, sp, #164	; 0xa4
 800ee46:	e679      	b.n	800eb3c <_svfprintf_r+0xa7c>
 800ee48:	aa26      	add	r2, sp, #152	; 0x98
 800ee4a:	4641      	mov	r1, r8
 800ee4c:	9803      	ldr	r0, [sp, #12]
 800ee4e:	f002 f877 	bl	8010f40 <__ssprint_r>
 800ee52:	2800      	cmp	r0, #0
 800ee54:	f040 8320 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800ee58:	ac29      	add	r4, sp, #164	; 0xa4
 800ee5a:	e67f      	b.n	800eb5c <_svfprintf_r+0xa9c>
 800ee5c:	2010      	movs	r0, #16
 800ee5e:	4403      	add	r3, r0
 800ee60:	2a07      	cmp	r2, #7
 800ee62:	6060      	str	r0, [r4, #4]
 800ee64:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800ee68:	dd08      	ble.n	800ee7c <_svfprintf_r+0xdbc>
 800ee6a:	aa26      	add	r2, sp, #152	; 0x98
 800ee6c:	4641      	mov	r1, r8
 800ee6e:	9803      	ldr	r0, [sp, #12]
 800ee70:	f002 f866 	bl	8010f40 <__ssprint_r>
 800ee74:	2800      	cmp	r0, #0
 800ee76:	f040 830f 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800ee7a:	a929      	add	r1, sp, #164	; 0xa4
 800ee7c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ee7e:	3b10      	subs	r3, #16
 800ee80:	9313      	str	r3, [sp, #76]	; 0x4c
 800ee82:	460c      	mov	r4, r1
 800ee84:	e673      	b.n	800eb6e <_svfprintf_r+0xaae>
 800ee86:	460c      	mov	r4, r1
 800ee88:	e68e      	b.n	800eba8 <_svfprintf_r+0xae8>
 800ee8a:	2010      	movs	r0, #16
 800ee8c:	4403      	add	r3, r0
 800ee8e:	2a07      	cmp	r2, #7
 800ee90:	6060      	str	r0, [r4, #4]
 800ee92:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800ee96:	dd08      	ble.n	800eeaa <_svfprintf_r+0xdea>
 800ee98:	aa26      	add	r2, sp, #152	; 0x98
 800ee9a:	4641      	mov	r1, r8
 800ee9c:	9803      	ldr	r0, [sp, #12]
 800ee9e:	f002 f84f 	bl	8010f40 <__ssprint_r>
 800eea2:	2800      	cmp	r0, #0
 800eea4:	f040 82f8 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800eea8:	a929      	add	r1, sp, #164	; 0xa4
 800eeaa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eeac:	3b10      	subs	r3, #16
 800eeae:	9310      	str	r3, [sp, #64]	; 0x40
 800eeb0:	460c      	mov	r4, r1
 800eeb2:	e67e      	b.n	800ebb2 <_svfprintf_r+0xaf2>
 800eeb4:	460c      	mov	r4, r1
 800eeb6:	e699      	b.n	800ebec <_svfprintf_r+0xb2c>
 800eeb8:	9b06      	ldr	r3, [sp, #24]
 800eeba:	2b65      	cmp	r3, #101	; 0x65
 800eebc:	f340 8234 	ble.w	800f328 <_svfprintf_r+0x1268>
 800eec0:	2200      	movs	r2, #0
 800eec2:	2300      	movs	r3, #0
 800eec4:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800eec8:	f7f8 fb80 	bl	80075cc <__aeabi_dcmpeq>
 800eecc:	2800      	cmp	r0, #0
 800eece:	d069      	beq.n	800efa4 <_svfprintf_r+0xee4>
 800eed0:	4b6e      	ldr	r3, [pc, #440]	; (800f08c <_svfprintf_r+0xfcc>)
 800eed2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800eed4:	6023      	str	r3, [r4, #0]
 800eed6:	2301      	movs	r3, #1
 800eed8:	441d      	add	r5, r3
 800eeda:	6063      	str	r3, [r4, #4]
 800eedc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800eede:	9528      	str	r5, [sp, #160]	; 0xa0
 800eee0:	3301      	adds	r3, #1
 800eee2:	2b07      	cmp	r3, #7
 800eee4:	9327      	str	r3, [sp, #156]	; 0x9c
 800eee6:	dc37      	bgt.n	800ef58 <_svfprintf_r+0xe98>
 800eee8:	3408      	adds	r4, #8
 800eeea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800eeec:	9a04      	ldr	r2, [sp, #16]
 800eeee:	4293      	cmp	r3, r2
 800eef0:	db03      	blt.n	800eefa <_svfprintf_r+0xe3a>
 800eef2:	f01a 0f01 	tst.w	sl, #1
 800eef6:	f43f ae8a 	beq.w	800ec0e <_svfprintf_r+0xb4e>
 800eefa:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800eefc:	6023      	str	r3, [r4, #0]
 800eefe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ef00:	6063      	str	r3, [r4, #4]
 800ef02:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800ef04:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800ef06:	4413      	add	r3, r2
 800ef08:	9328      	str	r3, [sp, #160]	; 0xa0
 800ef0a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800ef0c:	3301      	adds	r3, #1
 800ef0e:	2b07      	cmp	r3, #7
 800ef10:	9327      	str	r3, [sp, #156]	; 0x9c
 800ef12:	dc2b      	bgt.n	800ef6c <_svfprintf_r+0xeac>
 800ef14:	3408      	adds	r4, #8
 800ef16:	9b04      	ldr	r3, [sp, #16]
 800ef18:	1e5d      	subs	r5, r3, #1
 800ef1a:	2d00      	cmp	r5, #0
 800ef1c:	f77f ae77 	ble.w	800ec0e <_svfprintf_r+0xb4e>
 800ef20:	4e5b      	ldr	r6, [pc, #364]	; (800f090 <_svfprintf_r+0xfd0>)
 800ef22:	2710      	movs	r7, #16
 800ef24:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800ef28:	2d10      	cmp	r5, #16
 800ef2a:	f103 0301 	add.w	r3, r3, #1
 800ef2e:	f104 0108 	add.w	r1, r4, #8
 800ef32:	6026      	str	r6, [r4, #0]
 800ef34:	dc24      	bgt.n	800ef80 <_svfprintf_r+0xec0>
 800ef36:	6065      	str	r5, [r4, #4]
 800ef38:	2b07      	cmp	r3, #7
 800ef3a:	4415      	add	r5, r2
 800ef3c:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 800ef40:	f340 8289 	ble.w	800f456 <_svfprintf_r+0x1396>
 800ef44:	aa26      	add	r2, sp, #152	; 0x98
 800ef46:	4641      	mov	r1, r8
 800ef48:	9803      	ldr	r0, [sp, #12]
 800ef4a:	f001 fff9 	bl	8010f40 <__ssprint_r>
 800ef4e:	2800      	cmp	r0, #0
 800ef50:	f040 82a2 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800ef54:	ac29      	add	r4, sp, #164	; 0xa4
 800ef56:	e65a      	b.n	800ec0e <_svfprintf_r+0xb4e>
 800ef58:	aa26      	add	r2, sp, #152	; 0x98
 800ef5a:	4641      	mov	r1, r8
 800ef5c:	9803      	ldr	r0, [sp, #12]
 800ef5e:	f001 ffef 	bl	8010f40 <__ssprint_r>
 800ef62:	2800      	cmp	r0, #0
 800ef64:	f040 8298 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800ef68:	ac29      	add	r4, sp, #164	; 0xa4
 800ef6a:	e7be      	b.n	800eeea <_svfprintf_r+0xe2a>
 800ef6c:	aa26      	add	r2, sp, #152	; 0x98
 800ef6e:	4641      	mov	r1, r8
 800ef70:	9803      	ldr	r0, [sp, #12]
 800ef72:	f001 ffe5 	bl	8010f40 <__ssprint_r>
 800ef76:	2800      	cmp	r0, #0
 800ef78:	f040 828e 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800ef7c:	ac29      	add	r4, sp, #164	; 0xa4
 800ef7e:	e7ca      	b.n	800ef16 <_svfprintf_r+0xe56>
 800ef80:	3210      	adds	r2, #16
 800ef82:	2b07      	cmp	r3, #7
 800ef84:	6067      	str	r7, [r4, #4]
 800ef86:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 800ef8a:	dd08      	ble.n	800ef9e <_svfprintf_r+0xede>
 800ef8c:	aa26      	add	r2, sp, #152	; 0x98
 800ef8e:	4641      	mov	r1, r8
 800ef90:	9803      	ldr	r0, [sp, #12]
 800ef92:	f001 ffd5 	bl	8010f40 <__ssprint_r>
 800ef96:	2800      	cmp	r0, #0
 800ef98:	f040 827e 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800ef9c:	a929      	add	r1, sp, #164	; 0xa4
 800ef9e:	3d10      	subs	r5, #16
 800efa0:	460c      	mov	r4, r1
 800efa2:	e7bf      	b.n	800ef24 <_svfprintf_r+0xe64>
 800efa4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800efa6:	2b00      	cmp	r3, #0
 800efa8:	dc74      	bgt.n	800f094 <_svfprintf_r+0xfd4>
 800efaa:	4b38      	ldr	r3, [pc, #224]	; (800f08c <_svfprintf_r+0xfcc>)
 800efac:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800efae:	6023      	str	r3, [r4, #0]
 800efb0:	2301      	movs	r3, #1
 800efb2:	441d      	add	r5, r3
 800efb4:	6063      	str	r3, [r4, #4]
 800efb6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800efb8:	9528      	str	r5, [sp, #160]	; 0xa0
 800efba:	3301      	adds	r3, #1
 800efbc:	2b07      	cmp	r3, #7
 800efbe:	9327      	str	r3, [sp, #156]	; 0x9c
 800efc0:	dc3e      	bgt.n	800f040 <_svfprintf_r+0xf80>
 800efc2:	3408      	adds	r4, #8
 800efc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800efc6:	b92b      	cbnz	r3, 800efd4 <_svfprintf_r+0xf14>
 800efc8:	9b04      	ldr	r3, [sp, #16]
 800efca:	b91b      	cbnz	r3, 800efd4 <_svfprintf_r+0xf14>
 800efcc:	f01a 0f01 	tst.w	sl, #1
 800efd0:	f43f ae1d 	beq.w	800ec0e <_svfprintf_r+0xb4e>
 800efd4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800efd6:	6023      	str	r3, [r4, #0]
 800efd8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800efda:	6063      	str	r3, [r4, #4]
 800efdc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800efde:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800efe0:	4413      	add	r3, r2
 800efe2:	9328      	str	r3, [sp, #160]	; 0xa0
 800efe4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800efe6:	3301      	adds	r3, #1
 800efe8:	2b07      	cmp	r3, #7
 800efea:	9327      	str	r3, [sp, #156]	; 0x9c
 800efec:	dc32      	bgt.n	800f054 <_svfprintf_r+0xf94>
 800efee:	3408      	adds	r4, #8
 800eff0:	9d20      	ldr	r5, [sp, #128]	; 0x80
 800eff2:	2d00      	cmp	r5, #0
 800eff4:	da1b      	bge.n	800f02e <_svfprintf_r+0xf6e>
 800eff6:	4e26      	ldr	r6, [pc, #152]	; (800f090 <_svfprintf_r+0xfd0>)
 800eff8:	426d      	negs	r5, r5
 800effa:	4623      	mov	r3, r4
 800effc:	2710      	movs	r7, #16
 800effe:	e9dd 2127 	ldrd	r2, r1, [sp, #156]	; 0x9c
 800f002:	2d10      	cmp	r5, #16
 800f004:	f102 0201 	add.w	r2, r2, #1
 800f008:	f104 0408 	add.w	r4, r4, #8
 800f00c:	601e      	str	r6, [r3, #0]
 800f00e:	dc2b      	bgt.n	800f068 <_svfprintf_r+0xfa8>
 800f010:	605d      	str	r5, [r3, #4]
 800f012:	2a07      	cmp	r2, #7
 800f014:	440d      	add	r5, r1
 800f016:	e9cd 2527 	strd	r2, r5, [sp, #156]	; 0x9c
 800f01a:	dd08      	ble.n	800f02e <_svfprintf_r+0xf6e>
 800f01c:	aa26      	add	r2, sp, #152	; 0x98
 800f01e:	4641      	mov	r1, r8
 800f020:	9803      	ldr	r0, [sp, #12]
 800f022:	f001 ff8d 	bl	8010f40 <__ssprint_r>
 800f026:	2800      	cmp	r0, #0
 800f028:	f040 8236 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f02c:	ac29      	add	r4, sp, #164	; 0xa4
 800f02e:	9b04      	ldr	r3, [sp, #16]
 800f030:	6063      	str	r3, [r4, #4]
 800f032:	9a04      	ldr	r2, [sp, #16]
 800f034:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f036:	f8c4 b000 	str.w	fp, [r4]
 800f03a:	4413      	add	r3, r2
 800f03c:	9328      	str	r3, [sp, #160]	; 0xa0
 800f03e:	e5df      	b.n	800ec00 <_svfprintf_r+0xb40>
 800f040:	aa26      	add	r2, sp, #152	; 0x98
 800f042:	4641      	mov	r1, r8
 800f044:	9803      	ldr	r0, [sp, #12]
 800f046:	f001 ff7b 	bl	8010f40 <__ssprint_r>
 800f04a:	2800      	cmp	r0, #0
 800f04c:	f040 8224 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f050:	ac29      	add	r4, sp, #164	; 0xa4
 800f052:	e7b7      	b.n	800efc4 <_svfprintf_r+0xf04>
 800f054:	aa26      	add	r2, sp, #152	; 0x98
 800f056:	4641      	mov	r1, r8
 800f058:	9803      	ldr	r0, [sp, #12]
 800f05a:	f001 ff71 	bl	8010f40 <__ssprint_r>
 800f05e:	2800      	cmp	r0, #0
 800f060:	f040 821a 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f064:	ac29      	add	r4, sp, #164	; 0xa4
 800f066:	e7c3      	b.n	800eff0 <_svfprintf_r+0xf30>
 800f068:	3110      	adds	r1, #16
 800f06a:	2a07      	cmp	r2, #7
 800f06c:	605f      	str	r7, [r3, #4]
 800f06e:	e9cd 2127 	strd	r2, r1, [sp, #156]	; 0x9c
 800f072:	dd08      	ble.n	800f086 <_svfprintf_r+0xfc6>
 800f074:	aa26      	add	r2, sp, #152	; 0x98
 800f076:	4641      	mov	r1, r8
 800f078:	9803      	ldr	r0, [sp, #12]
 800f07a:	f001 ff61 	bl	8010f40 <__ssprint_r>
 800f07e:	2800      	cmp	r0, #0
 800f080:	f040 820a 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f084:	ac29      	add	r4, sp, #164	; 0xa4
 800f086:	3d10      	subs	r5, #16
 800f088:	4623      	mov	r3, r4
 800f08a:	e7b8      	b.n	800effe <_svfprintf_r+0xf3e>
 800f08c:	080125fe 	.word	0x080125fe
 800f090:	08012610 	.word	0x08012610
 800f094:	9b04      	ldr	r3, [sp, #16]
 800f096:	42b3      	cmp	r3, r6
 800f098:	bfa8      	it	ge
 800f09a:	4633      	movge	r3, r6
 800f09c:	2b00      	cmp	r3, #0
 800f09e:	461d      	mov	r5, r3
 800f0a0:	dd0b      	ble.n	800f0ba <_svfprintf_r+0xffa>
 800f0a2:	e9c4 b300 	strd	fp, r3, [r4]
 800f0a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f0a8:	442b      	add	r3, r5
 800f0aa:	9328      	str	r3, [sp, #160]	; 0xa0
 800f0ac:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f0ae:	3301      	adds	r3, #1
 800f0b0:	2b07      	cmp	r3, #7
 800f0b2:	9327      	str	r3, [sp, #156]	; 0x9c
 800f0b4:	f300 8086 	bgt.w	800f1c4 <_svfprintf_r+0x1104>
 800f0b8:	3408      	adds	r4, #8
 800f0ba:	2d00      	cmp	r5, #0
 800f0bc:	bfac      	ite	ge
 800f0be:	1b75      	subge	r5, r6, r5
 800f0c0:	4635      	movlt	r5, r6
 800f0c2:	2d00      	cmp	r5, #0
 800f0c4:	dd19      	ble.n	800f0fa <_svfprintf_r+0x103a>
 800f0c6:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800f0ca:	4896      	ldr	r0, [pc, #600]	; (800f324 <_svfprintf_r+0x1264>)
 800f0cc:	6020      	str	r0, [r4, #0]
 800f0ce:	2d10      	cmp	r5, #16
 800f0d0:	f103 0301 	add.w	r3, r3, #1
 800f0d4:	f104 0108 	add.w	r1, r4, #8
 800f0d8:	dc7e      	bgt.n	800f1d8 <_svfprintf_r+0x1118>
 800f0da:	6065      	str	r5, [r4, #4]
 800f0dc:	2b07      	cmp	r3, #7
 800f0de:	4415      	add	r5, r2
 800f0e0:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 800f0e4:	f340 808b 	ble.w	800f1fe <_svfprintf_r+0x113e>
 800f0e8:	aa26      	add	r2, sp, #152	; 0x98
 800f0ea:	4641      	mov	r1, r8
 800f0ec:	9803      	ldr	r0, [sp, #12]
 800f0ee:	f001 ff27 	bl	8010f40 <__ssprint_r>
 800f0f2:	2800      	cmp	r0, #0
 800f0f4:	f040 81d0 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f0f8:	ac29      	add	r4, sp, #164	; 0xa4
 800f0fa:	f41a 6f80 	tst.w	sl, #1024	; 0x400
 800f0fe:	445e      	add	r6, fp
 800f100:	d009      	beq.n	800f116 <_svfprintf_r+0x1056>
 800f102:	9b07      	ldr	r3, [sp, #28]
 800f104:	2b00      	cmp	r3, #0
 800f106:	d17c      	bne.n	800f202 <_svfprintf_r+0x1142>
 800f108:	2f00      	cmp	r7, #0
 800f10a:	d17c      	bne.n	800f206 <_svfprintf_r+0x1146>
 800f10c:	9b04      	ldr	r3, [sp, #16]
 800f10e:	445b      	add	r3, fp
 800f110:	429e      	cmp	r6, r3
 800f112:	bf28      	it	cs
 800f114:	461e      	movcs	r6, r3
 800f116:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800f118:	9a04      	ldr	r2, [sp, #16]
 800f11a:	4293      	cmp	r3, r2
 800f11c:	db02      	blt.n	800f124 <_svfprintf_r+0x1064>
 800f11e:	f01a 0f01 	tst.w	sl, #1
 800f122:	d00e      	beq.n	800f142 <_svfprintf_r+0x1082>
 800f124:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800f126:	6023      	str	r3, [r4, #0]
 800f128:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f12a:	6063      	str	r3, [r4, #4]
 800f12c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f12e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f130:	4413      	add	r3, r2
 800f132:	9328      	str	r3, [sp, #160]	; 0xa0
 800f134:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f136:	3301      	adds	r3, #1
 800f138:	2b07      	cmp	r3, #7
 800f13a:	9327      	str	r3, [sp, #156]	; 0x9c
 800f13c:	f300 80dd 	bgt.w	800f2fa <_svfprintf_r+0x123a>
 800f140:	3408      	adds	r4, #8
 800f142:	9b04      	ldr	r3, [sp, #16]
 800f144:	9a04      	ldr	r2, [sp, #16]
 800f146:	eb0b 0503 	add.w	r5, fp, r3
 800f14a:	1bab      	subs	r3, r5, r6
 800f14c:	9d20      	ldr	r5, [sp, #128]	; 0x80
 800f14e:	1b55      	subs	r5, r2, r5
 800f150:	429d      	cmp	r5, r3
 800f152:	bfa8      	it	ge
 800f154:	461d      	movge	r5, r3
 800f156:	2d00      	cmp	r5, #0
 800f158:	dd0b      	ble.n	800f172 <_svfprintf_r+0x10b2>
 800f15a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f15c:	442b      	add	r3, r5
 800f15e:	9328      	str	r3, [sp, #160]	; 0xa0
 800f160:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f162:	3301      	adds	r3, #1
 800f164:	2b07      	cmp	r3, #7
 800f166:	e9c4 6500 	strd	r6, r5, [r4]
 800f16a:	9327      	str	r3, [sp, #156]	; 0x9c
 800f16c:	f300 80cf 	bgt.w	800f30e <_svfprintf_r+0x124e>
 800f170:	3408      	adds	r4, #8
 800f172:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800f174:	9a04      	ldr	r2, [sp, #16]
 800f176:	2d00      	cmp	r5, #0
 800f178:	eba2 0303 	sub.w	r3, r2, r3
 800f17c:	bfac      	ite	ge
 800f17e:	1b5d      	subge	r5, r3, r5
 800f180:	461d      	movlt	r5, r3
 800f182:	2d00      	cmp	r5, #0
 800f184:	f77f ad43 	ble.w	800ec0e <_svfprintf_r+0xb4e>
 800f188:	4e66      	ldr	r6, [pc, #408]	; (800f324 <_svfprintf_r+0x1264>)
 800f18a:	2710      	movs	r7, #16
 800f18c:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800f190:	2d10      	cmp	r5, #16
 800f192:	f103 0301 	add.w	r3, r3, #1
 800f196:	f104 0108 	add.w	r1, r4, #8
 800f19a:	6026      	str	r6, [r4, #0]
 800f19c:	f77f aecb 	ble.w	800ef36 <_svfprintf_r+0xe76>
 800f1a0:	3210      	adds	r2, #16
 800f1a2:	2b07      	cmp	r3, #7
 800f1a4:	6067      	str	r7, [r4, #4]
 800f1a6:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 800f1aa:	dd08      	ble.n	800f1be <_svfprintf_r+0x10fe>
 800f1ac:	aa26      	add	r2, sp, #152	; 0x98
 800f1ae:	4641      	mov	r1, r8
 800f1b0:	9803      	ldr	r0, [sp, #12]
 800f1b2:	f001 fec5 	bl	8010f40 <__ssprint_r>
 800f1b6:	2800      	cmp	r0, #0
 800f1b8:	f040 816e 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f1bc:	a929      	add	r1, sp, #164	; 0xa4
 800f1be:	3d10      	subs	r5, #16
 800f1c0:	460c      	mov	r4, r1
 800f1c2:	e7e3      	b.n	800f18c <_svfprintf_r+0x10cc>
 800f1c4:	aa26      	add	r2, sp, #152	; 0x98
 800f1c6:	4641      	mov	r1, r8
 800f1c8:	9803      	ldr	r0, [sp, #12]
 800f1ca:	f001 feb9 	bl	8010f40 <__ssprint_r>
 800f1ce:	2800      	cmp	r0, #0
 800f1d0:	f040 8162 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f1d4:	ac29      	add	r4, sp, #164	; 0xa4
 800f1d6:	e770      	b.n	800f0ba <_svfprintf_r+0xffa>
 800f1d8:	2010      	movs	r0, #16
 800f1da:	4402      	add	r2, r0
 800f1dc:	2b07      	cmp	r3, #7
 800f1de:	6060      	str	r0, [r4, #4]
 800f1e0:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 800f1e4:	dd08      	ble.n	800f1f8 <_svfprintf_r+0x1138>
 800f1e6:	aa26      	add	r2, sp, #152	; 0x98
 800f1e8:	4641      	mov	r1, r8
 800f1ea:	9803      	ldr	r0, [sp, #12]
 800f1ec:	f001 fea8 	bl	8010f40 <__ssprint_r>
 800f1f0:	2800      	cmp	r0, #0
 800f1f2:	f040 8151 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f1f6:	a929      	add	r1, sp, #164	; 0xa4
 800f1f8:	3d10      	subs	r5, #16
 800f1fa:	460c      	mov	r4, r1
 800f1fc:	e763      	b.n	800f0c6 <_svfprintf_r+0x1006>
 800f1fe:	460c      	mov	r4, r1
 800f200:	e77b      	b.n	800f0fa <_svfprintf_r+0x103a>
 800f202:	2f00      	cmp	r7, #0
 800f204:	d049      	beq.n	800f29a <_svfprintf_r+0x11da>
 800f206:	3f01      	subs	r7, #1
 800f208:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800f20a:	6023      	str	r3, [r4, #0]
 800f20c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800f20e:	6063      	str	r3, [r4, #4]
 800f210:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f212:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f214:	4413      	add	r3, r2
 800f216:	9328      	str	r3, [sp, #160]	; 0xa0
 800f218:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f21a:	3301      	adds	r3, #1
 800f21c:	2b07      	cmp	r3, #7
 800f21e:	9327      	str	r3, [sp, #156]	; 0x9c
 800f220:	dc42      	bgt.n	800f2a8 <_svfprintf_r+0x11e8>
 800f222:	3408      	adds	r4, #8
 800f224:	9b04      	ldr	r3, [sp, #16]
 800f226:	445b      	add	r3, fp
 800f228:	1b9a      	subs	r2, r3, r6
 800f22a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f22c:	781b      	ldrb	r3, [r3, #0]
 800f22e:	4293      	cmp	r3, r2
 800f230:	bfa8      	it	ge
 800f232:	4613      	movge	r3, r2
 800f234:	2b00      	cmp	r3, #0
 800f236:	461d      	mov	r5, r3
 800f238:	dd0a      	ble.n	800f250 <_svfprintf_r+0x1190>
 800f23a:	e9c4 6300 	strd	r6, r3, [r4]
 800f23e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f240:	442b      	add	r3, r5
 800f242:	9328      	str	r3, [sp, #160]	; 0xa0
 800f244:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f246:	3301      	adds	r3, #1
 800f248:	2b07      	cmp	r3, #7
 800f24a:	9327      	str	r3, [sp, #156]	; 0x9c
 800f24c:	dc36      	bgt.n	800f2bc <_svfprintf_r+0x11fc>
 800f24e:	3408      	adds	r4, #8
 800f250:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f252:	781b      	ldrb	r3, [r3, #0]
 800f254:	2d00      	cmp	r5, #0
 800f256:	bfac      	ite	ge
 800f258:	1b5d      	subge	r5, r3, r5
 800f25a:	461d      	movlt	r5, r3
 800f25c:	2d00      	cmp	r5, #0
 800f25e:	dd18      	ble.n	800f292 <_svfprintf_r+0x11d2>
 800f260:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	; 0x9c
 800f264:	482f      	ldr	r0, [pc, #188]	; (800f324 <_svfprintf_r+0x1264>)
 800f266:	6020      	str	r0, [r4, #0]
 800f268:	2d10      	cmp	r5, #16
 800f26a:	f102 0201 	add.w	r2, r2, #1
 800f26e:	f104 0108 	add.w	r1, r4, #8
 800f272:	dc2d      	bgt.n	800f2d0 <_svfprintf_r+0x1210>
 800f274:	442b      	add	r3, r5
 800f276:	2a07      	cmp	r2, #7
 800f278:	6065      	str	r5, [r4, #4]
 800f27a:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800f27e:	dd3a      	ble.n	800f2f6 <_svfprintf_r+0x1236>
 800f280:	aa26      	add	r2, sp, #152	; 0x98
 800f282:	4641      	mov	r1, r8
 800f284:	9803      	ldr	r0, [sp, #12]
 800f286:	f001 fe5b 	bl	8010f40 <__ssprint_r>
 800f28a:	2800      	cmp	r0, #0
 800f28c:	f040 8104 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f290:	ac29      	add	r4, sp, #164	; 0xa4
 800f292:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f294:	781b      	ldrb	r3, [r3, #0]
 800f296:	441e      	add	r6, r3
 800f298:	e733      	b.n	800f102 <_svfprintf_r+0x1042>
 800f29a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f29c:	3b01      	subs	r3, #1
 800f29e:	9309      	str	r3, [sp, #36]	; 0x24
 800f2a0:	9b07      	ldr	r3, [sp, #28]
 800f2a2:	3b01      	subs	r3, #1
 800f2a4:	9307      	str	r3, [sp, #28]
 800f2a6:	e7af      	b.n	800f208 <_svfprintf_r+0x1148>
 800f2a8:	aa26      	add	r2, sp, #152	; 0x98
 800f2aa:	4641      	mov	r1, r8
 800f2ac:	9803      	ldr	r0, [sp, #12]
 800f2ae:	f001 fe47 	bl	8010f40 <__ssprint_r>
 800f2b2:	2800      	cmp	r0, #0
 800f2b4:	f040 80f0 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f2b8:	ac29      	add	r4, sp, #164	; 0xa4
 800f2ba:	e7b3      	b.n	800f224 <_svfprintf_r+0x1164>
 800f2bc:	aa26      	add	r2, sp, #152	; 0x98
 800f2be:	4641      	mov	r1, r8
 800f2c0:	9803      	ldr	r0, [sp, #12]
 800f2c2:	f001 fe3d 	bl	8010f40 <__ssprint_r>
 800f2c6:	2800      	cmp	r0, #0
 800f2c8:	f040 80e6 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f2cc:	ac29      	add	r4, sp, #164	; 0xa4
 800f2ce:	e7bf      	b.n	800f250 <_svfprintf_r+0x1190>
 800f2d0:	2010      	movs	r0, #16
 800f2d2:	4403      	add	r3, r0
 800f2d4:	2a07      	cmp	r2, #7
 800f2d6:	6060      	str	r0, [r4, #4]
 800f2d8:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800f2dc:	dd08      	ble.n	800f2f0 <_svfprintf_r+0x1230>
 800f2de:	aa26      	add	r2, sp, #152	; 0x98
 800f2e0:	4641      	mov	r1, r8
 800f2e2:	9803      	ldr	r0, [sp, #12]
 800f2e4:	f001 fe2c 	bl	8010f40 <__ssprint_r>
 800f2e8:	2800      	cmp	r0, #0
 800f2ea:	f040 80d5 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f2ee:	a929      	add	r1, sp, #164	; 0xa4
 800f2f0:	3d10      	subs	r5, #16
 800f2f2:	460c      	mov	r4, r1
 800f2f4:	e7b4      	b.n	800f260 <_svfprintf_r+0x11a0>
 800f2f6:	460c      	mov	r4, r1
 800f2f8:	e7cb      	b.n	800f292 <_svfprintf_r+0x11d2>
 800f2fa:	aa26      	add	r2, sp, #152	; 0x98
 800f2fc:	4641      	mov	r1, r8
 800f2fe:	9803      	ldr	r0, [sp, #12]
 800f300:	f001 fe1e 	bl	8010f40 <__ssprint_r>
 800f304:	2800      	cmp	r0, #0
 800f306:	f040 80c7 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f30a:	ac29      	add	r4, sp, #164	; 0xa4
 800f30c:	e719      	b.n	800f142 <_svfprintf_r+0x1082>
 800f30e:	aa26      	add	r2, sp, #152	; 0x98
 800f310:	4641      	mov	r1, r8
 800f312:	9803      	ldr	r0, [sp, #12]
 800f314:	f001 fe14 	bl	8010f40 <__ssprint_r>
 800f318:	2800      	cmp	r0, #0
 800f31a:	f040 80bd 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f31e:	ac29      	add	r4, sp, #164	; 0xa4
 800f320:	e727      	b.n	800f172 <_svfprintf_r+0x10b2>
 800f322:	bf00      	nop
 800f324:	08012610 	.word	0x08012610
 800f328:	9a04      	ldr	r2, [sp, #16]
 800f32a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800f32c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f32e:	2a01      	cmp	r2, #1
 800f330:	f105 0501 	add.w	r5, r5, #1
 800f334:	f103 0301 	add.w	r3, r3, #1
 800f338:	f104 0608 	add.w	r6, r4, #8
 800f33c:	dc02      	bgt.n	800f344 <_svfprintf_r+0x1284>
 800f33e:	f01a 0f01 	tst.w	sl, #1
 800f342:	d07d      	beq.n	800f440 <_svfprintf_r+0x1380>
 800f344:	2201      	movs	r2, #1
 800f346:	2b07      	cmp	r3, #7
 800f348:	f8c4 b000 	str.w	fp, [r4]
 800f34c:	6062      	str	r2, [r4, #4]
 800f34e:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 800f352:	dd08      	ble.n	800f366 <_svfprintf_r+0x12a6>
 800f354:	aa26      	add	r2, sp, #152	; 0x98
 800f356:	4641      	mov	r1, r8
 800f358:	9803      	ldr	r0, [sp, #12]
 800f35a:	f001 fdf1 	bl	8010f40 <__ssprint_r>
 800f35e:	2800      	cmp	r0, #0
 800f360:	f040 809a 	bne.w	800f498 <_svfprintf_r+0x13d8>
 800f364:	ae29      	add	r6, sp, #164	; 0xa4
 800f366:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800f368:	6033      	str	r3, [r6, #0]
 800f36a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f36c:	6073      	str	r3, [r6, #4]
 800f36e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800f370:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f372:	4413      	add	r3, r2
 800f374:	9328      	str	r3, [sp, #160]	; 0xa0
 800f376:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f378:	3301      	adds	r3, #1
 800f37a:	2b07      	cmp	r3, #7
 800f37c:	9327      	str	r3, [sp, #156]	; 0x9c
 800f37e:	dc31      	bgt.n	800f3e4 <_svfprintf_r+0x1324>
 800f380:	3608      	adds	r6, #8
 800f382:	9b04      	ldr	r3, [sp, #16]
 800f384:	2200      	movs	r2, #0
 800f386:	1e5c      	subs	r4, r3, #1
 800f388:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800f38c:	2300      	movs	r3, #0
 800f38e:	f7f8 f91d 	bl	80075cc <__aeabi_dcmpeq>
 800f392:	2800      	cmp	r0, #0
 800f394:	d12f      	bne.n	800f3f6 <_svfprintf_r+0x1336>
 800f396:	f10b 0301 	add.w	r3, fp, #1
 800f39a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 800f39c:	9904      	ldr	r1, [sp, #16]
 800f39e:	e9c6 3400 	strd	r3, r4, [r6]
 800f3a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f3a4:	3201      	adds	r2, #1
 800f3a6:	3b01      	subs	r3, #1
 800f3a8:	440b      	add	r3, r1
 800f3aa:	2a07      	cmp	r2, #7
 800f3ac:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 800f3b0:	dd4f      	ble.n	800f452 <_svfprintf_r+0x1392>
 800f3b2:	aa26      	add	r2, sp, #152	; 0x98
 800f3b4:	4641      	mov	r1, r8
 800f3b6:	9803      	ldr	r0, [sp, #12]
 800f3b8:	f001 fdc2 	bl	8010f40 <__ssprint_r>
 800f3bc:	2800      	cmp	r0, #0
 800f3be:	d16b      	bne.n	800f498 <_svfprintf_r+0x13d8>
 800f3c0:	ae29      	add	r6, sp, #164	; 0xa4
 800f3c2:	ab22      	add	r3, sp, #136	; 0x88
 800f3c4:	6033      	str	r3, [r6, #0]
 800f3c6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800f3c8:	6073      	str	r3, [r6, #4]
 800f3ca:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800f3cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f3ce:	4413      	add	r3, r2
 800f3d0:	9328      	str	r3, [sp, #160]	; 0xa0
 800f3d2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800f3d4:	3301      	adds	r3, #1
 800f3d6:	2b07      	cmp	r3, #7
 800f3d8:	9327      	str	r3, [sp, #156]	; 0x9c
 800f3da:	f73f adb3 	bgt.w	800ef44 <_svfprintf_r+0xe84>
 800f3de:	f106 0408 	add.w	r4, r6, #8
 800f3e2:	e414      	b.n	800ec0e <_svfprintf_r+0xb4e>
 800f3e4:	aa26      	add	r2, sp, #152	; 0x98
 800f3e6:	4641      	mov	r1, r8
 800f3e8:	9803      	ldr	r0, [sp, #12]
 800f3ea:	f001 fda9 	bl	8010f40 <__ssprint_r>
 800f3ee:	2800      	cmp	r0, #0
 800f3f0:	d152      	bne.n	800f498 <_svfprintf_r+0x13d8>
 800f3f2:	ae29      	add	r6, sp, #164	; 0xa4
 800f3f4:	e7c5      	b.n	800f382 <_svfprintf_r+0x12c2>
 800f3f6:	2c00      	cmp	r4, #0
 800f3f8:	dde3      	ble.n	800f3c2 <_svfprintf_r+0x1302>
 800f3fa:	4d3e      	ldr	r5, [pc, #248]	; (800f4f4 <_svfprintf_r+0x1434>)
 800f3fc:	2710      	movs	r7, #16
 800f3fe:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800f402:	2c10      	cmp	r4, #16
 800f404:	f103 0301 	add.w	r3, r3, #1
 800f408:	f106 0108 	add.w	r1, r6, #8
 800f40c:	6035      	str	r5, [r6, #0]
 800f40e:	dc07      	bgt.n	800f420 <_svfprintf_r+0x1360>
 800f410:	6074      	str	r4, [r6, #4]
 800f412:	2b07      	cmp	r3, #7
 800f414:	4414      	add	r4, r2
 800f416:	e9cd 3427 	strd	r3, r4, [sp, #156]	; 0x9c
 800f41a:	dcca      	bgt.n	800f3b2 <_svfprintf_r+0x12f2>
 800f41c:	460e      	mov	r6, r1
 800f41e:	e7d0      	b.n	800f3c2 <_svfprintf_r+0x1302>
 800f420:	3210      	adds	r2, #16
 800f422:	2b07      	cmp	r3, #7
 800f424:	6077      	str	r7, [r6, #4]
 800f426:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 800f42a:	dd06      	ble.n	800f43a <_svfprintf_r+0x137a>
 800f42c:	aa26      	add	r2, sp, #152	; 0x98
 800f42e:	4641      	mov	r1, r8
 800f430:	9803      	ldr	r0, [sp, #12]
 800f432:	f001 fd85 	bl	8010f40 <__ssprint_r>
 800f436:	bb78      	cbnz	r0, 800f498 <_svfprintf_r+0x13d8>
 800f438:	a929      	add	r1, sp, #164	; 0xa4
 800f43a:	3c10      	subs	r4, #16
 800f43c:	460e      	mov	r6, r1
 800f43e:	e7de      	b.n	800f3fe <_svfprintf_r+0x133e>
 800f440:	2201      	movs	r2, #1
 800f442:	2b07      	cmp	r3, #7
 800f444:	f8c4 b000 	str.w	fp, [r4]
 800f448:	6062      	str	r2, [r4, #4]
 800f44a:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 800f44e:	ddb8      	ble.n	800f3c2 <_svfprintf_r+0x1302>
 800f450:	e7af      	b.n	800f3b2 <_svfprintf_r+0x12f2>
 800f452:	3608      	adds	r6, #8
 800f454:	e7b5      	b.n	800f3c2 <_svfprintf_r+0x1302>
 800f456:	460c      	mov	r4, r1
 800f458:	f7ff bbd9 	b.w	800ec0e <_svfprintf_r+0xb4e>
 800f45c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f45e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f460:	1a9d      	subs	r5, r3, r2
 800f462:	2d00      	cmp	r5, #0
 800f464:	f77f abd7 	ble.w	800ec16 <_svfprintf_r+0xb56>
 800f468:	4e23      	ldr	r6, [pc, #140]	; (800f4f8 <_svfprintf_r+0x1438>)
 800f46a:	2710      	movs	r7, #16
 800f46c:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800f470:	2d10      	cmp	r5, #16
 800f472:	f103 0301 	add.w	r3, r3, #1
 800f476:	6026      	str	r6, [r4, #0]
 800f478:	dc18      	bgt.n	800f4ac <_svfprintf_r+0x13ec>
 800f47a:	6065      	str	r5, [r4, #4]
 800f47c:	2b07      	cmp	r3, #7
 800f47e:	4415      	add	r5, r2
 800f480:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 800f484:	f77f abc7 	ble.w	800ec16 <_svfprintf_r+0xb56>
 800f488:	aa26      	add	r2, sp, #152	; 0x98
 800f48a:	4641      	mov	r1, r8
 800f48c:	9803      	ldr	r0, [sp, #12]
 800f48e:	f001 fd57 	bl	8010f40 <__ssprint_r>
 800f492:	2800      	cmp	r0, #0
 800f494:	f43f abbf 	beq.w	800ec16 <_svfprintf_r+0xb56>
 800f498:	f1b9 0f00 	cmp.w	r9, #0
 800f49c:	f43f a8a8 	beq.w	800e5f0 <_svfprintf_r+0x530>
 800f4a0:	4649      	mov	r1, r9
 800f4a2:	9803      	ldr	r0, [sp, #12]
 800f4a4:	f001 f8ba 	bl	801061c <_free_r>
 800f4a8:	f7ff b8a2 	b.w	800e5f0 <_svfprintf_r+0x530>
 800f4ac:	3210      	adds	r2, #16
 800f4ae:	2b07      	cmp	r3, #7
 800f4b0:	6067      	str	r7, [r4, #4]
 800f4b2:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 800f4b6:	dc02      	bgt.n	800f4be <_svfprintf_r+0x13fe>
 800f4b8:	3408      	adds	r4, #8
 800f4ba:	3d10      	subs	r5, #16
 800f4bc:	e7d6      	b.n	800f46c <_svfprintf_r+0x13ac>
 800f4be:	aa26      	add	r2, sp, #152	; 0x98
 800f4c0:	4641      	mov	r1, r8
 800f4c2:	9803      	ldr	r0, [sp, #12]
 800f4c4:	f001 fd3c 	bl	8010f40 <__ssprint_r>
 800f4c8:	2800      	cmp	r0, #0
 800f4ca:	d1e5      	bne.n	800f498 <_svfprintf_r+0x13d8>
 800f4cc:	ac29      	add	r4, sp, #164	; 0xa4
 800f4ce:	e7f4      	b.n	800f4ba <_svfprintf_r+0x13fa>
 800f4d0:	4649      	mov	r1, r9
 800f4d2:	9803      	ldr	r0, [sp, #12]
 800f4d4:	f001 f8a2 	bl	801061c <_free_r>
 800f4d8:	f7ff bbb5 	b.w	800ec46 <_svfprintf_r+0xb86>
 800f4dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800f4de:	2b00      	cmp	r3, #0
 800f4e0:	f43f a886 	beq.w	800e5f0 <_svfprintf_r+0x530>
 800f4e4:	aa26      	add	r2, sp, #152	; 0x98
 800f4e6:	4641      	mov	r1, r8
 800f4e8:	9803      	ldr	r0, [sp, #12]
 800f4ea:	f001 fd29 	bl	8010f40 <__ssprint_r>
 800f4ee:	f7ff b87f 	b.w	800e5f0 <_svfprintf_r+0x530>
 800f4f2:	bf00      	nop
 800f4f4:	08012610 	.word	0x08012610
 800f4f8:	08012600 	.word	0x08012600

0800f4fc <sysconf>:
 800f4fc:	2808      	cmp	r0, #8
 800f4fe:	b508      	push	{r3, lr}
 800f500:	d006      	beq.n	800f510 <sysconf+0x14>
 800f502:	f7fd fe9f 	bl	800d244 <__errno>
 800f506:	2316      	movs	r3, #22
 800f508:	6003      	str	r3, [r0, #0]
 800f50a:	f04f 30ff 	mov.w	r0, #4294967295
 800f50e:	bd08      	pop	{r3, pc}
 800f510:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800f514:	e7fb      	b.n	800f50e <sysconf+0x12>

0800f516 <__swbuf_r>:
 800f516:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f518:	460d      	mov	r5, r1
 800f51a:	4614      	mov	r4, r2
 800f51c:	4606      	mov	r6, r0
 800f51e:	b118      	cbz	r0, 800f528 <__swbuf_r+0x12>
 800f520:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800f522:	b90b      	cbnz	r3, 800f528 <__swbuf_r+0x12>
 800f524:	f000 ffea 	bl	80104fc <__sinit>
 800f528:	69a3      	ldr	r3, [r4, #24]
 800f52a:	60a3      	str	r3, [r4, #8]
 800f52c:	89a3      	ldrh	r3, [r4, #12]
 800f52e:	0719      	lsls	r1, r3, #28
 800f530:	d528      	bpl.n	800f584 <__swbuf_r+0x6e>
 800f532:	6923      	ldr	r3, [r4, #16]
 800f534:	b333      	cbz	r3, 800f584 <__swbuf_r+0x6e>
 800f536:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f53a:	b2ed      	uxtb	r5, r5
 800f53c:	049a      	lsls	r2, r3, #18
 800f53e:	462f      	mov	r7, r5
 800f540:	d52a      	bpl.n	800f598 <__swbuf_r+0x82>
 800f542:	6923      	ldr	r3, [r4, #16]
 800f544:	6820      	ldr	r0, [r4, #0]
 800f546:	1ac0      	subs	r0, r0, r3
 800f548:	6963      	ldr	r3, [r4, #20]
 800f54a:	4283      	cmp	r3, r0
 800f54c:	dc04      	bgt.n	800f558 <__swbuf_r+0x42>
 800f54e:	4621      	mov	r1, r4
 800f550:	4630      	mov	r0, r6
 800f552:	f000 ff67 	bl	8010424 <_fflush_r>
 800f556:	b9d8      	cbnz	r0, 800f590 <__swbuf_r+0x7a>
 800f558:	68a3      	ldr	r3, [r4, #8]
 800f55a:	3b01      	subs	r3, #1
 800f55c:	60a3      	str	r3, [r4, #8]
 800f55e:	6823      	ldr	r3, [r4, #0]
 800f560:	1c5a      	adds	r2, r3, #1
 800f562:	6022      	str	r2, [r4, #0]
 800f564:	701d      	strb	r5, [r3, #0]
 800f566:	6963      	ldr	r3, [r4, #20]
 800f568:	3001      	adds	r0, #1
 800f56a:	4283      	cmp	r3, r0
 800f56c:	d004      	beq.n	800f578 <__swbuf_r+0x62>
 800f56e:	89a3      	ldrh	r3, [r4, #12]
 800f570:	07db      	lsls	r3, r3, #31
 800f572:	d50f      	bpl.n	800f594 <__swbuf_r+0x7e>
 800f574:	2d0a      	cmp	r5, #10
 800f576:	d10d      	bne.n	800f594 <__swbuf_r+0x7e>
 800f578:	4621      	mov	r1, r4
 800f57a:	4630      	mov	r0, r6
 800f57c:	f000 ff52 	bl	8010424 <_fflush_r>
 800f580:	b140      	cbz	r0, 800f594 <__swbuf_r+0x7e>
 800f582:	e005      	b.n	800f590 <__swbuf_r+0x7a>
 800f584:	4621      	mov	r1, r4
 800f586:	4630      	mov	r0, r6
 800f588:	f000 f820 	bl	800f5cc <__swsetup_r>
 800f58c:	2800      	cmp	r0, #0
 800f58e:	d0d2      	beq.n	800f536 <__swbuf_r+0x20>
 800f590:	f04f 37ff 	mov.w	r7, #4294967295
 800f594:	4638      	mov	r0, r7
 800f596:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f598:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800f59c:	81a3      	strh	r3, [r4, #12]
 800f59e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800f5a0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800f5a4:	6663      	str	r3, [r4, #100]	; 0x64
 800f5a6:	e7cc      	b.n	800f542 <__swbuf_r+0x2c>

0800f5a8 <_write_r>:
 800f5a8:	b538      	push	{r3, r4, r5, lr}
 800f5aa:	4c07      	ldr	r4, [pc, #28]	; (800f5c8 <_write_r+0x20>)
 800f5ac:	4605      	mov	r5, r0
 800f5ae:	4608      	mov	r0, r1
 800f5b0:	4611      	mov	r1, r2
 800f5b2:	2200      	movs	r2, #0
 800f5b4:	6022      	str	r2, [r4, #0]
 800f5b6:	461a      	mov	r2, r3
 800f5b8:	f7fa fd0d 	bl	8009fd6 <_write>
 800f5bc:	1c43      	adds	r3, r0, #1
 800f5be:	d102      	bne.n	800f5c6 <_write_r+0x1e>
 800f5c0:	6823      	ldr	r3, [r4, #0]
 800f5c2:	b103      	cbz	r3, 800f5c6 <_write_r+0x1e>
 800f5c4:	602b      	str	r3, [r5, #0]
 800f5c6:	bd38      	pop	{r3, r4, r5, pc}
 800f5c8:	20000a88 	.word	0x20000a88

0800f5cc <__swsetup_r>:
 800f5cc:	b538      	push	{r3, r4, r5, lr}
 800f5ce:	4b2a      	ldr	r3, [pc, #168]	; (800f678 <__swsetup_r+0xac>)
 800f5d0:	4605      	mov	r5, r0
 800f5d2:	6818      	ldr	r0, [r3, #0]
 800f5d4:	460c      	mov	r4, r1
 800f5d6:	b118      	cbz	r0, 800f5e0 <__swsetup_r+0x14>
 800f5d8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800f5da:	b90b      	cbnz	r3, 800f5e0 <__swsetup_r+0x14>
 800f5dc:	f000 ff8e 	bl	80104fc <__sinit>
 800f5e0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f5e4:	b29a      	uxth	r2, r3
 800f5e6:	0711      	lsls	r1, r2, #28
 800f5e8:	d422      	bmi.n	800f630 <__swsetup_r+0x64>
 800f5ea:	06d0      	lsls	r0, r2, #27
 800f5ec:	d407      	bmi.n	800f5fe <__swsetup_r+0x32>
 800f5ee:	2209      	movs	r2, #9
 800f5f0:	602a      	str	r2, [r5, #0]
 800f5f2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f5f6:	81a3      	strh	r3, [r4, #12]
 800f5f8:	f04f 30ff 	mov.w	r0, #4294967295
 800f5fc:	e034      	b.n	800f668 <__swsetup_r+0x9c>
 800f5fe:	0751      	lsls	r1, r2, #29
 800f600:	d512      	bpl.n	800f628 <__swsetup_r+0x5c>
 800f602:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f604:	b141      	cbz	r1, 800f618 <__swsetup_r+0x4c>
 800f606:	f104 0340 	add.w	r3, r4, #64	; 0x40
 800f60a:	4299      	cmp	r1, r3
 800f60c:	d002      	beq.n	800f614 <__swsetup_r+0x48>
 800f60e:	4628      	mov	r0, r5
 800f610:	f001 f804 	bl	801061c <_free_r>
 800f614:	2300      	movs	r3, #0
 800f616:	6323      	str	r3, [r4, #48]	; 0x30
 800f618:	89a3      	ldrh	r3, [r4, #12]
 800f61a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800f61e:	81a3      	strh	r3, [r4, #12]
 800f620:	2300      	movs	r3, #0
 800f622:	6063      	str	r3, [r4, #4]
 800f624:	6923      	ldr	r3, [r4, #16]
 800f626:	6023      	str	r3, [r4, #0]
 800f628:	89a3      	ldrh	r3, [r4, #12]
 800f62a:	f043 0308 	orr.w	r3, r3, #8
 800f62e:	81a3      	strh	r3, [r4, #12]
 800f630:	6923      	ldr	r3, [r4, #16]
 800f632:	b94b      	cbnz	r3, 800f648 <__swsetup_r+0x7c>
 800f634:	89a3      	ldrh	r3, [r4, #12]
 800f636:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800f63a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f63e:	d003      	beq.n	800f648 <__swsetup_r+0x7c>
 800f640:	4621      	mov	r1, r4
 800f642:	4628      	mov	r0, r5
 800f644:	f001 f8fe 	bl	8010844 <__smakebuf_r>
 800f648:	89a2      	ldrh	r2, [r4, #12]
 800f64a:	f012 0301 	ands.w	r3, r2, #1
 800f64e:	d00c      	beq.n	800f66a <__swsetup_r+0x9e>
 800f650:	2300      	movs	r3, #0
 800f652:	60a3      	str	r3, [r4, #8]
 800f654:	6963      	ldr	r3, [r4, #20]
 800f656:	425b      	negs	r3, r3
 800f658:	61a3      	str	r3, [r4, #24]
 800f65a:	6923      	ldr	r3, [r4, #16]
 800f65c:	b953      	cbnz	r3, 800f674 <__swsetup_r+0xa8>
 800f65e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800f662:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 800f666:	d1c4      	bne.n	800f5f2 <__swsetup_r+0x26>
 800f668:	bd38      	pop	{r3, r4, r5, pc}
 800f66a:	0792      	lsls	r2, r2, #30
 800f66c:	bf58      	it	pl
 800f66e:	6963      	ldrpl	r3, [r4, #20]
 800f670:	60a3      	str	r3, [r4, #8]
 800f672:	e7f2      	b.n	800f65a <__swsetup_r+0x8e>
 800f674:	2000      	movs	r0, #0
 800f676:	e7f7      	b.n	800f668 <__swsetup_r+0x9c>
 800f678:	20000014 	.word	0x20000014

0800f67c <register_fini>:
 800f67c:	4b02      	ldr	r3, [pc, #8]	; (800f688 <register_fini+0xc>)
 800f67e:	b113      	cbz	r3, 800f686 <register_fini+0xa>
 800f680:	4802      	ldr	r0, [pc, #8]	; (800f68c <register_fini+0x10>)
 800f682:	f000 b805 	b.w	800f690 <atexit>
 800f686:	4770      	bx	lr
 800f688:	00000000 	.word	0x00000000
 800f68c:	0801054d 	.word	0x0801054d

0800f690 <atexit>:
 800f690:	2300      	movs	r3, #0
 800f692:	4601      	mov	r1, r0
 800f694:	461a      	mov	r2, r3
 800f696:	4618      	mov	r0, r3
 800f698:	f001 bcca 	b.w	8011030 <__register_exitproc>

0800f69c <quorem>:
 800f69c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6a0:	6903      	ldr	r3, [r0, #16]
 800f6a2:	690c      	ldr	r4, [r1, #16]
 800f6a4:	42a3      	cmp	r3, r4
 800f6a6:	4680      	mov	r8, r0
 800f6a8:	f2c0 8082 	blt.w	800f7b0 <quorem+0x114>
 800f6ac:	3c01      	subs	r4, #1
 800f6ae:	f101 0714 	add.w	r7, r1, #20
 800f6b2:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 800f6b6:	f100 0614 	add.w	r6, r0, #20
 800f6ba:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 800f6be:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 800f6c2:	eb06 030c 	add.w	r3, r6, ip
 800f6c6:	3501      	adds	r5, #1
 800f6c8:	eb07 090c 	add.w	r9, r7, ip
 800f6cc:	9301      	str	r3, [sp, #4]
 800f6ce:	fbb0 f5f5 	udiv	r5, r0, r5
 800f6d2:	b395      	cbz	r5, 800f73a <quorem+0x9e>
 800f6d4:	f04f 0a00 	mov.w	sl, #0
 800f6d8:	4638      	mov	r0, r7
 800f6da:	46b6      	mov	lr, r6
 800f6dc:	46d3      	mov	fp, sl
 800f6de:	f850 2b04 	ldr.w	r2, [r0], #4
 800f6e2:	b293      	uxth	r3, r2
 800f6e4:	fb05 a303 	mla	r3, r5, r3, sl
 800f6e8:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800f6ec:	b29b      	uxth	r3, r3
 800f6ee:	ebab 0303 	sub.w	r3, fp, r3
 800f6f2:	0c12      	lsrs	r2, r2, #16
 800f6f4:	f8de b000 	ldr.w	fp, [lr]
 800f6f8:	fb05 a202 	mla	r2, r5, r2, sl
 800f6fc:	fa13 f38b 	uxtah	r3, r3, fp
 800f700:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 800f704:	fa1f fb82 	uxth.w	fp, r2
 800f708:	f8de 2000 	ldr.w	r2, [lr]
 800f70c:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 800f710:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800f714:	b29b      	uxth	r3, r3
 800f716:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800f71a:	4581      	cmp	r9, r0
 800f71c:	ea4f 4b22 	mov.w	fp, r2, asr #16
 800f720:	f84e 3b04 	str.w	r3, [lr], #4
 800f724:	d2db      	bcs.n	800f6de <quorem+0x42>
 800f726:	f856 300c 	ldr.w	r3, [r6, ip]
 800f72a:	b933      	cbnz	r3, 800f73a <quorem+0x9e>
 800f72c:	9b01      	ldr	r3, [sp, #4]
 800f72e:	3b04      	subs	r3, #4
 800f730:	429e      	cmp	r6, r3
 800f732:	461a      	mov	r2, r3
 800f734:	d330      	bcc.n	800f798 <quorem+0xfc>
 800f736:	f8c8 4010 	str.w	r4, [r8, #16]
 800f73a:	4640      	mov	r0, r8
 800f73c:	f001 faac 	bl	8010c98 <__mcmp>
 800f740:	2800      	cmp	r0, #0
 800f742:	db25      	blt.n	800f790 <quorem+0xf4>
 800f744:	3501      	adds	r5, #1
 800f746:	4630      	mov	r0, r6
 800f748:	f04f 0c00 	mov.w	ip, #0
 800f74c:	f857 2b04 	ldr.w	r2, [r7], #4
 800f750:	f8d0 e000 	ldr.w	lr, [r0]
 800f754:	b293      	uxth	r3, r2
 800f756:	ebac 0303 	sub.w	r3, ip, r3
 800f75a:	0c12      	lsrs	r2, r2, #16
 800f75c:	fa13 f38e 	uxtah	r3, r3, lr
 800f760:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800f764:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800f768:	b29b      	uxth	r3, r3
 800f76a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800f76e:	45b9      	cmp	r9, r7
 800f770:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800f774:	f840 3b04 	str.w	r3, [r0], #4
 800f778:	d2e8      	bcs.n	800f74c <quorem+0xb0>
 800f77a:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 800f77e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 800f782:	b92a      	cbnz	r2, 800f790 <quorem+0xf4>
 800f784:	3b04      	subs	r3, #4
 800f786:	429e      	cmp	r6, r3
 800f788:	461a      	mov	r2, r3
 800f78a:	d30b      	bcc.n	800f7a4 <quorem+0x108>
 800f78c:	f8c8 4010 	str.w	r4, [r8, #16]
 800f790:	4628      	mov	r0, r5
 800f792:	b003      	add	sp, #12
 800f794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f798:	6812      	ldr	r2, [r2, #0]
 800f79a:	3b04      	subs	r3, #4
 800f79c:	2a00      	cmp	r2, #0
 800f79e:	d1ca      	bne.n	800f736 <quorem+0x9a>
 800f7a0:	3c01      	subs	r4, #1
 800f7a2:	e7c5      	b.n	800f730 <quorem+0x94>
 800f7a4:	6812      	ldr	r2, [r2, #0]
 800f7a6:	3b04      	subs	r3, #4
 800f7a8:	2a00      	cmp	r2, #0
 800f7aa:	d1ef      	bne.n	800f78c <quorem+0xf0>
 800f7ac:	3c01      	subs	r4, #1
 800f7ae:	e7ea      	b.n	800f786 <quorem+0xea>
 800f7b0:	2000      	movs	r0, #0
 800f7b2:	e7ee      	b.n	800f792 <quorem+0xf6>
 800f7b4:	0000      	movs	r0, r0
	...

0800f7b8 <_dtoa_r>:
 800f7b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7bc:	b097      	sub	sp, #92	; 0x5c
 800f7be:	ec57 6b10 	vmov	r6, r7, d0
 800f7c2:	9106      	str	r1, [sp, #24]
 800f7c4:	6c01      	ldr	r1, [r0, #64]	; 0x40
 800f7c6:	920b      	str	r2, [sp, #44]	; 0x2c
 800f7c8:	4604      	mov	r4, r0
 800f7ca:	9312      	str	r3, [sp, #72]	; 0x48
 800f7cc:	9d20      	ldr	r5, [sp, #128]	; 0x80
 800f7ce:	e9cd 6700 	strd	r6, r7, [sp]
 800f7d2:	b141      	cbz	r1, 800f7e6 <_dtoa_r+0x2e>
 800f7d4:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800f7d6:	604a      	str	r2, [r1, #4]
 800f7d8:	2301      	movs	r3, #1
 800f7da:	4093      	lsls	r3, r2
 800f7dc:	608b      	str	r3, [r1, #8]
 800f7de:	f001 f896 	bl	801090e <_Bfree>
 800f7e2:	2300      	movs	r3, #0
 800f7e4:	6423      	str	r3, [r4, #64]	; 0x40
 800f7e6:	1e3b      	subs	r3, r7, #0
 800f7e8:	bfb9      	ittee	lt
 800f7ea:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800f7ee:	9301      	strlt	r3, [sp, #4]
 800f7f0:	2300      	movge	r3, #0
 800f7f2:	602b      	strge	r3, [r5, #0]
 800f7f4:	f8dd 8004 	ldr.w	r8, [sp, #4]
 800f7f8:	4baf      	ldr	r3, [pc, #700]	; (800fab8 <_dtoa_r+0x300>)
 800f7fa:	bfbc      	itt	lt
 800f7fc:	2201      	movlt	r2, #1
 800f7fe:	602a      	strlt	r2, [r5, #0]
 800f800:	ea33 0308 	bics.w	r3, r3, r8
 800f804:	d116      	bne.n	800f834 <_dtoa_r+0x7c>
 800f806:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f808:	f242 730f 	movw	r3, #9999	; 0x270f
 800f80c:	6013      	str	r3, [r2, #0]
 800f80e:	9b00      	ldr	r3, [sp, #0]
 800f810:	b923      	cbnz	r3, 800f81c <_dtoa_r+0x64>
 800f812:	f3c8 0013 	ubfx	r0, r8, #0, #20
 800f816:	2800      	cmp	r0, #0
 800f818:	f000 8543 	beq.w	80102a2 <_dtoa_r+0xaea>
 800f81c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800f81e:	f8df b2ac 	ldr.w	fp, [pc, #684]	; 800facc <_dtoa_r+0x314>
 800f822:	b11b      	cbz	r3, 800f82c <_dtoa_r+0x74>
 800f824:	f10b 0303 	add.w	r3, fp, #3
 800f828:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f82a:	6013      	str	r3, [r2, #0]
 800f82c:	4658      	mov	r0, fp
 800f82e:	b017      	add	sp, #92	; 0x5c
 800f830:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f834:	e9dd 6700 	ldrd	r6, r7, [sp]
 800f838:	2200      	movs	r2, #0
 800f83a:	2300      	movs	r3, #0
 800f83c:	4630      	mov	r0, r6
 800f83e:	4639      	mov	r1, r7
 800f840:	f7f7 fec4 	bl	80075cc <__aeabi_dcmpeq>
 800f844:	4681      	mov	r9, r0
 800f846:	b160      	cbz	r0, 800f862 <_dtoa_r+0xaa>
 800f848:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f84a:	2301      	movs	r3, #1
 800f84c:	6013      	str	r3, [r2, #0]
 800f84e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800f850:	2b00      	cmp	r3, #0
 800f852:	f000 8522 	beq.w	801029a <_dtoa_r+0xae2>
 800f856:	4b99      	ldr	r3, [pc, #612]	; (800fabc <_dtoa_r+0x304>)
 800f858:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f85a:	f103 3bff 	add.w	fp, r3, #4294967295
 800f85e:	6013      	str	r3, [r2, #0]
 800f860:	e7e4      	b.n	800f82c <_dtoa_r+0x74>
 800f862:	aa14      	add	r2, sp, #80	; 0x50
 800f864:	a915      	add	r1, sp, #84	; 0x54
 800f866:	ec47 6b10 	vmov	d0, r6, r7
 800f86a:	4620      	mov	r0, r4
 800f86c:	f001 fa8b 	bl	8010d86 <__d2b>
 800f870:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800f874:	9004      	str	r0, [sp, #16]
 800f876:	2d00      	cmp	r5, #0
 800f878:	d07c      	beq.n	800f974 <_dtoa_r+0x1bc>
 800f87a:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800f87e:	f043 5b7f 	orr.w	fp, r3, #1069547520	; 0x3fc00000
 800f882:	46b2      	mov	sl, r6
 800f884:	f44b 1b40 	orr.w	fp, fp, #3145728	; 0x300000
 800f888:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800f88c:	f8cd 904c 	str.w	r9, [sp, #76]	; 0x4c
 800f890:	2200      	movs	r2, #0
 800f892:	4b8b      	ldr	r3, [pc, #556]	; (800fac0 <_dtoa_r+0x308>)
 800f894:	4650      	mov	r0, sl
 800f896:	4659      	mov	r1, fp
 800f898:	f7f7 fa78 	bl	8006d8c <__aeabi_dsub>
 800f89c:	a380      	add	r3, pc, #512	; (adr r3, 800faa0 <_dtoa_r+0x2e8>)
 800f89e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f8a2:	f7f7 fc2b 	bl	80070fc <__aeabi_dmul>
 800f8a6:	a380      	add	r3, pc, #512	; (adr r3, 800faa8 <_dtoa_r+0x2f0>)
 800f8a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f8ac:	f7f7 fa70 	bl	8006d90 <__adddf3>
 800f8b0:	4606      	mov	r6, r0
 800f8b2:	4628      	mov	r0, r5
 800f8b4:	460f      	mov	r7, r1
 800f8b6:	f7f7 fbb7 	bl	8007028 <__aeabi_i2d>
 800f8ba:	a37d      	add	r3, pc, #500	; (adr r3, 800fab0 <_dtoa_r+0x2f8>)
 800f8bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f8c0:	f7f7 fc1c 	bl	80070fc <__aeabi_dmul>
 800f8c4:	4602      	mov	r2, r0
 800f8c6:	460b      	mov	r3, r1
 800f8c8:	4630      	mov	r0, r6
 800f8ca:	4639      	mov	r1, r7
 800f8cc:	f7f7 fa60 	bl	8006d90 <__adddf3>
 800f8d0:	4606      	mov	r6, r0
 800f8d2:	460f      	mov	r7, r1
 800f8d4:	f7f7 fec2 	bl	800765c <__aeabi_d2iz>
 800f8d8:	2200      	movs	r2, #0
 800f8da:	4682      	mov	sl, r0
 800f8dc:	2300      	movs	r3, #0
 800f8de:	4630      	mov	r0, r6
 800f8e0:	4639      	mov	r1, r7
 800f8e2:	f7f7 fe7d 	bl	80075e0 <__aeabi_dcmplt>
 800f8e6:	b148      	cbz	r0, 800f8fc <_dtoa_r+0x144>
 800f8e8:	4650      	mov	r0, sl
 800f8ea:	f7f7 fb9d 	bl	8007028 <__aeabi_i2d>
 800f8ee:	4632      	mov	r2, r6
 800f8f0:	463b      	mov	r3, r7
 800f8f2:	f7f7 fe6b 	bl	80075cc <__aeabi_dcmpeq>
 800f8f6:	b908      	cbnz	r0, 800f8fc <_dtoa_r+0x144>
 800f8f8:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f8fc:	f1ba 0f16 	cmp.w	sl, #22
 800f900:	d859      	bhi.n	800f9b6 <_dtoa_r+0x1fe>
 800f902:	4970      	ldr	r1, [pc, #448]	; (800fac4 <_dtoa_r+0x30c>)
 800f904:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 800f908:	e9dd 2300 	ldrd	r2, r3, [sp]
 800f90c:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f910:	f7f7 fe84 	bl	800761c <__aeabi_dcmpgt>
 800f914:	2800      	cmp	r0, #0
 800f916:	d050      	beq.n	800f9ba <_dtoa_r+0x202>
 800f918:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f91c:	2300      	movs	r3, #0
 800f91e:	930f      	str	r3, [sp, #60]	; 0x3c
 800f920:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800f922:	1b5d      	subs	r5, r3, r5
 800f924:	f1b5 0801 	subs.w	r8, r5, #1
 800f928:	bf49      	itett	mi
 800f92a:	f1c5 0301 	rsbmi	r3, r5, #1
 800f92e:	2300      	movpl	r3, #0
 800f930:	9305      	strmi	r3, [sp, #20]
 800f932:	f04f 0800 	movmi.w	r8, #0
 800f936:	bf58      	it	pl
 800f938:	9305      	strpl	r3, [sp, #20]
 800f93a:	f1ba 0f00 	cmp.w	sl, #0
 800f93e:	db3e      	blt.n	800f9be <_dtoa_r+0x206>
 800f940:	2300      	movs	r3, #0
 800f942:	44d0      	add	r8, sl
 800f944:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 800f948:	9307      	str	r3, [sp, #28]
 800f94a:	9b06      	ldr	r3, [sp, #24]
 800f94c:	2b09      	cmp	r3, #9
 800f94e:	f200 808d 	bhi.w	800fa6c <_dtoa_r+0x2b4>
 800f952:	2b05      	cmp	r3, #5
 800f954:	bfc4      	itt	gt
 800f956:	3b04      	subgt	r3, #4
 800f958:	9306      	strgt	r3, [sp, #24]
 800f95a:	9b06      	ldr	r3, [sp, #24]
 800f95c:	f1a3 0302 	sub.w	r3, r3, #2
 800f960:	bfcc      	ite	gt
 800f962:	2500      	movgt	r5, #0
 800f964:	2501      	movle	r5, #1
 800f966:	2b03      	cmp	r3, #3
 800f968:	f200 808c 	bhi.w	800fa84 <_dtoa_r+0x2cc>
 800f96c:	e8df f003 	tbb	[pc, r3]
 800f970:	6e317c7a 	.word	0x6e317c7a
 800f974:	e9dd 5314 	ldrd	r5, r3, [sp, #80]	; 0x50
 800f978:	441d      	add	r5, r3
 800f97a:	f205 4032 	addw	r0, r5, #1074	; 0x432
 800f97e:	2820      	cmp	r0, #32
 800f980:	dd13      	ble.n	800f9aa <_dtoa_r+0x1f2>
 800f982:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 800f986:	9b00      	ldr	r3, [sp, #0]
 800f988:	fa08 f800 	lsl.w	r8, r8, r0
 800f98c:	f205 4012 	addw	r0, r5, #1042	; 0x412
 800f990:	fa23 f000 	lsr.w	r0, r3, r0
 800f994:	ea48 0000 	orr.w	r0, r8, r0
 800f998:	f7f7 fb36 	bl	8007008 <__aeabi_ui2d>
 800f99c:	2301      	movs	r3, #1
 800f99e:	4682      	mov	sl, r0
 800f9a0:	f1a1 7bf8 	sub.w	fp, r1, #32505856	; 0x1f00000
 800f9a4:	3d01      	subs	r5, #1
 800f9a6:	9313      	str	r3, [sp, #76]	; 0x4c
 800f9a8:	e772      	b.n	800f890 <_dtoa_r+0xd8>
 800f9aa:	9b00      	ldr	r3, [sp, #0]
 800f9ac:	f1c0 0020 	rsb	r0, r0, #32
 800f9b0:	fa03 f000 	lsl.w	r0, r3, r0
 800f9b4:	e7f0      	b.n	800f998 <_dtoa_r+0x1e0>
 800f9b6:	2301      	movs	r3, #1
 800f9b8:	e7b1      	b.n	800f91e <_dtoa_r+0x166>
 800f9ba:	900f      	str	r0, [sp, #60]	; 0x3c
 800f9bc:	e7b0      	b.n	800f920 <_dtoa_r+0x168>
 800f9be:	9b05      	ldr	r3, [sp, #20]
 800f9c0:	eba3 030a 	sub.w	r3, r3, sl
 800f9c4:	9305      	str	r3, [sp, #20]
 800f9c6:	f1ca 0300 	rsb	r3, sl, #0
 800f9ca:	9307      	str	r3, [sp, #28]
 800f9cc:	2300      	movs	r3, #0
 800f9ce:	930e      	str	r3, [sp, #56]	; 0x38
 800f9d0:	e7bb      	b.n	800f94a <_dtoa_r+0x192>
 800f9d2:	2301      	movs	r3, #1
 800f9d4:	930a      	str	r3, [sp, #40]	; 0x28
 800f9d6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f9d8:	2b00      	cmp	r3, #0
 800f9da:	dd56      	ble.n	800fa8a <_dtoa_r+0x2d2>
 800f9dc:	9302      	str	r3, [sp, #8]
 800f9de:	4699      	mov	r9, r3
 800f9e0:	2200      	movs	r2, #0
 800f9e2:	6462      	str	r2, [r4, #68]	; 0x44
 800f9e4:	2204      	movs	r2, #4
 800f9e6:	f102 0014 	add.w	r0, r2, #20
 800f9ea:	4298      	cmp	r0, r3
 800f9ec:	6c61      	ldr	r1, [r4, #68]	; 0x44
 800f9ee:	d951      	bls.n	800fa94 <_dtoa_r+0x2dc>
 800f9f0:	4620      	mov	r0, r4
 800f9f2:	f000 ff67 	bl	80108c4 <_Balloc>
 800f9f6:	f1b9 0f0e 	cmp.w	r9, #14
 800f9fa:	4683      	mov	fp, r0
 800f9fc:	6420      	str	r0, [r4, #64]	; 0x40
 800f9fe:	f200 80e8 	bhi.w	800fbd2 <_dtoa_r+0x41a>
 800fa02:	2d00      	cmp	r5, #0
 800fa04:	f000 80e5 	beq.w	800fbd2 <_dtoa_r+0x41a>
 800fa08:	ed9d 7b00 	vldr	d7, [sp]
 800fa0c:	f1ba 0f00 	cmp.w	sl, #0
 800fa10:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
 800fa14:	dd76      	ble.n	800fb04 <_dtoa_r+0x34c>
 800fa16:	4a2b      	ldr	r2, [pc, #172]	; (800fac4 <_dtoa_r+0x30c>)
 800fa18:	f00a 030f 	and.w	r3, sl, #15
 800fa1c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800fa20:	ed93 7b00 	vldr	d7, [r3]
 800fa24:	ea4f 162a 	mov.w	r6, sl, asr #4
 800fa28:	06f0      	lsls	r0, r6, #27
 800fa2a:	ed8d 7b08 	vstr	d7, [sp, #32]
 800fa2e:	d567      	bpl.n	800fb00 <_dtoa_r+0x348>
 800fa30:	4b25      	ldr	r3, [pc, #148]	; (800fac8 <_dtoa_r+0x310>)
 800fa32:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800fa36:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800fa3a:	f7f7 fc89 	bl	8007350 <__aeabi_ddiv>
 800fa3e:	e9cd 0100 	strd	r0, r1, [sp]
 800fa42:	f006 060f 	and.w	r6, r6, #15
 800fa46:	2503      	movs	r5, #3
 800fa48:	4f1f      	ldr	r7, [pc, #124]	; (800fac8 <_dtoa_r+0x310>)
 800fa4a:	e04e      	b.n	800faea <_dtoa_r+0x332>
 800fa4c:	2301      	movs	r3, #1
 800fa4e:	930a      	str	r3, [sp, #40]	; 0x28
 800fa50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fa52:	4453      	add	r3, sl
 800fa54:	f103 0901 	add.w	r9, r3, #1
 800fa58:	9302      	str	r3, [sp, #8]
 800fa5a:	464b      	mov	r3, r9
 800fa5c:	2b01      	cmp	r3, #1
 800fa5e:	bfb8      	it	lt
 800fa60:	2301      	movlt	r3, #1
 800fa62:	e7bd      	b.n	800f9e0 <_dtoa_r+0x228>
 800fa64:	2300      	movs	r3, #0
 800fa66:	e7b5      	b.n	800f9d4 <_dtoa_r+0x21c>
 800fa68:	2300      	movs	r3, #0
 800fa6a:	e7f0      	b.n	800fa4e <_dtoa_r+0x296>
 800fa6c:	2501      	movs	r5, #1
 800fa6e:	2300      	movs	r3, #0
 800fa70:	9306      	str	r3, [sp, #24]
 800fa72:	950a      	str	r5, [sp, #40]	; 0x28
 800fa74:	f04f 33ff 	mov.w	r3, #4294967295
 800fa78:	9302      	str	r3, [sp, #8]
 800fa7a:	4699      	mov	r9, r3
 800fa7c:	2200      	movs	r2, #0
 800fa7e:	2312      	movs	r3, #18
 800fa80:	920b      	str	r2, [sp, #44]	; 0x2c
 800fa82:	e7ad      	b.n	800f9e0 <_dtoa_r+0x228>
 800fa84:	2301      	movs	r3, #1
 800fa86:	930a      	str	r3, [sp, #40]	; 0x28
 800fa88:	e7f4      	b.n	800fa74 <_dtoa_r+0x2bc>
 800fa8a:	2301      	movs	r3, #1
 800fa8c:	9302      	str	r3, [sp, #8]
 800fa8e:	4699      	mov	r9, r3
 800fa90:	461a      	mov	r2, r3
 800fa92:	e7f5      	b.n	800fa80 <_dtoa_r+0x2c8>
 800fa94:	3101      	adds	r1, #1
 800fa96:	6461      	str	r1, [r4, #68]	; 0x44
 800fa98:	0052      	lsls	r2, r2, #1
 800fa9a:	e7a4      	b.n	800f9e6 <_dtoa_r+0x22e>
 800fa9c:	f3af 8000 	nop.w
 800faa0:	636f4361 	.word	0x636f4361
 800faa4:	3fd287a7 	.word	0x3fd287a7
 800faa8:	8b60c8b3 	.word	0x8b60c8b3
 800faac:	3fc68a28 	.word	0x3fc68a28
 800fab0:	509f79fb 	.word	0x509f79fb
 800fab4:	3fd34413 	.word	0x3fd34413
 800fab8:	7ff00000 	.word	0x7ff00000
 800fabc:	080125ff 	.word	0x080125ff
 800fac0:	3ff80000 	.word	0x3ff80000
 800fac4:	08012658 	.word	0x08012658
 800fac8:	08012630 	.word	0x08012630
 800facc:	08012629 	.word	0x08012629
 800fad0:	07f1      	lsls	r1, r6, #31
 800fad2:	d508      	bpl.n	800fae6 <_dtoa_r+0x32e>
 800fad4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800fad8:	e9d7 2300 	ldrd	r2, r3, [r7]
 800fadc:	f7f7 fb0e 	bl	80070fc <__aeabi_dmul>
 800fae0:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800fae4:	3501      	adds	r5, #1
 800fae6:	1076      	asrs	r6, r6, #1
 800fae8:	3708      	adds	r7, #8
 800faea:	2e00      	cmp	r6, #0
 800faec:	d1f0      	bne.n	800fad0 <_dtoa_r+0x318>
 800faee:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800faf2:	e9dd 0100 	ldrd	r0, r1, [sp]
 800faf6:	f7f7 fc2b 	bl	8007350 <__aeabi_ddiv>
 800fafa:	e9cd 0100 	strd	r0, r1, [sp]
 800fafe:	e01a      	b.n	800fb36 <_dtoa_r+0x37e>
 800fb00:	2502      	movs	r5, #2
 800fb02:	e7a1      	b.n	800fa48 <_dtoa_r+0x290>
 800fb04:	f000 80a0 	beq.w	800fc48 <_dtoa_r+0x490>
 800fb08:	f1ca 0600 	rsb	r6, sl, #0
 800fb0c:	4b9f      	ldr	r3, [pc, #636]	; (800fd8c <_dtoa_r+0x5d4>)
 800fb0e:	4fa0      	ldr	r7, [pc, #640]	; (800fd90 <_dtoa_r+0x5d8>)
 800fb10:	f006 020f 	and.w	r2, r6, #15
 800fb14:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800fb18:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fb1c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800fb20:	f7f7 faec 	bl	80070fc <__aeabi_dmul>
 800fb24:	e9cd 0100 	strd	r0, r1, [sp]
 800fb28:	1136      	asrs	r6, r6, #4
 800fb2a:	2300      	movs	r3, #0
 800fb2c:	2502      	movs	r5, #2
 800fb2e:	2e00      	cmp	r6, #0
 800fb30:	d17f      	bne.n	800fc32 <_dtoa_r+0x47a>
 800fb32:	2b00      	cmp	r3, #0
 800fb34:	d1e1      	bne.n	800fafa <_dtoa_r+0x342>
 800fb36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fb38:	2b00      	cmp	r3, #0
 800fb3a:	f000 8087 	beq.w	800fc4c <_dtoa_r+0x494>
 800fb3e:	e9dd 6700 	ldrd	r6, r7, [sp]
 800fb42:	2200      	movs	r2, #0
 800fb44:	4b93      	ldr	r3, [pc, #588]	; (800fd94 <_dtoa_r+0x5dc>)
 800fb46:	4630      	mov	r0, r6
 800fb48:	4639      	mov	r1, r7
 800fb4a:	f7f7 fd49 	bl	80075e0 <__aeabi_dcmplt>
 800fb4e:	2800      	cmp	r0, #0
 800fb50:	d07c      	beq.n	800fc4c <_dtoa_r+0x494>
 800fb52:	f1b9 0f00 	cmp.w	r9, #0
 800fb56:	d079      	beq.n	800fc4c <_dtoa_r+0x494>
 800fb58:	9b02      	ldr	r3, [sp, #8]
 800fb5a:	2b00      	cmp	r3, #0
 800fb5c:	dd35      	ble.n	800fbca <_dtoa_r+0x412>
 800fb5e:	f10a 33ff 	add.w	r3, sl, #4294967295
 800fb62:	9308      	str	r3, [sp, #32]
 800fb64:	4639      	mov	r1, r7
 800fb66:	2200      	movs	r2, #0
 800fb68:	4b8b      	ldr	r3, [pc, #556]	; (800fd98 <_dtoa_r+0x5e0>)
 800fb6a:	4630      	mov	r0, r6
 800fb6c:	f7f7 fac6 	bl	80070fc <__aeabi_dmul>
 800fb70:	e9cd 0100 	strd	r0, r1, [sp]
 800fb74:	9f02      	ldr	r7, [sp, #8]
 800fb76:	3501      	adds	r5, #1
 800fb78:	4628      	mov	r0, r5
 800fb7a:	f7f7 fa55 	bl	8007028 <__aeabi_i2d>
 800fb7e:	e9dd 2300 	ldrd	r2, r3, [sp]
 800fb82:	f7f7 fabb 	bl	80070fc <__aeabi_dmul>
 800fb86:	2200      	movs	r2, #0
 800fb88:	4b84      	ldr	r3, [pc, #528]	; (800fd9c <_dtoa_r+0x5e4>)
 800fb8a:	f7f7 f901 	bl	8006d90 <__adddf3>
 800fb8e:	4605      	mov	r5, r0
 800fb90:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800fb94:	2f00      	cmp	r7, #0
 800fb96:	d15d      	bne.n	800fc54 <_dtoa_r+0x49c>
 800fb98:	2200      	movs	r2, #0
 800fb9a:	4b81      	ldr	r3, [pc, #516]	; (800fda0 <_dtoa_r+0x5e8>)
 800fb9c:	e9dd 0100 	ldrd	r0, r1, [sp]
 800fba0:	f7f7 f8f4 	bl	8006d8c <__aeabi_dsub>
 800fba4:	462a      	mov	r2, r5
 800fba6:	4633      	mov	r3, r6
 800fba8:	e9cd 0100 	strd	r0, r1, [sp]
 800fbac:	f7f7 fd36 	bl	800761c <__aeabi_dcmpgt>
 800fbb0:	2800      	cmp	r0, #0
 800fbb2:	f040 8288 	bne.w	80100c6 <_dtoa_r+0x90e>
 800fbb6:	462a      	mov	r2, r5
 800fbb8:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800fbbc:	e9dd 0100 	ldrd	r0, r1, [sp]
 800fbc0:	f7f7 fd0e 	bl	80075e0 <__aeabi_dcmplt>
 800fbc4:	2800      	cmp	r0, #0
 800fbc6:	f040 827c 	bne.w	80100c2 <_dtoa_r+0x90a>
 800fbca:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800fbce:	e9cd 2300 	strd	r2, r3, [sp]
 800fbd2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fbd4:	2b00      	cmp	r3, #0
 800fbd6:	f2c0 8150 	blt.w	800fe7a <_dtoa_r+0x6c2>
 800fbda:	f1ba 0f0e 	cmp.w	sl, #14
 800fbde:	f300 814c 	bgt.w	800fe7a <_dtoa_r+0x6c2>
 800fbe2:	4b6a      	ldr	r3, [pc, #424]	; (800fd8c <_dtoa_r+0x5d4>)
 800fbe4:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800fbe8:	ed93 7b00 	vldr	d7, [r3]
 800fbec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800fbee:	2b00      	cmp	r3, #0
 800fbf0:	ed8d 7b02 	vstr	d7, [sp, #8]
 800fbf4:	f280 80d8 	bge.w	800fda8 <_dtoa_r+0x5f0>
 800fbf8:	f1b9 0f00 	cmp.w	r9, #0
 800fbfc:	f300 80d4 	bgt.w	800fda8 <_dtoa_r+0x5f0>
 800fc00:	f040 825e 	bne.w	80100c0 <_dtoa_r+0x908>
 800fc04:	2200      	movs	r2, #0
 800fc06:	4b66      	ldr	r3, [pc, #408]	; (800fda0 <_dtoa_r+0x5e8>)
 800fc08:	ec51 0b17 	vmov	r0, r1, d7
 800fc0c:	f7f7 fa76 	bl	80070fc <__aeabi_dmul>
 800fc10:	e9dd 2300 	ldrd	r2, r3, [sp]
 800fc14:	f7f7 fcf8 	bl	8007608 <__aeabi_dcmpge>
 800fc18:	464f      	mov	r7, r9
 800fc1a:	464e      	mov	r6, r9
 800fc1c:	2800      	cmp	r0, #0
 800fc1e:	f040 8234 	bne.w	801008a <_dtoa_r+0x8d2>
 800fc22:	2331      	movs	r3, #49	; 0x31
 800fc24:	f10b 0501 	add.w	r5, fp, #1
 800fc28:	f88b 3000 	strb.w	r3, [fp]
 800fc2c:	f10a 0a01 	add.w	sl, sl, #1
 800fc30:	e22f      	b.n	8010092 <_dtoa_r+0x8da>
 800fc32:	07f2      	lsls	r2, r6, #31
 800fc34:	d505      	bpl.n	800fc42 <_dtoa_r+0x48a>
 800fc36:	e9d7 2300 	ldrd	r2, r3, [r7]
 800fc3a:	f7f7 fa5f 	bl	80070fc <__aeabi_dmul>
 800fc3e:	3501      	adds	r5, #1
 800fc40:	2301      	movs	r3, #1
 800fc42:	1076      	asrs	r6, r6, #1
 800fc44:	3708      	adds	r7, #8
 800fc46:	e772      	b.n	800fb2e <_dtoa_r+0x376>
 800fc48:	2502      	movs	r5, #2
 800fc4a:	e774      	b.n	800fb36 <_dtoa_r+0x37e>
 800fc4c:	f8cd a020 	str.w	sl, [sp, #32]
 800fc50:	464f      	mov	r7, r9
 800fc52:	e791      	b.n	800fb78 <_dtoa_r+0x3c0>
 800fc54:	4b4d      	ldr	r3, [pc, #308]	; (800fd8c <_dtoa_r+0x5d4>)
 800fc56:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800fc5a:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 800fc5e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fc60:	2b00      	cmp	r3, #0
 800fc62:	d047      	beq.n	800fcf4 <_dtoa_r+0x53c>
 800fc64:	4602      	mov	r2, r0
 800fc66:	460b      	mov	r3, r1
 800fc68:	2000      	movs	r0, #0
 800fc6a:	494e      	ldr	r1, [pc, #312]	; (800fda4 <_dtoa_r+0x5ec>)
 800fc6c:	f7f7 fb70 	bl	8007350 <__aeabi_ddiv>
 800fc70:	462a      	mov	r2, r5
 800fc72:	4633      	mov	r3, r6
 800fc74:	f7f7 f88a 	bl	8006d8c <__aeabi_dsub>
 800fc78:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 800fc7c:	465d      	mov	r5, fp
 800fc7e:	e9dd 0100 	ldrd	r0, r1, [sp]
 800fc82:	f7f7 fceb 	bl	800765c <__aeabi_d2iz>
 800fc86:	4606      	mov	r6, r0
 800fc88:	f7f7 f9ce 	bl	8007028 <__aeabi_i2d>
 800fc8c:	4602      	mov	r2, r0
 800fc8e:	460b      	mov	r3, r1
 800fc90:	e9dd 0100 	ldrd	r0, r1, [sp]
 800fc94:	f7f7 f87a 	bl	8006d8c <__aeabi_dsub>
 800fc98:	3630      	adds	r6, #48	; 0x30
 800fc9a:	f805 6b01 	strb.w	r6, [r5], #1
 800fc9e:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800fca2:	e9cd 0100 	strd	r0, r1, [sp]
 800fca6:	f7f7 fc9b 	bl	80075e0 <__aeabi_dcmplt>
 800fcaa:	2800      	cmp	r0, #0
 800fcac:	d163      	bne.n	800fd76 <_dtoa_r+0x5be>
 800fcae:	e9dd 2300 	ldrd	r2, r3, [sp]
 800fcb2:	2000      	movs	r0, #0
 800fcb4:	4937      	ldr	r1, [pc, #220]	; (800fd94 <_dtoa_r+0x5dc>)
 800fcb6:	f7f7 f869 	bl	8006d8c <__aeabi_dsub>
 800fcba:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800fcbe:	f7f7 fc8f 	bl	80075e0 <__aeabi_dcmplt>
 800fcc2:	2800      	cmp	r0, #0
 800fcc4:	f040 80b7 	bne.w	800fe36 <_dtoa_r+0x67e>
 800fcc8:	eba5 030b 	sub.w	r3, r5, fp
 800fccc:	429f      	cmp	r7, r3
 800fcce:	f77f af7c 	ble.w	800fbca <_dtoa_r+0x412>
 800fcd2:	2200      	movs	r2, #0
 800fcd4:	4b30      	ldr	r3, [pc, #192]	; (800fd98 <_dtoa_r+0x5e0>)
 800fcd6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800fcda:	f7f7 fa0f 	bl	80070fc <__aeabi_dmul>
 800fcde:	2200      	movs	r2, #0
 800fce0:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 800fce4:	4b2c      	ldr	r3, [pc, #176]	; (800fd98 <_dtoa_r+0x5e0>)
 800fce6:	e9dd 0100 	ldrd	r0, r1, [sp]
 800fcea:	f7f7 fa07 	bl	80070fc <__aeabi_dmul>
 800fcee:	e9cd 0100 	strd	r0, r1, [sp]
 800fcf2:	e7c4      	b.n	800fc7e <_dtoa_r+0x4c6>
 800fcf4:	462a      	mov	r2, r5
 800fcf6:	4633      	mov	r3, r6
 800fcf8:	f7f7 fa00 	bl	80070fc <__aeabi_dmul>
 800fcfc:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
 800fd00:	eb0b 0507 	add.w	r5, fp, r7
 800fd04:	465e      	mov	r6, fp
 800fd06:	e9dd 0100 	ldrd	r0, r1, [sp]
 800fd0a:	f7f7 fca7 	bl	800765c <__aeabi_d2iz>
 800fd0e:	4607      	mov	r7, r0
 800fd10:	f7f7 f98a 	bl	8007028 <__aeabi_i2d>
 800fd14:	3730      	adds	r7, #48	; 0x30
 800fd16:	4602      	mov	r2, r0
 800fd18:	460b      	mov	r3, r1
 800fd1a:	e9dd 0100 	ldrd	r0, r1, [sp]
 800fd1e:	f7f7 f835 	bl	8006d8c <__aeabi_dsub>
 800fd22:	f806 7b01 	strb.w	r7, [r6], #1
 800fd26:	42ae      	cmp	r6, r5
 800fd28:	e9cd 0100 	strd	r0, r1, [sp]
 800fd2c:	f04f 0200 	mov.w	r2, #0
 800fd30:	d126      	bne.n	800fd80 <_dtoa_r+0x5c8>
 800fd32:	4b1c      	ldr	r3, [pc, #112]	; (800fda4 <_dtoa_r+0x5ec>)
 800fd34:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800fd38:	f7f7 f82a 	bl	8006d90 <__adddf3>
 800fd3c:	4602      	mov	r2, r0
 800fd3e:	460b      	mov	r3, r1
 800fd40:	e9dd 0100 	ldrd	r0, r1, [sp]
 800fd44:	f7f7 fc6a 	bl	800761c <__aeabi_dcmpgt>
 800fd48:	2800      	cmp	r0, #0
 800fd4a:	d174      	bne.n	800fe36 <_dtoa_r+0x67e>
 800fd4c:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800fd50:	2000      	movs	r0, #0
 800fd52:	4914      	ldr	r1, [pc, #80]	; (800fda4 <_dtoa_r+0x5ec>)
 800fd54:	f7f7 f81a 	bl	8006d8c <__aeabi_dsub>
 800fd58:	4602      	mov	r2, r0
 800fd5a:	460b      	mov	r3, r1
 800fd5c:	e9dd 0100 	ldrd	r0, r1, [sp]
 800fd60:	f7f7 fc3e 	bl	80075e0 <__aeabi_dcmplt>
 800fd64:	2800      	cmp	r0, #0
 800fd66:	f43f af30 	beq.w	800fbca <_dtoa_r+0x412>
 800fd6a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800fd6e:	2b30      	cmp	r3, #48	; 0x30
 800fd70:	f105 32ff 	add.w	r2, r5, #4294967295
 800fd74:	d002      	beq.n	800fd7c <_dtoa_r+0x5c4>
 800fd76:	f8dd a020 	ldr.w	sl, [sp, #32]
 800fd7a:	e04a      	b.n	800fe12 <_dtoa_r+0x65a>
 800fd7c:	4615      	mov	r5, r2
 800fd7e:	e7f4      	b.n	800fd6a <_dtoa_r+0x5b2>
 800fd80:	4b05      	ldr	r3, [pc, #20]	; (800fd98 <_dtoa_r+0x5e0>)
 800fd82:	f7f7 f9bb 	bl	80070fc <__aeabi_dmul>
 800fd86:	e9cd 0100 	strd	r0, r1, [sp]
 800fd8a:	e7bc      	b.n	800fd06 <_dtoa_r+0x54e>
 800fd8c:	08012658 	.word	0x08012658
 800fd90:	08012630 	.word	0x08012630
 800fd94:	3ff00000 	.word	0x3ff00000
 800fd98:	40240000 	.word	0x40240000
 800fd9c:	401c0000 	.word	0x401c0000
 800fda0:	40140000 	.word	0x40140000
 800fda4:	3fe00000 	.word	0x3fe00000
 800fda8:	e9dd 6700 	ldrd	r6, r7, [sp]
 800fdac:	465d      	mov	r5, fp
 800fdae:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800fdb2:	4630      	mov	r0, r6
 800fdb4:	4639      	mov	r1, r7
 800fdb6:	f7f7 facb 	bl	8007350 <__aeabi_ddiv>
 800fdba:	f7f7 fc4f 	bl	800765c <__aeabi_d2iz>
 800fdbe:	4680      	mov	r8, r0
 800fdc0:	f7f7 f932 	bl	8007028 <__aeabi_i2d>
 800fdc4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800fdc8:	f7f7 f998 	bl	80070fc <__aeabi_dmul>
 800fdcc:	4602      	mov	r2, r0
 800fdce:	460b      	mov	r3, r1
 800fdd0:	4630      	mov	r0, r6
 800fdd2:	4639      	mov	r1, r7
 800fdd4:	f108 0630 	add.w	r6, r8, #48	; 0x30
 800fdd8:	f7f6 ffd8 	bl	8006d8c <__aeabi_dsub>
 800fddc:	f805 6b01 	strb.w	r6, [r5], #1
 800fde0:	eba5 060b 	sub.w	r6, r5, fp
 800fde4:	45b1      	cmp	r9, r6
 800fde6:	4602      	mov	r2, r0
 800fde8:	460b      	mov	r3, r1
 800fdea:	d139      	bne.n	800fe60 <_dtoa_r+0x6a8>
 800fdec:	f7f6 ffd0 	bl	8006d90 <__adddf3>
 800fdf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800fdf4:	4606      	mov	r6, r0
 800fdf6:	460f      	mov	r7, r1
 800fdf8:	f7f7 fc10 	bl	800761c <__aeabi_dcmpgt>
 800fdfc:	b9c8      	cbnz	r0, 800fe32 <_dtoa_r+0x67a>
 800fdfe:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800fe02:	4630      	mov	r0, r6
 800fe04:	4639      	mov	r1, r7
 800fe06:	f7f7 fbe1 	bl	80075cc <__aeabi_dcmpeq>
 800fe0a:	b110      	cbz	r0, 800fe12 <_dtoa_r+0x65a>
 800fe0c:	f018 0f01 	tst.w	r8, #1
 800fe10:	d10f      	bne.n	800fe32 <_dtoa_r+0x67a>
 800fe12:	9904      	ldr	r1, [sp, #16]
 800fe14:	4620      	mov	r0, r4
 800fe16:	f000 fd7a 	bl	801090e <_Bfree>
 800fe1a:	2300      	movs	r3, #0
 800fe1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fe1e:	702b      	strb	r3, [r5, #0]
 800fe20:	f10a 0301 	add.w	r3, sl, #1
 800fe24:	6013      	str	r3, [r2, #0]
 800fe26:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800fe28:	2b00      	cmp	r3, #0
 800fe2a:	f43f acff 	beq.w	800f82c <_dtoa_r+0x74>
 800fe2e:	601d      	str	r5, [r3, #0]
 800fe30:	e4fc      	b.n	800f82c <_dtoa_r+0x74>
 800fe32:	f8cd a020 	str.w	sl, [sp, #32]
 800fe36:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800fe3a:	2a39      	cmp	r2, #57	; 0x39
 800fe3c:	f105 33ff 	add.w	r3, r5, #4294967295
 800fe40:	d108      	bne.n	800fe54 <_dtoa_r+0x69c>
 800fe42:	459b      	cmp	fp, r3
 800fe44:	d10a      	bne.n	800fe5c <_dtoa_r+0x6a4>
 800fe46:	9b08      	ldr	r3, [sp, #32]
 800fe48:	3301      	adds	r3, #1
 800fe4a:	9308      	str	r3, [sp, #32]
 800fe4c:	2330      	movs	r3, #48	; 0x30
 800fe4e:	f88b 3000 	strb.w	r3, [fp]
 800fe52:	465b      	mov	r3, fp
 800fe54:	781a      	ldrb	r2, [r3, #0]
 800fe56:	3201      	adds	r2, #1
 800fe58:	701a      	strb	r2, [r3, #0]
 800fe5a:	e78c      	b.n	800fd76 <_dtoa_r+0x5be>
 800fe5c:	461d      	mov	r5, r3
 800fe5e:	e7ea      	b.n	800fe36 <_dtoa_r+0x67e>
 800fe60:	2200      	movs	r2, #0
 800fe62:	4b9b      	ldr	r3, [pc, #620]	; (80100d0 <_dtoa_r+0x918>)
 800fe64:	f7f7 f94a 	bl	80070fc <__aeabi_dmul>
 800fe68:	2200      	movs	r2, #0
 800fe6a:	2300      	movs	r3, #0
 800fe6c:	4606      	mov	r6, r0
 800fe6e:	460f      	mov	r7, r1
 800fe70:	f7f7 fbac 	bl	80075cc <__aeabi_dcmpeq>
 800fe74:	2800      	cmp	r0, #0
 800fe76:	d09a      	beq.n	800fdae <_dtoa_r+0x5f6>
 800fe78:	e7cb      	b.n	800fe12 <_dtoa_r+0x65a>
 800fe7a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fe7c:	2a00      	cmp	r2, #0
 800fe7e:	f000 808b 	beq.w	800ff98 <_dtoa_r+0x7e0>
 800fe82:	9a06      	ldr	r2, [sp, #24]
 800fe84:	2a01      	cmp	r2, #1
 800fe86:	dc6e      	bgt.n	800ff66 <_dtoa_r+0x7ae>
 800fe88:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fe8a:	2a00      	cmp	r2, #0
 800fe8c:	d067      	beq.n	800ff5e <_dtoa_r+0x7a6>
 800fe8e:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800fe92:	9f07      	ldr	r7, [sp, #28]
 800fe94:	9d05      	ldr	r5, [sp, #20]
 800fe96:	9a05      	ldr	r2, [sp, #20]
 800fe98:	2101      	movs	r1, #1
 800fe9a:	441a      	add	r2, r3
 800fe9c:	4620      	mov	r0, r4
 800fe9e:	9205      	str	r2, [sp, #20]
 800fea0:	4498      	add	r8, r3
 800fea2:	f000 fdc6 	bl	8010a32 <__i2b>
 800fea6:	4606      	mov	r6, r0
 800fea8:	2d00      	cmp	r5, #0
 800feaa:	dd0c      	ble.n	800fec6 <_dtoa_r+0x70e>
 800feac:	f1b8 0f00 	cmp.w	r8, #0
 800feb0:	dd09      	ble.n	800fec6 <_dtoa_r+0x70e>
 800feb2:	4545      	cmp	r5, r8
 800feb4:	9a05      	ldr	r2, [sp, #20]
 800feb6:	462b      	mov	r3, r5
 800feb8:	bfa8      	it	ge
 800feba:	4643      	movge	r3, r8
 800febc:	1ad2      	subs	r2, r2, r3
 800febe:	9205      	str	r2, [sp, #20]
 800fec0:	1aed      	subs	r5, r5, r3
 800fec2:	eba8 0803 	sub.w	r8, r8, r3
 800fec6:	9b07      	ldr	r3, [sp, #28]
 800fec8:	b1eb      	cbz	r3, 800ff06 <_dtoa_r+0x74e>
 800feca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fecc:	2b00      	cmp	r3, #0
 800fece:	d067      	beq.n	800ffa0 <_dtoa_r+0x7e8>
 800fed0:	b18f      	cbz	r7, 800fef6 <_dtoa_r+0x73e>
 800fed2:	4631      	mov	r1, r6
 800fed4:	463a      	mov	r2, r7
 800fed6:	4620      	mov	r0, r4
 800fed8:	f000 fe4a 	bl	8010b70 <__pow5mult>
 800fedc:	9a04      	ldr	r2, [sp, #16]
 800fede:	4601      	mov	r1, r0
 800fee0:	4606      	mov	r6, r0
 800fee2:	4620      	mov	r0, r4
 800fee4:	f000 fdae 	bl	8010a44 <__multiply>
 800fee8:	9904      	ldr	r1, [sp, #16]
 800feea:	9008      	str	r0, [sp, #32]
 800feec:	4620      	mov	r0, r4
 800feee:	f000 fd0e 	bl	801090e <_Bfree>
 800fef2:	9b08      	ldr	r3, [sp, #32]
 800fef4:	9304      	str	r3, [sp, #16]
 800fef6:	9b07      	ldr	r3, [sp, #28]
 800fef8:	1bda      	subs	r2, r3, r7
 800fefa:	d004      	beq.n	800ff06 <_dtoa_r+0x74e>
 800fefc:	9904      	ldr	r1, [sp, #16]
 800fefe:	4620      	mov	r0, r4
 800ff00:	f000 fe36 	bl	8010b70 <__pow5mult>
 800ff04:	9004      	str	r0, [sp, #16]
 800ff06:	2101      	movs	r1, #1
 800ff08:	4620      	mov	r0, r4
 800ff0a:	f000 fd92 	bl	8010a32 <__i2b>
 800ff0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ff10:	4607      	mov	r7, r0
 800ff12:	2b00      	cmp	r3, #0
 800ff14:	f000 81cf 	beq.w	80102b6 <_dtoa_r+0xafe>
 800ff18:	461a      	mov	r2, r3
 800ff1a:	4601      	mov	r1, r0
 800ff1c:	4620      	mov	r0, r4
 800ff1e:	f000 fe27 	bl	8010b70 <__pow5mult>
 800ff22:	9b06      	ldr	r3, [sp, #24]
 800ff24:	2b01      	cmp	r3, #1
 800ff26:	4607      	mov	r7, r0
 800ff28:	dc40      	bgt.n	800ffac <_dtoa_r+0x7f4>
 800ff2a:	9b00      	ldr	r3, [sp, #0]
 800ff2c:	2b00      	cmp	r3, #0
 800ff2e:	d139      	bne.n	800ffa4 <_dtoa_r+0x7ec>
 800ff30:	9b01      	ldr	r3, [sp, #4]
 800ff32:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800ff36:	2b00      	cmp	r3, #0
 800ff38:	d136      	bne.n	800ffa8 <_dtoa_r+0x7f0>
 800ff3a:	9b01      	ldr	r3, [sp, #4]
 800ff3c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800ff40:	0d1b      	lsrs	r3, r3, #20
 800ff42:	051b      	lsls	r3, r3, #20
 800ff44:	b12b      	cbz	r3, 800ff52 <_dtoa_r+0x79a>
 800ff46:	9b05      	ldr	r3, [sp, #20]
 800ff48:	3301      	adds	r3, #1
 800ff4a:	9305      	str	r3, [sp, #20]
 800ff4c:	f108 0801 	add.w	r8, r8, #1
 800ff50:	2301      	movs	r3, #1
 800ff52:	9307      	str	r3, [sp, #28]
 800ff54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ff56:	2b00      	cmp	r3, #0
 800ff58:	d12a      	bne.n	800ffb0 <_dtoa_r+0x7f8>
 800ff5a:	2001      	movs	r0, #1
 800ff5c:	e030      	b.n	800ffc0 <_dtoa_r+0x808>
 800ff5e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800ff60:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800ff64:	e795      	b.n	800fe92 <_dtoa_r+0x6da>
 800ff66:	9b07      	ldr	r3, [sp, #28]
 800ff68:	f109 37ff 	add.w	r7, r9, #4294967295
 800ff6c:	42bb      	cmp	r3, r7
 800ff6e:	bfbf      	itttt	lt
 800ff70:	9b07      	ldrlt	r3, [sp, #28]
 800ff72:	9707      	strlt	r7, [sp, #28]
 800ff74:	1afa      	sublt	r2, r7, r3
 800ff76:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 800ff78:	bfbb      	ittet	lt
 800ff7a:	189b      	addlt	r3, r3, r2
 800ff7c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800ff7e:	1bdf      	subge	r7, r3, r7
 800ff80:	2700      	movlt	r7, #0
 800ff82:	f1b9 0f00 	cmp.w	r9, #0
 800ff86:	bfb5      	itete	lt
 800ff88:	9b05      	ldrlt	r3, [sp, #20]
 800ff8a:	9d05      	ldrge	r5, [sp, #20]
 800ff8c:	eba3 0509 	sublt.w	r5, r3, r9
 800ff90:	464b      	movge	r3, r9
 800ff92:	bfb8      	it	lt
 800ff94:	2300      	movlt	r3, #0
 800ff96:	e77e      	b.n	800fe96 <_dtoa_r+0x6de>
 800ff98:	9f07      	ldr	r7, [sp, #28]
 800ff9a:	9d05      	ldr	r5, [sp, #20]
 800ff9c:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800ff9e:	e783      	b.n	800fea8 <_dtoa_r+0x6f0>
 800ffa0:	9a07      	ldr	r2, [sp, #28]
 800ffa2:	e7ab      	b.n	800fefc <_dtoa_r+0x744>
 800ffa4:	2300      	movs	r3, #0
 800ffa6:	e7d4      	b.n	800ff52 <_dtoa_r+0x79a>
 800ffa8:	9b00      	ldr	r3, [sp, #0]
 800ffaa:	e7d2      	b.n	800ff52 <_dtoa_r+0x79a>
 800ffac:	2300      	movs	r3, #0
 800ffae:	9307      	str	r3, [sp, #28]
 800ffb0:	693b      	ldr	r3, [r7, #16]
 800ffb2:	eb07 0383 	add.w	r3, r7, r3, lsl #2
 800ffb6:	6918      	ldr	r0, [r3, #16]
 800ffb8:	f000 fced 	bl	8010996 <__hi0bits>
 800ffbc:	f1c0 0020 	rsb	r0, r0, #32
 800ffc0:	4440      	add	r0, r8
 800ffc2:	f010 001f 	ands.w	r0, r0, #31
 800ffc6:	d047      	beq.n	8010058 <_dtoa_r+0x8a0>
 800ffc8:	f1c0 0320 	rsb	r3, r0, #32
 800ffcc:	2b04      	cmp	r3, #4
 800ffce:	dd3b      	ble.n	8010048 <_dtoa_r+0x890>
 800ffd0:	9b05      	ldr	r3, [sp, #20]
 800ffd2:	f1c0 001c 	rsb	r0, r0, #28
 800ffd6:	4403      	add	r3, r0
 800ffd8:	9305      	str	r3, [sp, #20]
 800ffda:	4405      	add	r5, r0
 800ffdc:	4480      	add	r8, r0
 800ffde:	9b05      	ldr	r3, [sp, #20]
 800ffe0:	2b00      	cmp	r3, #0
 800ffe2:	dd05      	ble.n	800fff0 <_dtoa_r+0x838>
 800ffe4:	461a      	mov	r2, r3
 800ffe6:	9904      	ldr	r1, [sp, #16]
 800ffe8:	4620      	mov	r0, r4
 800ffea:	f000 fe01 	bl	8010bf0 <__lshift>
 800ffee:	9004      	str	r0, [sp, #16]
 800fff0:	f1b8 0f00 	cmp.w	r8, #0
 800fff4:	dd05      	ble.n	8010002 <_dtoa_r+0x84a>
 800fff6:	4639      	mov	r1, r7
 800fff8:	4642      	mov	r2, r8
 800fffa:	4620      	mov	r0, r4
 800fffc:	f000 fdf8 	bl	8010bf0 <__lshift>
 8010000:	4607      	mov	r7, r0
 8010002:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010004:	b353      	cbz	r3, 801005c <_dtoa_r+0x8a4>
 8010006:	4639      	mov	r1, r7
 8010008:	9804      	ldr	r0, [sp, #16]
 801000a:	f000 fe45 	bl	8010c98 <__mcmp>
 801000e:	2800      	cmp	r0, #0
 8010010:	da24      	bge.n	801005c <_dtoa_r+0x8a4>
 8010012:	2300      	movs	r3, #0
 8010014:	220a      	movs	r2, #10
 8010016:	9904      	ldr	r1, [sp, #16]
 8010018:	4620      	mov	r0, r4
 801001a:	f000 fc81 	bl	8010920 <__multadd>
 801001e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010020:	9004      	str	r0, [sp, #16]
 8010022:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010026:	2b00      	cmp	r3, #0
 8010028:	f000 814c 	beq.w	80102c4 <_dtoa_r+0xb0c>
 801002c:	2300      	movs	r3, #0
 801002e:	4631      	mov	r1, r6
 8010030:	220a      	movs	r2, #10
 8010032:	4620      	mov	r0, r4
 8010034:	f000 fc74 	bl	8010920 <__multadd>
 8010038:	9b02      	ldr	r3, [sp, #8]
 801003a:	2b00      	cmp	r3, #0
 801003c:	4606      	mov	r6, r0
 801003e:	dc4f      	bgt.n	80100e0 <_dtoa_r+0x928>
 8010040:	9b06      	ldr	r3, [sp, #24]
 8010042:	2b02      	cmp	r3, #2
 8010044:	dd4c      	ble.n	80100e0 <_dtoa_r+0x928>
 8010046:	e011      	b.n	801006c <_dtoa_r+0x8b4>
 8010048:	d0c9      	beq.n	800ffde <_dtoa_r+0x826>
 801004a:	9a05      	ldr	r2, [sp, #20]
 801004c:	331c      	adds	r3, #28
 801004e:	441a      	add	r2, r3
 8010050:	9205      	str	r2, [sp, #20]
 8010052:	441d      	add	r5, r3
 8010054:	4498      	add	r8, r3
 8010056:	e7c2      	b.n	800ffde <_dtoa_r+0x826>
 8010058:	4603      	mov	r3, r0
 801005a:	e7f6      	b.n	801004a <_dtoa_r+0x892>
 801005c:	f1b9 0f00 	cmp.w	r9, #0
 8010060:	dc38      	bgt.n	80100d4 <_dtoa_r+0x91c>
 8010062:	9b06      	ldr	r3, [sp, #24]
 8010064:	2b02      	cmp	r3, #2
 8010066:	dd35      	ble.n	80100d4 <_dtoa_r+0x91c>
 8010068:	f8cd 9008 	str.w	r9, [sp, #8]
 801006c:	9b02      	ldr	r3, [sp, #8]
 801006e:	b963      	cbnz	r3, 801008a <_dtoa_r+0x8d2>
 8010070:	4639      	mov	r1, r7
 8010072:	2205      	movs	r2, #5
 8010074:	4620      	mov	r0, r4
 8010076:	f000 fc53 	bl	8010920 <__multadd>
 801007a:	4601      	mov	r1, r0
 801007c:	4607      	mov	r7, r0
 801007e:	9804      	ldr	r0, [sp, #16]
 8010080:	f000 fe0a 	bl	8010c98 <__mcmp>
 8010084:	2800      	cmp	r0, #0
 8010086:	f73f adcc 	bgt.w	800fc22 <_dtoa_r+0x46a>
 801008a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801008c:	465d      	mov	r5, fp
 801008e:	ea6f 0a03 	mvn.w	sl, r3
 8010092:	f04f 0900 	mov.w	r9, #0
 8010096:	4639      	mov	r1, r7
 8010098:	4620      	mov	r0, r4
 801009a:	f000 fc38 	bl	801090e <_Bfree>
 801009e:	2e00      	cmp	r6, #0
 80100a0:	f43f aeb7 	beq.w	800fe12 <_dtoa_r+0x65a>
 80100a4:	f1b9 0f00 	cmp.w	r9, #0
 80100a8:	d005      	beq.n	80100b6 <_dtoa_r+0x8fe>
 80100aa:	45b1      	cmp	r9, r6
 80100ac:	d003      	beq.n	80100b6 <_dtoa_r+0x8fe>
 80100ae:	4649      	mov	r1, r9
 80100b0:	4620      	mov	r0, r4
 80100b2:	f000 fc2c 	bl	801090e <_Bfree>
 80100b6:	4631      	mov	r1, r6
 80100b8:	4620      	mov	r0, r4
 80100ba:	f000 fc28 	bl	801090e <_Bfree>
 80100be:	e6a8      	b.n	800fe12 <_dtoa_r+0x65a>
 80100c0:	2700      	movs	r7, #0
 80100c2:	463e      	mov	r6, r7
 80100c4:	e7e1      	b.n	801008a <_dtoa_r+0x8d2>
 80100c6:	f8dd a020 	ldr.w	sl, [sp, #32]
 80100ca:	463e      	mov	r6, r7
 80100cc:	e5a9      	b.n	800fc22 <_dtoa_r+0x46a>
 80100ce:	bf00      	nop
 80100d0:	40240000 	.word	0x40240000
 80100d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80100d6:	f8cd 9008 	str.w	r9, [sp, #8]
 80100da:	2b00      	cmp	r3, #0
 80100dc:	f000 80f9 	beq.w	80102d2 <_dtoa_r+0xb1a>
 80100e0:	2d00      	cmp	r5, #0
 80100e2:	dd05      	ble.n	80100f0 <_dtoa_r+0x938>
 80100e4:	4631      	mov	r1, r6
 80100e6:	462a      	mov	r2, r5
 80100e8:	4620      	mov	r0, r4
 80100ea:	f000 fd81 	bl	8010bf0 <__lshift>
 80100ee:	4606      	mov	r6, r0
 80100f0:	9b07      	ldr	r3, [sp, #28]
 80100f2:	2b00      	cmp	r3, #0
 80100f4:	d04c      	beq.n	8010190 <_dtoa_r+0x9d8>
 80100f6:	6871      	ldr	r1, [r6, #4]
 80100f8:	4620      	mov	r0, r4
 80100fa:	f000 fbe3 	bl	80108c4 <_Balloc>
 80100fe:	6932      	ldr	r2, [r6, #16]
 8010100:	3202      	adds	r2, #2
 8010102:	4605      	mov	r5, r0
 8010104:	0092      	lsls	r2, r2, #2
 8010106:	f106 010c 	add.w	r1, r6, #12
 801010a:	300c      	adds	r0, #12
 801010c:	f7fd fd31 	bl	800db72 <memcpy>
 8010110:	2201      	movs	r2, #1
 8010112:	4629      	mov	r1, r5
 8010114:	4620      	mov	r0, r4
 8010116:	f000 fd6b 	bl	8010bf0 <__lshift>
 801011a:	9b00      	ldr	r3, [sp, #0]
 801011c:	f8cd b014 	str.w	fp, [sp, #20]
 8010120:	f003 0301 	and.w	r3, r3, #1
 8010124:	46b1      	mov	r9, r6
 8010126:	9307      	str	r3, [sp, #28]
 8010128:	4606      	mov	r6, r0
 801012a:	4639      	mov	r1, r7
 801012c:	9804      	ldr	r0, [sp, #16]
 801012e:	f7ff fab5 	bl	800f69c <quorem>
 8010132:	4649      	mov	r1, r9
 8010134:	4605      	mov	r5, r0
 8010136:	f100 0830 	add.w	r8, r0, #48	; 0x30
 801013a:	9804      	ldr	r0, [sp, #16]
 801013c:	f000 fdac 	bl	8010c98 <__mcmp>
 8010140:	4632      	mov	r2, r6
 8010142:	9000      	str	r0, [sp, #0]
 8010144:	4639      	mov	r1, r7
 8010146:	4620      	mov	r0, r4
 8010148:	f000 fdc0 	bl	8010ccc <__mdiff>
 801014c:	68c3      	ldr	r3, [r0, #12]
 801014e:	4602      	mov	r2, r0
 8010150:	bb03      	cbnz	r3, 8010194 <_dtoa_r+0x9dc>
 8010152:	4601      	mov	r1, r0
 8010154:	9008      	str	r0, [sp, #32]
 8010156:	9804      	ldr	r0, [sp, #16]
 8010158:	f000 fd9e 	bl	8010c98 <__mcmp>
 801015c:	9a08      	ldr	r2, [sp, #32]
 801015e:	4603      	mov	r3, r0
 8010160:	4611      	mov	r1, r2
 8010162:	4620      	mov	r0, r4
 8010164:	9308      	str	r3, [sp, #32]
 8010166:	f000 fbd2 	bl	801090e <_Bfree>
 801016a:	9b08      	ldr	r3, [sp, #32]
 801016c:	b9a3      	cbnz	r3, 8010198 <_dtoa_r+0x9e0>
 801016e:	9a06      	ldr	r2, [sp, #24]
 8010170:	b992      	cbnz	r2, 8010198 <_dtoa_r+0x9e0>
 8010172:	9a07      	ldr	r2, [sp, #28]
 8010174:	b982      	cbnz	r2, 8010198 <_dtoa_r+0x9e0>
 8010176:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 801017a:	d029      	beq.n	80101d0 <_dtoa_r+0xa18>
 801017c:	9b00      	ldr	r3, [sp, #0]
 801017e:	2b00      	cmp	r3, #0
 8010180:	dd01      	ble.n	8010186 <_dtoa_r+0x9ce>
 8010182:	f105 0831 	add.w	r8, r5, #49	; 0x31
 8010186:	9b05      	ldr	r3, [sp, #20]
 8010188:	1c5d      	adds	r5, r3, #1
 801018a:	f883 8000 	strb.w	r8, [r3]
 801018e:	e782      	b.n	8010096 <_dtoa_r+0x8de>
 8010190:	4630      	mov	r0, r6
 8010192:	e7c2      	b.n	801011a <_dtoa_r+0x962>
 8010194:	2301      	movs	r3, #1
 8010196:	e7e3      	b.n	8010160 <_dtoa_r+0x9a8>
 8010198:	9a00      	ldr	r2, [sp, #0]
 801019a:	2a00      	cmp	r2, #0
 801019c:	db04      	blt.n	80101a8 <_dtoa_r+0x9f0>
 801019e:	d125      	bne.n	80101ec <_dtoa_r+0xa34>
 80101a0:	9a06      	ldr	r2, [sp, #24]
 80101a2:	bb1a      	cbnz	r2, 80101ec <_dtoa_r+0xa34>
 80101a4:	9a07      	ldr	r2, [sp, #28]
 80101a6:	bb0a      	cbnz	r2, 80101ec <_dtoa_r+0xa34>
 80101a8:	2b00      	cmp	r3, #0
 80101aa:	ddec      	ble.n	8010186 <_dtoa_r+0x9ce>
 80101ac:	2201      	movs	r2, #1
 80101ae:	9904      	ldr	r1, [sp, #16]
 80101b0:	4620      	mov	r0, r4
 80101b2:	f000 fd1d 	bl	8010bf0 <__lshift>
 80101b6:	4639      	mov	r1, r7
 80101b8:	9004      	str	r0, [sp, #16]
 80101ba:	f000 fd6d 	bl	8010c98 <__mcmp>
 80101be:	2800      	cmp	r0, #0
 80101c0:	dc03      	bgt.n	80101ca <_dtoa_r+0xa12>
 80101c2:	d1e0      	bne.n	8010186 <_dtoa_r+0x9ce>
 80101c4:	f018 0f01 	tst.w	r8, #1
 80101c8:	d0dd      	beq.n	8010186 <_dtoa_r+0x9ce>
 80101ca:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 80101ce:	d1d8      	bne.n	8010182 <_dtoa_r+0x9ca>
 80101d0:	9b05      	ldr	r3, [sp, #20]
 80101d2:	9a05      	ldr	r2, [sp, #20]
 80101d4:	1c5d      	adds	r5, r3, #1
 80101d6:	2339      	movs	r3, #57	; 0x39
 80101d8:	7013      	strb	r3, [r2, #0]
 80101da:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80101de:	2b39      	cmp	r3, #57	; 0x39
 80101e0:	f105 32ff 	add.w	r2, r5, #4294967295
 80101e4:	d04f      	beq.n	8010286 <_dtoa_r+0xace>
 80101e6:	3301      	adds	r3, #1
 80101e8:	7013      	strb	r3, [r2, #0]
 80101ea:	e754      	b.n	8010096 <_dtoa_r+0x8de>
 80101ec:	9a05      	ldr	r2, [sp, #20]
 80101ee:	2b00      	cmp	r3, #0
 80101f0:	f102 0501 	add.w	r5, r2, #1
 80101f4:	dd06      	ble.n	8010204 <_dtoa_r+0xa4c>
 80101f6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 80101fa:	d0e9      	beq.n	80101d0 <_dtoa_r+0xa18>
 80101fc:	f108 0801 	add.w	r8, r8, #1
 8010200:	9b05      	ldr	r3, [sp, #20]
 8010202:	e7c2      	b.n	801018a <_dtoa_r+0x9d2>
 8010204:	9a02      	ldr	r2, [sp, #8]
 8010206:	f805 8c01 	strb.w	r8, [r5, #-1]
 801020a:	eba5 030b 	sub.w	r3, r5, fp
 801020e:	4293      	cmp	r3, r2
 8010210:	d021      	beq.n	8010256 <_dtoa_r+0xa9e>
 8010212:	2300      	movs	r3, #0
 8010214:	220a      	movs	r2, #10
 8010216:	9904      	ldr	r1, [sp, #16]
 8010218:	4620      	mov	r0, r4
 801021a:	f000 fb81 	bl	8010920 <__multadd>
 801021e:	45b1      	cmp	r9, r6
 8010220:	9004      	str	r0, [sp, #16]
 8010222:	f04f 0300 	mov.w	r3, #0
 8010226:	f04f 020a 	mov.w	r2, #10
 801022a:	4649      	mov	r1, r9
 801022c:	4620      	mov	r0, r4
 801022e:	d105      	bne.n	801023c <_dtoa_r+0xa84>
 8010230:	f000 fb76 	bl	8010920 <__multadd>
 8010234:	4681      	mov	r9, r0
 8010236:	4606      	mov	r6, r0
 8010238:	9505      	str	r5, [sp, #20]
 801023a:	e776      	b.n	801012a <_dtoa_r+0x972>
 801023c:	f000 fb70 	bl	8010920 <__multadd>
 8010240:	4631      	mov	r1, r6
 8010242:	4681      	mov	r9, r0
 8010244:	2300      	movs	r3, #0
 8010246:	220a      	movs	r2, #10
 8010248:	4620      	mov	r0, r4
 801024a:	f000 fb69 	bl	8010920 <__multadd>
 801024e:	4606      	mov	r6, r0
 8010250:	e7f2      	b.n	8010238 <_dtoa_r+0xa80>
 8010252:	f04f 0900 	mov.w	r9, #0
 8010256:	2201      	movs	r2, #1
 8010258:	9904      	ldr	r1, [sp, #16]
 801025a:	4620      	mov	r0, r4
 801025c:	f000 fcc8 	bl	8010bf0 <__lshift>
 8010260:	4639      	mov	r1, r7
 8010262:	9004      	str	r0, [sp, #16]
 8010264:	f000 fd18 	bl	8010c98 <__mcmp>
 8010268:	2800      	cmp	r0, #0
 801026a:	dcb6      	bgt.n	80101da <_dtoa_r+0xa22>
 801026c:	d102      	bne.n	8010274 <_dtoa_r+0xabc>
 801026e:	f018 0f01 	tst.w	r8, #1
 8010272:	d1b2      	bne.n	80101da <_dtoa_r+0xa22>
 8010274:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8010278:	2b30      	cmp	r3, #48	; 0x30
 801027a:	f105 32ff 	add.w	r2, r5, #4294967295
 801027e:	f47f af0a 	bne.w	8010096 <_dtoa_r+0x8de>
 8010282:	4615      	mov	r5, r2
 8010284:	e7f6      	b.n	8010274 <_dtoa_r+0xabc>
 8010286:	4593      	cmp	fp, r2
 8010288:	d105      	bne.n	8010296 <_dtoa_r+0xade>
 801028a:	2331      	movs	r3, #49	; 0x31
 801028c:	f10a 0a01 	add.w	sl, sl, #1
 8010290:	f88b 3000 	strb.w	r3, [fp]
 8010294:	e6ff      	b.n	8010096 <_dtoa_r+0x8de>
 8010296:	4615      	mov	r5, r2
 8010298:	e79f      	b.n	80101da <_dtoa_r+0xa22>
 801029a:	f8df b064 	ldr.w	fp, [pc, #100]	; 8010300 <_dtoa_r+0xb48>
 801029e:	f7ff bac5 	b.w	800f82c <_dtoa_r+0x74>
 80102a2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80102a4:	f8df b05c 	ldr.w	fp, [pc, #92]	; 8010304 <_dtoa_r+0xb4c>
 80102a8:	2b00      	cmp	r3, #0
 80102aa:	f43f aabf 	beq.w	800f82c <_dtoa_r+0x74>
 80102ae:	f10b 0308 	add.w	r3, fp, #8
 80102b2:	f7ff bab9 	b.w	800f828 <_dtoa_r+0x70>
 80102b6:	9b06      	ldr	r3, [sp, #24]
 80102b8:	2b01      	cmp	r3, #1
 80102ba:	f77f ae36 	ble.w	800ff2a <_dtoa_r+0x772>
 80102be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80102c0:	9307      	str	r3, [sp, #28]
 80102c2:	e64a      	b.n	800ff5a <_dtoa_r+0x7a2>
 80102c4:	9b02      	ldr	r3, [sp, #8]
 80102c6:	2b00      	cmp	r3, #0
 80102c8:	dc03      	bgt.n	80102d2 <_dtoa_r+0xb1a>
 80102ca:	9b06      	ldr	r3, [sp, #24]
 80102cc:	2b02      	cmp	r3, #2
 80102ce:	f73f aecd 	bgt.w	801006c <_dtoa_r+0x8b4>
 80102d2:	465d      	mov	r5, fp
 80102d4:	4639      	mov	r1, r7
 80102d6:	9804      	ldr	r0, [sp, #16]
 80102d8:	f7ff f9e0 	bl	800f69c <quorem>
 80102dc:	f100 0830 	add.w	r8, r0, #48	; 0x30
 80102e0:	f805 8b01 	strb.w	r8, [r5], #1
 80102e4:	9a02      	ldr	r2, [sp, #8]
 80102e6:	eba5 030b 	sub.w	r3, r5, fp
 80102ea:	429a      	cmp	r2, r3
 80102ec:	ddb1      	ble.n	8010252 <_dtoa_r+0xa9a>
 80102ee:	2300      	movs	r3, #0
 80102f0:	220a      	movs	r2, #10
 80102f2:	9904      	ldr	r1, [sp, #16]
 80102f4:	4620      	mov	r0, r4
 80102f6:	f000 fb13 	bl	8010920 <__multadd>
 80102fa:	9004      	str	r0, [sp, #16]
 80102fc:	e7ea      	b.n	80102d4 <_dtoa_r+0xb1c>
 80102fe:	bf00      	nop
 8010300:	080125fe 	.word	0x080125fe
 8010304:	08012620 	.word	0x08012620

08010308 <__sflush_r>:
 8010308:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 801030c:	b293      	uxth	r3, r2
 801030e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010312:	4605      	mov	r5, r0
 8010314:	0718      	lsls	r0, r3, #28
 8010316:	460c      	mov	r4, r1
 8010318:	d45f      	bmi.n	80103da <__sflush_r+0xd2>
 801031a:	684b      	ldr	r3, [r1, #4]
 801031c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8010320:	2b00      	cmp	r3, #0
 8010322:	818a      	strh	r2, [r1, #12]
 8010324:	dc05      	bgt.n	8010332 <__sflush_r+0x2a>
 8010326:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8010328:	2b00      	cmp	r3, #0
 801032a:	dc02      	bgt.n	8010332 <__sflush_r+0x2a>
 801032c:	2000      	movs	r0, #0
 801032e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010332:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8010334:	2e00      	cmp	r6, #0
 8010336:	d0f9      	beq.n	801032c <__sflush_r+0x24>
 8010338:	2300      	movs	r3, #0
 801033a:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801033e:	682f      	ldr	r7, [r5, #0]
 8010340:	69e1      	ldr	r1, [r4, #28]
 8010342:	602b      	str	r3, [r5, #0]
 8010344:	d036      	beq.n	80103b4 <__sflush_r+0xac>
 8010346:	6d20      	ldr	r0, [r4, #80]	; 0x50
 8010348:	89a3      	ldrh	r3, [r4, #12]
 801034a:	075a      	lsls	r2, r3, #29
 801034c:	d505      	bpl.n	801035a <__sflush_r+0x52>
 801034e:	6863      	ldr	r3, [r4, #4]
 8010350:	1ac0      	subs	r0, r0, r3
 8010352:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010354:	b10b      	cbz	r3, 801035a <__sflush_r+0x52>
 8010356:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010358:	1ac0      	subs	r0, r0, r3
 801035a:	2300      	movs	r3, #0
 801035c:	4602      	mov	r2, r0
 801035e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8010360:	69e1      	ldr	r1, [r4, #28]
 8010362:	4628      	mov	r0, r5
 8010364:	47b0      	blx	r6
 8010366:	1c43      	adds	r3, r0, #1
 8010368:	89a3      	ldrh	r3, [r4, #12]
 801036a:	d106      	bne.n	801037a <__sflush_r+0x72>
 801036c:	6829      	ldr	r1, [r5, #0]
 801036e:	291d      	cmp	r1, #29
 8010370:	d84c      	bhi.n	801040c <__sflush_r+0x104>
 8010372:	4a2b      	ldr	r2, [pc, #172]	; (8010420 <__sflush_r+0x118>)
 8010374:	40ca      	lsrs	r2, r1
 8010376:	07d6      	lsls	r6, r2, #31
 8010378:	d548      	bpl.n	801040c <__sflush_r+0x104>
 801037a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801037e:	b21b      	sxth	r3, r3
 8010380:	2200      	movs	r2, #0
 8010382:	6062      	str	r2, [r4, #4]
 8010384:	04d9      	lsls	r1, r3, #19
 8010386:	6922      	ldr	r2, [r4, #16]
 8010388:	81a3      	strh	r3, [r4, #12]
 801038a:	6022      	str	r2, [r4, #0]
 801038c:	d504      	bpl.n	8010398 <__sflush_r+0x90>
 801038e:	1c42      	adds	r2, r0, #1
 8010390:	d101      	bne.n	8010396 <__sflush_r+0x8e>
 8010392:	682b      	ldr	r3, [r5, #0]
 8010394:	b903      	cbnz	r3, 8010398 <__sflush_r+0x90>
 8010396:	6520      	str	r0, [r4, #80]	; 0x50
 8010398:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801039a:	602f      	str	r7, [r5, #0]
 801039c:	2900      	cmp	r1, #0
 801039e:	d0c5      	beq.n	801032c <__sflush_r+0x24>
 80103a0:	f104 0340 	add.w	r3, r4, #64	; 0x40
 80103a4:	4299      	cmp	r1, r3
 80103a6:	d002      	beq.n	80103ae <__sflush_r+0xa6>
 80103a8:	4628      	mov	r0, r5
 80103aa:	f000 f937 	bl	801061c <_free_r>
 80103ae:	2000      	movs	r0, #0
 80103b0:	6320      	str	r0, [r4, #48]	; 0x30
 80103b2:	e7bc      	b.n	801032e <__sflush_r+0x26>
 80103b4:	2301      	movs	r3, #1
 80103b6:	4628      	mov	r0, r5
 80103b8:	47b0      	blx	r6
 80103ba:	1c41      	adds	r1, r0, #1
 80103bc:	d1c4      	bne.n	8010348 <__sflush_r+0x40>
 80103be:	682b      	ldr	r3, [r5, #0]
 80103c0:	2b00      	cmp	r3, #0
 80103c2:	d0c1      	beq.n	8010348 <__sflush_r+0x40>
 80103c4:	2b1d      	cmp	r3, #29
 80103c6:	d001      	beq.n	80103cc <__sflush_r+0xc4>
 80103c8:	2b16      	cmp	r3, #22
 80103ca:	d101      	bne.n	80103d0 <__sflush_r+0xc8>
 80103cc:	602f      	str	r7, [r5, #0]
 80103ce:	e7ad      	b.n	801032c <__sflush_r+0x24>
 80103d0:	89a3      	ldrh	r3, [r4, #12]
 80103d2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80103d6:	81a3      	strh	r3, [r4, #12]
 80103d8:	e7a9      	b.n	801032e <__sflush_r+0x26>
 80103da:	690f      	ldr	r7, [r1, #16]
 80103dc:	2f00      	cmp	r7, #0
 80103de:	d0a5      	beq.n	801032c <__sflush_r+0x24>
 80103e0:	079b      	lsls	r3, r3, #30
 80103e2:	680e      	ldr	r6, [r1, #0]
 80103e4:	bf08      	it	eq
 80103e6:	694b      	ldreq	r3, [r1, #20]
 80103e8:	600f      	str	r7, [r1, #0]
 80103ea:	bf18      	it	ne
 80103ec:	2300      	movne	r3, #0
 80103ee:	eba6 0807 	sub.w	r8, r6, r7
 80103f2:	608b      	str	r3, [r1, #8]
 80103f4:	f1b8 0f00 	cmp.w	r8, #0
 80103f8:	dd98      	ble.n	801032c <__sflush_r+0x24>
 80103fa:	4643      	mov	r3, r8
 80103fc:	463a      	mov	r2, r7
 80103fe:	69e1      	ldr	r1, [r4, #28]
 8010400:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8010402:	4628      	mov	r0, r5
 8010404:	47b0      	blx	r6
 8010406:	2800      	cmp	r0, #0
 8010408:	dc06      	bgt.n	8010418 <__sflush_r+0x110>
 801040a:	89a3      	ldrh	r3, [r4, #12]
 801040c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8010410:	81a3      	strh	r3, [r4, #12]
 8010412:	f04f 30ff 	mov.w	r0, #4294967295
 8010416:	e78a      	b.n	801032e <__sflush_r+0x26>
 8010418:	4407      	add	r7, r0
 801041a:	eba8 0800 	sub.w	r8, r8, r0
 801041e:	e7e9      	b.n	80103f4 <__sflush_r+0xec>
 8010420:	20400001 	.word	0x20400001

08010424 <_fflush_r>:
 8010424:	b538      	push	{r3, r4, r5, lr}
 8010426:	460c      	mov	r4, r1
 8010428:	4605      	mov	r5, r0
 801042a:	b118      	cbz	r0, 8010434 <_fflush_r+0x10>
 801042c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801042e:	b90b      	cbnz	r3, 8010434 <_fflush_r+0x10>
 8010430:	f000 f864 	bl	80104fc <__sinit>
 8010434:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
 8010438:	b1b8      	cbz	r0, 801046a <_fflush_r+0x46>
 801043a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801043c:	07db      	lsls	r3, r3, #31
 801043e:	d404      	bmi.n	801044a <_fflush_r+0x26>
 8010440:	0581      	lsls	r1, r0, #22
 8010442:	d402      	bmi.n	801044a <_fflush_r+0x26>
 8010444:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8010446:	f7fd f93d 	bl	800d6c4 <__retarget_lock_acquire_recursive>
 801044a:	4628      	mov	r0, r5
 801044c:	4621      	mov	r1, r4
 801044e:	f7ff ff5b 	bl	8010308 <__sflush_r>
 8010452:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8010454:	07da      	lsls	r2, r3, #31
 8010456:	4605      	mov	r5, r0
 8010458:	d405      	bmi.n	8010466 <_fflush_r+0x42>
 801045a:	89a3      	ldrh	r3, [r4, #12]
 801045c:	059b      	lsls	r3, r3, #22
 801045e:	d402      	bmi.n	8010466 <_fflush_r+0x42>
 8010460:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8010462:	f7fd f930 	bl	800d6c6 <__retarget_lock_release_recursive>
 8010466:	4628      	mov	r0, r5
 8010468:	bd38      	pop	{r3, r4, r5, pc}
 801046a:	4605      	mov	r5, r0
 801046c:	e7fb      	b.n	8010466 <_fflush_r+0x42>
	...

08010470 <std>:
 8010470:	2300      	movs	r3, #0
 8010472:	b510      	push	{r4, lr}
 8010474:	4604      	mov	r4, r0
 8010476:	e9c0 3300 	strd	r3, r3, [r0]
 801047a:	6083      	str	r3, [r0, #8]
 801047c:	8181      	strh	r1, [r0, #12]
 801047e:	6643      	str	r3, [r0, #100]	; 0x64
 8010480:	81c2      	strh	r2, [r0, #14]
 8010482:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8010486:	6183      	str	r3, [r0, #24]
 8010488:	4619      	mov	r1, r3
 801048a:	2208      	movs	r2, #8
 801048c:	305c      	adds	r0, #92	; 0x5c
 801048e:	f7fd fb94 	bl	800dbba <memset>
 8010492:	4b07      	ldr	r3, [pc, #28]	; (80104b0 <std+0x40>)
 8010494:	6223      	str	r3, [r4, #32]
 8010496:	4b07      	ldr	r3, [pc, #28]	; (80104b4 <std+0x44>)
 8010498:	6263      	str	r3, [r4, #36]	; 0x24
 801049a:	4b07      	ldr	r3, [pc, #28]	; (80104b8 <std+0x48>)
 801049c:	62a3      	str	r3, [r4, #40]	; 0x28
 801049e:	4b07      	ldr	r3, [pc, #28]	; (80104bc <std+0x4c>)
 80104a0:	61e4      	str	r4, [r4, #28]
 80104a2:	62e3      	str	r3, [r4, #44]	; 0x2c
 80104a4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80104a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80104ac:	f7fd b908 	b.w	800d6c0 <__retarget_lock_init_recursive>
 80104b0:	08010e91 	.word	0x08010e91
 80104b4:	08010eb3 	.word	0x08010eb3
 80104b8:	08010eeb 	.word	0x08010eeb
 80104bc:	08010f0f 	.word	0x08010f0f

080104c0 <_cleanup_r>:
 80104c0:	4901      	ldr	r1, [pc, #4]	; (80104c8 <_cleanup_r+0x8>)
 80104c2:	f000 b967 	b.w	8010794 <_fwalk_reent>
 80104c6:	bf00      	nop
 80104c8:	08011159 	.word	0x08011159

080104cc <__sfp_lock_acquire>:
 80104cc:	4801      	ldr	r0, [pc, #4]	; (80104d4 <__sfp_lock_acquire+0x8>)
 80104ce:	f7fd b8f9 	b.w	800d6c4 <__retarget_lock_acquire_recursive>
 80104d2:	bf00      	nop
 80104d4:	20000a84 	.word	0x20000a84

080104d8 <__sfp_lock_release>:
 80104d8:	4801      	ldr	r0, [pc, #4]	; (80104e0 <__sfp_lock_release+0x8>)
 80104da:	f7fd b8f4 	b.w	800d6c6 <__retarget_lock_release_recursive>
 80104de:	bf00      	nop
 80104e0:	20000a84 	.word	0x20000a84

080104e4 <__sinit_lock_acquire>:
 80104e4:	4801      	ldr	r0, [pc, #4]	; (80104ec <__sinit_lock_acquire+0x8>)
 80104e6:	f7fd b8ed 	b.w	800d6c4 <__retarget_lock_acquire_recursive>
 80104ea:	bf00      	nop
 80104ec:	20000a7f 	.word	0x20000a7f

080104f0 <__sinit_lock_release>:
 80104f0:	4801      	ldr	r0, [pc, #4]	; (80104f8 <__sinit_lock_release+0x8>)
 80104f2:	f7fd b8e8 	b.w	800d6c6 <__retarget_lock_release_recursive>
 80104f6:	bf00      	nop
 80104f8:	20000a7f 	.word	0x20000a7f

080104fc <__sinit>:
 80104fc:	b510      	push	{r4, lr}
 80104fe:	4604      	mov	r4, r0
 8010500:	f7ff fff0 	bl	80104e4 <__sinit_lock_acquire>
 8010504:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010506:	b11a      	cbz	r2, 8010510 <__sinit+0x14>
 8010508:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801050c:	f7ff bff0 	b.w	80104f0 <__sinit_lock_release>
 8010510:	4b0d      	ldr	r3, [pc, #52]	; (8010548 <__sinit+0x4c>)
 8010512:	63e3      	str	r3, [r4, #60]	; 0x3c
 8010514:	2303      	movs	r3, #3
 8010516:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
 801051a:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
 801051e:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 8010522:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
 8010526:	2104      	movs	r1, #4
 8010528:	6860      	ldr	r0, [r4, #4]
 801052a:	f7ff ffa1 	bl	8010470 <std>
 801052e:	2201      	movs	r2, #1
 8010530:	2109      	movs	r1, #9
 8010532:	68a0      	ldr	r0, [r4, #8]
 8010534:	f7ff ff9c 	bl	8010470 <std>
 8010538:	2202      	movs	r2, #2
 801053a:	2112      	movs	r1, #18
 801053c:	68e0      	ldr	r0, [r4, #12]
 801053e:	f7ff ff97 	bl	8010470 <std>
 8010542:	2301      	movs	r3, #1
 8010544:	63a3      	str	r3, [r4, #56]	; 0x38
 8010546:	e7df      	b.n	8010508 <__sinit+0xc>
 8010548:	080104c1 	.word	0x080104c1

0801054c <__libc_fini_array>:
 801054c:	b538      	push	{r3, r4, r5, lr}
 801054e:	4d07      	ldr	r5, [pc, #28]	; (801056c <__libc_fini_array+0x20>)
 8010550:	4c07      	ldr	r4, [pc, #28]	; (8010570 <__libc_fini_array+0x24>)
 8010552:	1b64      	subs	r4, r4, r5
 8010554:	10a4      	asrs	r4, r4, #2
 8010556:	b91c      	cbnz	r4, 8010560 <__libc_fini_array+0x14>
 8010558:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801055c:	f000 bec0 	b.w	80112e0 <_fini>
 8010560:	3c01      	subs	r4, #1
 8010562:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8010566:	4798      	blx	r3
 8010568:	e7f5      	b.n	8010556 <__libc_fini_array+0xa>
 801056a:	bf00      	nop
 801056c:	08012adc 	.word	0x08012adc
 8010570:	08012ae0 	.word	0x08012ae0

08010574 <_malloc_trim_r>:
 8010574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010578:	4605      	mov	r5, r0
 801057a:	2008      	movs	r0, #8
 801057c:	460c      	mov	r4, r1
 801057e:	f7fe ffbd 	bl	800f4fc <sysconf>
 8010582:	4f23      	ldr	r7, [pc, #140]	; (8010610 <_malloc_trim_r+0x9c>)
 8010584:	4680      	mov	r8, r0
 8010586:	4628      	mov	r0, r5
 8010588:	f7fd fb20 	bl	800dbcc <__malloc_lock>
 801058c:	68bb      	ldr	r3, [r7, #8]
 801058e:	685e      	ldr	r6, [r3, #4]
 8010590:	f026 0603 	bic.w	r6, r6, #3
 8010594:	1b34      	subs	r4, r6, r4
 8010596:	3c11      	subs	r4, #17
 8010598:	4444      	add	r4, r8
 801059a:	fbb4 f4f8 	udiv	r4, r4, r8
 801059e:	3c01      	subs	r4, #1
 80105a0:	fb08 f404 	mul.w	r4, r8, r4
 80105a4:	45a0      	cmp	r8, r4
 80105a6:	dd05      	ble.n	80105b4 <_malloc_trim_r+0x40>
 80105a8:	4628      	mov	r0, r5
 80105aa:	f7fd fb15 	bl	800dbd8 <__malloc_unlock>
 80105ae:	2000      	movs	r0, #0
 80105b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80105b4:	2100      	movs	r1, #0
 80105b6:	4628      	mov	r0, r5
 80105b8:	f7fd fcf8 	bl	800dfac <_sbrk_r>
 80105bc:	68bb      	ldr	r3, [r7, #8]
 80105be:	4433      	add	r3, r6
 80105c0:	4298      	cmp	r0, r3
 80105c2:	d1f1      	bne.n	80105a8 <_malloc_trim_r+0x34>
 80105c4:	4261      	negs	r1, r4
 80105c6:	4628      	mov	r0, r5
 80105c8:	f7fd fcf0 	bl	800dfac <_sbrk_r>
 80105cc:	3001      	adds	r0, #1
 80105ce:	d110      	bne.n	80105f2 <_malloc_trim_r+0x7e>
 80105d0:	2100      	movs	r1, #0
 80105d2:	4628      	mov	r0, r5
 80105d4:	f7fd fcea 	bl	800dfac <_sbrk_r>
 80105d8:	68ba      	ldr	r2, [r7, #8]
 80105da:	1a83      	subs	r3, r0, r2
 80105dc:	2b0f      	cmp	r3, #15
 80105de:	dde3      	ble.n	80105a8 <_malloc_trim_r+0x34>
 80105e0:	490c      	ldr	r1, [pc, #48]	; (8010614 <_malloc_trim_r+0xa0>)
 80105e2:	6809      	ldr	r1, [r1, #0]
 80105e4:	1a40      	subs	r0, r0, r1
 80105e6:	490c      	ldr	r1, [pc, #48]	; (8010618 <_malloc_trim_r+0xa4>)
 80105e8:	f043 0301 	orr.w	r3, r3, #1
 80105ec:	6008      	str	r0, [r1, #0]
 80105ee:	6053      	str	r3, [r2, #4]
 80105f0:	e7da      	b.n	80105a8 <_malloc_trim_r+0x34>
 80105f2:	68bb      	ldr	r3, [r7, #8]
 80105f4:	4a08      	ldr	r2, [pc, #32]	; (8010618 <_malloc_trim_r+0xa4>)
 80105f6:	1b36      	subs	r6, r6, r4
 80105f8:	f046 0601 	orr.w	r6, r6, #1
 80105fc:	605e      	str	r6, [r3, #4]
 80105fe:	6813      	ldr	r3, [r2, #0]
 8010600:	4628      	mov	r0, r5
 8010602:	1b1c      	subs	r4, r3, r4
 8010604:	6014      	str	r4, [r2, #0]
 8010606:	f7fd fae7 	bl	800dbd8 <__malloc_unlock>
 801060a:	2001      	movs	r0, #1
 801060c:	e7d0      	b.n	80105b0 <_malloc_trim_r+0x3c>
 801060e:	bf00      	nop
 8010610:	20000440 	.word	0x20000440
 8010614:	20000848 	.word	0x20000848
 8010618:	20000a44 	.word	0x20000a44

0801061c <_free_r>:
 801061c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010620:	4604      	mov	r4, r0
 8010622:	4688      	mov	r8, r1
 8010624:	2900      	cmp	r1, #0
 8010626:	f000 80ab 	beq.w	8010780 <_free_r+0x164>
 801062a:	f7fd facf 	bl	800dbcc <__malloc_lock>
 801062e:	f858 2c04 	ldr.w	r2, [r8, #-4]
 8010632:	4d54      	ldr	r5, [pc, #336]	; (8010784 <_free_r+0x168>)
 8010634:	f022 0001 	bic.w	r0, r2, #1
 8010638:	f1a8 0308 	sub.w	r3, r8, #8
 801063c:	181f      	adds	r7, r3, r0
 801063e:	68a9      	ldr	r1, [r5, #8]
 8010640:	687e      	ldr	r6, [r7, #4]
 8010642:	42b9      	cmp	r1, r7
 8010644:	f026 0603 	bic.w	r6, r6, #3
 8010648:	f002 0201 	and.w	r2, r2, #1
 801064c:	d11b      	bne.n	8010686 <_free_r+0x6a>
 801064e:	4430      	add	r0, r6
 8010650:	b93a      	cbnz	r2, 8010662 <_free_r+0x46>
 8010652:	f858 2c08 	ldr.w	r2, [r8, #-8]
 8010656:	1a9b      	subs	r3, r3, r2
 8010658:	4410      	add	r0, r2
 801065a:	e9d3 1202 	ldrd	r1, r2, [r3, #8]
 801065e:	60ca      	str	r2, [r1, #12]
 8010660:	6091      	str	r1, [r2, #8]
 8010662:	f040 0201 	orr.w	r2, r0, #1
 8010666:	605a      	str	r2, [r3, #4]
 8010668:	60ab      	str	r3, [r5, #8]
 801066a:	4b47      	ldr	r3, [pc, #284]	; (8010788 <_free_r+0x16c>)
 801066c:	681b      	ldr	r3, [r3, #0]
 801066e:	4283      	cmp	r3, r0
 8010670:	d804      	bhi.n	801067c <_free_r+0x60>
 8010672:	4b46      	ldr	r3, [pc, #280]	; (801078c <_free_r+0x170>)
 8010674:	4620      	mov	r0, r4
 8010676:	6819      	ldr	r1, [r3, #0]
 8010678:	f7ff ff7c 	bl	8010574 <_malloc_trim_r>
 801067c:	4620      	mov	r0, r4
 801067e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010682:	f7fd baa9 	b.w	800dbd8 <__malloc_unlock>
 8010686:	607e      	str	r6, [r7, #4]
 8010688:	2a00      	cmp	r2, #0
 801068a:	d139      	bne.n	8010700 <_free_r+0xe4>
 801068c:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8010690:	1a5b      	subs	r3, r3, r1
 8010692:	4408      	add	r0, r1
 8010694:	6899      	ldr	r1, [r3, #8]
 8010696:	f105 0c08 	add.w	ip, r5, #8
 801069a:	4561      	cmp	r1, ip
 801069c:	d032      	beq.n	8010704 <_free_r+0xe8>
 801069e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 80106a2:	f8c1 c00c 	str.w	ip, [r1, #12]
 80106a6:	f8cc 1008 	str.w	r1, [ip, #8]
 80106aa:	19b9      	adds	r1, r7, r6
 80106ac:	6849      	ldr	r1, [r1, #4]
 80106ae:	07c9      	lsls	r1, r1, #31
 80106b0:	d40a      	bmi.n	80106c8 <_free_r+0xac>
 80106b2:	4430      	add	r0, r6
 80106b4:	68b9      	ldr	r1, [r7, #8]
 80106b6:	bb3a      	cbnz	r2, 8010708 <_free_r+0xec>
 80106b8:	4e35      	ldr	r6, [pc, #212]	; (8010790 <_free_r+0x174>)
 80106ba:	42b1      	cmp	r1, r6
 80106bc:	d124      	bne.n	8010708 <_free_r+0xec>
 80106be:	e9c5 3304 	strd	r3, r3, [r5, #16]
 80106c2:	e9c3 1102 	strd	r1, r1, [r3, #8]
 80106c6:	2201      	movs	r2, #1
 80106c8:	f040 0101 	orr.w	r1, r0, #1
 80106cc:	6059      	str	r1, [r3, #4]
 80106ce:	5018      	str	r0, [r3, r0]
 80106d0:	2a00      	cmp	r2, #0
 80106d2:	d1d3      	bne.n	801067c <_free_r+0x60>
 80106d4:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 80106d8:	d21a      	bcs.n	8010710 <_free_r+0xf4>
 80106da:	08c0      	lsrs	r0, r0, #3
 80106dc:	1081      	asrs	r1, r0, #2
 80106de:	2201      	movs	r2, #1
 80106e0:	408a      	lsls	r2, r1
 80106e2:	6869      	ldr	r1, [r5, #4]
 80106e4:	3001      	adds	r0, #1
 80106e6:	430a      	orrs	r2, r1
 80106e8:	606a      	str	r2, [r5, #4]
 80106ea:	f855 1030 	ldr.w	r1, [r5, r0, lsl #3]
 80106ee:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 80106f2:	3a08      	subs	r2, #8
 80106f4:	e9c3 1202 	strd	r1, r2, [r3, #8]
 80106f8:	f845 3030 	str.w	r3, [r5, r0, lsl #3]
 80106fc:	60cb      	str	r3, [r1, #12]
 80106fe:	e7bd      	b.n	801067c <_free_r+0x60>
 8010700:	2200      	movs	r2, #0
 8010702:	e7d2      	b.n	80106aa <_free_r+0x8e>
 8010704:	2201      	movs	r2, #1
 8010706:	e7d0      	b.n	80106aa <_free_r+0x8e>
 8010708:	68fe      	ldr	r6, [r7, #12]
 801070a:	60ce      	str	r6, [r1, #12]
 801070c:	60b1      	str	r1, [r6, #8]
 801070e:	e7db      	b.n	80106c8 <_free_r+0xac>
 8010710:	0a42      	lsrs	r2, r0, #9
 8010712:	2a04      	cmp	r2, #4
 8010714:	d813      	bhi.n	801073e <_free_r+0x122>
 8010716:	0982      	lsrs	r2, r0, #6
 8010718:	3238      	adds	r2, #56	; 0x38
 801071a:	1c51      	adds	r1, r2, #1
 801071c:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 8010720:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 8010724:	428e      	cmp	r6, r1
 8010726:	d124      	bne.n	8010772 <_free_r+0x156>
 8010728:	2001      	movs	r0, #1
 801072a:	1092      	asrs	r2, r2, #2
 801072c:	fa00 f202 	lsl.w	r2, r0, r2
 8010730:	6868      	ldr	r0, [r5, #4]
 8010732:	4302      	orrs	r2, r0
 8010734:	606a      	str	r2, [r5, #4]
 8010736:	e9c3 1602 	strd	r1, r6, [r3, #8]
 801073a:	60b3      	str	r3, [r6, #8]
 801073c:	e7de      	b.n	80106fc <_free_r+0xe0>
 801073e:	2a14      	cmp	r2, #20
 8010740:	d801      	bhi.n	8010746 <_free_r+0x12a>
 8010742:	325b      	adds	r2, #91	; 0x5b
 8010744:	e7e9      	b.n	801071a <_free_r+0xfe>
 8010746:	2a54      	cmp	r2, #84	; 0x54
 8010748:	d802      	bhi.n	8010750 <_free_r+0x134>
 801074a:	0b02      	lsrs	r2, r0, #12
 801074c:	326e      	adds	r2, #110	; 0x6e
 801074e:	e7e4      	b.n	801071a <_free_r+0xfe>
 8010750:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8010754:	d802      	bhi.n	801075c <_free_r+0x140>
 8010756:	0bc2      	lsrs	r2, r0, #15
 8010758:	3277      	adds	r2, #119	; 0x77
 801075a:	e7de      	b.n	801071a <_free_r+0xfe>
 801075c:	f240 5154 	movw	r1, #1364	; 0x554
 8010760:	428a      	cmp	r2, r1
 8010762:	bf9a      	itte	ls
 8010764:	0c82      	lsrls	r2, r0, #18
 8010766:	327c      	addls	r2, #124	; 0x7c
 8010768:	227e      	movhi	r2, #126	; 0x7e
 801076a:	e7d6      	b.n	801071a <_free_r+0xfe>
 801076c:	6889      	ldr	r1, [r1, #8]
 801076e:	428e      	cmp	r6, r1
 8010770:	d004      	beq.n	801077c <_free_r+0x160>
 8010772:	684a      	ldr	r2, [r1, #4]
 8010774:	f022 0203 	bic.w	r2, r2, #3
 8010778:	4282      	cmp	r2, r0
 801077a:	d8f7      	bhi.n	801076c <_free_r+0x150>
 801077c:	68ce      	ldr	r6, [r1, #12]
 801077e:	e7da      	b.n	8010736 <_free_r+0x11a>
 8010780:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010784:	20000440 	.word	0x20000440
 8010788:	2000084c 	.word	0x2000084c
 801078c:	20000a74 	.word	0x20000a74
 8010790:	20000448 	.word	0x20000448

08010794 <_fwalk_reent>:
 8010794:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010798:	4680      	mov	r8, r0
 801079a:	4689      	mov	r9, r1
 801079c:	f500 7438 	add.w	r4, r0, #736	; 0x2e0
 80107a0:	2600      	movs	r6, #0
 80107a2:	b914      	cbnz	r4, 80107aa <_fwalk_reent+0x16>
 80107a4:	4630      	mov	r0, r6
 80107a6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80107aa:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80107ae:	3f01      	subs	r7, #1
 80107b0:	d501      	bpl.n	80107b6 <_fwalk_reent+0x22>
 80107b2:	6824      	ldr	r4, [r4, #0]
 80107b4:	e7f5      	b.n	80107a2 <_fwalk_reent+0xe>
 80107b6:	89ab      	ldrh	r3, [r5, #12]
 80107b8:	2b01      	cmp	r3, #1
 80107ba:	d907      	bls.n	80107cc <_fwalk_reent+0x38>
 80107bc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80107c0:	3301      	adds	r3, #1
 80107c2:	d003      	beq.n	80107cc <_fwalk_reent+0x38>
 80107c4:	4629      	mov	r1, r5
 80107c6:	4640      	mov	r0, r8
 80107c8:	47c8      	blx	r9
 80107ca:	4306      	orrs	r6, r0
 80107cc:	3568      	adds	r5, #104	; 0x68
 80107ce:	e7ee      	b.n	80107ae <_fwalk_reent+0x1a>

080107d0 <_localeconv_r>:
 80107d0:	4b04      	ldr	r3, [pc, #16]	; (80107e4 <_localeconv_r+0x14>)
 80107d2:	681b      	ldr	r3, [r3, #0]
 80107d4:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80107d6:	4b04      	ldr	r3, [pc, #16]	; (80107e8 <_localeconv_r+0x18>)
 80107d8:	2800      	cmp	r0, #0
 80107da:	bf08      	it	eq
 80107dc:	4618      	moveq	r0, r3
 80107de:	30f0      	adds	r0, #240	; 0xf0
 80107e0:	4770      	bx	lr
 80107e2:	bf00      	nop
 80107e4:	20000014 	.word	0x20000014
 80107e8:	20000854 	.word	0x20000854

080107ec <__swhatbuf_r>:
 80107ec:	b570      	push	{r4, r5, r6, lr}
 80107ee:	460e      	mov	r6, r1
 80107f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80107f4:	2900      	cmp	r1, #0
 80107f6:	b096      	sub	sp, #88	; 0x58
 80107f8:	4614      	mov	r4, r2
 80107fa:	461d      	mov	r5, r3
 80107fc:	da09      	bge.n	8010812 <__swhatbuf_r+0x26>
 80107fe:	89b3      	ldrh	r3, [r6, #12]
 8010800:	2200      	movs	r2, #0
 8010802:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8010806:	602a      	str	r2, [r5, #0]
 8010808:	d116      	bne.n	8010838 <__swhatbuf_r+0x4c>
 801080a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801080e:	6023      	str	r3, [r4, #0]
 8010810:	e015      	b.n	801083e <__swhatbuf_r+0x52>
 8010812:	466a      	mov	r2, sp
 8010814:	f000 fcf8 	bl	8011208 <_fstat_r>
 8010818:	2800      	cmp	r0, #0
 801081a:	dbf0      	blt.n	80107fe <__swhatbuf_r+0x12>
 801081c:	9a01      	ldr	r2, [sp, #4]
 801081e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8010822:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8010826:	425a      	negs	r2, r3
 8010828:	415a      	adcs	r2, r3
 801082a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801082e:	602a      	str	r2, [r5, #0]
 8010830:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8010834:	6023      	str	r3, [r4, #0]
 8010836:	e002      	b.n	801083e <__swhatbuf_r+0x52>
 8010838:	2340      	movs	r3, #64	; 0x40
 801083a:	6023      	str	r3, [r4, #0]
 801083c:	4610      	mov	r0, r2
 801083e:	b016      	add	sp, #88	; 0x58
 8010840:	bd70      	pop	{r4, r5, r6, pc}
	...

08010844 <__smakebuf_r>:
 8010844:	898b      	ldrh	r3, [r1, #12]
 8010846:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010848:	079d      	lsls	r5, r3, #30
 801084a:	4606      	mov	r6, r0
 801084c:	460c      	mov	r4, r1
 801084e:	d507      	bpl.n	8010860 <__smakebuf_r+0x1c>
 8010850:	f104 0343 	add.w	r3, r4, #67	; 0x43
 8010854:	6023      	str	r3, [r4, #0]
 8010856:	6123      	str	r3, [r4, #16]
 8010858:	2301      	movs	r3, #1
 801085a:	6163      	str	r3, [r4, #20]
 801085c:	b002      	add	sp, #8
 801085e:	bd70      	pop	{r4, r5, r6, pc}
 8010860:	ab01      	add	r3, sp, #4
 8010862:	466a      	mov	r2, sp
 8010864:	f7ff ffc2 	bl	80107ec <__swhatbuf_r>
 8010868:	9900      	ldr	r1, [sp, #0]
 801086a:	4605      	mov	r5, r0
 801086c:	4630      	mov	r0, r6
 801086e:	f7fc ff3b 	bl	800d6e8 <_malloc_r>
 8010872:	b948      	cbnz	r0, 8010888 <__smakebuf_r+0x44>
 8010874:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8010878:	059a      	lsls	r2, r3, #22
 801087a:	d4ef      	bmi.n	801085c <__smakebuf_r+0x18>
 801087c:	f023 0303 	bic.w	r3, r3, #3
 8010880:	f043 0302 	orr.w	r3, r3, #2
 8010884:	81a3      	strh	r3, [r4, #12]
 8010886:	e7e3      	b.n	8010850 <__smakebuf_r+0xc>
 8010888:	4b0d      	ldr	r3, [pc, #52]	; (80108c0 <__smakebuf_r+0x7c>)
 801088a:	63f3      	str	r3, [r6, #60]	; 0x3c
 801088c:	89a3      	ldrh	r3, [r4, #12]
 801088e:	6020      	str	r0, [r4, #0]
 8010890:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8010894:	81a3      	strh	r3, [r4, #12]
 8010896:	9b00      	ldr	r3, [sp, #0]
 8010898:	6163      	str	r3, [r4, #20]
 801089a:	9b01      	ldr	r3, [sp, #4]
 801089c:	6120      	str	r0, [r4, #16]
 801089e:	b15b      	cbz	r3, 80108b8 <__smakebuf_r+0x74>
 80108a0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80108a4:	4630      	mov	r0, r6
 80108a6:	f000 fcc1 	bl	801122c <_isatty_r>
 80108aa:	b128      	cbz	r0, 80108b8 <__smakebuf_r+0x74>
 80108ac:	89a3      	ldrh	r3, [r4, #12]
 80108ae:	f023 0303 	bic.w	r3, r3, #3
 80108b2:	f043 0301 	orr.w	r3, r3, #1
 80108b6:	81a3      	strh	r3, [r4, #12]
 80108b8:	89a3      	ldrh	r3, [r4, #12]
 80108ba:	431d      	orrs	r5, r3
 80108bc:	81a5      	strh	r5, [r4, #12]
 80108be:	e7cd      	b.n	801085c <__smakebuf_r+0x18>
 80108c0:	080104c1 	.word	0x080104c1

080108c4 <_Balloc>:
 80108c4:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80108c6:	b570      	push	{r4, r5, r6, lr}
 80108c8:	4605      	mov	r5, r0
 80108ca:	460c      	mov	r4, r1
 80108cc:	b17b      	cbz	r3, 80108ee <_Balloc+0x2a>
 80108ce:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 80108d0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80108d4:	b9a0      	cbnz	r0, 8010900 <_Balloc+0x3c>
 80108d6:	2101      	movs	r1, #1
 80108d8:	fa01 f604 	lsl.w	r6, r1, r4
 80108dc:	1d72      	adds	r2, r6, #5
 80108de:	0092      	lsls	r2, r2, #2
 80108e0:	4628      	mov	r0, r5
 80108e2:	f000 fbfb 	bl	80110dc <_calloc_r>
 80108e6:	b148      	cbz	r0, 80108fc <_Balloc+0x38>
 80108e8:	e9c0 4601 	strd	r4, r6, [r0, #4]
 80108ec:	e00b      	b.n	8010906 <_Balloc+0x42>
 80108ee:	2221      	movs	r2, #33	; 0x21
 80108f0:	2104      	movs	r1, #4
 80108f2:	f000 fbf3 	bl	80110dc <_calloc_r>
 80108f6:	64e8      	str	r0, [r5, #76]	; 0x4c
 80108f8:	2800      	cmp	r0, #0
 80108fa:	d1e8      	bne.n	80108ce <_Balloc+0xa>
 80108fc:	2000      	movs	r0, #0
 80108fe:	bd70      	pop	{r4, r5, r6, pc}
 8010900:	6802      	ldr	r2, [r0, #0]
 8010902:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8010906:	2300      	movs	r3, #0
 8010908:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801090c:	e7f7      	b.n	80108fe <_Balloc+0x3a>

0801090e <_Bfree>:
 801090e:	b131      	cbz	r1, 801091e <_Bfree+0x10>
 8010910:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8010912:	684a      	ldr	r2, [r1, #4]
 8010914:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8010918:	6008      	str	r0, [r1, #0]
 801091a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 801091e:	4770      	bx	lr

08010920 <__multadd>:
 8010920:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010924:	690d      	ldr	r5, [r1, #16]
 8010926:	461f      	mov	r7, r3
 8010928:	4606      	mov	r6, r0
 801092a:	460c      	mov	r4, r1
 801092c:	f101 0c14 	add.w	ip, r1, #20
 8010930:	2300      	movs	r3, #0
 8010932:	f8dc 0000 	ldr.w	r0, [ip]
 8010936:	b281      	uxth	r1, r0
 8010938:	fb02 7101 	mla	r1, r2, r1, r7
 801093c:	0c0f      	lsrs	r7, r1, #16
 801093e:	0c00      	lsrs	r0, r0, #16
 8010940:	fb02 7000 	mla	r0, r2, r0, r7
 8010944:	b289      	uxth	r1, r1
 8010946:	3301      	adds	r3, #1
 8010948:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 801094c:	429d      	cmp	r5, r3
 801094e:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8010952:	f84c 1b04 	str.w	r1, [ip], #4
 8010956:	dcec      	bgt.n	8010932 <__multadd+0x12>
 8010958:	b1d7      	cbz	r7, 8010990 <__multadd+0x70>
 801095a:	68a3      	ldr	r3, [r4, #8]
 801095c:	42ab      	cmp	r3, r5
 801095e:	dc12      	bgt.n	8010986 <__multadd+0x66>
 8010960:	6861      	ldr	r1, [r4, #4]
 8010962:	4630      	mov	r0, r6
 8010964:	3101      	adds	r1, #1
 8010966:	f7ff ffad 	bl	80108c4 <_Balloc>
 801096a:	6922      	ldr	r2, [r4, #16]
 801096c:	3202      	adds	r2, #2
 801096e:	f104 010c 	add.w	r1, r4, #12
 8010972:	4680      	mov	r8, r0
 8010974:	0092      	lsls	r2, r2, #2
 8010976:	300c      	adds	r0, #12
 8010978:	f7fd f8fb 	bl	800db72 <memcpy>
 801097c:	4621      	mov	r1, r4
 801097e:	4630      	mov	r0, r6
 8010980:	f7ff ffc5 	bl	801090e <_Bfree>
 8010984:	4644      	mov	r4, r8
 8010986:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 801098a:	3501      	adds	r5, #1
 801098c:	615f      	str	r7, [r3, #20]
 801098e:	6125      	str	r5, [r4, #16]
 8010990:	4620      	mov	r0, r4
 8010992:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010996 <__hi0bits>:
 8010996:	0c02      	lsrs	r2, r0, #16
 8010998:	0412      	lsls	r2, r2, #16
 801099a:	4603      	mov	r3, r0
 801099c:	b9b2      	cbnz	r2, 80109cc <__hi0bits+0x36>
 801099e:	0403      	lsls	r3, r0, #16
 80109a0:	2010      	movs	r0, #16
 80109a2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80109a6:	bf04      	itt	eq
 80109a8:	021b      	lsleq	r3, r3, #8
 80109aa:	3008      	addeq	r0, #8
 80109ac:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80109b0:	bf04      	itt	eq
 80109b2:	011b      	lsleq	r3, r3, #4
 80109b4:	3004      	addeq	r0, #4
 80109b6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80109ba:	bf04      	itt	eq
 80109bc:	009b      	lsleq	r3, r3, #2
 80109be:	3002      	addeq	r0, #2
 80109c0:	2b00      	cmp	r3, #0
 80109c2:	db06      	blt.n	80109d2 <__hi0bits+0x3c>
 80109c4:	005b      	lsls	r3, r3, #1
 80109c6:	d503      	bpl.n	80109d0 <__hi0bits+0x3a>
 80109c8:	3001      	adds	r0, #1
 80109ca:	4770      	bx	lr
 80109cc:	2000      	movs	r0, #0
 80109ce:	e7e8      	b.n	80109a2 <__hi0bits+0xc>
 80109d0:	2020      	movs	r0, #32
 80109d2:	4770      	bx	lr

080109d4 <__lo0bits>:
 80109d4:	6803      	ldr	r3, [r0, #0]
 80109d6:	f013 0207 	ands.w	r2, r3, #7
 80109da:	4601      	mov	r1, r0
 80109dc:	d00b      	beq.n	80109f6 <__lo0bits+0x22>
 80109de:	07da      	lsls	r2, r3, #31
 80109e0:	d423      	bmi.n	8010a2a <__lo0bits+0x56>
 80109e2:	0798      	lsls	r0, r3, #30
 80109e4:	bf49      	itett	mi
 80109e6:	085b      	lsrmi	r3, r3, #1
 80109e8:	089b      	lsrpl	r3, r3, #2
 80109ea:	2001      	movmi	r0, #1
 80109ec:	600b      	strmi	r3, [r1, #0]
 80109ee:	bf5c      	itt	pl
 80109f0:	600b      	strpl	r3, [r1, #0]
 80109f2:	2002      	movpl	r0, #2
 80109f4:	4770      	bx	lr
 80109f6:	b298      	uxth	r0, r3
 80109f8:	b9a8      	cbnz	r0, 8010a26 <__lo0bits+0x52>
 80109fa:	0c1b      	lsrs	r3, r3, #16
 80109fc:	2010      	movs	r0, #16
 80109fe:	f013 0fff 	tst.w	r3, #255	; 0xff
 8010a02:	bf04      	itt	eq
 8010a04:	0a1b      	lsreq	r3, r3, #8
 8010a06:	3008      	addeq	r0, #8
 8010a08:	071a      	lsls	r2, r3, #28
 8010a0a:	bf04      	itt	eq
 8010a0c:	091b      	lsreq	r3, r3, #4
 8010a0e:	3004      	addeq	r0, #4
 8010a10:	079a      	lsls	r2, r3, #30
 8010a12:	bf04      	itt	eq
 8010a14:	089b      	lsreq	r3, r3, #2
 8010a16:	3002      	addeq	r0, #2
 8010a18:	07da      	lsls	r2, r3, #31
 8010a1a:	d402      	bmi.n	8010a22 <__lo0bits+0x4e>
 8010a1c:	085b      	lsrs	r3, r3, #1
 8010a1e:	d006      	beq.n	8010a2e <__lo0bits+0x5a>
 8010a20:	3001      	adds	r0, #1
 8010a22:	600b      	str	r3, [r1, #0]
 8010a24:	4770      	bx	lr
 8010a26:	4610      	mov	r0, r2
 8010a28:	e7e9      	b.n	80109fe <__lo0bits+0x2a>
 8010a2a:	2000      	movs	r0, #0
 8010a2c:	4770      	bx	lr
 8010a2e:	2020      	movs	r0, #32
 8010a30:	4770      	bx	lr

08010a32 <__i2b>:
 8010a32:	b510      	push	{r4, lr}
 8010a34:	460c      	mov	r4, r1
 8010a36:	2101      	movs	r1, #1
 8010a38:	f7ff ff44 	bl	80108c4 <_Balloc>
 8010a3c:	2201      	movs	r2, #1
 8010a3e:	6144      	str	r4, [r0, #20]
 8010a40:	6102      	str	r2, [r0, #16]
 8010a42:	bd10      	pop	{r4, pc}

08010a44 <__multiply>:
 8010a44:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a48:	4614      	mov	r4, r2
 8010a4a:	690a      	ldr	r2, [r1, #16]
 8010a4c:	6923      	ldr	r3, [r4, #16]
 8010a4e:	429a      	cmp	r2, r3
 8010a50:	bfb8      	it	lt
 8010a52:	460b      	movlt	r3, r1
 8010a54:	4688      	mov	r8, r1
 8010a56:	bfbc      	itt	lt
 8010a58:	46a0      	movlt	r8, r4
 8010a5a:	461c      	movlt	r4, r3
 8010a5c:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8010a60:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8010a64:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8010a68:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8010a6c:	eb07 0609 	add.w	r6, r7, r9
 8010a70:	42b3      	cmp	r3, r6
 8010a72:	bfb8      	it	lt
 8010a74:	3101      	addlt	r1, #1
 8010a76:	f7ff ff25 	bl	80108c4 <_Balloc>
 8010a7a:	f100 0514 	add.w	r5, r0, #20
 8010a7e:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 8010a82:	462b      	mov	r3, r5
 8010a84:	2200      	movs	r2, #0
 8010a86:	4573      	cmp	r3, lr
 8010a88:	d316      	bcc.n	8010ab8 <__multiply+0x74>
 8010a8a:	f104 0214 	add.w	r2, r4, #20
 8010a8e:	f108 0114 	add.w	r1, r8, #20
 8010a92:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8010a96:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8010a9a:	9300      	str	r3, [sp, #0]
 8010a9c:	9b00      	ldr	r3, [sp, #0]
 8010a9e:	9201      	str	r2, [sp, #4]
 8010aa0:	4293      	cmp	r3, r2
 8010aa2:	d80c      	bhi.n	8010abe <__multiply+0x7a>
 8010aa4:	2e00      	cmp	r6, #0
 8010aa6:	dd03      	ble.n	8010ab0 <__multiply+0x6c>
 8010aa8:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8010aac:	2b00      	cmp	r3, #0
 8010aae:	d05d      	beq.n	8010b6c <__multiply+0x128>
 8010ab0:	6106      	str	r6, [r0, #16]
 8010ab2:	b003      	add	sp, #12
 8010ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ab8:	f843 2b04 	str.w	r2, [r3], #4
 8010abc:	e7e3      	b.n	8010a86 <__multiply+0x42>
 8010abe:	f8b2 b000 	ldrh.w	fp, [r2]
 8010ac2:	f1bb 0f00 	cmp.w	fp, #0
 8010ac6:	d023      	beq.n	8010b10 <__multiply+0xcc>
 8010ac8:	4689      	mov	r9, r1
 8010aca:	46ac      	mov	ip, r5
 8010acc:	f04f 0800 	mov.w	r8, #0
 8010ad0:	f859 4b04 	ldr.w	r4, [r9], #4
 8010ad4:	f8dc a000 	ldr.w	sl, [ip]
 8010ad8:	b2a3      	uxth	r3, r4
 8010ada:	fa1f fa8a 	uxth.w	sl, sl
 8010ade:	fb0b a303 	mla	r3, fp, r3, sl
 8010ae2:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8010ae6:	f8dc 4000 	ldr.w	r4, [ip]
 8010aea:	4443      	add	r3, r8
 8010aec:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8010af0:	fb0b 840a 	mla	r4, fp, sl, r8
 8010af4:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8010af8:	46e2      	mov	sl, ip
 8010afa:	b29b      	uxth	r3, r3
 8010afc:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8010b00:	454f      	cmp	r7, r9
 8010b02:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8010b06:	f84a 3b04 	str.w	r3, [sl], #4
 8010b0a:	d82b      	bhi.n	8010b64 <__multiply+0x120>
 8010b0c:	f8cc 8004 	str.w	r8, [ip, #4]
 8010b10:	9b01      	ldr	r3, [sp, #4]
 8010b12:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8010b16:	3204      	adds	r2, #4
 8010b18:	f1ba 0f00 	cmp.w	sl, #0
 8010b1c:	d020      	beq.n	8010b60 <__multiply+0x11c>
 8010b1e:	682b      	ldr	r3, [r5, #0]
 8010b20:	4689      	mov	r9, r1
 8010b22:	46a8      	mov	r8, r5
 8010b24:	f04f 0b00 	mov.w	fp, #0
 8010b28:	f8b9 c000 	ldrh.w	ip, [r9]
 8010b2c:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8010b30:	fb0a 440c 	mla	r4, sl, ip, r4
 8010b34:	445c      	add	r4, fp
 8010b36:	46c4      	mov	ip, r8
 8010b38:	b29b      	uxth	r3, r3
 8010b3a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8010b3e:	f84c 3b04 	str.w	r3, [ip], #4
 8010b42:	f859 3b04 	ldr.w	r3, [r9], #4
 8010b46:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 8010b4a:	0c1b      	lsrs	r3, r3, #16
 8010b4c:	fb0a b303 	mla	r3, sl, r3, fp
 8010b50:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8010b54:	454f      	cmp	r7, r9
 8010b56:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 8010b5a:	d805      	bhi.n	8010b68 <__multiply+0x124>
 8010b5c:	f8c8 3004 	str.w	r3, [r8, #4]
 8010b60:	3504      	adds	r5, #4
 8010b62:	e79b      	b.n	8010a9c <__multiply+0x58>
 8010b64:	46d4      	mov	ip, sl
 8010b66:	e7b3      	b.n	8010ad0 <__multiply+0x8c>
 8010b68:	46e0      	mov	r8, ip
 8010b6a:	e7dd      	b.n	8010b28 <__multiply+0xe4>
 8010b6c:	3e01      	subs	r6, #1
 8010b6e:	e799      	b.n	8010aa4 <__multiply+0x60>

08010b70 <__pow5mult>:
 8010b70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010b74:	4615      	mov	r5, r2
 8010b76:	f012 0203 	ands.w	r2, r2, #3
 8010b7a:	4606      	mov	r6, r0
 8010b7c:	460f      	mov	r7, r1
 8010b7e:	d007      	beq.n	8010b90 <__pow5mult+0x20>
 8010b80:	3a01      	subs	r2, #1
 8010b82:	4c1a      	ldr	r4, [pc, #104]	; (8010bec <__pow5mult+0x7c>)
 8010b84:	2300      	movs	r3, #0
 8010b86:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8010b8a:	f7ff fec9 	bl	8010920 <__multadd>
 8010b8e:	4607      	mov	r7, r0
 8010b90:	10ad      	asrs	r5, r5, #2
 8010b92:	d027      	beq.n	8010be4 <__pow5mult+0x74>
 8010b94:	6cb4      	ldr	r4, [r6, #72]	; 0x48
 8010b96:	b944      	cbnz	r4, 8010baa <__pow5mult+0x3a>
 8010b98:	f240 2171 	movw	r1, #625	; 0x271
 8010b9c:	4630      	mov	r0, r6
 8010b9e:	f7ff ff48 	bl	8010a32 <__i2b>
 8010ba2:	2300      	movs	r3, #0
 8010ba4:	64b0      	str	r0, [r6, #72]	; 0x48
 8010ba6:	4604      	mov	r4, r0
 8010ba8:	6003      	str	r3, [r0, #0]
 8010baa:	f04f 0800 	mov.w	r8, #0
 8010bae:	07eb      	lsls	r3, r5, #31
 8010bb0:	d50a      	bpl.n	8010bc8 <__pow5mult+0x58>
 8010bb2:	4639      	mov	r1, r7
 8010bb4:	4622      	mov	r2, r4
 8010bb6:	4630      	mov	r0, r6
 8010bb8:	f7ff ff44 	bl	8010a44 <__multiply>
 8010bbc:	4639      	mov	r1, r7
 8010bbe:	4681      	mov	r9, r0
 8010bc0:	4630      	mov	r0, r6
 8010bc2:	f7ff fea4 	bl	801090e <_Bfree>
 8010bc6:	464f      	mov	r7, r9
 8010bc8:	106d      	asrs	r5, r5, #1
 8010bca:	d00b      	beq.n	8010be4 <__pow5mult+0x74>
 8010bcc:	6820      	ldr	r0, [r4, #0]
 8010bce:	b938      	cbnz	r0, 8010be0 <__pow5mult+0x70>
 8010bd0:	4622      	mov	r2, r4
 8010bd2:	4621      	mov	r1, r4
 8010bd4:	4630      	mov	r0, r6
 8010bd6:	f7ff ff35 	bl	8010a44 <__multiply>
 8010bda:	6020      	str	r0, [r4, #0]
 8010bdc:	f8c0 8000 	str.w	r8, [r0]
 8010be0:	4604      	mov	r4, r0
 8010be2:	e7e4      	b.n	8010bae <__pow5mult+0x3e>
 8010be4:	4638      	mov	r0, r7
 8010be6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8010bea:	bf00      	nop
 8010bec:	08012720 	.word	0x08012720

08010bf0 <__lshift>:
 8010bf0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010bf4:	460c      	mov	r4, r1
 8010bf6:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8010bfa:	6923      	ldr	r3, [r4, #16]
 8010bfc:	6849      	ldr	r1, [r1, #4]
 8010bfe:	eb0a 0903 	add.w	r9, sl, r3
 8010c02:	68a3      	ldr	r3, [r4, #8]
 8010c04:	4607      	mov	r7, r0
 8010c06:	4616      	mov	r6, r2
 8010c08:	f109 0501 	add.w	r5, r9, #1
 8010c0c:	42ab      	cmp	r3, r5
 8010c0e:	db32      	blt.n	8010c76 <__lshift+0x86>
 8010c10:	4638      	mov	r0, r7
 8010c12:	f7ff fe57 	bl	80108c4 <_Balloc>
 8010c16:	2300      	movs	r3, #0
 8010c18:	4680      	mov	r8, r0
 8010c1a:	f100 0114 	add.w	r1, r0, #20
 8010c1e:	461a      	mov	r2, r3
 8010c20:	4553      	cmp	r3, sl
 8010c22:	db2b      	blt.n	8010c7c <__lshift+0x8c>
 8010c24:	6920      	ldr	r0, [r4, #16]
 8010c26:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8010c2a:	f104 0314 	add.w	r3, r4, #20
 8010c2e:	f016 021f 	ands.w	r2, r6, #31
 8010c32:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8010c36:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8010c3a:	d025      	beq.n	8010c88 <__lshift+0x98>
 8010c3c:	f1c2 0e20 	rsb	lr, r2, #32
 8010c40:	2000      	movs	r0, #0
 8010c42:	681e      	ldr	r6, [r3, #0]
 8010c44:	468a      	mov	sl, r1
 8010c46:	4096      	lsls	r6, r2
 8010c48:	4330      	orrs	r0, r6
 8010c4a:	f84a 0b04 	str.w	r0, [sl], #4
 8010c4e:	f853 0b04 	ldr.w	r0, [r3], #4
 8010c52:	459c      	cmp	ip, r3
 8010c54:	fa20 f00e 	lsr.w	r0, r0, lr
 8010c58:	d814      	bhi.n	8010c84 <__lshift+0x94>
 8010c5a:	6048      	str	r0, [r1, #4]
 8010c5c:	b108      	cbz	r0, 8010c62 <__lshift+0x72>
 8010c5e:	f109 0502 	add.w	r5, r9, #2
 8010c62:	3d01      	subs	r5, #1
 8010c64:	4638      	mov	r0, r7
 8010c66:	f8c8 5010 	str.w	r5, [r8, #16]
 8010c6a:	4621      	mov	r1, r4
 8010c6c:	f7ff fe4f 	bl	801090e <_Bfree>
 8010c70:	4640      	mov	r0, r8
 8010c72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010c76:	3101      	adds	r1, #1
 8010c78:	005b      	lsls	r3, r3, #1
 8010c7a:	e7c7      	b.n	8010c0c <__lshift+0x1c>
 8010c7c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8010c80:	3301      	adds	r3, #1
 8010c82:	e7cd      	b.n	8010c20 <__lshift+0x30>
 8010c84:	4651      	mov	r1, sl
 8010c86:	e7dc      	b.n	8010c42 <__lshift+0x52>
 8010c88:	3904      	subs	r1, #4
 8010c8a:	f853 2b04 	ldr.w	r2, [r3], #4
 8010c8e:	f841 2f04 	str.w	r2, [r1, #4]!
 8010c92:	459c      	cmp	ip, r3
 8010c94:	d8f9      	bhi.n	8010c8a <__lshift+0x9a>
 8010c96:	e7e4      	b.n	8010c62 <__lshift+0x72>

08010c98 <__mcmp>:
 8010c98:	6903      	ldr	r3, [r0, #16]
 8010c9a:	690a      	ldr	r2, [r1, #16]
 8010c9c:	1a9b      	subs	r3, r3, r2
 8010c9e:	b530      	push	{r4, r5, lr}
 8010ca0:	d10c      	bne.n	8010cbc <__mcmp+0x24>
 8010ca2:	0092      	lsls	r2, r2, #2
 8010ca4:	3014      	adds	r0, #20
 8010ca6:	3114      	adds	r1, #20
 8010ca8:	1884      	adds	r4, r0, r2
 8010caa:	4411      	add	r1, r2
 8010cac:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8010cb0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8010cb4:	4295      	cmp	r5, r2
 8010cb6:	d003      	beq.n	8010cc0 <__mcmp+0x28>
 8010cb8:	d305      	bcc.n	8010cc6 <__mcmp+0x2e>
 8010cba:	2301      	movs	r3, #1
 8010cbc:	4618      	mov	r0, r3
 8010cbe:	bd30      	pop	{r4, r5, pc}
 8010cc0:	42a0      	cmp	r0, r4
 8010cc2:	d3f3      	bcc.n	8010cac <__mcmp+0x14>
 8010cc4:	e7fa      	b.n	8010cbc <__mcmp+0x24>
 8010cc6:	f04f 33ff 	mov.w	r3, #4294967295
 8010cca:	e7f7      	b.n	8010cbc <__mcmp+0x24>

08010ccc <__mdiff>:
 8010ccc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010cd0:	460d      	mov	r5, r1
 8010cd2:	4607      	mov	r7, r0
 8010cd4:	4611      	mov	r1, r2
 8010cd6:	4628      	mov	r0, r5
 8010cd8:	4614      	mov	r4, r2
 8010cda:	f7ff ffdd 	bl	8010c98 <__mcmp>
 8010cde:	1e06      	subs	r6, r0, #0
 8010ce0:	d108      	bne.n	8010cf4 <__mdiff+0x28>
 8010ce2:	4631      	mov	r1, r6
 8010ce4:	4638      	mov	r0, r7
 8010ce6:	f7ff fded 	bl	80108c4 <_Balloc>
 8010cea:	2301      	movs	r3, #1
 8010cec:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8010cf0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010cf4:	bfa4      	itt	ge
 8010cf6:	4623      	movge	r3, r4
 8010cf8:	462c      	movge	r4, r5
 8010cfa:	4638      	mov	r0, r7
 8010cfc:	6861      	ldr	r1, [r4, #4]
 8010cfe:	bfa6      	itte	ge
 8010d00:	461d      	movge	r5, r3
 8010d02:	2600      	movge	r6, #0
 8010d04:	2601      	movlt	r6, #1
 8010d06:	f7ff fddd 	bl	80108c4 <_Balloc>
 8010d0a:	692b      	ldr	r3, [r5, #16]
 8010d0c:	60c6      	str	r6, [r0, #12]
 8010d0e:	6926      	ldr	r6, [r4, #16]
 8010d10:	f105 0914 	add.w	r9, r5, #20
 8010d14:	f104 0214 	add.w	r2, r4, #20
 8010d18:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8010d1c:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8010d20:	f100 0514 	add.w	r5, r0, #20
 8010d24:	f04f 0e00 	mov.w	lr, #0
 8010d28:	f852 ab04 	ldr.w	sl, [r2], #4
 8010d2c:	f859 4b04 	ldr.w	r4, [r9], #4
 8010d30:	fa1e f18a 	uxtah	r1, lr, sl
 8010d34:	b2a3      	uxth	r3, r4
 8010d36:	1ac9      	subs	r1, r1, r3
 8010d38:	0c23      	lsrs	r3, r4, #16
 8010d3a:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 8010d3e:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8010d42:	b289      	uxth	r1, r1
 8010d44:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8010d48:	45c8      	cmp	r8, r9
 8010d4a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8010d4e:	4694      	mov	ip, r2
 8010d50:	f845 3b04 	str.w	r3, [r5], #4
 8010d54:	d8e8      	bhi.n	8010d28 <__mdiff+0x5c>
 8010d56:	45bc      	cmp	ip, r7
 8010d58:	d304      	bcc.n	8010d64 <__mdiff+0x98>
 8010d5a:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8010d5e:	b183      	cbz	r3, 8010d82 <__mdiff+0xb6>
 8010d60:	6106      	str	r6, [r0, #16]
 8010d62:	e7c5      	b.n	8010cf0 <__mdiff+0x24>
 8010d64:	f85c 1b04 	ldr.w	r1, [ip], #4
 8010d68:	fa1e f381 	uxtah	r3, lr, r1
 8010d6c:	141a      	asrs	r2, r3, #16
 8010d6e:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8010d72:	b29b      	uxth	r3, r3
 8010d74:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8010d78:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8010d7c:	f845 3b04 	str.w	r3, [r5], #4
 8010d80:	e7e9      	b.n	8010d56 <__mdiff+0x8a>
 8010d82:	3e01      	subs	r6, #1
 8010d84:	e7e9      	b.n	8010d5a <__mdiff+0x8e>

08010d86 <__d2b>:
 8010d86:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010d8a:	460e      	mov	r6, r1
 8010d8c:	2101      	movs	r1, #1
 8010d8e:	ec59 8b10 	vmov	r8, r9, d0
 8010d92:	4615      	mov	r5, r2
 8010d94:	f7ff fd96 	bl	80108c4 <_Balloc>
 8010d98:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8010d9c:	4607      	mov	r7, r0
 8010d9e:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8010da2:	bb34      	cbnz	r4, 8010df2 <__d2b+0x6c>
 8010da4:	9301      	str	r3, [sp, #4]
 8010da6:	f1b8 0300 	subs.w	r3, r8, #0
 8010daa:	d027      	beq.n	8010dfc <__d2b+0x76>
 8010dac:	a802      	add	r0, sp, #8
 8010dae:	f840 3d08 	str.w	r3, [r0, #-8]!
 8010db2:	f7ff fe0f 	bl	80109d4 <__lo0bits>
 8010db6:	9900      	ldr	r1, [sp, #0]
 8010db8:	b1f0      	cbz	r0, 8010df8 <__d2b+0x72>
 8010dba:	9a01      	ldr	r2, [sp, #4]
 8010dbc:	f1c0 0320 	rsb	r3, r0, #32
 8010dc0:	fa02 f303 	lsl.w	r3, r2, r3
 8010dc4:	430b      	orrs	r3, r1
 8010dc6:	40c2      	lsrs	r2, r0
 8010dc8:	617b      	str	r3, [r7, #20]
 8010dca:	9201      	str	r2, [sp, #4]
 8010dcc:	9b01      	ldr	r3, [sp, #4]
 8010dce:	61bb      	str	r3, [r7, #24]
 8010dd0:	2b00      	cmp	r3, #0
 8010dd2:	bf14      	ite	ne
 8010dd4:	2102      	movne	r1, #2
 8010dd6:	2101      	moveq	r1, #1
 8010dd8:	6139      	str	r1, [r7, #16]
 8010dda:	b1c4      	cbz	r4, 8010e0e <__d2b+0x88>
 8010ddc:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8010de0:	4404      	add	r4, r0
 8010de2:	6034      	str	r4, [r6, #0]
 8010de4:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8010de8:	6028      	str	r0, [r5, #0]
 8010dea:	4638      	mov	r0, r7
 8010dec:	b003      	add	sp, #12
 8010dee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010df2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8010df6:	e7d5      	b.n	8010da4 <__d2b+0x1e>
 8010df8:	6179      	str	r1, [r7, #20]
 8010dfa:	e7e7      	b.n	8010dcc <__d2b+0x46>
 8010dfc:	a801      	add	r0, sp, #4
 8010dfe:	f7ff fde9 	bl	80109d4 <__lo0bits>
 8010e02:	9b01      	ldr	r3, [sp, #4]
 8010e04:	617b      	str	r3, [r7, #20]
 8010e06:	2101      	movs	r1, #1
 8010e08:	6139      	str	r1, [r7, #16]
 8010e0a:	3020      	adds	r0, #32
 8010e0c:	e7e5      	b.n	8010dda <__d2b+0x54>
 8010e0e:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8010e12:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8010e16:	6030      	str	r0, [r6, #0]
 8010e18:	6918      	ldr	r0, [r3, #16]
 8010e1a:	f7ff fdbc 	bl	8010996 <__hi0bits>
 8010e1e:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8010e22:	e7e1      	b.n	8010de8 <__d2b+0x62>

08010e24 <frexp>:
 8010e24:	b570      	push	{r4, r5, r6, lr}
 8010e26:	2100      	movs	r1, #0
 8010e28:	ec55 4b10 	vmov	r4, r5, d0
 8010e2c:	6001      	str	r1, [r0, #0]
 8010e2e:	4916      	ldr	r1, [pc, #88]	; (8010e88 <frexp+0x64>)
 8010e30:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8010e34:	428b      	cmp	r3, r1
 8010e36:	4606      	mov	r6, r0
 8010e38:	462a      	mov	r2, r5
 8010e3a:	dc22      	bgt.n	8010e82 <frexp+0x5e>
 8010e3c:	ee10 1a10 	vmov	r1, s0
 8010e40:	4319      	orrs	r1, r3
 8010e42:	d01e      	beq.n	8010e82 <frexp+0x5e>
 8010e44:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8010e48:	da0d      	bge.n	8010e66 <frexp+0x42>
 8010e4a:	2200      	movs	r2, #0
 8010e4c:	4b0f      	ldr	r3, [pc, #60]	; (8010e8c <frexp+0x68>)
 8010e4e:	ee10 0a10 	vmov	r0, s0
 8010e52:	4629      	mov	r1, r5
 8010e54:	f7f6 f952 	bl	80070fc <__aeabi_dmul>
 8010e58:	460a      	mov	r2, r1
 8010e5a:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8010e5e:	f06f 0135 	mvn.w	r1, #53	; 0x35
 8010e62:	4604      	mov	r4, r0
 8010e64:	6031      	str	r1, [r6, #0]
 8010e66:	6831      	ldr	r1, [r6, #0]
 8010e68:	151b      	asrs	r3, r3, #20
 8010e6a:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
 8010e6e:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 8010e72:	f422 02e0 	bic.w	r2, r2, #7340032	; 0x700000
 8010e76:	440b      	add	r3, r1
 8010e78:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
 8010e7c:	6033      	str	r3, [r6, #0]
 8010e7e:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
 8010e82:	ec45 4b10 	vmov	d0, r4, r5
 8010e86:	bd70      	pop	{r4, r5, r6, pc}
 8010e88:	7fefffff 	.word	0x7fefffff
 8010e8c:	43500000 	.word	0x43500000

08010e90 <__sread>:
 8010e90:	b510      	push	{r4, lr}
 8010e92:	460c      	mov	r4, r1
 8010e94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010e98:	f000 f9fc 	bl	8011294 <_read_r>
 8010e9c:	2800      	cmp	r0, #0
 8010e9e:	bfab      	itete	ge
 8010ea0:	6d23      	ldrge	r3, [r4, #80]	; 0x50
 8010ea2:	89a3      	ldrhlt	r3, [r4, #12]
 8010ea4:	181b      	addge	r3, r3, r0
 8010ea6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8010eaa:	bfac      	ite	ge
 8010eac:	6523      	strge	r3, [r4, #80]	; 0x50
 8010eae:	81a3      	strhlt	r3, [r4, #12]
 8010eb0:	bd10      	pop	{r4, pc}

08010eb2 <__swrite>:
 8010eb2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010eb6:	461f      	mov	r7, r3
 8010eb8:	898b      	ldrh	r3, [r1, #12]
 8010eba:	05db      	lsls	r3, r3, #23
 8010ebc:	4605      	mov	r5, r0
 8010ebe:	460c      	mov	r4, r1
 8010ec0:	4616      	mov	r6, r2
 8010ec2:	d505      	bpl.n	8010ed0 <__swrite+0x1e>
 8010ec4:	2302      	movs	r3, #2
 8010ec6:	2200      	movs	r2, #0
 8010ec8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010ecc:	f000 f9be 	bl	801124c <_lseek_r>
 8010ed0:	89a3      	ldrh	r3, [r4, #12]
 8010ed2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8010ed6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8010eda:	81a3      	strh	r3, [r4, #12]
 8010edc:	4632      	mov	r2, r6
 8010ede:	463b      	mov	r3, r7
 8010ee0:	4628      	mov	r0, r5
 8010ee2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010ee6:	f7fe bb5f 	b.w	800f5a8 <_write_r>

08010eea <__sseek>:
 8010eea:	b510      	push	{r4, lr}
 8010eec:	460c      	mov	r4, r1
 8010eee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010ef2:	f000 f9ab 	bl	801124c <_lseek_r>
 8010ef6:	1c43      	adds	r3, r0, #1
 8010ef8:	89a3      	ldrh	r3, [r4, #12]
 8010efa:	bf15      	itete	ne
 8010efc:	6520      	strne	r0, [r4, #80]	; 0x50
 8010efe:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8010f02:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8010f06:	81a3      	strheq	r3, [r4, #12]
 8010f08:	bf18      	it	ne
 8010f0a:	81a3      	strhne	r3, [r4, #12]
 8010f0c:	bd10      	pop	{r4, pc}

08010f0e <__sclose>:
 8010f0e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8010f12:	f000 b911 	b.w	8011138 <_close_r>

08010f16 <strncpy>:
 8010f16:	b570      	push	{r4, r5, r6, lr}
 8010f18:	3901      	subs	r1, #1
 8010f1a:	4604      	mov	r4, r0
 8010f1c:	b902      	cbnz	r2, 8010f20 <strncpy+0xa>
 8010f1e:	bd70      	pop	{r4, r5, r6, pc}
 8010f20:	4623      	mov	r3, r4
 8010f22:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8010f26:	f803 5b01 	strb.w	r5, [r3], #1
 8010f2a:	1e56      	subs	r6, r2, #1
 8010f2c:	b92d      	cbnz	r5, 8010f3a <strncpy+0x24>
 8010f2e:	4414      	add	r4, r2
 8010f30:	42a3      	cmp	r3, r4
 8010f32:	d0f4      	beq.n	8010f1e <strncpy+0x8>
 8010f34:	f803 5b01 	strb.w	r5, [r3], #1
 8010f38:	e7fa      	b.n	8010f30 <strncpy+0x1a>
 8010f3a:	461c      	mov	r4, r3
 8010f3c:	4632      	mov	r2, r6
 8010f3e:	e7ed      	b.n	8010f1c <strncpy+0x6>

08010f40 <__ssprint_r>:
 8010f40:	6893      	ldr	r3, [r2, #8]
 8010f42:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f46:	4681      	mov	r9, r0
 8010f48:	460c      	mov	r4, r1
 8010f4a:	4616      	mov	r6, r2
 8010f4c:	2b00      	cmp	r3, #0
 8010f4e:	d05e      	beq.n	801100e <__ssprint_r+0xce>
 8010f50:	f04f 0b00 	mov.w	fp, #0
 8010f54:	f8d2 a000 	ldr.w	sl, [r2]
 8010f58:	465f      	mov	r7, fp
 8010f5a:	b357      	cbz	r7, 8010fb2 <__ssprint_r+0x72>
 8010f5c:	68a3      	ldr	r3, [r4, #8]
 8010f5e:	429f      	cmp	r7, r3
 8010f60:	d340      	bcc.n	8010fe4 <__ssprint_r+0xa4>
 8010f62:	89a2      	ldrh	r2, [r4, #12]
 8010f64:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8010f68:	d03c      	beq.n	8010fe4 <__ssprint_r+0xa4>
 8010f6a:	6825      	ldr	r5, [r4, #0]
 8010f6c:	6921      	ldr	r1, [r4, #16]
 8010f6e:	eba5 0801 	sub.w	r8, r5, r1
 8010f72:	6965      	ldr	r5, [r4, #20]
 8010f74:	2302      	movs	r3, #2
 8010f76:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8010f7a:	fb95 f5f3 	sdiv	r5, r5, r3
 8010f7e:	f108 0301 	add.w	r3, r8, #1
 8010f82:	443b      	add	r3, r7
 8010f84:	429d      	cmp	r5, r3
 8010f86:	bf38      	it	cc
 8010f88:	461d      	movcc	r5, r3
 8010f8a:	0553      	lsls	r3, r2, #21
 8010f8c:	d544      	bpl.n	8011018 <__ssprint_r+0xd8>
 8010f8e:	4629      	mov	r1, r5
 8010f90:	4648      	mov	r0, r9
 8010f92:	f7fc fba9 	bl	800d6e8 <_malloc_r>
 8010f96:	b988      	cbnz	r0, 8010fbc <__ssprint_r+0x7c>
 8010f98:	230c      	movs	r3, #12
 8010f9a:	f8c9 3000 	str.w	r3, [r9]
 8010f9e:	89a3      	ldrh	r3, [r4, #12]
 8010fa0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8010fa4:	81a3      	strh	r3, [r4, #12]
 8010fa6:	2300      	movs	r3, #0
 8010fa8:	e9c6 3301 	strd	r3, r3, [r6, #4]
 8010fac:	f04f 30ff 	mov.w	r0, #4294967295
 8010fb0:	e02f      	b.n	8011012 <__ssprint_r+0xd2>
 8010fb2:	e9da b700 	ldrd	fp, r7, [sl]
 8010fb6:	f10a 0a08 	add.w	sl, sl, #8
 8010fba:	e7ce      	b.n	8010f5a <__ssprint_r+0x1a>
 8010fbc:	4642      	mov	r2, r8
 8010fbe:	6921      	ldr	r1, [r4, #16]
 8010fc0:	9001      	str	r0, [sp, #4]
 8010fc2:	f7fc fdd6 	bl	800db72 <memcpy>
 8010fc6:	89a2      	ldrh	r2, [r4, #12]
 8010fc8:	9b01      	ldr	r3, [sp, #4]
 8010fca:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8010fce:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8010fd2:	81a2      	strh	r2, [r4, #12]
 8010fd4:	6123      	str	r3, [r4, #16]
 8010fd6:	6165      	str	r5, [r4, #20]
 8010fd8:	4443      	add	r3, r8
 8010fda:	eba5 0508 	sub.w	r5, r5, r8
 8010fde:	6023      	str	r3, [r4, #0]
 8010fe0:	60a5      	str	r5, [r4, #8]
 8010fe2:	463b      	mov	r3, r7
 8010fe4:	42bb      	cmp	r3, r7
 8010fe6:	bf28      	it	cs
 8010fe8:	463b      	movcs	r3, r7
 8010fea:	461a      	mov	r2, r3
 8010fec:	4659      	mov	r1, fp
 8010fee:	6820      	ldr	r0, [r4, #0]
 8010ff0:	9301      	str	r3, [sp, #4]
 8010ff2:	f7fc fdc9 	bl	800db88 <memmove>
 8010ff6:	68a2      	ldr	r2, [r4, #8]
 8010ff8:	9b01      	ldr	r3, [sp, #4]
 8010ffa:	1ad2      	subs	r2, r2, r3
 8010ffc:	60a2      	str	r2, [r4, #8]
 8010ffe:	6822      	ldr	r2, [r4, #0]
 8011000:	4413      	add	r3, r2
 8011002:	6023      	str	r3, [r4, #0]
 8011004:	68b3      	ldr	r3, [r6, #8]
 8011006:	1bdf      	subs	r7, r3, r7
 8011008:	60b7      	str	r7, [r6, #8]
 801100a:	2f00      	cmp	r7, #0
 801100c:	d1d1      	bne.n	8010fb2 <__ssprint_r+0x72>
 801100e:	2000      	movs	r0, #0
 8011010:	6070      	str	r0, [r6, #4]
 8011012:	b003      	add	sp, #12
 8011014:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011018:	462a      	mov	r2, r5
 801101a:	4648      	mov	r0, r9
 801101c:	f7fc fe1e 	bl	800dc5c <_realloc_r>
 8011020:	4603      	mov	r3, r0
 8011022:	2800      	cmp	r0, #0
 8011024:	d1d6      	bne.n	8010fd4 <__ssprint_r+0x94>
 8011026:	6921      	ldr	r1, [r4, #16]
 8011028:	4648      	mov	r0, r9
 801102a:	f7ff faf7 	bl	801061c <_free_r>
 801102e:	e7b3      	b.n	8010f98 <__ssprint_r+0x58>

08011030 <__register_exitproc>:
 8011030:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011034:	4c26      	ldr	r4, [pc, #152]	; (80110d0 <__register_exitproc+0xa0>)
 8011036:	4606      	mov	r6, r0
 8011038:	6820      	ldr	r0, [r4, #0]
 801103a:	4698      	mov	r8, r3
 801103c:	460f      	mov	r7, r1
 801103e:	4691      	mov	r9, r2
 8011040:	f7fc fb40 	bl	800d6c4 <__retarget_lock_acquire_recursive>
 8011044:	4b23      	ldr	r3, [pc, #140]	; (80110d4 <__register_exitproc+0xa4>)
 8011046:	681d      	ldr	r5, [r3, #0]
 8011048:	f8d5 0148 	ldr.w	r0, [r5, #328]	; 0x148
 801104c:	b918      	cbnz	r0, 8011056 <__register_exitproc+0x26>
 801104e:	f505 70a6 	add.w	r0, r5, #332	; 0x14c
 8011052:	f8c5 0148 	str.w	r0, [r5, #328]	; 0x148
 8011056:	6843      	ldr	r3, [r0, #4]
 8011058:	2b1f      	cmp	r3, #31
 801105a:	dd19      	ble.n	8011090 <__register_exitproc+0x60>
 801105c:	4b1e      	ldr	r3, [pc, #120]	; (80110d8 <__register_exitproc+0xa8>)
 801105e:	b933      	cbnz	r3, 801106e <__register_exitproc+0x3e>
 8011060:	6820      	ldr	r0, [r4, #0]
 8011062:	f7fc fb30 	bl	800d6c6 <__retarget_lock_release_recursive>
 8011066:	f04f 30ff 	mov.w	r0, #4294967295
 801106a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801106e:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8011072:	f7fc fb29 	bl	800d6c8 <malloc>
 8011076:	2800      	cmp	r0, #0
 8011078:	d0f2      	beq.n	8011060 <__register_exitproc+0x30>
 801107a:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
 801107e:	6003      	str	r3, [r0, #0]
 8011080:	2200      	movs	r2, #0
 8011082:	6042      	str	r2, [r0, #4]
 8011084:	f8c5 0148 	str.w	r0, [r5, #328]	; 0x148
 8011088:	f8c0 2188 	str.w	r2, [r0, #392]	; 0x188
 801108c:	f8c0 218c 	str.w	r2, [r0, #396]	; 0x18c
 8011090:	6843      	ldr	r3, [r0, #4]
 8011092:	b19e      	cbz	r6, 80110bc <__register_exitproc+0x8c>
 8011094:	eb00 0583 	add.w	r5, r0, r3, lsl #2
 8011098:	2201      	movs	r2, #1
 801109a:	f8c5 9088 	str.w	r9, [r5, #136]	; 0x88
 801109e:	f8d0 1188 	ldr.w	r1, [r0, #392]	; 0x188
 80110a2:	409a      	lsls	r2, r3
 80110a4:	4311      	orrs	r1, r2
 80110a6:	2e02      	cmp	r6, #2
 80110a8:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
 80110ac:	f8c5 8108 	str.w	r8, [r5, #264]	; 0x108
 80110b0:	bf02      	ittt	eq
 80110b2:	f8d0 118c 	ldreq.w	r1, [r0, #396]	; 0x18c
 80110b6:	430a      	orreq	r2, r1
 80110b8:	f8c0 218c 	streq.w	r2, [r0, #396]	; 0x18c
 80110bc:	1c5a      	adds	r2, r3, #1
 80110be:	3302      	adds	r3, #2
 80110c0:	6042      	str	r2, [r0, #4]
 80110c2:	f840 7023 	str.w	r7, [r0, r3, lsl #2]
 80110c6:	6820      	ldr	r0, [r4, #0]
 80110c8:	f7fc fafd 	bl	800d6c6 <__retarget_lock_release_recursive>
 80110cc:	2000      	movs	r0, #0
 80110ce:	e7cc      	b.n	801106a <__register_exitproc+0x3a>
 80110d0:	20000850 	.word	0x20000850
 80110d4:	080125c8 	.word	0x080125c8
 80110d8:	0800d6c9 	.word	0x0800d6c9

080110dc <_calloc_r>:
 80110dc:	b510      	push	{r4, lr}
 80110de:	4351      	muls	r1, r2
 80110e0:	f7fc fb02 	bl	800d6e8 <_malloc_r>
 80110e4:	4604      	mov	r4, r0
 80110e6:	b198      	cbz	r0, 8011110 <_calloc_r+0x34>
 80110e8:	f850 2c04 	ldr.w	r2, [r0, #-4]
 80110ec:	f022 0203 	bic.w	r2, r2, #3
 80110f0:	3a04      	subs	r2, #4
 80110f2:	2a24      	cmp	r2, #36	; 0x24
 80110f4:	d81b      	bhi.n	801112e <_calloc_r+0x52>
 80110f6:	2a13      	cmp	r2, #19
 80110f8:	d917      	bls.n	801112a <_calloc_r+0x4e>
 80110fa:	2100      	movs	r1, #0
 80110fc:	2a1b      	cmp	r2, #27
 80110fe:	e9c0 1100 	strd	r1, r1, [r0]
 8011102:	d807      	bhi.n	8011114 <_calloc_r+0x38>
 8011104:	f100 0308 	add.w	r3, r0, #8
 8011108:	2200      	movs	r2, #0
 801110a:	e9c3 2200 	strd	r2, r2, [r3]
 801110e:	609a      	str	r2, [r3, #8]
 8011110:	4620      	mov	r0, r4
 8011112:	bd10      	pop	{r4, pc}
 8011114:	2a24      	cmp	r2, #36	; 0x24
 8011116:	e9c0 1102 	strd	r1, r1, [r0, #8]
 801111a:	bf11      	iteee	ne
 801111c:	f100 0310 	addne.w	r3, r0, #16
 8011120:	6101      	streq	r1, [r0, #16]
 8011122:	f100 0318 	addeq.w	r3, r0, #24
 8011126:	6141      	streq	r1, [r0, #20]
 8011128:	e7ee      	b.n	8011108 <_calloc_r+0x2c>
 801112a:	4603      	mov	r3, r0
 801112c:	e7ec      	b.n	8011108 <_calloc_r+0x2c>
 801112e:	2100      	movs	r1, #0
 8011130:	f7fc fd43 	bl	800dbba <memset>
 8011134:	e7ec      	b.n	8011110 <_calloc_r+0x34>
	...

08011138 <_close_r>:
 8011138:	b538      	push	{r3, r4, r5, lr}
 801113a:	4c06      	ldr	r4, [pc, #24]	; (8011154 <_close_r+0x1c>)
 801113c:	2300      	movs	r3, #0
 801113e:	4605      	mov	r5, r0
 8011140:	4608      	mov	r0, r1
 8011142:	6023      	str	r3, [r4, #0]
 8011144:	f7f8 ff63 	bl	800a00e <_close>
 8011148:	1c43      	adds	r3, r0, #1
 801114a:	d102      	bne.n	8011152 <_close_r+0x1a>
 801114c:	6823      	ldr	r3, [r4, #0]
 801114e:	b103      	cbz	r3, 8011152 <_close_r+0x1a>
 8011150:	602b      	str	r3, [r5, #0]
 8011152:	bd38      	pop	{r3, r4, r5, pc}
 8011154:	20000a88 	.word	0x20000a88

08011158 <_fclose_r>:
 8011158:	b570      	push	{r4, r5, r6, lr}
 801115a:	4606      	mov	r6, r0
 801115c:	460c      	mov	r4, r1
 801115e:	b911      	cbnz	r1, 8011166 <_fclose_r+0xe>
 8011160:	2500      	movs	r5, #0
 8011162:	4628      	mov	r0, r5
 8011164:	bd70      	pop	{r4, r5, r6, pc}
 8011166:	b118      	cbz	r0, 8011170 <_fclose_r+0x18>
 8011168:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801116a:	b90b      	cbnz	r3, 8011170 <_fclose_r+0x18>
 801116c:	f7ff f9c6 	bl	80104fc <__sinit>
 8011170:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8011172:	07d8      	lsls	r0, r3, #31
 8011174:	d405      	bmi.n	8011182 <_fclose_r+0x2a>
 8011176:	89a3      	ldrh	r3, [r4, #12]
 8011178:	0599      	lsls	r1, r3, #22
 801117a:	d402      	bmi.n	8011182 <_fclose_r+0x2a>
 801117c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801117e:	f7fc faa1 	bl	800d6c4 <__retarget_lock_acquire_recursive>
 8011182:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8011186:	b93b      	cbnz	r3, 8011198 <_fclose_r+0x40>
 8011188:	6e65      	ldr	r5, [r4, #100]	; 0x64
 801118a:	f015 0501 	ands.w	r5, r5, #1
 801118e:	d1e7      	bne.n	8011160 <_fclose_r+0x8>
 8011190:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8011192:	f7fc fa98 	bl	800d6c6 <__retarget_lock_release_recursive>
 8011196:	e7e4      	b.n	8011162 <_fclose_r+0xa>
 8011198:	4621      	mov	r1, r4
 801119a:	4630      	mov	r0, r6
 801119c:	f7ff f8b4 	bl	8010308 <__sflush_r>
 80111a0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80111a2:	4605      	mov	r5, r0
 80111a4:	b133      	cbz	r3, 80111b4 <_fclose_r+0x5c>
 80111a6:	69e1      	ldr	r1, [r4, #28]
 80111a8:	4630      	mov	r0, r6
 80111aa:	4798      	blx	r3
 80111ac:	2800      	cmp	r0, #0
 80111ae:	bfb8      	it	lt
 80111b0:	f04f 35ff 	movlt.w	r5, #4294967295
 80111b4:	89a3      	ldrh	r3, [r4, #12]
 80111b6:	061a      	lsls	r2, r3, #24
 80111b8:	d503      	bpl.n	80111c2 <_fclose_r+0x6a>
 80111ba:	6921      	ldr	r1, [r4, #16]
 80111bc:	4630      	mov	r0, r6
 80111be:	f7ff fa2d 	bl	801061c <_free_r>
 80111c2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80111c4:	b141      	cbz	r1, 80111d8 <_fclose_r+0x80>
 80111c6:	f104 0340 	add.w	r3, r4, #64	; 0x40
 80111ca:	4299      	cmp	r1, r3
 80111cc:	d002      	beq.n	80111d4 <_fclose_r+0x7c>
 80111ce:	4630      	mov	r0, r6
 80111d0:	f7ff fa24 	bl	801061c <_free_r>
 80111d4:	2300      	movs	r3, #0
 80111d6:	6323      	str	r3, [r4, #48]	; 0x30
 80111d8:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80111da:	b121      	cbz	r1, 80111e6 <_fclose_r+0x8e>
 80111dc:	4630      	mov	r0, r6
 80111de:	f7ff fa1d 	bl	801061c <_free_r>
 80111e2:	2300      	movs	r3, #0
 80111e4:	6463      	str	r3, [r4, #68]	; 0x44
 80111e6:	f7ff f971 	bl	80104cc <__sfp_lock_acquire>
 80111ea:	2300      	movs	r3, #0
 80111ec:	81a3      	strh	r3, [r4, #12]
 80111ee:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80111f0:	07db      	lsls	r3, r3, #31
 80111f2:	d402      	bmi.n	80111fa <_fclose_r+0xa2>
 80111f4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80111f6:	f7fc fa66 	bl	800d6c6 <__retarget_lock_release_recursive>
 80111fa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80111fc:	f7fc fa61 	bl	800d6c2 <__retarget_lock_close_recursive>
 8011200:	f7ff f96a 	bl	80104d8 <__sfp_lock_release>
 8011204:	e7ad      	b.n	8011162 <_fclose_r+0xa>
	...

08011208 <_fstat_r>:
 8011208:	b538      	push	{r3, r4, r5, lr}
 801120a:	4c07      	ldr	r4, [pc, #28]	; (8011228 <_fstat_r+0x20>)
 801120c:	2300      	movs	r3, #0
 801120e:	4605      	mov	r5, r0
 8011210:	4608      	mov	r0, r1
 8011212:	4611      	mov	r1, r2
 8011214:	6023      	str	r3, [r4, #0]
 8011216:	f7f8 ff06 	bl	800a026 <_fstat>
 801121a:	1c43      	adds	r3, r0, #1
 801121c:	d102      	bne.n	8011224 <_fstat_r+0x1c>
 801121e:	6823      	ldr	r3, [r4, #0]
 8011220:	b103      	cbz	r3, 8011224 <_fstat_r+0x1c>
 8011222:	602b      	str	r3, [r5, #0]
 8011224:	bd38      	pop	{r3, r4, r5, pc}
 8011226:	bf00      	nop
 8011228:	20000a88 	.word	0x20000a88

0801122c <_isatty_r>:
 801122c:	b538      	push	{r3, r4, r5, lr}
 801122e:	4c06      	ldr	r4, [pc, #24]	; (8011248 <_isatty_r+0x1c>)
 8011230:	2300      	movs	r3, #0
 8011232:	4605      	mov	r5, r0
 8011234:	4608      	mov	r0, r1
 8011236:	6023      	str	r3, [r4, #0]
 8011238:	f7f8 ff05 	bl	800a046 <_isatty>
 801123c:	1c43      	adds	r3, r0, #1
 801123e:	d102      	bne.n	8011246 <_isatty_r+0x1a>
 8011240:	6823      	ldr	r3, [r4, #0]
 8011242:	b103      	cbz	r3, 8011246 <_isatty_r+0x1a>
 8011244:	602b      	str	r3, [r5, #0]
 8011246:	bd38      	pop	{r3, r4, r5, pc}
 8011248:	20000a88 	.word	0x20000a88

0801124c <_lseek_r>:
 801124c:	b538      	push	{r3, r4, r5, lr}
 801124e:	4c07      	ldr	r4, [pc, #28]	; (801126c <_lseek_r+0x20>)
 8011250:	4605      	mov	r5, r0
 8011252:	4608      	mov	r0, r1
 8011254:	4611      	mov	r1, r2
 8011256:	2200      	movs	r2, #0
 8011258:	6022      	str	r2, [r4, #0]
 801125a:	461a      	mov	r2, r3
 801125c:	f7f8 fefe 	bl	800a05c <_lseek>
 8011260:	1c43      	adds	r3, r0, #1
 8011262:	d102      	bne.n	801126a <_lseek_r+0x1e>
 8011264:	6823      	ldr	r3, [r4, #0]
 8011266:	b103      	cbz	r3, 801126a <_lseek_r+0x1e>
 8011268:	602b      	str	r3, [r5, #0]
 801126a:	bd38      	pop	{r3, r4, r5, pc}
 801126c:	20000a88 	.word	0x20000a88

08011270 <__ascii_mbtowc>:
 8011270:	b082      	sub	sp, #8
 8011272:	b901      	cbnz	r1, 8011276 <__ascii_mbtowc+0x6>
 8011274:	a901      	add	r1, sp, #4
 8011276:	b142      	cbz	r2, 801128a <__ascii_mbtowc+0x1a>
 8011278:	b14b      	cbz	r3, 801128e <__ascii_mbtowc+0x1e>
 801127a:	7813      	ldrb	r3, [r2, #0]
 801127c:	600b      	str	r3, [r1, #0]
 801127e:	7812      	ldrb	r2, [r2, #0]
 8011280:	1c10      	adds	r0, r2, #0
 8011282:	bf18      	it	ne
 8011284:	2001      	movne	r0, #1
 8011286:	b002      	add	sp, #8
 8011288:	4770      	bx	lr
 801128a:	4610      	mov	r0, r2
 801128c:	e7fb      	b.n	8011286 <__ascii_mbtowc+0x16>
 801128e:	f06f 0001 	mvn.w	r0, #1
 8011292:	e7f8      	b.n	8011286 <__ascii_mbtowc+0x16>

08011294 <_read_r>:
 8011294:	b538      	push	{r3, r4, r5, lr}
 8011296:	4c07      	ldr	r4, [pc, #28]	; (80112b4 <_read_r+0x20>)
 8011298:	4605      	mov	r5, r0
 801129a:	4608      	mov	r0, r1
 801129c:	4611      	mov	r1, r2
 801129e:	2200      	movs	r2, #0
 80112a0:	6022      	str	r2, [r4, #0]
 80112a2:	461a      	mov	r2, r3
 80112a4:	f7f8 fe7a 	bl	8009f9c <_read>
 80112a8:	1c43      	adds	r3, r0, #1
 80112aa:	d102      	bne.n	80112b2 <_read_r+0x1e>
 80112ac:	6823      	ldr	r3, [r4, #0]
 80112ae:	b103      	cbz	r3, 80112b2 <_read_r+0x1e>
 80112b0:	602b      	str	r3, [r5, #0]
 80112b2:	bd38      	pop	{r3, r4, r5, pc}
 80112b4:	20000a88 	.word	0x20000a88

080112b8 <__ascii_wctomb>:
 80112b8:	b149      	cbz	r1, 80112ce <__ascii_wctomb+0x16>
 80112ba:	2aff      	cmp	r2, #255	; 0xff
 80112bc:	bf85      	ittet	hi
 80112be:	238a      	movhi	r3, #138	; 0x8a
 80112c0:	6003      	strhi	r3, [r0, #0]
 80112c2:	700a      	strbls	r2, [r1, #0]
 80112c4:	f04f 30ff 	movhi.w	r0, #4294967295
 80112c8:	bf98      	it	ls
 80112ca:	2001      	movls	r0, #1
 80112cc:	4770      	bx	lr
 80112ce:	4608      	mov	r0, r1
 80112d0:	4770      	bx	lr
	...

080112d4 <_init>:
 80112d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80112d6:	bf00      	nop
 80112d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80112da:	bc08      	pop	{r3}
 80112dc:	469e      	mov	lr, r3
 80112de:	4770      	bx	lr

080112e0 <_fini>:
 80112e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80112e2:	bf00      	nop
 80112e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80112e6:	bc08      	pop	{r3}
 80112e8:	469e      	mov	lr, r3
 80112ea:	4770      	bx	lr
